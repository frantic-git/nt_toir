#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

Перем СтруктураДанных Экспорт; // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа.

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		Организация         = ДанныеЗаполнения.Организация;
		Подразделение		= ДанныеЗаполнения.Подразделение;
		АктОВыполненииРабот = ДанныеЗаполнения;
		
		ЗаполнитьДанныеПоАкту();
	КонецЕсли;

	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверкаСуществующихОценок(Отказ);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ОценкаДляВсехРабот Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОбъектыРемонта");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если БезусловнаяЗапись = Истина
		ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если Не АктОВыполненииРабот.Проведен Тогда
		ТекстСообщения = НСтр("ru = 'Есть непроведенный документ основание: " + АктОВыполненииРабот + "'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОценкаДляВсехРабот Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ОценкаРаботыПодрядчикаОбъектыРемонта.ОбъектРемонта,
		|	торо_ОценкаРаботыПодрядчикаОценкиПодрядчиков.ВидОценки
		|ИЗ
		|	Документ.торо_ОценкаРаботыПодрядчика.ОбъектыРемонта КАК торо_ОценкаРаботыПодрядчикаОбъектыРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ОценкаРаботыПодрядчика.ОценкиПодрядчиков КАК торо_ОценкаРаботыПодрядчикаОценкиПодрядчиков
		|		ПО торо_ОценкаРаботыПодрядчикаОбъектыРемонта.ID = торо_ОценкаРаботыПодрядчикаОценкиПодрядчиков.ID
		|			И торо_ОценкаРаботыПодрядчикаОбъектыРемонта.Ссылка = торо_ОценкаРаботыПодрядчикаОценкиПодрядчиков.Ссылка
		|ГДЕ
		|	торо_ОценкаРаботыПодрядчикаОценкиПодрядчиков.ВидОценки ЕСТЬ NULL 
		|	И торо_ОценкаРаботыПодрядчикаОбъектыРемонта.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ШаблонСообщения = НСтр("ru = 'Для объекта %1 не указана оценка'");
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.ОбъектРемонта);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЦикла; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ОценкаРаботыПодрядчикаОбъектыРемонта.ОбъектРемонта,
		|	торо_ОценкаРаботыПодрядчикаПараметрыОценки.ВидОценки
		|ИЗ
		|	Документ.торо_ОценкаРаботыПодрядчика.ОбъектыРемонта КАК торо_ОценкаРаботыПодрядчикаОбъектыРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ОценкаРаботыПодрядчика.ПараметрыОценки КАК торо_ОценкаРаботыПодрядчикаПараметрыОценки
		|		ПО торо_ОценкаРаботыПодрядчикаОбъектыРемонта.ID = торо_ОценкаРаботыПодрядчикаПараметрыОценки.ID
		|			И торо_ОценкаРаботыПодрядчикаОбъектыРемонта.Ссылка = торо_ОценкаРаботыПодрядчикаПараметрыОценки.Ссылка
		|ГДЕ
		|	торо_ОценкаРаботыПодрядчикаПараметрыОценки.ВидОценки ЕСТЬ NULL 
		|	И торо_ОценкаРаботыПодрядчикаОбъектыРемонта.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		ШаблонСообщения = НСтр("ru = 'Для объекта %1 не указаны критерии оценки'");
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.ОбъектРемонта);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЦикла;
		
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУправляемыеБлокировки();

	Движения.торо_ОценкиПоПодрядчикам.Записывать          = Истина;
	Движения.торо_ОценкиПодрядчиковПоКритериям.Записывать = Истина;

	Если Не ОценкаДляВсехРабот Тогда
		
		Для Каждого ТекСтрокаОценкиПодрядчиков Из ОценкиПодрядчиков Цикл
			СтрокаОР = ОбъектыРемонта.Найти(ТекСтрокаОценкиПодрядчиков.ID,"ID");
			
			Если СтрокаОР <> Неопределено Тогда
				Движение = Движения.торо_ОценкиПоПодрядчикам.Добавить();
				Движение.Период                 = Дата;
				Движение.Контрагент             = Контрагент;
				Движение.Оценка                 = ТекСтрокаОценкиПодрядчиков.ВидОценки;
				Движение.ОбъектРемонта          = СтрокаОР.ОбъектРемонта;
				Движение.ВидРемонта             = СтрокаОР.ВидРемонта;
				Движение.Значение               = ТекСтрокаОценкиПодрядчиков.Оценка;
				Движение.РемонтыОборудования_ID = ТекСтрокаОценкиПодрядчиков.ID;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ТекСтрокаОценкиПодрядчиков Из ПараметрыОценки Цикл
			СтрокаОР = ОбъектыРемонта.Найти(ТекСтрокаОценкиПодрядчиков.ID,"ID");
			
			Если СтрокаОР <> Неопределено Тогда
				Движение = Движения.торо_ОценкиПодрядчиковПоКритериям.Добавить();
				Движение.Период                 = Дата;
				Движение.Контрагент             = Контрагент;
				Движение.Оценка                 = ТекСтрокаОценкиПодрядчиков.КритерийОценки;
				Движение.ВидОценки              = ТекСтрокаОценкиПодрядчиков.ВидОценки;
				Движение.ОбъектРемонта          = СтрокаОР.ОбъектРемонта;
				Движение.ВидРемонта             = СтрокаОР.ВидРемонта;
				Движение.Значение               = ТекСтрокаОценкиПодрядчиков.ЗначениеОценокПоКритериям;
				Движение.РемонтыОборудования_ID = ТекСтрокаОценкиПодрядчиков.ID;
			КонецЕсли;
		КонецЦикла;

	Иначе
		
		МассивСтрокДляВсех = ОценкиПодрядчиков.НайтиСтроки(Новый Структура("ID",""));		
		
		Для Каждого СтрокаОР из АктОВыполненииРабот.РемонтыОборудования Цикл
			Для Каждого ТекСтрокаОценкиПодрядчиков Из МассивСтрокДляВсех Цикл
				Движение = Движения.торо_ОценкиПоПодрядчикам.Добавить();
				Движение.Период                 = Дата;
				Движение.Контрагент             = Контрагент;
				Движение.Оценка                 = ТекСтрокаОценкиПодрядчиков.ВидОценки;
				Движение.ОбъектРемонта          = СтрокаОР.ОбъектРемонта;
				Движение.ВидРемонта             = СтрокаОР.ВидРемонтныхРабот;
				Движение.Значение               = ТекСтрокаОценкиПодрядчиков.Оценка;
				Движение.РемонтыОборудования_ID = СтрокаОР.ID;
			КонецЦикла;
		КонецЦикла;
		
		МассивСтрокДляВсех = ПараметрыОценки.НайтиСтроки(Новый Структура("ID",""));		
		
		Для Каждого СтрокаОР из АктОВыполненииРабот.РемонтыОборудования Цикл
			Для Каждого ТекСтрокаОценкиПодрядчиков Из МассивСтрокДляВсех Цикл
				Движение = Движения.торо_ОценкиПодрядчиковПоКритериям.Добавить();
				Движение.Период                 = Дата;
				Движение.Контрагент             = Контрагент;
				Движение.Оценка                 = ТекСтрокаОценкиПодрядчиков.КритерийОценки;
				Движение.ВидОценки              = ТекСтрокаОценкиПодрядчиков.ВидОценки;
				Движение.ОбъектРемонта          = СтрокаОР.ОбъектРемонта;
				Движение.ВидРемонта             = СтрокаОР.ВидРемонтныхРабот;
				Движение.Значение               = ТекСтрокаОценкиПодрядчиков.ЗначениеОценокПоКритериям;
				Движение.РемонтыОборудования_ID = СтрокаОР.ID;
			КонецЦикла;
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУправляемыеБлокировки()
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.торо_ОценкаРаботыПодрядчика");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("АктОВыполненииРабот",АктОВыполненииРабот);
	ЭлементБлокировки.УстановитьЗначение("Контрагент",Контрагент);
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ПроверкаСуществующихОценок(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АктОВыполненииРабот", АктОВыполненииРабот);
	Запрос.УстановитьПараметр("Контрагент"         , Контрагент);
	Запрос.УстановитьПараметр("Ссылка"             , Ссылка);
	Запрос.УстановитьПараметр("ТабОценок"          , ОценкиПодрядчиков.Выгрузить());
	
	Если ОценкаДляВсехРабот Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID
		               |ПОМЕСТИТЬ ВТ_РемонтыОборудования
		               |ИЗ
		               |	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		               |ГДЕ
		               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &АктОВыполненииРабот
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабДанных.ВидОценки КАК ВидОценки
		               |ПОМЕСТИТЬ ВТ_Оценки
		               |ИЗ
		               |	&ТабОценок КАК ТабДанных
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Оценки.ВидОценки КАК ВидОценки,
		               |	ВТ_РемонтыОборудования.ID КАК ID
		               |ПОМЕСТИТЬ ВТ_Ремонты
		               |ИЗ
		               |	ВТ_Оценки КАК ВТ_Оценки,
		               |	ВТ_РемонтыОборудования КАК ВТ_РемонтыОборудования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_ОценкиПодрядчиковПоКритериям.Регистратор КАК Регистратор
		               |ИЗ
		               |	РегистрСведений.торо_ОценкиПодрядчиковПоКритериям КАК торо_ОценкиПодрядчиковПоКритериям
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ремонты КАК ВТ_Ремонты
		               |		ПО торо_ОценкиПодрядчиковПоКритериям.РемонтыОборудования_ID = ВТ_Ремонты.ID
		               |			И торо_ОценкиПодрядчиковПоКритериям.ВидОценки = ВТ_Ремонты.ВидОценки
		               |ГДЕ
		               |	торо_ОценкиПодрядчиковПоКритериям.Регистратор.АктОВыполненииРабот = &АктОВыполненииРабот
		               |	И торо_ОценкиПодрядчиковПоКритериям.Контрагент = &Контрагент
		               |	И торо_ОценкиПодрядчиковПоКритериям.Регистратор <> &Ссылка";		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТабДанных.ID КАК ID,
		               |	ТабДанных.ВидОценки КАК ВидОценки
		               |ПОМЕСТИТЬ ВТ_Ремонты
		               |ИЗ
		               |	&ТабОценок КАК ТабДанных
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_ОценкиПодрядчиковПоКритериям.Регистратор КАК Регистратор
		               |ИЗ
		               |	РегистрСведений.торо_ОценкиПодрядчиковПоКритериям КАК торо_ОценкиПодрядчиковПоКритериям
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ремонты КАК ВТ_Ремонты
		               |		ПО торо_ОценкиПодрядчиковПоКритериям.ВидОценки = ВТ_Ремонты.ВидОценки
		               |			И торо_ОценкиПодрядчиковПоКритериям.РемонтыОборудования_ID = ВТ_Ремонты.ID
		               |ГДЕ
		               |	торо_ОценкиПодрядчиковПоКритериям.Регистратор.АктОВыполненииРабот = &АктОВыполненииРабот
		               |	И торо_ОценкиПодрядчиковПоКритериям.Контрагент = &Контрагент
		               |	И торо_ОценкиПодрядчиковПоКритериям.Регистратор <> &Ссылка";
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ШаблонСообщения = НСтр("ru = 'Уже существует документ оценки работы подрядчика с заданным актом, контрагентом и видом ремонта в документе ""%1""'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.Регистратор);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеПоАкту()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель) КАК Исполнитель
	               |ПОМЕСТИТЬ ВТ_Исполнители
	               |ИЗ
	               |	Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам
	               |ГДЕ
	               |	торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель ССЫЛКА Справочник.Контрагенты
	               |	И торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Ссылка = &Основание
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Ссылка
	               |
	               |ИМЕЮЩИЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель) = 1
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Исполнитель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Исполнители.Исполнитель КАК Исполнитель
	               |ИЗ
	               |	ВТ_Исполнители КАК ВТ_Исполнители
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
	               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонта
	               |ИЗ
	               |	Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Исполнители КАК ВТ_Исполнители
	               |		ПО ((ВЫРАЗИТЬ(торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель КАК Справочник.Контрагенты)) = ВТ_Исполнители.Исполнитель)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	               |		ПО торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
	               |ГДЕ
	               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Основание";
	
	Запрос.УстановитьПараметр("Основание", АктОВыполненииРабот);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Если РезультатЗапроса[1].Пустой() Тогда
	    Возврат;
	КонецЕсли;
	
	ВыборкаИсполнителей = РезультатЗапроса[1].Выбрать();
	ВыборкаИсполнителей.Следующий();
	
	Контрагент = ВыборкаИсполнителей.Исполнитель;
	
	Если РезультатЗапроса[2].Пустой() Тогда
	    Возврат;
	КонецЕсли;
	
	ВыборкаРемонтов = РезультатЗапроса[2].Выбрать();
	Пока ВыборкаРемонтов.Следующий() Цикл
	    ЗаполнитьЗначенияСвойств(ОбъектыРемонта.Добавить(), ВыборкаРемонтов);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли