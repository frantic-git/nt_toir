#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если Не ЗначениеЗаполнено(Объект.ДатаПриема) Тогда
			Объект.ДатаПриема = ТекущаяДатаСеанса();
		КонецЕсли;
		
		// Очистим реквизит Сотрудник, если он уже принят
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) И Параметры.ЗначениеКопирования.Проведен Тогда
			Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
			Объект.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли; 
		
		Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Объект.Организация = Параметры.Организация;
		КонецЕсли;
		Если Параметры.Свойство("Сотрудник") И ЗначениеЗаполнено(Параметры.Сотрудник) Тогда 
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
		Если Параметры.Свойство("ДатаПриема") И ЗначениеЗаполнено(Параметры.ДатаПриема) Тогда 
			Объект.ДатаПриема = Параметры.ДатаПриема;
		КонецЕсли;
		Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда 
			Объект.Подразделение = Параметры.Подразделение;
		КонецЕсли;
		Если Параметры.Свойство("Должность") И ЗначениеЗаполнено(Параметры.Должность) Тогда 
			Объект.Должность = Параметры.Должность;
		КонецЕсли;
		Если Параметры.Свойство("КоличествоСтавок") И ЗначениеЗаполнено(Параметры.КоличествоСтавок) Тогда 
			Объект.КоличествоСтавок = Параметры.КоличествоСтавок;
		КонецЕсли;
		Если Параметры.Свойство("ГрафикРаботы") И ЗначениеЗаполнено(Параметры.ГрафикРаботы) Тогда 
			Объект.ГрафикРаботы = Параметры.ГрафикРаботы;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ГрафикРаботы) Тогда
			
			ЗначенияДляЗаполнения = Новый Структура;
			ФиксированныеЗначения = Новый Массив;
							
			Если ЗначениеЗаполнено(Объект.Организация) Тогда
				ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
				ФиксированныеЗначения.Добавить("Организация");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
				ЗначенияДляЗаполнения.Вставить("Подразделение", "Объект.Подразделение");
				ФиксированныеЗначения.Добавить("Подразделение");
			КонецЕсли;
			
			Если ФиксированныеЗначения.Количество() > 0 Тогда
				ЗначенияДляЗаполнения.Вставить("ГрафикРаботы", "Объект.ГрафикРаботы");
				ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ФиксированныеЗначения);
			КонецЕсли; 
			
		КонецЕсли; 
		
		УстановитьФункциональныеОпцииФормы();
		
		УстановитьУсловияПриема(ЭтаФорма);
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			
			ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
			УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
			Если Не ЗначениеЗаполнено(Объект.ВидЗанятости) Тогда
				УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
			КонецЕсли;
			
		КонецЕсли;
		
		ВидЗанятостиПредыдущий = Объект.ВидЗанятости;
		
	КонецЕсли;
	
	ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
	
	УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
	
	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Объект, ЭтаФорма, "");
	// Заголовок формы--
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьФункциональныеОпцииФормы();
	ВидЗанятостиПредыдущий = ТекущийОбъект.ВидЗанятости;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Объект, ЭтаФорма, "");
	// Заголовок формы--	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Сотрудник", ЭтаФорма.Объект.Сотрудник);
	Оповестить("ДокументПриемНаРаботуПослеЗаписи", ПараметрыОповещения, ЭтаФорма);
	
	КадровыйУчетКлиент.ОповеститьОбИзмененииРабочегоМеста(ЭтаФорма);
	
	ПараметрыОповещения.Вставить("Проведен", ЭтаФорма.Объект.Проведен);
	ПараметрыОповещения.Вставить("ПомеченНаУдаление", ЭтаФорма.Объект.ПометкаУдаления);
	ПараметрыОповещения.Вставить("Результат", ЭтаФорма.Объект.Ссылка);
	ПараметрыОповещения.Вставить("Ответственный", ЭтаФорма.Объект.Ответственный);
	ПараметрыОповещения.Вставить("ДатаДокумента", ЭтаФорма.Объект.Дата);
	ПараметрыОповещения.Вставить("НомерДокумента", ЭтаФорма.Объект.Номер);
	Оповестить("ПослеЗаписиОбъектаСвязанногоСПереводомКДругомуРаботодателю", ПараметрыОповещения, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
    СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	СотрудникПриИзмененииНаСервере();
	УстановитьСвязиПараметровВыбораОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	ЗаполнитьСведенияСотрудника();
	УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияСотрудника()

	УстановитьЗначенияПоУмолчанию = Истина;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		Если ЗначениеЗаполнено(Объект.ДатаПриема) Тогда
			ДатаСобытия = Объект.ДатаПриема;
		Иначе
			ДатаСобытия = ТекущаяДатаСеанса();
		КонецЕсли;
		
		КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Объект.Сотрудник, "ГоловнаяОрганизация, ФизическоеЛицо", ДатаСобытия);
		Если КадровыеДанные.Количество() > 0 Тогда
			
			ГоловнаяОрганизацияСотрудника = КадровыеДанные[0].ГоловнаяОрганизация;
			УстановитьЗначенияПоУмолчанию = Ложь;
			Объект.ФизическоеЛицо = КадровыеДанные[0].ФизическоеЛицо;
			
		Иначе
			
			Объект.ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Сотрудник, "ФизическоеЛицо");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если УстановитьЗначенияПоУмолчанию Тогда
		ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура СотрудникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	масСотрудников = СписокПодходящихСорудников(Объект.Дата, Объект.Дата, Объект.Организация, Текст);
	Для каждого ТекСтрока из масСотрудников Цикл
		ДанныеВыбора.Добавить(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	
	масСотрудников = СписокПодходящихСорудников(Объект.Дата, Объект.Дата, Объект.Организация, Текст);
	Для каждого ТекСтрока из масСотрудников Цикл
		ДанныеВыбора.Добавить(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПодразделениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗанятостиПриИзменении(Элемент)
	
	СотрудникиКлиент.ПроверитьКонфликтыВидаЗанятостиССуществующимиСотрудниками(
		Объект.Сотрудник,
		Объект.ФизическоеЛицо,
		Объект.Организация,
		Объект.ВидЗанятости,
		Объект.ДатаПриема);
		
	УстановитьУсловияПриема(ЭтаФорма);
	ВидЗанятостиПредыдущий = Объект.ВидЗанятости;
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Руководитель) Тогда 
		Объект.ДолжностьРуководителя = ПолучитьДолжностьРуководителя(Объект.Руководитель, Объект.Дата);
	Иначе 
		Объект.ДолжностьРуководителя = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, Объект.ДатаПриема);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
	ФОИспользоватьШтатноеРасписание = Ложь;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НачисленияЗаполнитьПоПозиции",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЕжегодныеОтпускаЗаполнитьЕжегодныеОтпускаПоПозиции",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Организация");
	ЗначенияДляЗаполнения.Вставить("Подразделение",	"Объект.Подразделение");
	ЗначенияДляЗаполнения.Вставить("ГрафикРаботы",	"Объект.ГрафикРаботы");
			
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
	
	КадровыйУчетФормы.ЗаполнитьОтветственныхЛицПоОрганизации(ЭтаФорма);
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("Подразделение",	"Объект.Подразделение");
	ЗначенияДляЗаполнения.Вставить("ГрафикРаботы",	"Объект.ГрафикРаботы");
			
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Подразделение"));

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидЗанятостиНовогоСотрудника(Форма)
	
	Форма.Объект.ВидЗанятости = СотрудникиВызовСервера.ПолучитьВидЗанятостиДляНовогоСотрудника(Форма.Объект.Сотрудник, Форма.Объект.Организация);
	УстановитьУсловияПриема(Форма);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловияПриема(Форма)
	
	УсловияПриема = УсловияПриемаПоВидуЗанятости(Форма.Объект.ВидЗанятости);
	
	УсловияПриемаПриОткрытии = УсловияПриемаПоВидуЗанятости(Форма.ВидЗанятостиПредыдущий);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УсловияПриемаПоВидуЗанятости(ВидЗанятости)
	
	Если ВидЗанятости = ПредопределенноеЗначение("Перечисление.ВидыЗанятости.ОсновноеМестоРаботы") Тогда
		
		Возврат НСтр("ru='Основное место работы, полная занятость'");
		
	Иначе
		
		Возврат НСтр("ru='Работа по совместительству, сокращенная рабочая неделя'");
		
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ГоловнаяОрганизацияСотрудника(Сотрудник)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "ГоловнаяОрганизация");
	
КонецФункции

&НаКлиенте
Процедура УстановитьСвязиПараметровВыбораОрганизации()
	
	СотрудникЗаполнен = ЗначениеЗаполнено(Объект.Сотрудник);
	СвязиПараметровВыбораОрганизацииУстановлены = Элементы.Организация.СвязиПараметровВыбора.Количество() > 0;
	
	НеобходимоПереустановитьСвязиПараметровВыбораОрганизации = 
		СотрудникЗаполнен И НЕ СвязиПараметровВыбораОрганизацииУстановлены
		ИЛИ НЕ СотрудникЗаполнен И СвязиПараметровВыбораОрганизацииУстановлены;
		
	Если НеобходимоПереустановитьСвязиПараметровВыбораОрганизации Тогда
			
		УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораОрганизацииНаСервере()
	
	СвязиПараметровВыбора = Новый Массив;
	Если ЗначениеЗаполнено(ГоловнаяОрганизацияСотрудника) Тогда
		Связь = Новый СвязьПараметраВыбора("Отбор.ГоловнаяОрганизация", "ГоловнаяОрганизацияСотрудника");
		СвязиПараметровВыбора.Добавить(Связь);
	КонецЕсли; 
		
	Элементы.Организация.СвязиПараметровВыбора  = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокПодходящихСорудников(Дата, Дата1, Организация, Текст)
	Возврат Документы.ПриемНаРаботу.СписокПодходящихСорудников(Дата, Дата, Организация, Текст);
КонецФункции

&НаСервере 
Функция ПолучитьДолжностьРуководителя (Руководитель, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность
				   |ИЗ
	               |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ФизическоеЛицо = &Руководитель) КАК КадроваяИсторияСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Руководитель", Руководитель);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Должность = Выборка.Должность;
	КонецЕсли;
	
	Возврат Должность;
		
КонецФункции

#КонецОбласти