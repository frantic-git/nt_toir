#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.ЗаказыНаВнутреннееПотребление.Записывать = Истина;
	Движения.торо_РезервыНаРуках.Записывать = Истина;
	Движения.торо_РезервыНаСкладах.Записывать = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЧДокумента.Номенклатура КАК Номенклатура,
	               |	&Характеристика КАК Характеристика,
	               |	&Серия КАК Серия
	               |ПОМЕСТИТЬ ТабличнаяЧасть
	               |ИЗ
	               |	Документ.торо_ЗакрытиеЗаказаНаВнутреннееПотребление.Товары КАК ТЧДокумента
	               |ГДЕ
	               |	ТЧДокумента.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Регистр.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	Регистр.Номенклатура КАК Номенклатура,
	               |	Регистр.Характеристика КАК Характеристика,
	               |	Регистр.КодСтроки КАК КодСтроки,
	               |	Регистр.Склад КАК Склад,
	               |	Регистр.Серия КАК Серия,
	               |	Регистр.КОформлениюОстаток КАК КОформлению
	               |ИЗ
	               |	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	               |			,
	               |			ЗаказНаВнутреннееПотребление = &ЗаказНаВнутреннееПотребление
	               |				И (Номенклатура, Характеристика, Серия) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика,
	               |						Таблица.Серия
	               |					ИЗ
	               |						ТабличнаяЧасть КАК Таблица)) КАК Регистр
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Регистр.Склад КАК Склад,
	               |	Регистр.Номенклатура КАК Номенклатура,
	               |	Регистр.Характеристика КАК Характеристика,
	               |	Регистр.Серия КАК Серия,
	               |	Регистр.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	Регистр.ДокументРезерв КАК ДокументРезерв,
	               |	Регистр.КоличествоОстаток КАК Количество
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(
	               |			,
	               |			ЗаказНаВнутреннееПотребление = &ЗаказНаВнутреннееПотребление
	               |				И (Номенклатура, Характеристика) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика
	               |					ИЗ
	               |						ТабличнаяЧасть КАК Таблица)) КАК Регистр
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Регистр.Склад КАК Склад,
	               |	Регистр.Номенклатура КАК Номенклатура,
	               |	Регистр.Характеристика КАК Характеристика,
	               |	Регистр.Серия КАК Серия,
	               |	Регистр.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	Регистр.ДокументРезерв КАК ДокументРезерв,
	               |	Регистр.КоличествоОстаток КАК Количество
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаРуках.Остатки(
	               |			,
	               |			ЗаказНаВнутреннееПотребление = &ЗаказНаВнутреннееПотребление
	               |				И (Номенклатура, Характеристика) В
	               |					(ВЫБРАТЬ
	  	           |						Таблица.Номенклатура,
				   |						Таблица.Характеристика
	               |					ИЗ
	               |						ТабличнаяЧасть КАК Таблица)) КАК Регистр";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ЗаказНаВнутреннееПотребление", ЗаказНаВнутреннееПотребление);
	
	Если Константы.ИспользоватьСерииНоменклатуры.Получить() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Серия", "ТЧДокумента.Серия");
	Иначе
		Запрос.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Если Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Характеристика", "ТЧДокумента.Характеристика");
	Иначе
		Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	КонецЕсли;

	РезЗапроса = Запрос.ВыполнитьПакет();
	Если НЕ РезЗапроса[1].Пустой() Тогда
		Выборка = РезЗапроса[1].Выбрать();
		Пока Выборка.Следующий() Цикл 
			Движение = Движения.ЗаказыНаВнутреннееПотребление.ДобавитьРасход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ РезЗапроса[2].Пустой() Тогда
		Выборка = РезЗапроса[2].Выбрать();
		Пока Выборка.Следующий() Цикл 
			Движение = Движения.торо_РезервыНаСкладах.ДобавитьРасход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		КонецЦикла;
	КонецЕсли;

	Если НЕ РезЗапроса[3].Пустой() Тогда
		Выборка = РезЗапроса[3].Выбрать();
		Пока Выборка.Следующий() Цикл 
			Движение = Движения.торо_РезервыНаРуках.ДобавитьРасход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ИзРабочегоМестаМТО") И ДанныеЗаполнения.ИзРабочегоМестаМТО Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Серия");
	Для Каждого Строка Из Товары Цикл 
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
		СтрокиДубли = Товары.НайтиСтроки(СтруктураПоиска);
		Если СтрокиДубли.Количество() > 1 Тогда 
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Строка № %1 имеет дубли'"), Строка.НомерСтроки));
		КонецЕсли;
	КонецЦикла;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры Тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли