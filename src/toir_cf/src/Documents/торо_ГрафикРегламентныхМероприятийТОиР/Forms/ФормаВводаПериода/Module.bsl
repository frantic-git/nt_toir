
#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Элементы.ТПОтборПечатнойФормыЗначение.ВыбиратьТип=Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НоваяСтрока=ТПОтборПечатнойФормы.Добавить();	
	НоваяСтрока.Имя="Список объектов регламентного мероприятия";
	НоваяСтрока.Значение=Справочники.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка();
	
	НоваяСтрока=ТПОтборПечатнойФормы.Добавить();
	НоваяСтрока.Имя="Вид мероприятия";
	НоваяСтрока.Значение=Справочники.торо_ВидыРемонтов.ПустаяСсылка();
		
	ПланГрафикРемонта=Параметры.ДокППР;
	
	НачПерПоян = ПланГрафикРемонта.ДатаПланирования;
	Если ЗначениеЗаполнено(ПланГрафикРемонта.ПериодичностьДетализации) Тогда		
		КонПерПоян = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ПланГрафикРемонта.ДатаПланирования, ПланГрафикРемонта.ПериодичностьДетализации, ПланГрафикРемонта.КоличествоПериодов);
	Иначе
		ТекстСообщения = НСтр("ru = 'Не выбран период планирования!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

	ТекГод = Год(ТекущаяДата());
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("Год");
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("Месяц");
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("Неделя");
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("День");
	ИнтервалРазбиения = "Месяц";
 	
	ПериодНач=НачПерПоян;
	ПериодКон=КонПерПоян;
	
	ЗаполнитьСпискиОтбора(ПланГрафикРемонта);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПериодНачПриИзменении(Элемент)
	ПериодНачПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПериодКонПриИзменении(Элемент)
	ПериодКонПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалРазбиенияПриИзменении(Элемент)
	
	Если ИнтервалРазбиения = "Год" Тогда		
	ИначеЕсли ИнтервалРазбиения = "Месяц" Тогда			
	ИначеЕсли ИнтервалРазбиения = "Неделя" Тогда		
	ИначеЕсли ИнтервалРазбиения = "День" Тогда
		Если (НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24)>=31*3 Тогда
			ТекстСообщения = НСтр("ru = 'Детализация для такого периода не допустима по дням.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			ИнтервалРазбиения = "Неделя";	
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Детализация для такого периода не допустима.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		ИнтервалРазбиения = "Месяц";	
	КонецЕсли;	
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Печать(Команда)
	
	ПередатьПараметр = Новый Структура;
	ПередатьПараметр.Вставить("ДатаНачала",ПериодНач);
	ПередатьПараметр.Вставить("ДатаКонца",ПериодКон);	
	ПередатьПараметр.Вставить("ИнтервалРазбиения",ИнтервалРазбиения);
	ПередатьПараметр.Вставить("ОтборФормы",ТПОтборПечатнойФормы);
		
	Закрыть(ПередатьПараметр);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТПОтборПечатнойФормы

&НаКлиенте
Процедура ТПОтборПечатнойФормыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.ТПОтборПечатнойФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивЗначений = ?(ТекущиеДанные.Имя = "Список объектов регламентного мероприятия", СписокОбъектовРМ.ВыгрузитьЗначения(), СписокВидовМероприятий.ВыгрузитьЗначения());
	
	ПараметрыВыбораМассив = Новый Массив();
	ПараметрыВыбораМассив.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивЗначений)));
	Элементы.ТПОтборПечатнойФормыЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораМассив);
КонецПроцедуры

&НаКлиенте
Процедура ТПОтборПечатнойФормыВидСравненияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТПОтборПечатнойФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НеобходимСписок = (ТекущиеДанные.ВидСравнения = ВидСравнения.ВСписке Или ТекущиеДанные.ВидСравнения = ВидСравнения.НеВСписке
		Или ТекущиеДанные.ВидСравнения = ВидСравнения.ВСпискеПоИерархии Или ТекущиеДанные.ВидСравнения = ВидСравнения.НеВСпискеПоИерархии);
	ЭтоСписокОбъектовРМ = ?(ТекущиеДанные.Имя = "Список объектов регламентного мероприятия", Истина, Ложь);
	ВыборГрупп = ТекущиеДанные.ВидСравнения = ВидСравнения.ВИерархии Или ТекущиеДанные.ВидСравнения = ВидСравнения.НеВИерархии
		Или ТекущиеДанные.ВидСравнения = ВидСравнения.ВСпискеПоИерархии Или ТекущиеДанные.ВидСравнения = ВидСравнения.НеВСпискеПоИерархии;
		
	Если Не НеобходимСписок И ТипЗнч(ТекущиеДанные.Значение) = Тип("СписокЗначений") Тогда
		Если ТекущиеДанные.Значение.Количество() > 0 Тогда
			ТекущиеДанные.Значение = ТекущиеДанные.Значение[0].Значение;
		Иначе
			ТекущиеДанные.Значение = ПредопределенноеЗначение(?(ЭтоСписокОбъектовРМ, "Справочник.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка", "Справочник.торо_ВидыРемонтов.ПустаяСсылка"));
		КонецЕсли;
	ИначеЕсли НеобходимСписок И Не ТипЗнч(ТекущиеДанные.Значение) = Тип("СписокЗначений") Тогда
		НеобходимыйСписок = Новый СписокЗначений;
		НеобходимыйСписок.ТипЗначения = ?(ЭтоСписокОбъектовРМ, Новый ОписаниеТипов("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия"), Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
		Если ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
			НеобходимыйСписок.Добавить(ТекущиеДанные.Значение);
		КонецЕсли;
		
		ТекущиеДанные.Значение = НеобходимыйСписок;
	КонецЕсли;
	
	Если ВыборГрупп Тогда
	    Элементы.ТПОтборПечатнойФормыЗначение.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
	Иначе
		Элементы.ТПОтборПечатнойФормыЗначение.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Значение) Тогда
	    Возврат;
	КонецЕсли;
	
	ЗначениеПоля = ?(НеобходимСписок, ТекущиеДанные.Значение[0].Значение, ТекущиеДанные.Значение);
	ЭтоГруппа = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ЗначениеПоля, "ЭтоГруппа");
	
	Если ВыборГрупп И Не ЭтоГруппа Или Не ВыборГрупп И ЭтоГруппа Тогда
		Если НеобходимСписок Тогда
			ТекущиеДанные.Значение.Очистить();
		Иначе
			ТекущиеДанные.Значение = ПредопределенноеЗначение(?(ЭтоСписокОбъектовРМ, "Справочник.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка", "Справочник.торо_ВидыРемонтов.ПустаяСсылка"));
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТПОтборПечатнойФормыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТПОтборПечатнойФормыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПериодНачПриИзмененииНаСервере()
	Если ПериодНач > ПериодКон Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала периода не может быть больше даты его начала.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		ПериодНач = НачПерПоян;
		Возврат;
	КонецЕсли;	
	Если ПериодНач < НачПерПоян Или ПериодНач > КонПерПоян Тогда
		ТекстСообщения = НСтр("ru = 'Введенная дата находится за пределами возможного диапазона.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		ПериодНач = НачПерПоян;
		Возврат;
	КонецЕсли;
	Если ((НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24)>=31*3) И
		(ИнтервалРазбиения = Перечисления.Периодичность.День) Тогда
			ТекстСообщения = НСтр("ru = 'Детализация для такого периода не допустима по дням!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Элементы.ПолеВыбораИнтервала.Значение = "Неделя";
			ИнтервалРазбиения = Перечисления.Периодичность.Неделя;	
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПериодКонПриИзмененииНаСервере()
	Если ПериодКон < ПериодНач Тогда
		ТекстСообщения = НСтр("ru = 'Дата конца периода не может быть меньше даты его начала.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		ПериодКон = КонПерПоян;
		Возврат;
	КонецЕсли;	
	Если ПериодКон < НачПерПоян Или ПериодКон > КонПерПоян Тогда
		ТекстСообщения = НСтр("ru = 'Введенная дата находится за пределами возможного диапазона.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		ПериодКон = КонПерПоян;
		Возврат;
	КонецЕсли;
	Если ((НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24)>=31*3) И
		(ИнтервалРазбиения = Перечисления.Периодичность.День) Тогда
			ТекстСообщения = НСтр("ru = 'Детализация для такого периода не допустима по дням!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Элементы.ПолеВыбораИнтервала.Значение = "Неделя";
			ИнтервалРазбиения = Перечисления.Периодичность.Неделя;
			Возврат;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиОтбора(ДокументПланГрафик)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ГрафикРегламентныхМероприятийТОиРМаршруты.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
	               |	торо_ГрафикРегламентныхМероприятийТОиРМаршруты.ВидМероприятия КАК ВидМероприятия
	               |ПОМЕСТИТЬ ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий
	               |ИЗ
	               |	Документ.торо_ГрафикРегламентныхМероприятийТОиР.Маршруты КАК торо_ГрафикРегламентныхМероприятийТОиРМаршруты
	               |ГДЕ
	               |	торо_ГрафикРегламентныхМероприятийТОиРМаршруты.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий.СписокОбъектовРемонта КАК СписокОбъектовРемонта
	               |ИЗ
	               |	ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий КАК ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий.ВидМероприятия КАК ВидМероприятия
	               |ИЗ
	               |	ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий КАК ВТ_ТаблицаСпискаОбъектовРМИВидовМероприятий";
				   
	Запрос.УстановитьПараметр("Ссылка", ДокументПланГрафик);
	Результат = Запрос.ВыполнитьПакет();
	
	СписокОбъектовРМ.ЗагрузитьЗначения(Результат[1].Выгрузить().ВыгрузитьКолонку("СписокОбъектовРемонта"));
	СписокВидовМероприятий.ЗагрузитьЗначения(Результат[2].Выгрузить().ВыгрузитьКолонку("ВидМероприятия"));
КонецПроцедуры

#КонецОбласти
