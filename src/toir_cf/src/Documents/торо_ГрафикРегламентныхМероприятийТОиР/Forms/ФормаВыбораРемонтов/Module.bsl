
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РассчитатьВФоне = Параметры.РассчитатьВФоне;
	Маршруты.Загрузить(Параметры.Маршруты.Выгрузить());
	ПоказыватьОбъекты = Параметры.ПоказыватьОбъекты;
	ГруппировкаПоМаршруту = Параметры.ГруппировкаПоМаршруту;
	
	Элементы.ДеревоПланаГрафикаППРСУчетомПозицииГруппировкаПоМаршруту.Пометка = ГруппировкаПоМаршруту;
	Элементы.ДеревоПланаГрафикаППРСУчетомПозицииПоказыватьОР.Пометка = ПоказыватьОбъекты;
	
	Если ПоказыватьОбъекты Тогда
		ЗаполнитьДерево(ГруппировкаПоМаршруту);
	Иначе
		ЗаполнитьДеревоБезОбъектов(ГруппировкаПоМаршруту);
	КонецЕсли;
	
	УстановитьЗаголовокКолонкиРемонтов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьВсеВетвиДеревьев();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьДерево();
	ВыбранныеМаршруты.Очистить();
	
	Для каждого Строка из Маршруты Цикл
		Если Строка.Пометка Тогда
			НоваяСтрока = ВыбранныеМаршруты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура("Маршруты", ВыбранныеМаршруты);
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОР(Команда)
	
	Кнопка = Элементы.ДеревоПланаГрафикаППРСУчетомПозицииПоказыватьОР;
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	
	ЗаписатьДерево();
	
	ПоказыватьОбъекты = Кнопка.Пометка;
	ЗаполнитьДеревоНаСервере();
	РазвернутьВсеВетвиДеревьев();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаПоМаршруту(Команда)
	
	Отказ = ПроверитьВозможностьПерегруппировкиДерева();
	
	Кнопка = Элементы.ДеревоПланаГрафикаППРСУчетомПозицииГруппировкаПоМаршруту;
	
	Если НЕ Отказ Тогда
		
		Кнопка.Пометка = НЕ Кнопка.Пометка;
		ЗаписатьДерево();
		ГруппировкаПоМаршруту = Кнопка.Пометка;
		ЗаполнитьДеревоНаСервере();
		РазвернутьВсеВетвиДеревьев();
		
	Иначе 
		
		Если Кнопка.Пометка Тогда
			ТекстСообщения = НСтр("ru = 'Смена группировки не может быть выполнена. Не у всех списков объектов регл. мероприятий указан вид ремонта.'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Смена группировки не может быть выполнена. Не у всех видов ремонта указан список объектов регл. мероприятий.'");
		КонецЕсли;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоППРРазвернутьВсе(Команда)
	
	СтандартныеПодсистемыКлиент.РазвернутьУзлыДерева(ЭтаФорма, "ДеревоПланаГрафикаППРСУчетомПозиции",,Истина);

КонецПроцедуры

&НаКлиенте
Процедура ДеревоППРСвернутьВсе(Команда)
	
	ЭлементыДереваПоложения = ДеревоПланаГрафикаППРСУчетомПозиции.ПолучитьЭлементы();
	Для Каждого СтрокаПоложение Из ЭлементыДереваПоложения Цикл
		ЭлементыДереваОбъектыРемонта = СтрокаПоложение.ПолучитьЭлементы();
		Для Каждого СтрокаОР Из ЭлементыДереваОбъектыРемонта Цикл
			Элементы.ДеревоПланаГрафикаППРСУчетомПозиции.Свернуть(СтрокаОР.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПланаГрафикаППРСУчетомПозиции

&НаКлиенте
Процедура ДеревоПланаГрафикаППРСУчетомПозицииПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоПланаГрафикаППРСУчетомПозиции.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РекурсивноИзменитьПометкуПодчиненных(ТекущиеДанные, ТекущиеДанные.Пометка);
	РекурсивноИзменитьПометкуРодителей(ТекущиеДанные, ТекущиеДанные.Пометка);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РекурсивноИзменитьПометкуПодчиненных(Строка, ЗначениеПометки)
	
	Для каждого ПодчиненнаяСтрока из Строка.ПолучитьЭлементы() Цикл
		ПодчиненнаяСтрока.Пометка = ЗначениеПометки;
		РекурсивноИзменитьПометкуПодчиненных(ПодчиненнаяСтрока, ЗначениеПометки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РекурсивноИзменитьПометкуРодителей(Строка, ЗначениеПометки)
	
	Родитель = Строка.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеПометки = Истина Тогда
		Родитель.Пометка = Истина;
	Иначе
		
		ЕстьПометка = Ложь;
		Для каждого СтрокаСосед из Родитель.ПолучитьЭлементы() Цикл
			Если СтрокаСосед.Пометка Тогда
				ЕстьПометка = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Родитель.Пометка = ЕстьПометка;
	КонецЕсли;
	
	РекурсивноИзменитьПометкуРодителей(Родитель, ЗначениеПометки);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеВетвиДеревьев()
	
	Для Каждого Элемент Из ДеревоПланаГрафикаППРСУчетомПозиции.ПолучитьЭлементы() Цикл
		Элементы.ДеревоПланаГрафикаППРСУчетомПозиции.Развернуть(Элемент.ПолучитьИдентификатор(),Истина);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ГруппирПоМаршруту,ТабМаршрутов = Неопределено, ТабОбъектовМаршрута = Неопределено)
	
	Если ТабМаршрутов = Неопределено Тогда
		ТабМаршрутов = Маршруты.Выгрузить();
	КонецЕсли;
	
	ДеревоПланаГрафикаППРСУчетомПозиции.ПолучитьЭлементы().Очистить();
	
	ДеревоРемонтовОбъект = РеквизитФормыВЗначение("ДеревоПланаГрафикаППРСУчетомПозиции");
	
	Запрос = Новый Запрос(ТекстЗапросаДляПостроенияДерева(ГруппирПоМаршруту, Ложь));
	Запрос.УстановитьПараметр("ТабМаршрутов", ТабМаршрутов);
	Результат = Запрос.Выполнить();
	
	ПостроитьДеревоПоРезультатуЗапроса(Результат, ДеревоРемонтовОбъект, ГруппирПоМаршруту);
	
	ЗначениеВРеквизитФормы(ДеревоРемонтовОбъект, "ДеревоПланаГрафикаППРСУчетомПозиции"); 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоБезОбъектов(ГруппирПоМаршруту,ТабМаршрутов = Неопределено)
	
	Если ТабМаршрутов = Неопределено Тогда
		ТабМаршрутов = Маршруты.Выгрузить();
	КонецЕсли;
	
	ДеревоПланаГрафикаППРСУчетомПозиции.ПолучитьЭлементы().Очистить();
	ДеревоРемонтовОбъект = РеквизитФормыВЗначение("ДеревоПланаГрафикаППРСУчетомПозиции");
	
	Запрос = Новый Запрос(ТекстЗапросаДляПостроенияДерева(ГруппирПоМаршруту, Истина));
	Запрос.УстановитьПараметр("ТабМаршрутов", ТабМаршрутов);
	Результат = Запрос.Выполнить();
	
	ПостроитьДеревоПоРезультатуЗапроса(Результат, ДеревоРемонтовОбъект, ГруппирПоМаршруту, Истина);
	
	ЗначениеВРеквизитФормы(ДеревоРемонтовОбъект, "ДеревоПланаГрафикаППРСУчетомПозиции");
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоПоРезультатуЗапроса(РезультатЗапроса, ДеревоРемонтовОбъект, ГруппирПоМаршруту, БезОР = Ложь)
	
	ДеревоРемонтовОбъект.Строки.Очистить();
	ВыборкаПервыйУровень = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Корень = ПолучитьКореньДерева(ДеревоРемонтовОбъект);
	
	Пока ВыборкаПервыйУровень.Следующий() Цикл
		
		НС = Корень.Строки.Добавить();
		Если ГруппирПоМаршруту Тогда
			НС.Ремонты = ВыборкаПервыйУровень.Маршрут;
			НС.НомерКартинки = 9;
		Иначе 
			НС.Ремонты = ВыборкаПервыйУровень.ВидМероприятия;
			НС.НомерКартинки = 7;
		КонецЕсли;
		
		НС.Уровень = 1;
		НС.Пометка = ВыборкаПервыйУровень.Пометка;
		
		ВыборкаВторойУровень = ВыборкаПервыйУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаВторойУровень.Следующий() Цикл
			
			Если ГруппирПоМаршруту Тогда
				Если ЗначениеЗаполнено(ВыборкаВторойУровень.ВидМероприятия) Тогда
					НовСтр = НС.Строки.Добавить();
					НовСтр.Ремонты = ВыборкаВторойУровень.ВидМероприятия;
					НовСтр.НомерКартинки = 7;
					НовСтр.Уровень = 2;
					НовСтр.Пометка = ВыборкаВторойУровень.Пометка;
				КонецЕсли;
			Иначе 
				Если ЗначениеЗаполнено(ВыборкаВторойУровень.Маршрут) Тогда
					НовСтр = НС.Строки.Добавить();
					НовСтр.Ремонты = ВыборкаВторойУровень.Маршрут;
					НовСтр.НомерКартинки = 9;
					НовСтр.Уровень = 2;
					НовСтр.Пометка = ВыборкаВторойУровень.Пометка;
				КонецЕсли;
			КонецЕсли;
						
			Если Не БезОР Тогда
				Если НовСтр <> Неопределено И ЗначениеЗаполнено(НовСтр.Ремонты) Тогда
					
					ВыборкаОР = ВыборкаВторойУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаОР.Следующий() Цикл
						
						Если ЗначениеЗаполнено(ВыборкаОР.ОбъектРемонта) Тогда
							НСтр = НовСтр.Строки.Добавить();
							НСтр.Ремонты = ВыборкаОР.ОбъектРемонта;
							НСтр.ИнвентарныйНомер = ВыборкаОР.ИнвентарныйНомер;
							НСтр.НомерКартинки = 0;
							НСтр.Уровень = 3;
						КонецЕсли;
						
					КонецЦикла;
					
				Иначе
					
					ПоказыватьОбъекты = Ложь;
					Элементы.ДеревоПланаГрафикаППРСУчетомПозицииПоказыватьОР.Пометка = ПоказыватьОбъекты;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаДляПостроенияДерева(ГруппирПоМаршруту, БезОР)
	
	ТекстЗапроса = "";
	Если БезОР Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабМаршрутов.СписокОбъектовРемонта,
		|	ТабМаршрутов.ВидМероприятия,
		|	ТабМаршрутов.Пометка
		|ПОМЕСТИТЬ ТабМаршрутов
		|ИЗ
		|	&ТабМаршрутов КАК ТабМаршрутов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабМаршрутов.СписокОбъектовРемонта КАК Маршрут,
		|	ТабМаршрутов.ВидМероприятия КАК ВидМероприятия,
		|	ТабМаршрутов.Пометка КАК Пометка,
		|   0 КАК КартинкаМаршрут,
		|   0 КАК КартинкаВидМероприятия
		|ИЗ
		|	ТабМаршрутов КАК ТабМаршрутов ";
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабМаршрутов.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
		|	ТабМаршрутов.ВидМероприятия КАК ВидМероприятия,
		|	ТабМаршрутов.Пометка КАК Пометка
		|ПОМЕСТИТЬ ТабМаршрутов
		|ИЗ
		|	&ТабМаршрутов КАК ТабМаршрутов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_МаршрутыРегламентныхМероприятий.СписокОбъектов КАК СписокОбъектовРемонта,
		|	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ТабОбъектовМаршрута
		|ИЗ
		|	РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
		|ГДЕ
		|	торо_МаршрутыРегламентныхМероприятий.СписокОбъектов В
		|			(ВЫБРАТЬ
		|				ТабМаршрутов.СписокОбъектовРемонта КАК СписокОбъектовРемонта
		|			ИЗ
		|				ТабМаршрутов КАК ТабМаршрутов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабОбъектовМаршрута.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
		|	ТабОбъектовМаршрута.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ТабРазрешенныхОбъектовМаршрута
		|ИЗ
		|	ТабОбъектовМаршрута КАК ТабОбъектовМаршрута
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|		ПО ТабОбъектовМаршрута.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабМаршрутов.СписокОбъектовРемонта КАК Маршрут,
		|	ТабМаршрутов.ВидМероприятия КАК ВидМероприятия,
		|	ТабМаршрутов.Пометка КАК Пометка,
		|	ЕСТЬNULL(ТабОбъектовМаршрута.ОбъектРемонта, ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)) КАК ОбъектРемонта,
		|	0 КАК КартинкаМаршрут,
		|	0 КАК КартинкаВидМероприятия,
		|	0 КАК КартинкаОбъектРемонта,
		|	ЕСТЬNULL(торо_ОбъектыРемонта.ИнвентарныйНомер, """") КАК ИнвентарныйНомер
		|ИЗ
		|	ТабМаршрутов КАК ТабМаршрутов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТабРазрешенныхОбъектовМаршрута КАК ТабОбъектовМаршрута
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|			ПО ТабОбъектовМаршрута.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
		|		ПО ТабМаршрутов.СписокОбъектовРемонта = ТабОбъектовМаршрута.СписокОбъектовРемонта";
		
	КонецЕсли;
	
	Если ГруппирПоМаршруту Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		" ИТОГИ МАКСИМУМ(Пометка) ПО
		|	Маршрут" + ?(БезОР, "",", ВидМероприятия");
		
	Иначе
		ТекстЗапроса = ТекстЗапроса +
		" ИТОГИ МАКСИМУМ(Пометка) ПО
		|	ВидМероприятия"  + ?(БезОР, "",", Маршрут");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовокКолонкиРемонтов()
	
	Если ГруппировкаПоМаршруту Тогда
		Если ПоказыватьОбъекты Тогда
			Элементы.ДеревоПланаГрафикаППРСУчетомПозицииРемонты.Заголовок = НСтр("ru = 'Список объектов / Вид мероприятия / Объект ремонта'");
		Иначе
			Элементы.ДеревоПланаГрафикаППРСУчетомПозицииРемонты.Заголовок = НСтр("ru = 'Список объектов / Вид мероприятия'");
		КонецЕсли;
	Иначе
		Если ПоказыватьОбъекты Тогда
			Элементы.ДеревоПланаГрафикаППРСУчетомПозицииРемонты.Заголовок = НСтр("ru = 'Вид мероприятия / Список объектов / Объект ремонта'");
		Иначе
			Элементы.ДеревоПланаГрафикаППРСУчетомПозицииРемонты.Заголовок = НСтр("ru = 'Вид мероприятия / Список объектов'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДерево()
	
	Маршруты.Очистить();
	
	Для Каждого СтрокаДерева Из ДеревоПланаГрафикаППРСУчетомПозиции.ПолучитьЭлементы() Цикл
		ЗаписатьСтрокуДереваВТЧ(СтрокаДерева, Маршруты);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСтрокуДереваВТЧ(СтрокаДерева, ТЧДляЗаписиМаршруты)
	
	Если ГруппировкаПоМаршруту Тогда
		
		Если ТипЗнч(СтрокаДерева.Ремонты) = Тип("СправочникСсылка.торо_ВидыРемонтов") Тогда
			НоваяСтрокаТЗ = ТЧДляЗаписиМаршруты.Добавить();
			НоваяСтрокаТЗ.ВидМероприятия = СтрокаДерева.Ремонты;
			НоваяСтрокаТЗ.СписокОбъектовРемонта = СтрокаДерева.ПолучитьРодителя().Ремонты;
			НоваяСтрокаТЗ.Пометка = СтрокаДерева.Пометка;	
		ИначеЕсли ТипЗнч(СтрокаДерева.Ремонты) = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") И СтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
			НоваяСтрокаТЗ = ТЧДляЗаписиМаршруты.Добавить();
			НоваяСтрокаТЗ.СписокОбъектовРемонта = СтрокаДерева.Ремонты;
			НоваяСтрокаТЗ.Пометка = СтрокаДерева.Пометка;
		КонецЕсли;
		
		Для Каждого СтрокаДЗ Из СтрокаДерева.ПолучитьЭлементы() Цикл
			ЗаписатьСтрокуДереваВТЧ(СтрокаДЗ, ТЧДляЗаписиМаршруты);
		КонецЦикла;
		
	Иначе
		
		Если ТипЗнч(СтрокаДерева.Ремонты) = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
			НоваяСтрокаТЗ = ТЧДляЗаписиМаршруты.Добавить();
			НоваяСтрокаТЗ.СписокОбъектовРемонта = СтрокаДерева.Ремонты;
			НоваяСтрокаТЗ.ВидМероприятия = СтрокаДерева.ПолучитьРодителя().Ремонты;
			НоваяСтрокаТЗ.Пометка = СтрокаДерева.Пометка;
		ИначеЕсли ТипЗнч(СтрокаДерева.Ремонты) = Тип("СправочникСсылка.торо_ВидыРемонтов") И СтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
			НоваяСтрокаТЗ = ТЧДляЗаписиМаршруты.Добавить();
			НоваяСтрокаТЗ.ВидМероприятия = СтрокаДерева.Ремонты;
			НоваяСтрокаТЗ.Пометка = СтрокаДерева.Пометка;
		КонецЕсли;
		
		Для Каждого СтрокаДЗ Из СтрокаДерева.ПолучитьЭлементы() Цикл
			ЗаписатьСтрокуДереваВТЧ(СтрокаДЗ, ТЧДляЗаписиМаршруты);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКореньДерева(ДеревоОбъектов)
	
	Корень = ДеревоОбъектов.Строки.Найти(4, "НомерКартинки", Истина);
	Если Корень = Неопределено Тогда
		
		Корень = ДеревоОбъектов.Строки.Добавить();
		Корень.Ремонты = НСтр("ru = '<Списки объектов и виды мероприятий>'");
		Корень.НомерКартинки = 4;
		
	КонецЕсли;
	Возврат Корень;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоНаСервере()
	
	Если ПоказыватьОбъекты Тогда
		ЗаполнитьДерево(ГруппировкаПоМаршруту);
	Иначе
		ЗаполнитьДеревоБезОбъектов(ГруппировкаПоМаршруту);
	КонецЕсли;
	
	УстановитьЗаголовокКолонкиРемонтов();
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьПерегруппировкиДерева()
	
	Для каждого Строка Из ДеревоПланаГрафикаППРСУчетомПозиции.ПолучитьЭлементы() Цикл
		Если ТипЗнч(Строка.Ремонты) = Тип("Строка") Тогда
			Для Каждого СтрокаУр1 Из Строка.ПолучитьЭлементы() Цикл
				Если СтрокаУр1.ПолучитьЭлементы().Количество() = 0 Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если Строка.ПолучитьЭлементы().Количество() = 0 Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
