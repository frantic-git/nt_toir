#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаГлобальные;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	торо_СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, Новый Структура("УстановитьСвойствоЭлементовФормыОтПрав", Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОтменаПроведенияРасширенная(Команда)
	ЕстьПроведенные = Ложь;
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ТекущаяСтрока);
		Если ДанныеСтроки.Проведен = Истина Тогда
			ЕстьПроведенные = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	Если ЕстьПроведенные Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтменаПроведенияПослеОтветаНаВопрос", ЭтотОбъект, Элементы.Список.ВыделенныеСтроки);
		Текст = НСтр("ru = 'Отмена проведения этого документа может привести к некорректному отображению структуры иерархии объектов ремонта. Отменить проведение?'");
		ПоказатьВопрос(ОписаниеОповещения, Текст, РежимДиалогаВопрос.ДаНет);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменаПроведенияПослеОтветаНаВопрос(Ответ, ДопПараметр) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	МассивСсылокНаОтменуПроведения = Новый Массив;
	Для каждого ТекущаяСтрока Из ДопПараметр Цикл
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ТекущаяСтрока);
		МассивСсылокНаОтменуПроведения.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла; 
	
	ОтменаПроведенияЗавершение(МассивСсылокНаОтменуПроведения);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтменаПроведенияЗавершение(МассивСсылок)
	Для каждого Ссылка Из МассивСсылок Цикл
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПометкаНаУдалениеРасширенная(Команда)
	
	ЕстьПроведенные = Ложь;
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ТекущаяСтрока);
		Если ДанныеСтроки.Проведен = Истина Тогда
			ЕстьПроведенные = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	Если ЕстьПроведенные Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПометкаНаУдалениеПослеОтветаНаВопрос", ЭтотОбъект, Элементы.Список.ВыделенныеСтроки);
		Текст = НСтр("ru = 'Отмена проведения этого документа может привести к некорректному отображению структуры иерархии объектов ремонта. Отменить проведение?'");
		ПоказатьВопрос(ОписаниеОповещения, Текст, РежимДиалогаВопрос.ДаНет);
	Иначе
		МассивСсылок = Новый Массив;
		Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.Список.ДанныеСтроки(ТекущаяСтрока);
			МассивСсылок.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;
	
		УстановитьПометкуУдаленияЗавершение(МассивСсылок);
		Элементы.Список.Обновить();
     КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПометкаНаУдалениеПослеОтветаНаВопрос(Ответ, ДопПараметр) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	МассивСсылок = Новый Массив;
	Для каждого ТекущаяСтрока Из ДопПараметр Цикл
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ТекущаяСтрока);
		МассивСсылок.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	УстановитьПометкуУдаленияЗавершение(МассивСсылок);
	Элементы.Список.Обновить();

КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуУдаленияЗавершение(МассивСсылок)
	Для каждого Ссылка Из МассивСсылок Цикл
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		Пометка = ДокументОбъект.ПометкаУдаления;
		ДокументОбъект.УстановитьПометкуУдаления(НЕ Пометка);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УстановленаПометка" Тогда
		Элементы.Список.Обновить()
	КонецЕсли;
КонецПроцедуры
#КонецОбласти