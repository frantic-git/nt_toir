#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

перем СтруктураДанных Экспорт; // Содержит структуру данных о статусе документа (Начальный, СогласованиеЗавершено, ПроводитьДокумент, ШаблонСообщенияЭлектроннойПочты) 
										// из регистра сведений торо_МатрицаПереходаСтатусовДокументов. 
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)	
		
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ИзРабочегоМестаМТО") Тогда
		
		Дата = ТекущаяДатаСеанса();
		
		СтруктураЗаполнения = ПолучитьИзВременногоХранилища(ДанныеЗаполнения.АдресХранилища);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураЗаполнения);
		УдалитьИзВременногоХранилища(ДанныеЗаполнения.АдресХранилища);
		
		Товары.Загрузить(СтруктураЗаполнения.Товары);
		ДокументыОснования.Загрузить(СтруктураЗаполнения.ДокументыОснования);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Склад = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойСклад");
	КонецЕсли;
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.торо_ЗаказыПоставщику.Записывать = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	               |	торо_ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
	               |	СУММА(торо_ЗаказПоставщикуТовары.Количество) КАК Количество,
	               |	торо_ЗаказПоставщикуТовары.Склад КАК Склад
	               |ИЗ
	               |	Документ.торо_ЗаказПоставщику.Товары КАК торо_ЗаказПоставщикуТовары
	               |ГДЕ
	               |	торо_ЗаказПоставщикуТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_ЗаказПоставщикуТовары.Номенклатура,
	               |	торо_ЗаказПоставщикуТовары.Характеристика,
	               |	торо_ЗаказПоставщикуТовары.Склад";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТЧТовары = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из ТЧТовары Цикл
		Движение = Движения.торо_ЗаказыПоставщику.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.ЗаказПоставщику = Ссылка;
		Движение.ДатаПоставки = ДатаПоставки;
		ЗаполнитьЗначенияСвойств(Движение, Строка);
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗначениеЗаполнено(ЭтотОбъект.Склад) Тогда
		Для каждого ТекСтрока из ЭтотОбъект.Товары Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Склад) Тогда
				ТекСтрока.Склад = ЭтотОбъект.Склад;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("СуммаСНДС");
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Дата поставки не должна быть меньше даты документа
	Если ЗначениеЗаполнено(ДатаПоставки) И ДатаПоставки < НачалоДня(Дата) Тогда
		ШаблонСообщения = НСтр("ru='Дата поставки не должна быть меньше даты документа %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Формат(Дата,"ДЛФ=DD"));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДатаПоставки",, Отказ);
	КонецЕсли;
	
	ПроверкаКорректностиЗаполненияОснований(Отказ);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;

	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры Тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

Процедура ПроверкаКорректностиЗаполненияОснований(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОснования.НомерСтроки КАК НомерСтроки,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ДокументыОснования
	|ИЗ
	|	&ДокументыОснования КАК ДокументыОснования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыОснования.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаВнутреннееПотреблениеТовары.Номенклатура КАК Номенклатура,
	|	ЗаказНаВнутреннееПотреблениеТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТоварыИзОснований
	|ИЗ
	|	ДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ЗаказНаВнутреннееПотреблениеТовары
	|		ПО ДокументыОснования.ДокументОснование = ЗаказНаВнутреннееПотреблениеТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыИзОснований.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Товары.Номенклатура ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьВДокументе
	|ИЗ
	|	ТоварыИзОснований КАК ТоварыИзОснований
	|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО ТоварыИзОснований.Номенклатура = Товары.Номенклатура
	|			И ТоварыИзОснований.Характеристика = Товары.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыИзОснований.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Товары.Номенклатура ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Поле = СтрШаблон("Объект.ДокументыОснования[%1].ДокументОснование", Формат(Выборка.НомерСтроки - 1, "ЧГ=0"));
		ТекстСообщения = НСтр("ru='Необходимо добавить в документ хотя бы одну позицию номенклатуры из документа-основания.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
	КонецЦикла;
		
КонецПроцедуры	

#КонецОбласти

#КонецЕсли