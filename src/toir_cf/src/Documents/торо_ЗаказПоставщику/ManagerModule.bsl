#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать 
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаказПоставщику";
	КомандаПечати.Представление = НСтр("ru = 'Заказ поставщику'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказПоставщику") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаказПоставщику",
			НСтр("ru = 'Заказ поставщику'"),
			ПечатьЗаказПоставщику(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ЗаказПоставщику.ПФ_MXL_ЗаказПоставщику");
		
	КонецЕсли;
КонецПроцедуры

Функция ПечатьЗаказПоставщику(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Неопределено;
	ВыводитьДопКолонку = Ложь;
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Документ,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.ДатаПоставки КАК ДатаПоставки,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Склад) КАК Склад,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Подразделение) КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Организация) КАК Организация,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Контрагент) КАК Контрагент,
	|	Документ.Организация.Префикс КАК Префикс,
	|	торо_ЗаказПоставщикуТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	торо_ЗаказПоставщикуТовары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА торо_ЗаказПоставщикуТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_ЗаказПоставщикуТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_ЗаказПоставщикуТовары.Упаковка)
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(торо_ЗаказПоставщикуТовары.КоличествоУпаковок) КАК Количество,
	|	торо_ЗаказПоставщикуТовары.Цена КАК Цена,
	|	СУММА(торо_ЗаказПоставщикуТовары.Сумма) КАК Сумма,
	|	торо_ЗаказПоставщикуТовары.Характеристика.Наименование КАК НаименованиеХарактеристики
	|ИЗ
	|	Документ.торо_ЗаказПоставщику.Товары КАК торо_ЗаказПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаказПоставщику КАК Документ
	|		ПО торо_ЗаказПоставщикуТовары.Ссылка = Документ.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.ДатаПоставки,
	|	Документ.Организация.Префикс,
	|	торо_ЗаказПоставщикуТовары.Номенклатура.НаименованиеПолное,
	|	торо_ЗаказПоставщикуТовары.Характеристика.НаименованиеПолное,
	|	торо_ЗаказПоставщикуТовары.Цена,
	|	торо_ЗаказПоставщикуТовары.Характеристика.Наименование,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Склад),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Подразделение),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Организация),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Контрагент),
	|	ВЫБОР
	|		КОГДА торо_ЗаказПоставщикуТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_ЗаказПоставщикуТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_ЗаказПоставщикуТовары.Упаковка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Документ,
	|	Номенклатура,
	|	НаименованиеХарактеристики
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(ДатаПоставки),
	|	МАКСИМУМ(Склад),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Префикс)
	|ПО
	|	Документ";
	
	ТабДокумент = Новый ТабличныйДокумент;
		
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = Метаданные.Документы.торо_ЗаказПоставщику.Синоним;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_ЗаказПоставщику.ПФ_MXL_ЗаказПоставщику");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодписи   = Макет.ПолучитьОбласть("Подписи");
	
	ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	ИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	
	Если ИспользоватьХарактеристики Тогда  
		ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаФО");
		ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика";
	Иначе 
		ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	КонецЕсли;
	
	ОбластьГраница    = Макет.ПолучитьОбласть("Граница");
	
	ПервыйДокумент = Истина;
		
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументы.Организация);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьШапка);
		
		// Вывод строк документа.
		ВыборкаСтроки = ВыборкаДокументы.Выбрать();
		Счетчик = 0;
		Пока ВыборкаСтроки.Следующий() Цикл
			Счетчик = Счетчик + 1;
			МатериалыХарактеристика = "";
			МатериалыСерия = "";
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
			ОбластьСтрока.Параметры.НомерСтроки = Счетчик;
			Если ИспользоватьХарактеристики Тогда  
				МатериалыХарактеристика = ?(ЗначениеЗаполнено(ВыборкаСтроки.Характеристика), ВыборкаСтроки.Характеристика, 
				                          ?(ЗначениеЗаполнено(ВыборкаСтроки.НаименованиеХарактеристики), ВыборкаСтроки.НаименованиеХарактеристики,""));
			КонецЕсли;
			Если ЗначениеЗаполнено(МатериалыХарактеристика) Тогда
				ОбластьСтрока.Параметры.Характеристика = Строка(МатериалыХарактеристика);
			КонецЕсли;
							
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьГраница);

		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Документ);

	КонецЦикла;

	// ТОиР
	ТабДокумент.ТолькоПросмотр = Истина;
	// ТОиР
	Возврат ТабДокумент;

КонецФункции

#КонецОбласти

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли