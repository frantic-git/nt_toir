#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт общего технического осмотра
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВнешнееОснованиеДляРабот";
	КомандаПечати.Идентификатор = "АктОбщегоТехническогоОсмотра";
	КомандаПечати.Представление = НСтр("ru = 'Акт общего технического осмотра'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИменаОбъектовМетаданных = РегистрыСведений.торо_ВводНаОсновании.ИменаДоступныхОбъектовМетаданныхДляВводаНаОсновании(
		 Метаданные.Документы.торо_ВнешнееОснованиеДляРабот.Имя);
		 
	Для Каждого ИмяОбъектаМетаданных Из ИменаОбъектовМетаданных Цикл
		Документы[ИмяОбъектаМетаданных].ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);		 
	КонецЦикла;		 
	
	торо_СозданиеНаОсновании.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
		
КонецПроцедуры

// Добавляет команду создания документа "Внешнее основание для работ".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.торо_ВнешнееОснованиеДляРабот) Тогда
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.торо_ВнешнееОснованиеДляРабот.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.торо_ВнешнееОснованиеДляРабот);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Записывать";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "торо_ИспользоватьВнешниеОснованияДляРабот";
        Возврат КомандаСоздатьНаОсновании;
	КонецЕсли; 
	
    Возврат Неопределено;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОбщегоТехническогоОсмотра") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"АктОбщегоТехническогоОсмотра", 
		"Акт общего технического осмотра", 
		ПечатьОбщегоАкта(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_ВнешнееОснованиеДляРабот.ПФ_MXL_АктОбщегоТехническогоОсмотра");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьОбщегоАкта(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_ВнешнееОснованиеДляРабот.ПФ_MXL_АктОбщегоТехническогоОсмотра");
	
	ЭтоПервый = Истина;
	ИспользоватьКомиссии = Константы.торо_ИспользоватьКомиссии.Получить();
	
	Для каждого Объект из МассивОбъектов Цикл
		
		Если НЕ ЭтоПервый Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭтоПервый = Ложь;
		
		Область = Макет.ПолучитьОбласть("ШапкаАкта");
		Область.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Объект.Организация);;
		Область.Параметры.ДатаАкта = Объект.ДатаСоздания;
		ТабДок.Вывести(Область);
		
		Если ИспользоватьКомиссии Тогда
			ВывестиКомиссию (Макет, ТабДок, Объект.Дата, Объект.Комиссия);
		Иначе
			ОбластьКомиссияБезСостава = Макет.ПолучитьОбласть("КомиссияБезСостава");
			ТабДок.Вывести(ОбластьКомиссияБезСостава);			
		КонецЕсли;

		Область = Макет.ПолучитьОбласть("ФормулировкаАкта");
		Область.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Объект.Организация);
		ТабДок.Вывести(Область);
		
		
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДок.Вывести(Область);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЗначений.ОбъектРемонта,
		|	ТаблицаЗначений.Описание,
		|	ТаблицаЗначений.ПлановаяДатаРемонта
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТаблицаЗначений КАК ТаблицаЗначений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.ОбъектРемонта,
		|	ВТ.Описание КАК ОписаниеДефекта,
		|	ВТ.ПлановаяДатаРемонта КАК ДатаРемонтаПлан,
		|	ВТ.ОбъектРемонта.Организация КАК Организация
		|ИЗ
		|	ВТ КАК ВТ
		|ИТОГИ ПО
		|	Организация";
		Запрос.УстановитьПараметр("ТаблицаЗначений", Объект.ОбследованноеОборудование.Выгрузить());
		ВыборкаПоОрг = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ОбластьГруппировки = Макет.ПолучитьОбласть("ПодразделениеСтрока");
		ОбластьОР = Макет.ПолучитьОбласть("ОбъектРемонтаСтрока");
		Сч = 1;
		ТабДок.НачатьАвтогруппировкуСтрок();
		Пока ВыборкаПоОрг.Следующий() Цикл
			ОбластьГруппировки.Параметры.НомерГруппировки = Сч;		
			ОбластьГруппировки.Параметры.ПодразделениеОбъектаРемонта = ВыборкаПоОрг.Организация;
			ТабДок.Вывести(ОбластьГруппировки, 0);
			Сч = Сч + 1;
			СчОР = 1;
			Выборка = ВыборкаПоОрг.Выбрать();
			Пока Выборка.Следующий() Цикл
				ОбластьОР.Параметры.НомерОбъекта = СчОР;
				ОбластьОР.Параметры.Заполнить(Выборка);
				ОбластьОР.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Выборка.ОбъектРемонта);
				ТабДок.Вывести(ОбластьОР, 1);
				СчОР = СчОР + 1;
			КонецЦикла;
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
	КонецЦикла;
	
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьОбщегоАкта";
	
	Возврат ТабДок;
	
КонецФункции

Процедура ВывестиКомиссию (Макет, ТабДок, ДатаДокумента, Комиссия)
	
	Область = Макет.ПолучитьОбласть("КомиссияСостав");
	ТабДок.Вывести(Область);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_Комиссии.Председатель КАК ПредседательКомиссии,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК ДолжностьПредседателя
	               |ИЗ
	               |	Справочник.торо_Комиссии КАК торо_Комиссии
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
	               |		ПО торо_Комиссии.Председатель = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	               |ГДЕ
	               |	торо_Комиссии.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_КомиссииСоставКомиссии.ЧленКомиссии КАК ЧленКомиссии,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность
	               |ИЗ
	               |	Справочник.торо_Комиссии.СоставКомиссии КАК торо_КомиссииСоставКомиссии
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
	               |		ПО торо_КомиссииСоставКомиссии.ЧленКомиссии = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	               |ГДЕ
	               |	торо_КомиссииСоставКомиссии.Ссылка = &Ссылка";
		              	
	Запрос.УстановитьПараметр("Ссылка", Комиссия);
	Запрос.УстановитьПараметр("Дата", ДатаДокумента);
	Выборка = Запрос.ВыполнитьПакет();
	ВыборкаПредседатель = Выборка[0].Выбрать();
	ВыборкаКомиссия = Выборка[1].Выбрать();
	
	ОбластьМакетаПредседатель  = Макет.ПолучитьОбласть("ПредседательКомиссии");
	Если ВыборкаПредседатель.Следующий() Тогда 
		ОбластьМакетаПредседатель.Параметры.ПредседательКомиссии = ВыборкаПредседатель.ПредседательКомиссии;
		ОбластьМакетаПредседатель.Параметры.ДолжностьПредседателя = ВыборкаПредседатель.ДолжностьПредседателя;
	КонецЕсли;
	ТабДок.Вывести(ОбластьМакетаПредседатель);
	
	ОбластьМакетаЧленыКомиссии = Макет.ПолучитьОбласть("ЧленыКомиссии");
	Если ВыборкаКомиссия.Количество() >0 Тогда 
		Пока ВыборкаКомиссия.Следующий() Цикл
			ОбластьМакетаЧленыКомиссии.Параметры.ФИОЧленаКомиссии = ВыборкаКомиссия.ЧленКомиссии;
			ОбластьМакетаЧленыКомиссии.Параметры.ДолжностьЧленаКомиссии = ВыборкаКомиссия.Должность;
			ТабДок.Вывести(ОбластьМакетаЧленыКомиссии);
		КонецЦикла; 
	Иначе
		ТабДок.Вывести(ОбластьМакетаЧленыКомиссии);
	КонецЕсли;   
	
КонецПроцедуры

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ 
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ДляВсехСтрок(&Ограничение_ОР)";

	ОграничениеОР = торо_УправлениеДоступом.ПолучитьОграничениеДоступаДляОбъектаРемонтаВТаблице("ОбследованноеОборудование.ОбъектРемонта", Истина);
	Ограничение.Текст = СтрЗаменить(Ограничение.Текст, "&Ограничение_ОР", ОграничениеОР);
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли