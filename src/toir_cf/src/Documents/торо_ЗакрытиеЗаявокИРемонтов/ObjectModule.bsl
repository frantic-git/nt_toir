#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("ИзОбработки") И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ТекстСообщения = НСтр("ru = 'Данный документ нельзя провести вручную! Необходимо воспользоваться обработкой ""Закрытие заявок и ремонтов"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);		
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения ИЛИ ПометкаУдаления И Проведен Тогда
		
		ПроверитьВозможностьУдаленияОтменыЗаявки(Отказ);
		
		УстановитьУправляемыеБлокировки();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.ID КАК ID
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.торо_ЗакрытиеЗаявокИРемонтов.ЗакрываемыеРемонты КАК торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты
		|ГДЕ
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК Регистратор,
		|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID КАК ID,
		|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Период КАК Период
		|ПОМЕСТИТЬ торо_ПлановыеРЕмонтныеРаботы
		|ИЗ
		|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
		|			,
		|			ID В
		|				(ВЫБРАТЬ
		|					ТаблицаДокумента.ID КАК ID
		|				ИЗ
		|					ТаблицаДокумента КАК ТаблицаДокумента)) КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
		|ГДЕ
		|	НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен
		|	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПлановыеРЕмонтныеРаботы.Период КАК Период,
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.ID КАК ID,
		|	торо_ПлановыеРЕмонтныеРаботы.Регистратор КАК Регистратор
		|ИЗ
		|	ТаблицаДокумента КАК торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ПлановыеРЕмонтныеРаботы КАК торо_ПлановыеРЕмонтныеРаботы
		|		ПО торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.ID = торо_ПлановыеРЕмонтныеРаботы.ID
		|ГДЕ
		|	торо_ПлановыеРЕмонтныеРаботы.Период >= &ДатаДокумента
		|	И торо_ПлановыеРЕмонтныеРаботы.Регистратор <> &Ссылка";
					   
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ДатаДокумента", Дата);
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Невозможно отменить проведение документа, т.к. на некоторые перемещенные ремонты уже введены новые документы планирования!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ППРИнициатор) И ППРИнициатор.Проведен Тогда
			ТекстСообщения = НСтр("ru = 'Невозможно отменить проведение документа, т.к. план-график ППР, при расчете которого он был создан, уже проведен!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	// Получение удаленных ремонтов при перепроведении документа. Используются при формировании записей
	// регистров торо_ПлановыеИсполнителиРемонтов, торо_ОбщиеДанныеПоРемонтам, торо_СвернутыеФактическиеДатыРемонтов.
	Если Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		МассивIDДокумента = ЗакрываемыеРемонты.ВыгрузитьКолонку("ID");
		МассивУдаленныхID = торо_Ремонты.ПолучитьIDУдаленныхРемонтовДокумента(МассивIDДокумента, Ссылка);
		ДополнительныеСвойства.Вставить("МассивУдаленныхID", МассивУдаленныхID);
	Иначе
		ДополнительныеСвойства.Вставить("МассивУдаленныхID", Новый Массив());
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	УстановитьУправляемыеБлокировки();
	
	ВыявленныеДефекты = Новый Массив;
	ВнешниеОснованияКОтмене = Новый Массив;
	ДвиженияПоРегистру_торо_ЗаявкиПоРемонтам(Отказ, ВыявленныеДефекты, ВнешниеОснованияКОтмене);
	ДвиженияПоРегистру_торо_ОтмененныеЗаявки(Отказ, ВыявленныеДефекты, ВнешниеОснованияКОтмене);
	ДвиженияПоРегистру_торо_ОтмененныеРемонты(Отказ, ВыявленныеДефекты, ВнешниеОснованияКОтмене);
	ДвиженияПоРегистру_торо_ПлановыеРемонтныеРаботы(Отказ);
	ДвиженияПоРегистру_торо_ПроцентВыполненияРабот(Отказ);
	ДвиженияПоРегистру_торо_ГарантийностьРемонтов();
	ДвиженияПоРегистру_торо_ВсеДокументыПоРемонтам();
	УстановитьСтатусыЗаявокИРемонтов();
	
	торо_МТОСервер.ПоместитьРемонтыВРегистрДляПроверкиАктуальности(Ссылка);
	
	торо_Ремонты.ОбновитьЗаписиНезависимыхРегистровПоРемонтам(ЭтотОбъект, РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если Не Отказ Тогда
		торо_РаботаСоСтатусамиДокументовСервер.ОтменаПроведения(Ссылка);
		торо_РаботаСоСтатусамиДокументовСервер.ИзменитьСтатусыДокументовПриОтменеПроведения(ЭтотОбъект);
		торо_Ремонты.ОбновитьЗаписиНезависимыхРегистровПоРемонтам(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУправляемыеБлокировки()
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_ПлановыеРемонтныеРаботы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ЗакрываемыеРемонты;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ID", "ID");
		
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ЗаявкиПоРемонтам(Отказ, ВыявленныеДефекты, ВнешниеОснования)
	
	Если Отказ Или ЗакрываемыеЗаявки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.Заявка КАК Заявка,
	               |	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.ПричинаЗакрытия КАК ПричинаЗакрытия,
	               |	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.ИДРемонта КАК ИДРемонта
	               |ПОМЕСТИТЬ ВТ_ЗакрываемыеЗаявки
	               |ИЗ
	               |	Документ.торо_ЗакрытиеЗаявокИРемонтов.ЗакрываемыеЗаявки КАК торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки
	               |ГДЕ
	               |	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.Ссылка = &Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Заявка,
	               |	ИДРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ЗаявкаНаРемонт.Организация КАК Организация,
	               |	торо_ЗаявкаНаРемонт.Подразделение КАК Подразделение,
	               |	ВТ_ЗакрываемыеЗаявки.Заявка КАК ДокументЗаявка,
	               |	ВТ_ЗакрываемыеЗаявки.ПричинаЗакрытия КАК ПричинаЗакрытия,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID КАК IDРемонта,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонта,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.КрайняяДопустимаяДатаЗавершенияРемонта КАК КрайняяДопустимаяДатаЗавершения,
	               |	ИСТИНА КАК Отменен
	               |ИЗ
	               |	ВТ_ЗакрываемыеЗаявки КАК ВТ_ЗакрываемыеЗаявки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт КАК торо_ЗаявкаНаРемонт
	               |		ПО ВТ_ЗакрываемыеЗаявки.Заявка = торо_ЗаявкаНаРемонт.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
	               |		ПО ВТ_ЗакрываемыеЗаявки.Заявка = торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка
	               |			И ВТ_ЗакрываемыеЗаявки.ИДРемонта = торо_ЗаявкаНаРемонтРемонтыОборудования.ID
	               |ИТОГИ ПО
	               |	ДокументЗаявка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	    Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ВыборкаЗакрываемыеЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДокументЗаявка");
	Пока ВыборкаЗакрываемыеЗаявки.Следующий() Цикл
		
		ВыборкаРемонтов = ВыборкаЗакрываемыеЗаявки.Выбрать();
		Пока ВыборкаРемонтов.Следующий() Цикл
			Движение = Движения.торо_ЗаявкиПоРемонтам.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаРемонтов);
			Движение.Период = МоментВремени().Дата;
		КонецЦикла;
		
	КонецЦикла;
	
	Движения.торо_ЗаявкиПоРемонтам.Записать();
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ОтмененныеЗаявки(Отказ, ВыявленныеДефекты, ВнешниеОснования)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ЗакрываемыеЗаявки Цикл
		Движение = Движения.торо_ОтмененныеЗаявки.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
	КонецЦикла;
	
	Движения.торо_ОтмененныеЗаявки.Записать();
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ОтмененныеРемонты(Отказ, ВыявленныеДефекты, ВнешниеОснования)
	
	Для Каждого Строка Из ЗакрываемыеРемонты Цикл
		Движение = Движения.торо_ОтмененныеРемонты.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.Период = Дата;
		Если ТипЗнч(Строка.ДокументОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") 
			И ВыявленныеДефекты.Найти(Строка.ДокументОснование) = Неопределено Тогда
			ВыявленныеДефекты.Добавить(Строка.ДокументОснование);
		ИначеЕсли ТипЗнч(Строка.ДокументОснование) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") 
			И ВнешниеОснования.Найти(Строка.ДокументОснование) = Неопределено Тогда
			ВнешниеОснования.Добавить(Строка.ДокументОснование);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Отказ Тогда
		Движения.торо_ОтмененныеРемонты.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ПлановыеРемонтныеРаботы(Отказ)
	
	ТаблицаСоответствияID = ПолучитьТаблицуСоответствияIDРемонтовIDКорректировок();
	
	Если ТаблицаСоответствияID.Количество() > 0 Тогда
		
		Для Каждого ИсходнаяСтрока Из ЗакрываемыеРемонты Цикл
			ТаблицаРегистр = ТаблицаСоответствияID.НайтиСтроки(Новый Структура("ID", ИсходнаяСтрока.ID));
			Если ТаблицаРегистр.Количество() > 0 Тогда
				СтрокаРегистр = ТаблицаРегистр[0];
				
				Движение = Движения.торо_ПлановыеРемонтныеРаботы.Добавить();
				Движение.ID = СтрокаРегистр.ID;
				Движение.ВидРемонтныхРабот = СтрокаРегистр.ВидРемонтныхРабот;
				Движение.ОбъектРемонтныхРабот = СтрокаРегистр.ОбъектРемонтныхРабот;
				Движение.Организация = СтрокаРегистр.Организация;
				Движение.Подразделение = СтрокаРегистр.Подразделение;
				Движение.ДатаНачалаРасчетная = СтрокаРегистр.ДатаНачалаРасчетная;
				Движение.Замещен = СтрокаРегистр.Замещен;
				Движение.Исполнитель = СтрокаРегистр.Исполнитель;
				Движение.Отменен = ИсходнаяСтрока.Отменен;
				Движение.СпособВыполнения = СтрокаРегистр.СпособВыполнения;
				Движение.СтоимостьРемонта = СтрокаРегистр.СтоимостьРемонта;
				Движение.ID_базы_расчета = СтрокаРегистр.ID_базы_расчета;
				Движение.ID_замещающего = СтрокаРегистр.ID_замещающего;
				Если ИсходнаяСтрока.Перенесен Тогда
					Движение.ДатаНачалаРемонтныхРабот = ИсходнаяСтрока.НоваяДатаНачала;
					Движение.ДатаОкончанияРемонтныхРабот = ИсходнаяСтрока.НоваяДатаОкончания;
				Иначе
					Движение.ДатаНачалаРемонтныхРабот = СтрокаРегистр.ДатаНачалаРемонтныхРабот;
					Движение.ДатаОкончанияРемонтныхРабот = СтрокаРегистр.ДатаОкончанияРемонтныхРабот;
				КонецЕсли;
				Движение.Период = СтрокаРегистр.Период+1;
				
				// Намеренно пишем пустую, т.к. при переносе дат, информация могла стать несоответствующей действительности.
				Движение.СрокПоНормативу = Неопределено; 
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли; 
	
	Если Не Отказ Тогда
		Движения.торо_ПлановыеРемонтныеРаботы.Записать();
	КонецЕсли;
		
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ПроцентВыполненияРабот(Отказ)
	
	Движения.торо_ПроцентВыполненныхРабот.Записывать = Истина;
	
	Для каждого Заявка Из ЗакрываемыеЗаявки Цикл
	
		ТаблицаРемонтныхРабот = Заявка.Заявка.РемонтныеРаботы;
	
		Для каждого Стр Из ТаблицаРемонтныхРабот Цикл
			
			Если ТипЗнч(Стр.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации")
				И (ЗакрываемыеРемонты.Количество() = 0 ИЛИ ЗакрываемыеРемонты.Найти(Стр.РемонтыОборудования_ID) <> Неопределено) Тогда
				Движение = Движения.торо_ПроцентВыполненныхРабот.Добавить();
				Движение.Период = Дата;
				Движение.IDРемонта = Стр.РемонтыОборудования_ID;
				Движение.IDОперации = Стр.ID;
				Движение.Операция = Стр.РемонтнаяРабота;
				Движение.IDРодителя = Стр.Родитель_ID;
				Движение.Процент = - Стр.Количество * 100;
				Движение.ВидДокумента = Перечисления.торо_ВидДокумента.ЗакрытиеЗаявокИРемонтов;			
			КонецЕсли; 
		КонецЦикла;		
	КонецЦикла; 
	
	Если Не Отказ Тогда
		Движения.торо_ПроцентВыполненныхРабот.Записать();
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьТаблицуСоответствияIDРемонтовIDКорректировок()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Период КАК Период,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК Регистратор,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.НомерСтроки КАК НомерСтроки,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Активность КАК Активность,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Организация КАК Организация,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID КАК ID,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаОкончанияРемонтныхРабот КАК ДатаОкончанияРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Исполнитель КАК Исполнитель,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.СпособВыполнения КАК СпособВыполнения,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен КАК Отменен,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID_базы_расчета КАК ID_базы_расчета,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен КАК Замещен,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID_замещающего КАК ID_замещающего,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРасчетная КАК ДатаНачалаРасчетная,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.СтоимостьРемонта КАК СтоимостьРемонта,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	|			,
	|			ID В (&СписокID)
	|				И Регистратор <> &Ссылка) КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	|ГДЕ
	|	НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен
	|	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен";
	
	Запрос.УстановитьПараметр("СписокID", ЗакрываемыеРемонты.ВыгрузитьКолонку("ID"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Процедура ДвиженияПоРегистру_торо_ВсеДокументыПоРемонтам()
	Движения.торо_ВсеДокументыПоРемонтам.Записывать = Истина;
	Движения.торо_ВсеДокументыПоРемонтам.Очистить();
	
	// При отмене ремонта автоматически отменяется и заявка. Т.е. в двух ТЧ будет один и тот же ремонт. Чтобы
	// в РС попадала одна запись - сворачиваем ID.
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрываемыеЗаявки.ИДРемонта КАК IDРемонта
	               |ПОМЕСТИТЬ ВТ_ЗакрываемыеЗаявки
	               |ИЗ
	               |	&ЗакрываемыеЗаявки КАК ЗакрываемыеЗаявки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗакрываемыеРемонты.ID КАК IDРемонта
	               |ПОМЕСТИТЬ ВТ_ЗакрываемыеРемонты
	               |ИЗ
	               |	&ЗакрываемыеРемонты КАК ЗакрываемыеРемонты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗакрываемыеЗаявки.IDРемонта КАК IDРемонта
	               |ИЗ
	               |	ВТ_ЗакрываемыеЗаявки КАК ВТ_ЗакрываемыеЗаявки
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ЗакрываемыеРемонты.IDРемонта
	               |ИЗ
	               |	ВТ_ЗакрываемыеРемонты КАК ВТ_ЗакрываемыеРемонты";
	
	Запрос.УстановитьПараметр("ЗакрываемыеРемонты", ЗакрываемыеРемонты.Выгрузить());
	Запрос.УстановитьПараметр("ЗакрываемыеЗаявки", ЗакрываемыеЗаявки.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаЗапроса.Следующий() Цикл
	    Движение = Движения.торо_ВсеДокументыПоРемонтам.Добавить();
		Движение.IDРемонта = ВыборкаЗапроса.IDРемонта;
		Движение.ДокументПоРемонту = Ссылка;
		Движение.ДатаДокумента = Дата;
		Движение.Организация = Организация;
	КонецЦикла;
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ГарантийностьРемонтов()
	
	Если НЕ ПолучитьФункциональнуюОпцию("торо_ИспользоватьГарантии") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСОбъектамиИДатамиРемонтов = ЗакрываемыеРемонты.Выгрузить(, "ID, ОбъектРемонта, ДатаНачала, ДатаОкончания");
	ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Добавить("ГарантийныйРемонт");
	
	торо_ГарантийноеОбслуживание.ПроставитьЗначениеФлагаГарантийныйВТаблице(ТаблицаСОбъектамиИДатамиРемонтов);
	
	Движения.торо_ГарантийностьРемонтов.Записывать = Истина;
	Движения.торо_ГарантийностьРемонтов.Очистить();
	
	Для каждого Строка Из ТаблицаСОбъектамиИДатамиРемонтов Цикл
		Движение = Движения.торо_ГарантийностьРемонтов.Добавить();
		Движение.Период = Дата;
		Движение.IDРемонта = Строка.ID;
		Движение.Гарантийный = Строка.ГарантийныйРемонт;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьСтатусыЗаявокИРемонтов()
	
	торо_РаботаСоСтатусамиДокументовСервер.УстановитьСтатусРемонтовПриПроведении(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка КАК Ссылка,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID КАК ID
	               |ПОМЕСТИТЬ Ремонты
	               |ИЗ
	               |	Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
	               |ГДЕ
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка В(&ЗакрываемыеЗаявки)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка,
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ЗаявкиПоРемонтамСрезПоследних.ДокументЗаявка КАК ДокументЗаявка,
	               |	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта КАК IDРемонта
	               |ПОМЕСТИТЬ Заявки
	               |ИЗ
	               |	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
	               |			,
	               |			IDРемонта В
	               |				(ВЫБРАТЬ
	               |					Ремонты.ID
	               |				ИЗ
	               |					Ремонты КАК Ремонты)) КАК торо_ЗаявкиПоРемонтамСрезПоследних
	               |ГДЕ
	               |	НЕ торо_ЗаявкиПоРемонтамСрезПоследних.Отменен
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ДокументЗаявка,
	               |	IDРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ОтмененныеРемонтыСрезПоследних.ID КАК ID
	               |ПОМЕСТИТЬ ОтмененныеРемонты
	               |ИЗ
	               |	РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних(
	               |			,
	               |			ID В
	               |				(ВЫБРАТЬ
	               |					Ремонты.ID
	               |				ИЗ
	               |					Ремонты)) КАК торо_ОтмененныеРемонтыСрезПоследних
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Ремонты.Ссылка КАК Ссылка,
	               |	МИНИМУМ(Заявки.IDРемонта ЕСТЬ NULL) КАК ЗаявкаОтменена
	               |ПОМЕСТИТЬ ОтмененныеЗаявки
	               |ИЗ
	               |	Ремонты КАК Ремонты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Заявки КАК Заявки
	               |		ПО Ремонты.Ссылка = Заявки.ДокументЗаявка
	               |			И Ремонты.ID = Заявки.IDРемонта
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Ремонты.Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка,
	               |	ЗаявкаОтменена
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ОтмененныеЗаявки.Ссылка КАК Ссылка
	               |ИЗ
	               |	ОтмененныеЗаявки КАК ОтмененныеЗаявки
	               |ГДЕ
	               |	ОтмененныеЗаявки.ЗаявкаОтменена
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Ремонты.ID КАК ID,
	               |	Ремонты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Ремонты КАК Ремонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОтмененныеЗаявки КАК ОтмененныеЗаявки
	               |		ПО Ремонты.Ссылка = ОтмененныеЗаявки.Заявка
	               |			И Ремонты.ID = ОтмененныеЗаявки.ИДРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОтмененныеРемонты КАК ОтмененныеРемонты
	               |		ПО Ремонты.ID = ОтмененныеРемонты.ID
	               |ГДЕ
	               |	НЕ Ремонты.ID В (&ЗакрываемыеРемонты)
	               |	И ОтмененныеРемонты.ID ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ЗакрываемыеЗаявки", ЗакрываемыеЗаявки.ВыгрузитьКолонку("Заявка"));
	Запрос.УстановитьПараметр("ЗакрываемыеРемонты", ЗакрываемыеРемонты.ВыгрузитьКолонку("ID"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРемонты = РезультатЗапроса[5].Выбрать(); 	
	Пока ВыборкаРемонты.Следующий() Цикл
		СтатусРемонта = Перечисления.торо_СтатусыРемонтов.Зарегистрирован;
		торо_РаботаСоСтатусамиДокументовСервер.УстановитьВручнуюСтатусДляРемонтаВЗаявке(ВыборкаРемонты.Ссылка, ВыборкаРемонты.ID, СтатусРемонта, Дата, Ссылка); 
	КонецЦикла;
	
	ВыборкаЗаявки = РезультатЗапроса[4].Выбрать();
	Пока ВыборкаЗаявки.Следующий() Цикл
		торо_РаботаСоСтатусамиДокументовСервер.УстановитьСтатусДокумента(ВыборкаЗаявки.Ссылка, Ссылка, Перечисления.торо_СтатусыДокументов.Отклонен);
	КонецЦикла;

	торо_РаботаСоСтатусамиДокументовСервер.ИзменитьСтатусыДокументовРемонта(Ссылка);
	
КонецПроцедуры

// Если отключена возможность ввода нескольких заявок на ремонт, то может быть ситуация, когда одну смету отменили 
// с помощью данного документа, ввели новую (если отменена, то считается, что ее нет и можно ввести еще одну), 
// а потом отменяется проведение/помечается на удаление закрытие заявок и ремонтов, в результате чего получится 
// две проведенные заявки по одному ремонту. Для предотвращения этой ситуации нельзя отменять проведение/помечать 
// на удаление документ при данных условиях.
Процедура ПроверитьВозможностьУдаленияОтменыЗаявки(Отказ)
	ВводНесколькихЗаявокПоРемонту = Константы.торо_РазрешитьВводНесколькихСметПоРемонту.Получить();
	Если ВводНесколькихЗаявокПоРемонту Тогда
	    Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ЗаявкиПоРемонтам.ДокументЗаявка КАК ДокументЗаявка,
	               |	торо_ЗаявкиПоРемонтам.IDРемонта КАК IDРемонта
	               |ПОМЕСТИТЬ ВТ_РемонтыОтмененныхЗаявок
	               |ИЗ
	               |	РегистрСведений.торо_ЗаявкиПоРемонтам КАК торо_ЗаявкиПоРемонтам
	               |ГДЕ
	               |	торо_ЗаявкиПоРемонтам.Регистратор = &Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта,
	               |	ДокументЗаявка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта КАК IDРемонта
	               |ИЗ
	               |	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
	               |			,
	               |			IDРемонта В
	               |					(ВЫБРАТЬ
	               |						ВТ_РемонтыОтмененныхЗаявок.IDРемонта
	               |					ИЗ
	               |						ВТ_РемонтыОтмененныхЗаявок КАК ВТ_РемонтыОтмененныхЗаявок)
	               |				И НЕ ДокументЗаявка В
	               |						(ВЫБРАТЬ
	               |							ВТ_РемонтыОтмененныхЗаявок.ДокументЗаявка
	               |						ИЗ
	               |							ВТ_РемонтыОтмененныхЗаявок КАК ВТ_РемонтыОтмененныхЗаявок)) КАК торо_ЗаявкиПоРемонтамСрезПоследних
	               |ГДЕ
	               |	НЕ торо_ЗаявкиПоРемонтамСрезПоследних.Отменен";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	    Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'Невозможно отменить проведение документа, т.к. на некоторые ремонты закрытых заявок уже введены новые заявки!
								|В системе отключена возвожность ввода нескольких заявок по ремонту.'");
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
КонецПроцедуры

#КонецОбласти

#КонецЕсли
