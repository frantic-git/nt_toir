
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа
перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.

#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Отказ = Ложь;
	торо_ЗаполнениеДокументов.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения, Отказ, Ложь);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	торо_ЗаполнениеДокументов20.ЗаполнитьШапкуДокумента(ДанныеЗаполнения, ЭтотОбъект);	
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
			
			ВидОперации = Перечисления.торо_ВидыОперацийДокументаОстановочныйРемонт.Корректировка;
			КорректируемыйДокумент = ДанныеЗаполнения;
			ДокументОснование = ДанныеЗаполнения.ДокументОснование;
			IDОсновногоРемонта = ДанныеЗаполнения.IDОсновногоРемонта;
			ОбъектРемонта = ДанныеЗаполнения.ОбъектРемонта;
			ВидРемонта = ДанныеЗаполнения.ВидРемонта;
			ДатаНачалаРемонта = ДанныеЗаполнения.ДатаНачалаРемонта;
			ДатаОкончанияРемонта = ДанныеЗаполнения.ДатаОкончанияРемонта;
			ДатаНачалаРемонтаСт = ДанныеЗаполнения.ДатаНачалаРемонта;
			ДатаОкончанияРемонтаСт = ДанныеЗаполнения.ДатаОкончанияРемонта;
					
			Для Каждого Строка Из ДанныеЗаполнения.СвязанныеРемонты Цикл
				Если Не Строка.Отвязать Тогда
					НС = СвязанныеРемонты.Добавить();
					ЗаполнитьЗначенияСвойств(НС, Строка, ,"ДатаНачалаРемонтаСтарая, ДатаОкончанияРемонтаСтарая");
					НС.ДатаНачалаРемонтаСтарая = Строка.ДатаНачалаРемонта;
					НС.ДатаОкончанияРемонтаСтарая = Строка.ДатаОкончанияРемонта;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") И ТипЗнч(ДанныеЗаполнения) <> Тип("Соответствие") Тогда
			ВидОперации = Перечисления.торо_ВидыОперацийДокументаОстановочныйРемонт.ОстановочныйРемонт;
			ДокументОснование = ДанныеЗаполнения;
			
			ИмяТЧ = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДанныеЗаполнения);
			Неотмененный = торо_ЗаполнениеДокументов.ВернутьIDНеотмененногоРемонтаВРегламентныхМероприятиях(ДанныеЗаполнения, ДанныеЗаполнения[ИмяТЧ]);
				
			Если ИмяТЧ <> Неопределено И Неотмененный <> ""  Тогда
					
				СоответствиеИДДокументам = Новый Соответствие;
				СоответствиеИДДокументам.Вставить(Неотмененный, ДанныеЗаполнения);   
				торо_ЗаполнениеДокументов20.ЗаполнитьДокументНаОсновании(СоответствиеИДДокументам, ЭтотОбъект);
					
			КонецЕсли;			
				
		КонецЕсли;
	Иначе
		ВидОперации = Перечисления.торо_ВидыОперацийДокументаОстановочныйРемонт.ОстановочныйРемонт;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение или РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ПроверитьСуществованиеСледующихДокументов(Отказ);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	торо_СоответствиеКорректировокДокументамППР.Корректировка
	|ИЗ
	|	РегистрСведений.торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР
	|ГДЕ
	|	торо_СоответствиеКорректировокДокументамППР.Корректируемый = &Корректируемый";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Корректируемый", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		ТекстСообщения = НСтр("ru = 'На основании документа введены корректировки!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
			
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ВидОперации <> Перечисления.торо_ВидыОперацийДокументаОстановочныйРемонт.Корректировка Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КорректируемыйДокумент");
	КонецЕсли;
	
	Если ДатаНачалаРемонта > ДатаОкончанияРемонта Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала остановочного ремонта больше даты окончания!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;
	
	// Проверим чтобы ни один ремонт в таблице зависимых не выходил за пределы даты начала и окончания основного.
	Для Каждого Зависимый Из СвязанныеРемонты Цикл
		
		Если НЕ ЗначениеЗаполнено(Зависимый.ДатаНачалаРемонта) ИЛИ НЕ ЗначениеЗаполнено(Зависимый.ДатаОкончанияРемонта) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Зависимый.ДатаНачалаРемонта > Зависимый.ДатаОкончанияРемонта Тогда
			ТекстСообщения = НСтр("ru = 'Дата начала ремонта больше даты окончания!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
		
		Если Не Зависимый.Отвязать Тогда
			Если Зависимый.ДатаНачалаРемонта < ДатаНачалаРемонта Или Зависимый.ДатаНачалаРемонта > ДатаОкончанияРемонта Тогда
				ШаблонСообщения = НСтр("ru = 'Дата начала зависимого ремонта в строке №%1 выходит за пределы периода основного ремонта!'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, Зависимый.НомерСтроки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			КонецЕсли;
			
			Если Зависимый.ДатаОкончанияРемонта < ДатаНачалаРемонта Или Зависимый.ДатаОкончанияРемонта > ДатаОкончанияРемонта Тогда
				ШаблонСообщения = НСтр("ru = 'Дата окончания зависимого ремонта в строке №%1  выходит за пределы периода основного ремонта!'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, Зависимый.НомерСтроки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ШаблонСообщения = НСтр("ru = 'Есть непроведенный документ основание: %1'");
	
	Для Каждого СвязанныйРемонт Из СвязанныеРемонты Цикл
		Если Не СвязанныйРемонт.ДокументИсточник.Проведен Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка(СвязанныйРемонт.ДокументИсточник));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Возврат;
		КонецЕсли;
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Если Дата <= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Дата") Тогда
			ШаблонСообщения = НСтр("ru = 'Дата документа должна быть больше даты документа основания ''%1''!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка(ДокументОснование));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Возврат;
		ИначеЕсли Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Проведен") Тогда
			ШаблонСообщения = НСтр("ru = 'Есть непроведенный документ основание: %1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка(ДокументОснование));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Возврат;			
		КонецЕсли;
	КонецЕсли;	
	
	Если ВидОперации = Перечисления.торо_ВидыОперацийДокументаОстановочныйРемонт.Корректировка Тогда
		Если Не КорректируемыйДокумент.Проведен Тогда
			ТекстСообщения = НСтр("ru = 'Есть непроведенный документ основание: " + КорректируемыйДокумент + "'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
		
		Если Дата <= КорректируемыйДокумент.Дата Тогда
			ТекстСообщения = НСтр("ru = 'Дата корректировки должна быть больше даты корректируемого!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'Дата документа должна быть больше даты документа-источника: %1!'");
		
	Для Каждого СвязанныйРемонт Из СвязанныеРемонты Цикл
		Если СвязанныйРемонт.ДокументИсточник.Дата >= Дата Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка(СвязанныйРемонт.ДокументИсточник));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Возврат;
		КонецЕсли;
	КонецЦикла;	
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Отказ);
		торо_Ремонты.ОбновитьЗаписиНезависимыхРегистровПоРемонтам(ЭтотОбъект, РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если Не Отказ Тогда
		торо_МТОСервер.ПоместитьРемонтыВРегистрДляПроверкиАктуальности(Ссылка);
		торо_Ремонты.ОбновитьЗаписиНезависимыхРегистровПоРемонтам(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает таблицу ремонтов с добавленным ремонтом из шапки документа.
Функция ПолучитьТаблицуРемонтовСОсновным() Экспорт
	
	ТаблицаРемонтовСОсновным = СвязанныеРемонты.Выгрузить();
	НС = ТаблицаРемонтовСОсновным.Добавить();
	НС.ID = IDОсновногоРемонта;
	НС.ОбъектРемонта = ОбъектРемонта;
	НС.ВидРемонта = ВидРемонта;
	НС.ДатаНачалаРемонта = ДатаНачалаРемонта;
	НС.ДатаОкончанияРемонта = ДатаОкончанияРемонта;
	НС.ДатаНачалаРемонтаСтарая = ДатаНачалаРемонтаСт;
	НС.ДатаОкончанияРемонтаСтарая = ДатаОкончанияРемонтаСт;
	НС.ДокументИсточник = ДокументОснование;
	
	Возврат ТаблицаРемонтовСОсновным;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьСуществованиеСледующихДокументов(Отказ)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ОстановочныеРемонтыСвязанныеРемонты.ID КАК ID
	               |ПОМЕСТИТЬ ВТ_ОстановочныеРемонты
	               |ИЗ
	               |	Документ.торо_ОстановочныеРемонты.СвязанныеРемонты КАК торо_ОстановочныеРемонтыСвязанныеРемонты
	               |ГДЕ
	               |	торо_ОстановочныеРемонтыСвязанныеРемонты.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	торо_ВсеДокументыПоРемонтам.Регистратор КАК Регистратор
	               |ИЗ
	               |	РегистрСведений.торо_ВсеДокументыПоРемонтам КАК торо_ВсеДокументыПоРемонтам
	               |ГДЕ
	               |	торо_ВсеДокументыПоРемонтам.IDРемонта В
	               |			(ВЫБРАТЬ
	               |				ВТ_ОстановочныеРемонты.ID
	               |			ИЗ
	               |				ВТ_ОстановочныеРемонты КАК ВТ_ОстановочныеРемонты)
	               |	И торо_ВсеДокументыПоРемонтам.ДатаДокумента >= &ДатаДок
	               |	И НЕ(торо_ВсеДокументыПоРемонтам.Регистратор ССЫЛКА Документ.торо_АктПриемкиОборудования
	               |				ИЛИ торо_ВсеДокументыПоРемонтам.Регистратор ССЫЛКА Документ.торо_ЗакрытиеЗаявокИРемонтов
	               |				ИЛИ торо_ВсеДокументыПоРемонтам.Регистратор ССЫЛКА Документ.торо_ОстановочныеРемонты
	               |				ИЛИ торо_ВсеДокументыПоРемонтам.Регистратор ССЫЛКА Документ.торо_ПланРаботПодразделения)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	торо_ВсеДокументыПоРемонтам.ДатаДокумента";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДок", Дата);
	
	резЗапроса = Запрос.Выполнить();
	
	Если резЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Выборка = резЗапроса.Выбрать();
	Выборка.Следующий();
	ШаблонСообщения = НСтр("ru = 'Данные этих ремонтов уже изменены в документе %1.!'");
	ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.Регистратор);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Отказ)
	
	ТаблицаРемонтовСОсновным = ПолучитьТаблицуРемонтовСОсновным();
	
	ДвиженияПоРегистру_торо_ОстановочныеРемонты(Отказ, ТаблицаРемонтовСОсновным);
	ДвиженияПоРегистру_торо_ПлановыеРемонтныеРаботы(Отказ, ТаблицаРемонтовСОсновным);
	ДвиженияПоРегистру_торо_СоответствиеКорректировокДокументамППР();
	ДвиженияПоРегистру_торо_ВсеДокументыПоРемонтам();
	ДвиженияПоРегистру_торо_ГарантийностьРемонтов();
	
	торо_МТОСервер.ПоместитьРемонтыВРегистрДляПроверкиАктуальности(Ссылка);
	// Движения по регистру торо_ЗаявкиПоРемонтам больше не выполняются.
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ОстановочныеРемонты(Отказ, ТабРемонтовСОсновным)
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязанныеРемонты.ID,
	|	СвязанныеРемонты.Отвязать,
	|	СвязанныеРемонты.ДатаНачалаРемонта,
	|  СвязанныеРемонты.ДатаОкончанияРемонта
	|ПОМЕСТИТЬ СвязанныеРемонты
	|ИЗ
	|	&СвязанныеРемонты КАК СвязанныеРемонты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДоступность.ID,
	|	ТабДоступность.ДоступенДляРедактирования
	|ПОМЕСТИТЬ ТабДоступность
	|ИЗ
	|	&ТабДоступность КАК ТабДоступность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&IDОсновного КАК IDОсновного,
	|	торо_ОстановочныеРемонты.ID КАК IDЗависимого, 
	|	торо_ОстановочныеРемонты.Отвязать КАК Отвязан,
	|	торо_ОстановочныеРемонты.ДатаНачалаРемонта,
	|  торо_ОстановочныеРемонты.ДатаОкончанияРемонта
	|ИЗ
	|	СвязанныеРемонты КАК торо_ОстановочныеРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДоступность КАК ТабДоступность
	|		ПО торо_ОстановочныеРемонты.ID = ТабДоступность.ID
	|ГДЕ
	|	ТабДоступность.ДоступенДляРедактирования";
	
	Запрос.УстановитьПараметр("СвязанныеРемонты", ТабРемонтовСОсновным);
	Запрос.УстановитьПараметр("IDОсновного",IDОсновногоРемонта);
	Запрос.УстановитьПараметр("ТабДоступность", Документы.торо_ОстановочныеРемонты.ОбновитьДоступностьДляРедактирования(Ссылка,ТабРемонтовСОсновным));
	
	ПланРемонтовДвижения = Запрос.Выполнить().Выгрузить();
		
	НаборЗаписей = РегистрыСведений.торо_ОстановочныеРемонты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	СтарыеДвижения = НаборЗаписей.Выгрузить();
	
	Движения.торо_ОстановочныеРемонты.Очистить();
	Движения.торо_ОстановочныеРемонты.Записывать = Истина;
	
	Если Не Отказ Тогда
		
		Для Каждого ИсходнаяСтрока Из СтарыеДвижения Цикл
			СтрДостДляРед = ПланРемонтовДвижения.НайтиСтроки(Новый Структура("IDЗависимого", ИсходнаяСтрока.IDЗависимого));
			СтрЕстьВДок = ТабРемонтовСОсновным.НайтиСтроки(Новый Структура("ID", ИсходнаяСтрока.IDЗависимого));
			Если СтрДостДляРед.Количество() = 0 И СтрЕстьВДок.Количество() > 0 Тогда
				Движение = Движения.торо_ОстановочныеРемонты.Добавить();
				ЗаполнитьЗначенияСвойств(Движение,ИсходнаяСтрока);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого ИсходнаяСтрока Из ПланРемонтовДвижения Цикл
			Движение = Движения.торо_ОстановочныеРемонты.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ИсходнаяСтрока);
			Движение.Период = Дата;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ПлановыеРемонтныеРаботы(Отказ, ТаблицаРемонтовСОсновным)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СвязанныеРемонты.ID КАК ID,
	               |	СвязанныеРемонты.ОбъектРемонта КАК ОбъектРемонта,
	               |	СвязанныеРемонты.ВидРемонта КАК ВидРемонта,
	               |	СвязанныеРемонты.ДатаНачалаРемонта КАК ДатаНачалаРемонта,
	               |	СвязанныеРемонты.ДатаОкончанияРемонта КАК ДатаОкончанияРемонта,
	               |	СвязанныеРемонты.ДатаНачалаРемонтаСтарая КАК ДатаНачалаРемонтаСтарая,
	               |	СвязанныеРемонты.ДатаОкончанияРемонтаСтарая КАК ДатаОкончанияРемонтаСтарая,
	               |	СвязанныеРемонты.Отвязать КАК Отвязать
	               |ПОМЕСТИТЬ СвязанныеРемонты
	               |ИЗ
	               |	&СвязанныеРемонты КАК СвязанныеРемонты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID,
	               |	ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТабДоступность.ID КАК ID,
	               |	ТабДоступность.ДоступенДляРедактирования КАК ДоступенДляРедактирования
	               |ПОМЕСТИТЬ ТабДоступность
	               |ИЗ
	               |	&ТабДоступность КАК ТабДоступность
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID КАК ID,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель КАК Исполнитель,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения КАК СпособВыполнения,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Замещен КАК Замещен,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID_базы_расчета КАК ID_базы_расчета,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID_замещающего КАК ID_замещающего,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СтоимостьРемонта КАК СтоимостьРемонта,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Организация КАК Организация,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачалаРасчетная КАК ДатаНачалаРасчетная,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Подразделение КАК Подразделение,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаОкончанияРемонтныхРабот КАК ДатаОкончанияРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Отменен КАК Отменен
	               |ПОМЕСТИТЬ ПланРемонтовОтвязанные
	               |ИЗ
	               |	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	               |			,
	               |			ID В
	               |					(ВЫБРАТЬ
	               |						СвязанныеРемонты.ID КАК ID
	               |					ИЗ
	               |						СвязанныеРемонты КАК СвязанныеРемонты
	               |					ГДЕ
	               |						СвязанныеРемонты.Отвязать = ИСТИНА)
	               |				И ТИПЗНАЧЕНИЯ(Регистратор) <> ТИП(Документ.торо_ОстановочныеРемонты)) КАК торо_ПланГрафикРемонтаПланРемонтов
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID КАК ID,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель КАК Исполнитель,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения КАК СпособВыполнения,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Замещен КАК Замещен,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID_базы_расчета КАК ID_базы_расчета,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID_замещающего КАК ID_замещающего,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СтоимостьРемонта КАК СтоимостьРемонта,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Организация КАК Организация,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачалаРасчетная КАК ДатаНачалаРасчетная,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Подразделение КАК Подразделение,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Отменен КАК Отменен,
	               |	СвязанныеРемонты.ДатаНачалаРемонта КАК ДатаНачалаРемонтныхРабот,
	               |	СвязанныеРемонты.ДатаОкончанияРемонта КАК ДатаОкончанияРемонтныхРабот
	               |ПОМЕСТИТЬ ПланРемонтовНеОтвязанные
	               |ИЗ
	               |	СвязанныеРемонты КАК СвязанныеРемонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	               |				,
	               |				ID В
	               |					(ВЫБРАТЬ
	               |						СвязанныеРемонты.ID КАК ID
	               |					ИЗ
	               |						СвязанныеРемонты КАК СвязанныеРемонты
	               |					ГДЕ
	               |						СвязанныеРемонты.Отвязать = ЛОЖЬ)) КАК торо_ПланГрафикРемонтаПланРемонтов
	               |		ПО СвязанныеРемонты.ID = торо_ПланГрафикРемонтаПланРемонтов.ID
	               |			И СвязанныеРемонты.ОбъектРемонта = торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПланРемонтовОтвязанные.ID КАК ID,
	               |	ПланРемонтовОтвязанные.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	ПланРемонтовОтвязанные.Исполнитель КАК Исполнитель,
	               |	ПланРемонтовОтвязанные.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	ПланРемонтовОтвязанные.СпособВыполнения КАК СпособВыполнения,
	               |	ПланРемонтовОтвязанные.Замещен КАК Замещен,
	               |	ПланРемонтовОтвязанные.ID_базы_расчета КАК ID_базы_расчета,
	               |	ПланРемонтовОтвязанные.ID_замещающего КАК ID_замещающего,
	               |	ПланРемонтовОтвязанные.СтоимостьРемонта КАК СтоимостьРемонта,
	               |	ПланРемонтовОтвязанные.Организация КАК Организация,
	               |	ПланРемонтовОтвязанные.ДатаНачалаРасчетная КАК ДатаНачалаРасчетная,
	               |	ПланРемонтовОтвязанные.Подразделение КАК Подразделение,
	               |	ПланРемонтовОтвязанные.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	ПланРемонтовОтвязанные.ДатаОкончанияРемонтныхРабот КАК ДатаОкончанияРемонтныхРабот,
	               |	ПланРемонтовОтвязанные.Отменен КАК Отменен
	               |ПОМЕСТИТЬ ПланРемонтов
	               |ИЗ
	               |	ПланРемонтовОтвязанные КАК ПланРемонтовОтвязанные
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПланРемонтовНеОтвязанные.ID,
	               |	ПланРемонтовНеОтвязанные.ВидРемонтныхРабот,
	               |	ПланРемонтовНеОтвязанные.Исполнитель,
	               |	ПланРемонтовНеОтвязанные.ОбъектРемонтныхРабот,
	               |	ПланРемонтовНеОтвязанные.СпособВыполнения,
	               |	ПланРемонтовНеОтвязанные.Замещен,
	               |	ПланРемонтовНеОтвязанные.ID_базы_расчета,
	               |	ПланРемонтовНеОтвязанные.ID_замещающего,
	               |	ПланРемонтовНеОтвязанные.СтоимостьРемонта,
	               |	ПланРемонтовНеОтвязанные.Организация,
	               |	ПланРемонтовНеОтвязанные.ДатаНачалаРасчетная,
	               |	ПланРемонтовНеОтвязанные.Подразделение,
	               |	ПланРемонтовНеОтвязанные.ДатаНачалаРемонтныхРабот,
	               |	ПланРемонтовНеОтвязанные.ДатаОкончанияРемонтныхРабот,
	               |	ПланРемонтовНеОтвязанные.Отменен
	               |ИЗ
	               |	ПланРемонтовНеОтвязанные КАК ПланРемонтовНеОтвязанные
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID КАК ID,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаОкончанияРемонтныхРабот КАК ДатаОкончанияРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель КАК Исполнитель,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения КАК СпособВыполнения,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Отменен КАК Отменен,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Замещен КАК Замещен,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID_базы_расчета КАК ID_базы_расчета,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID_замещающего КАК ID_замещающего,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СтоимостьРемонта КАК СтоимостьРемонта,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Организация КАК Организация,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачалаРасчетная КАК ДатаНачалаРасчетная,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Подразделение КАК Подразделение
	               |ИЗ
	               |	ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДоступность КАК ТабДоступность
	               |		ПО торо_ПланГрафикРемонтаПланРемонтов.ID = ТабДоступность.ID
	               |ГДЕ
	               |	ТабДоступность.ДоступенДляРедактирования";
	
	Запрос.УстановитьПараметр("СвязанныеРемонты",ТаблицаРемонтовСОсновным);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ТабДоступность", Документы.торо_ОстановочныеРемонты.ОбновитьДоступностьДляРедактирования(Ссылка,ПолучитьТаблицуРемонтовСОсновным()));
	
	ПланРемонтовДвижения = Запрос.Выполнить().Выгрузить();
	ПланРемонтовДвижения.Индексы.Добавить("ID");
	
	Если ПланРемонтовДвижения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.торо_ПлановыеРемонтныеРаботы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	СтарыеДвижения = НаборЗаписей.Выгрузить();
	
	Движения.торо_ПлановыеРемонтныеРаботы.Очистить();	
	
	Для Каждого ИсходнаяСтрока Из СтарыеДвижения Цикл
		СтрДостДляРед = ПланРемонтовДвижения.НайтиСтроки(Новый Структура("ID", ИсходнаяСтрока.ID));
		СтрЕстьВДок = ТаблицаРемонтовСОсновным.НайтиСтроки(Новый Структура("ID", ИсходнаяСтрока.ID));
		Если СтрДостДляРед.Количество() = 0 И СтрЕстьВДок.Количество() > 0 Тогда
			Движение = Движения.торо_ПлановыеРемонтныеРаботы.Добавить();
			ЗаполнитьЗначенияСвойств(Движение,ИсходнаяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ИсходнаяСтрока Из ПланРемонтовДвижения Цикл
		Движение = Движения.торо_ПлановыеРемонтныеРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ИсходнаяСтрока);
		Движение.Период = Дата;
	КонецЦикла;
	
	Движения.торо_ПлановыеРемонтныеРаботы.Записывать = Истина;
	
КонецПроцедуры

// Отражаем какие документы ППР, Заявки и Остановочные ремонты корректируем
Процедура ДвиженияПоРегистру_торо_СоответствиеКорректировокДокументамППР()
	
	МассивКорректируемых = Новый Массив;
	Для Каждого Строка Из СвязанныеРемонты Цикл
		Если МассивКорректируемых.Найти(Строка.ДокументИсточник) = Неопределено Тогда
			МассивКорректируемых.Добавить(Строка.ДокументИсточник);
		КонецЕсли;
	КонецЦикла;
	
	Если ВидОперации = Перечисления.торо_ВидыОперацийДокументаОстановочныйРемонт.Корректировка Тогда 
		НаборИсходных = ПолучитьКорректируемыеДокументы();
		Для Каждого ЗаписьИсходный Из НаборИсходных Цикл
			Если МассивКорректируемых.Найти(ЗаписьИсходный.Корректируемый) = Неопределено Тогда
				МассивКорректируемых.Добавить(ЗаписьИсходный.Корректируемый);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если МассивКорректируемых.Найти(ДокументОснование) = Неопределено Тогда
			МассивКорректируемых.Добавить(ДокументОснование);
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Корректируемый Из МассивКорректируемых Цикл
		Движение = Движения.торо_СоответствиеКорректировокДокументамППР.Добавить();
		Движение.Корректировка = Ссылка;
		Движение.Корректируемый = Корректируемый;
	КонецЦикла;
	
	Движения.торо_СоответствиеКорректировокДокументамППР.Записывать = Истина;
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ВсеДокументыПоРемонтам()
	
	Движения.торо_ВсеДокументыПоРемонтам.Записывать = Истина;
	Движения.торо_ВсеДокументыПоРемонтам.Очистить();
	
	Для каждого СтрокаТЧ Из СвязанныеРемонты Цикл
	    Движение = Движения.торо_ВсеДокументыПоРемонтам.Добавить();
		Движение.IDРемонта = СтрокаТЧ.ID;
		Движение.ДокументПоРемонту = Ссылка;
		Движение.ДатаДокумента = Дата;
		Движение.Организация = Организация;
		Движение.Подразделение = Подразделение;
	КонецЦикла;
	
	СтрокаНЗ = Движения.торо_ВсеДокументыПоРемонтам.Добавить();
	СтрокаНЗ.IDРемонта = IDОсновногоРемонта;
	СтрокаНЗ.ДокументПоРемонту = Ссылка;
	СтрокаНЗ.ДатаДокумента = Дата;
	СтрокаНЗ.Организация = Организация;
	СтрокаНЗ.Подразделение = Подразделение;
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ГарантийностьРемонтов()
	
	Движения.торо_ГарантийностьРемонтов.Записывать = Истина;
	Движения.торо_ГарантийностьРемонтов.Очистить();
	
	Движение = Движения.торо_ГарантийностьРемонтов.Добавить();
	Движение.Период = Дата;
	Движение.IDРемонта = IDОсновногоРемонта;
	Движение.Гарантийный = ГарантийныйРемонт;
	
	Для каждого Строка Из СвязанныеРемонты Цикл
		Движение = Движения.торо_ГарантийностьРемонтов.Добавить();
		Движение.Период = Дата;
		Движение.IDРемонта = Строка.ID;
		Движение.Гарантийный = Строка.ГарантийныйРемонт;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьКорректируемыеДокументы(ППР = Истина, Заявки = Истина, Остановочные = Истина)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	торо_СоответствиеКорректировокДокументамППР.Корректируемый
	|ИЗ
	|	РегистрСведений.торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР
	|ГДЕ
	|	торо_СоответствиеКорректировокДокументамППР.Корректировка = &Корректировка
	|	%Условие%";
	
	ТекстУсловия = "";
	
	Если Не (ППР И Заявки И Остановочные) Тогда
		Если ППР И Заявки Тогда
			ТекстУсловия = "И ТИПЗНАЧЕНИЯ(торо_СоответствиеКорректировокДокументамППР.Корректируемый) <> ТИП(Документ.торо_ОстановочныеРемонты)";
		ИначеЕсли ППР И Остановочные Тогда
			ТекстУсловия = "И ТИПЗНАЧЕНИЯ(торо_СоответствиеКорректировокДокументамППР.Корректируемый) <> ТИП(Документ.торо_ЗаявкаНаРемонт)";
		ИначеЕсли Заявки И Остановочные Тогда
			ТекстУсловия = "И ТИПЗНАЧЕНИЯ(торо_СоответствиеКорректировокДокументамППР.Корректируемый) <> ТИП(Документ.торо_ПланГрафикРемонта)";
		ИначеЕсли ППР Тогда
			ТекстУсловия = "И ТИПЗНАЧЕНИЯ(торо_СоответствиеКорректировокДокументамППР.Корректируемый) = ТИП(Документ.торо_ПланГрафикРемонта)";
		ИначеЕсли Заявки Тогда
			ТекстУсловия = "И ТИПЗНАЧЕНИЯ(торо_СоответствиеКорректировокДокументамППР.Корректируемый) = ТИП(Документ.торо_ЗаявкаНаРемонт)";
		ИначеЕсли Остановочные Тогда
			ТекстУсловия = "И ТИПЗНАЧЕНИЯ(торо_СоответствиеКорректировокДокументамППР.Корректируемый) = ТИП(Документ.торо_ОстановочныеРемонты)";
		КонецЕсли;
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Условие%", ТекстУсловия);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Корректировка",КорректируемыйДокумент);
	
	ТЗКорректируемых = Запрос.Выполнить().Выгрузить();
	Если Остановочные Тогда
		НС = ТЗКорректируемых.Добавить();
		НС.Корректируемый = КорректируемыйДокумент;
	КонецЕсли;
	
	Возврат ТЗКорректируемых;
	
КонецФункции

#КонецОбласти

#КонецЕсли