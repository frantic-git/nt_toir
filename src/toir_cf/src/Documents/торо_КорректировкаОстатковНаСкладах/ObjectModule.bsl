#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КорректировкаОстатковНаСкладах.Номенклатура КАК Номенклатура,
	               |	КорректировкаОстатковНаСкладах.Характеристика КАК Характеристика,
	               |	СУММА(КорректировкаОстатковНаСкладах.Количество) КАК Количество,
	               |	КорректировкаОстатковНаСкладах.Серия КАК Серия
	               |ИЗ
	               |	Документ.торо_КорректировкаОстатковНаСкладах.Товары КАК КорректировкаОстатковНаСкладах
	               |ГДЕ
	               |	КорректировкаОстатковНаСкладах.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КорректировкаОстатковНаСкладах.Номенклатура,
	               |	КорректировкаОстатковНаСкладах.Характеристика,
	               |	КорректировкаОстатковНаСкладах.Серия";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТЧТовары = Запрос.Выполнить().Выгрузить();

	Для каждого СтрокаТЧ Из ТЧТовары Цикл
		Если ВидОперации = Перечисления.торо_ВидыОперацийКорректировкиОстатков.Оприходование Тогда
			Движение = Движения.ТоварыНаСкладах.ДобавитьПриход();
		Иначе
			Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
		КонецЕсли;
		
		Движение.Период = Дата;
		Движение.Номенклатура = СтрокаТЧ.Номенклатура;
		Движение.Характеристика = СтрокаТЧ.Характеристика;
		Движение.Склад = Склад;
		Движение.Серия = СтрокаТЧ.Серия;
		Движение.ВНаличии = СтрокаТЧ.Количество;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	МассивВсехРеквизитов = Новый Массив();
	МассивРеквизитовОперации = Новый Массив();
	
	ОбщегоНазначенияУТКлиентСервер.ЗаполнитьМассивНепроверяемыхРеквизитов(
		МассивВсехРеквизитов,
		МассивРеквизитовОперации,
		МассивНепроверяемыхРеквизитов);
		
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ФОИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	Если ФОИспользоватьСерииНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, Отказ, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ Тогда
		Отказ = ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	Склад = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойСклад", Справочники.Склады.ПустаяСсылка());
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли