#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт выполненных ремонтных работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "АктВыполненныхРемонтныхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приемке выполненных работ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// КС-2
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "ФормаКС2";
	КомандаПечати.Представление = НСтр("ru = 'КС-2'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатьюКС2_КС3";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// КС-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "ФормаКС3";
	КомандаПечати.Представление = НСтр("ru = 'КС-3'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатьюКС2_КС3";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИменаОбъектовМетаданных = РегистрыСведений.торо_ВводНаОсновании.ИменаДоступныхОбъектовМетаданныхДляВводаНаОсновании(
		 Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.Имя);
		 
	Для Каждого ИмяОбъектаМетаданных Из ИменаОбъектовМетаданных Цикл
		Документы[ИмяОбъектаМетаданных].ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);		 
	КонецЦикла;		 
		
	торо_СозданиеНаОсновании.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
		
КонецПроцедуры

// Добавляет команду создания документа "Акт о выполнении этапа работ".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.торо_АктОВыполненииЭтапаРабот) Тогда
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.торо_АктОВыполненииЭтапаРабот);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить"; 
		КомандаСоздатьНаОсновании.ФункциональныеОпции = 
			"торо_ИспользоватьНарядыНаВыполнениеРабот, торо_ИспользоватьВнешниеОснованияДляРабот, торо_ИспользоватьППР, торо_ИспользоватьСметыРемонта, торо_УчетВыявленныхДефектовОборудования";
        Возврат КомандаСоздатьНаОсновании;
	КонецЕсли; 
	
    Возврат Неопределено;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВыполненныхРемонтныхРабот") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"АктВыполненныхРемонтныхРабот", 
		"Акт о приемке выполненных работ", 
		ПечатьАктВыполненныхРемонтныхРабот(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_АктОВыполненииЭтапаРабот.ПФ_MXL_АктВыполненныхРемонтныхРабот");
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаКС2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ФормаКС2", 
		"КС-2", 
		ПечатьФормаКС2(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_АктОВыполненииЭтапаРабот.ПФ_MXL_ФормаКС2");
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаКС3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ФормаКС3", 
		"КС-3", 
		ПечатьФормаКС3(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_АктОВыполненииЭтапаРабот.ПФ_MXL_ФормаКС3");		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАктВыполненныхРемонтныхРабот(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_АктОВыполненииЭтапаРабот.ПФ_MXL_АктВыполненныхРемонтныхРабот");
	
	ИспользоватьКомиссии = Константы.торо_ИспользоватьКомиссии.Получить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка КАК Документ,
	|	торо_АктОВыполненииЭтапаРабот.Номер КАК Номер,
	|	торо_АктОВыполненииЭтапаРабот.Дата КАК Дата,
	|	торо_АктОВыполненииЭтапаРабот.Организация КАК Организация,
	|	торо_АктОВыполненииЭтапаРабот.Подразделение КАК Подразделение,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДокументИсточник КАК ДокументИсточник,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
	|	торо_АктОВыполненииЭтапаРабот.Ответственный КАК Ответственный,
	|	торо_АктОВыполненииЭтапаРабот.Комментарий КАК Комментарий";
	Если ИспользоватьКомиссии Тогда
		Запрос.Текст = Запрос.Текст + 
		",
		|   торо_АктОВыполненииЭтапаРабот.Комиссия КАК Комиссия,
		|   торо_АктОВыполненииЭтапаРабот.Комиссия.Председатель КАК ПредседательКомиссии";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + 
	" ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот КАК торо_АктОВыполненииЭтапаРабот
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|		ПО торо_АктОВыполненииЭтапаРабот.Ссылка = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРабот.Ссылка В(&Ссылка)
	|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&МассивID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МИНИМУМ(ДатаНачала),
	|	МАКСИМУМ(ДатаОкончания)
	|ПО
	|	Документ
	|;";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("МассивID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&МассивID)", "");
	КонецЕсли;
	
	ВыборкаДокументов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		Документ = ВыборкаДокументов.Документ;
		ДатаНачала = ВыборкаДокументов.ДатаНачала;
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА торо_АктРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|			ТОГДА ВЫБОР
		|					КОГДА торо_АктРемонтныеРаботы.РемонтнаяРабота.НаименованиеПолное = """"
		|						ТОГДА ТехнологическиеОперации.Наименование
		|					ИНАЧЕ торо_АктРемонтныеРаботы.РемонтнаяРабота.НаименованиеПолное
		|				КОНЕЦ
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_ВерсииТехКартСрезПоследних.ТехКарта)
		|	КОНЕЦ КАК Работа,
		|	торо_АктРемонтныеРаботы.ID КАК ID,
		|	торо_АктРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
		|	торо_АктРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	ВЫБОР
		|		КОГДА торо_АктРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|			ТОГДА ТехнологическиеОперации.Комментарий
		|		ИНАЧЕ торо_ВерсииТехКартСрезПоследних.ТехКарта.Комментарий
		|	КОНЕЦ КАК Комментарий,
		|	ТехнологическиеОперации.БазоваяЕдиницаИзмерения КАК ЕдИзм,
		|	торо_АктРемонтныеРаботы.Количество КАК Количество
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК торо_АктРемонтныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК ТехнологическиеОперации
		|		ПО торо_АктРемонтныеРаботы.РемонтнаяРабота = ТехнологическиеОперации.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(&ДатаНачала, ) КАК торо_ВерсииТехКартСрезПоследних
		|		ПО торо_АктРемонтныеРаботы.РемонтнаяРабота = торо_ВерсииТехКартСрезПоследних.ИдентификаторТехКарты
		|ГДЕ
		|	торо_АктРемонтныеРаботы.Ссылка = &Акт";
		
		Запрос.УстановитьПараметр("Акт", Документ);	
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		тзСписокРаботИсх = Запрос.Выполнить().Выгрузить();
		
		Пока ВыборкаРемонтов.Следующий() Цикл
			РемонтОборудования  = ВыборкаРемонтов;
			ОбщийИтог = 0;
			
			Если НЕ ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			// Шапка
			Область = Макет.ПолучитьОбласть("Шапка");
			Область.Параметры.НомерДокумента = ВыборкаДокументов.Номер;
			Область.Параметры.Дата	= Формат(ВыборкаДокументов.Дата,"ДЛФ=Д");
			Область.Параметры.ДатаНач = Формат(РемонтОборудования.ДатаНачала,"ДЛФ=Д");
			Область.Параметры.ДатаКонец = Формат(РемонтОборудования.ДатаОкончания,"ДЛФ=Д");
			Область.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);

			Область.Параметры.Подразделение = ВыборкаДокументов.Подразделение;
			
			ТабДок.Вывести(Область);
			
			// ОснованиеШапка и Основания
			ВывестиОснования(Макет, Документ, ТабДок);	
			
			// ИсполнителиШапка и Исполнители
			ВывестиИсполнителей(Макет, Документ, РемонтОборудования.ID, ТабДок);	
			
			// Заказчик
			Область = Макет.ПолучитьОбласть("Заказчик");	 		
			Если НЕ ТипЗнч(Документ) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
				
				Если ЗначениеЗаполнено(РемонтОборудования.ОбъектРемонта.Контрагент) Тогда
					Область.Параметры.Заказчик = РемонтОборудования.ОбъектРемонта.Контрагент;
				Иначе
					Область.Параметры.Заказчик = РемонтОборудования.ОбъектРемонта.Подразделение;
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДок.Вывести(Область);
			
			// Комиссия
			Если ИспользоватьКомиссии Тогда
				ЗапросКомиссии = Новый Запрос;
				ЗапросКомиссии.УстановитьПараметр("Комиссия", ВыборкаРемонтов.Комиссия);
				ЗапросКомиссии.Текст = "ВЫБРАТЬ
				                      |	торо_КомиссииСоставКомиссии.ЧленКомиссии КАК ЧленКомиссии
				                      |ИЗ
				                      |	Справочник.торо_Комиссии.СоставКомиссии КАК торо_КомиссииСоставКомиссии
				                      |ГДЕ
				                      |	торо_КомиссииСоставКомиссии.Ссылка = &Комиссия";
				ТЗЧленыКомиссии = ЗапросКомиссии.Выполнить().Выгрузить();
				
				Если ЗначениеЗаполнено(ВыборкаРемонтов.ПредседательКомиссии) Тогда 
					ОбластьПредседатель = Макет.ПолучитьОбласть("ПредседательКомиссии");
					ОбластьПредседатель.Параметры.ПредседательКомиссии = ВыборкаРемонтов.ПредседательКомиссии;
					ТабДок.Вывести(ОбластьПредседатель);
				КонецЕсли;
				
				Если ТЗЧленыКомиссии.Количество() Тогда
					ПерваяСтрока = Истина;
					ОбластьЧленКомиссииСЗаголовком = Макет.ПолучитьОбласть("ЧленКомиссииСЗаголовком");
					
					Для Каждого Строка Из ТЗЧленыКомиссии Цикл
						Если ПерваяСтрока Тогда
							ПерваяСтрока = Ложь;
							ОбластьЧленКомиссииСЗаголовком.Параметры.ЧленКомиссии = Строка.ЧленКомиссии;
							ТабДок.Вывести(ОбластьЧленКомиссииСЗаголовком);
							Продолжить;
						КонецЕсли;
						
						ОбластьЧленКомиссии = Макет.ПолучитьОбласть("ЧленКомиссии");
						ОбластьЧленКомиссии.Параметры.ЧленКомиссии = Строка.ЧленКомиссии;
						ТабДок.Вывести(ОбластьЧленКомиссии);
					КонецЦикла;
					
					Если ПерваяСтрока Тогда
						ТабДок.Вывести(ОбластьЧленКомиссииСЗаголовком);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			// Объект ремонта
			Область = Макет.ПолучитьОбласть("ОбъектРемонта");
			Область.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(РемонтОборудования.ОбъектРемонта);
			ТабДок.Вывести(Область);
			
			//Комментарий 
			Если ЗначениеЗаполнено(Документ.Комментарий) Тогда
				Область = Макет.ПолучитьОбласть("КомментарийШапка");
				Область.Параметры.Комментарий = Документ.Комментарий;
				ТабДок.Вывести(Область);
			КонецЕсли;
			
			// ВыполненныеРаботыШапка
			Область = Макет.ПолучитьОбласть("ВыполненныеРаботыШапка");
			ТабДок.Вывести(Область);
			
			// ВыполненныеРаботы
			Область = Макет.ПолучитьОбласть("ВыполненныеРаботы");
			
			// Накладываем отбор по РемонтуОборудования. Если делать это в запросе - теряется последовательность ремонтов.
			ПараметрыОтбора = Новый Структура("РемонтыОборудования_ID",РемонтОборудования.ID);
			тзСписокРабот = тзСписокРаботИсх.Скопировать(ПараметрыОтбора);	
			Ном = "1";
			МассивID = Новый Массив;
			МассивСтрок = тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",""));
			
			// Определяем используются ли комментарии или нет
			ВывестиРаботы(МассивСтрок,тзСписокРабот,Область,ТабДок,МассивID,Ном,Истина,Истина);
			
			
			// МатериалыШапка
			ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
			ИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
			
			Если ИспользоватьХарактеристики Тогда  
				ОбластьШапка = Макет.ПолучитьОбласть("МатериалыФОШапка");
				Область      = Макет.ПолучитьОбласть("МатериалыФО");
			Иначе 
				ОбластьШапка = Макет.ПолучитьОбласть("МатериалыШапка");
				Область      = Макет.ПолучитьОбласть("Материалы");
			КонецЕсли;
			ТабДок.Вывести(ОбластьШапка);
			
			// Материалы
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СУММА(МатериальныеЗатраты.Количество) КАК Количество,
			|	СУММА(МатериальныеЗатраты.Сумма) КАК Сумма,
			|	МатериальныеЗатраты.Номенклатура КАК Номенклатура,
			|	МатериальныеЗатраты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	МатериальныеЗатраты.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			|ПОМЕСТИТЬ МатЗатраты_Упаковки
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.МатериальныеЗатраты КАК МатериальныеЗатраты
			|ГДЕ
			|	МатериальныеЗатраты.Ссылка = &Ссылка
			|	И МатериальныеЗатраты.РемонтыОборудования_ID = &ID
			|
			|СГРУППИРОВАТЬ ПО
			|	МатериальныеЗатраты.Номенклатура,
			|	МатериальныеЗатраты.ХарактеристикаНоменклатуры,
			|	МатериальныеЗатраты.ЕдиницаИзмерения
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МатериальныеЗатраты.Количество * ЕСТЬNULL(спрУпаковки.Коэффициент, 1) КАК Количество,
			|	МатериальныеЗатраты.Сумма КАК Сумма,
			|	МатериальныеЗатраты.Номенклатура КАК Номенклатура,
			|	МатериальныеЗатраты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	спрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			|ПОМЕСТИТЬ МатЗатраты
			|ИЗ
			|	МатЗатраты_Упаковки КАК МатериальныеЗатраты
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК спрУпаковки
			|		ПО МатериальныеЗатраты.ЕдиницаИзмерения = спрУпаковки.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
			|		ПО МатериальныеЗатраты.Номенклатура = спрНоменклатура.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	ХарактеристикаНоменклатуры,
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
			|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
			|	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта,
			|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
			|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ ЦеныНоменклатурыСрезПоследних
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			&Дата,
			|			ВидЦены = &ТипЦены
			|				И Валюта = &Валюта
			|				И (Номенклатура, Характеристика, ЕдиницаИзмерения) В
			|					(ВЫБРАТЬ
			|						Таб.Номенклатура,
			|						Таб.ХарактеристикаНоменклатуры,
			|						Таб.ЕдиницаИзмерения
			|					ИЗ
			|						МатЗатраты КАК Таб)) КАК ЦеныНоменклатурыСрезПоследних
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Характеристика,
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Количество КАК Количество,
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Сумма КАК Сумма,
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура КАК Номенклатура,
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ТипЦены,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения КАК НоменклатураЕдиницаИзмерения,
			|	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура.Код КАК НоменклатураКод
			|ИЗ
			|	МатЗатраты КАК торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатурыСрезПоследних КАК ЦеныНоменклатурыСрезПоследних
			|		ПО торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ХарактеристикаНоменклатуры = ЦеныНоменклатурыСрезПоследних.Характеристика
			|			И торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ЕдиницаИзмерения = ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения";
			
			//Запрос.УстановитьПараметр("МатериальныеЗатраты",Документ.МатериальныеЗатраты.Выгрузить(Новый Структура("РемонтыОборудования_ID",РемонтОборудования.ID)));
			Запрос.УстановитьПараметр("Ссылка", Документ);
			Запрос.УстановитьПараметр("Дата", ДатаНачала);
			Запрос.УстановитьПараметр("ТипЦены",Константы.торо_ТипЦеныДляРасчетаФактическойСебестоимостиРемонта.Получить());
			Запрос.УстановитьПараметр("Валюта",Константы.ВалютаУправленческогоУчета.Получить());
			Запрос.УстановитьПараметр("ID", РемонтОборудования.ID);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			счетчик = 1;
			Итого=0;
			Пока Выборка.Следующий() Цикл
				
				Область.Параметры.Материал   = Выборка.НоменклатураНаименованиеПолное;
				Если ИспользоватьХарактеристики Тогда  
					Область.Параметры.Характеристика = Строка(Выборка.ХарактеристикаНоменклатуры);
				КонецЕсли;
				Область.Параметры.Ед 		 = Выборка.НоменклатураЕдиницаИзмерения;
				Область.Параметры.Код 		 = Выборка.НоменклатураКод;
				Область.Параметры.Количество = Выборка.Количество;
				Если ЗначениеЗаполнено(Выборка.Цена) Тогда
					Область.Параметры.Стоимость  = Выборка.Цена*Выборка.Количество;
				Иначе
					Область.Параметры.Стоимость  = 0;		
				КонецЕсли; 
				
				Итого = Итого +  Область.Параметры.Стоимость;
				Область.Параметры.Номер      = счетчик;
				счетчик = счетчик + 1;
				ТабДок.Вывести(Область);		
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("ИтогоМатериалы");
			Область.Параметры.Итого = Итого;
			ОбщийИтог = ОбщийИтог + Итого;
			ТабДок.Вывести(Область);
			
			//СнятыеЗапчасти 
			Если ИспользоватьХарактеристики И НЕ ИспользоватьСерии Тогда  
				ОбластьШапка = Макет.ПолучитьОбласть("СнтЗапчастиФОШапка");
				Область      = Макет.ПолучитьОбласть("СнтЗапчастиФО");
				ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика";
			ИначеЕсли ИспользоватьСерии И НЕ ИспользоватьХарактеристики Тогда
				ОбластьШапка = Макет.ПолучитьОбласть("СнтЗапчастиФОШапка");
				Область      = Макет.ПолучитьОбласть("СнтЗапчастиФО");
				ОбластьШапка.Параметры.ЗаголовокКолонки = "Серия";
			ИначеЕсли ИспользоватьХарактеристики И ИспользоватьСерии Тогда
				ОбластьШапка = Макет.ПолучитьОбласть("СнтЗапчастиФОШапка");
				Область      = Макет.ПолучитьОбласть("СнтЗапчастиФО");
				ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика, серия";
			Иначе 
				ОбластьШапка = Макет.ПолучитьОбласть("СнтЗапчастиШапка");
				Область      = Макет.ПолучитьОбласть("СнтЗапчасти");
			КонецЕсли;
			ТабДок.Вывести(ОбластьШапка);
				
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Номенклатура КАК Номенклатура,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ХарактеристикаНоменклатуры КАК Характеристика,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.СерияНоменклатуры КАК Серия,
			|	СУММА(торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Количество) КАК Количество,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			|ПОМЕСТИТЬ СерийныеЗапчасти
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.СерийныеЗапчасти КАК торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти
			|ГДЕ
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Ссылка = &Ссылка
			|	И торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.РемонтыОборудования_ID = &ID
			|
			|СГРУППИРОВАТЬ ПО
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Номенклатура,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ХарактеристикаНоменклатуры,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.СерияНоменклатуры,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ЕдиницаИзмерения
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СерийныеЗапчасти.Номенклатура КАК Номенклатура,
			|	СерийныеЗапчасти.Характеристика КАК Характеристика,
			|	СерийныеЗапчасти.Серия КАК Серия,
			|	СерийныеЗапчасти.Количество * ЕСТЬNULL(СпрУпаковки.Коэффициент, 1) КАК Количество,
			|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			|ПОМЕСТИТЬ втЗапчасти
			|ИЗ
			|	СерийныеЗапчасти КАК СерийныеЗапчасти
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|		ПО СерийныеЗапчасти.Номенклатура = СпрНоменклатура.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
			|		ПО СерийныеЗапчасти.ЕдиницаИзмерения = СпрУпаковки.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ЕдиницаИзмерения,
			|	Характеристика,
			|	Номенклатура,
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
			|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
			|	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта,
			|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
			|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ ЦеныНоменклатуры
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			&Дата,
			|			ВидЦены = &ТипЦены
			|				И Валюта = &Валюта
			|				И (Номенклатура, Характеристика, ЕдиницаИзмерения) В
			|					(ВЫБРАТЬ
			|						Таб.Номенклатура,
			|						Таб.Характеристика,
			|						Таб.ЕдиницаИзмерения
			|					ИЗ
			|						втЗапчасти КАК Таб)) КАК ЦеныНоменклатурыСрезПоследних
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Характеристика,
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втЗапчасти.Номенклатура КАК Номенклатура,
			|	втЗапчасти.Характеристика КАК Характеристика,
			|	втЗапчасти.Серия КАК Серия,
			|	втЗапчасти.Количество КАК Количество,
			|	втЗапчасти.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ЕСТЬNULL(ЦеныНоменклатуры.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ВидЦены,
			|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ЦеныНоменклатуры.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
			|	втЗапчасти.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное
			|ИЗ
			|	втЗапчасти КАК втЗапчасти
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО втЗапчасти.Номенклатура = ЦеныНоменклатуры.Номенклатура
			|			И втЗапчасти.Характеристика = ЦеныНоменклатуры.Характеристика
			|			И втЗапчасти.ЕдиницаИзмерения = ЦеныНоменклатуры.ЕдиницаИзмерения";
			
			Запрос.УстановитьПараметр("Ссылка", Документ);
			Запрос.УстановитьПараметр("Дата", ДатаНачала);
			Запрос.УстановитьПараметр("ТипЦены",Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить());
			Запрос.УстановитьПараметр("Валюта",Константы.ВалютаУправленческогоУчета.Получить());
			Запрос.УстановитьПараметр("ID", РемонтОборудования.ID);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();

			Счетчик = 1;
			Итого = 0;
			Пока Выборка.Следующий() Цикл
				
				Область.Параметры.Запчасть   = Выборка.НоменклатураНаименованиеПолное;

				ЗапчастьХарактеристика = "";
				ЗапчастьСерия = "";
				Если ИспользоватьХарактеристики Тогда  
					ЗапчастьХарактеристика = Строка(Выборка.Характеристика);
				КонецЕсли;
				Если ИспользоватьСерии Тогда
					 ЗапчастьСерия = Строка(Выборка.Серия);
				КонецЕсли;
				Если ЗначениеЗаполнено(ЗапчастьХарактеристика) И ЗначениеЗаполнено(ЗапчастьСерия) Тогда
					Область.Параметры.ХарактеристикаСерия = ЗапчастьХарактеристика + ", " + ЗапчастьСерия;
				ИначеЕсли ИспользоватьХарактеристики ИЛИ ИспользоватьСерии Тогда 
					Область.Параметры.ХарактеристикаСерия = ЗапчастьХарактеристика + ЗапчастьСерия;
				КонецЕсли;
				
				Область.Параметры.Количество = Выборка.Количество;
				Если ЗначениеЗаполнено(Выборка.Цена) И Выборка.Цена <> 0 Тогда
					Область.Параметры.Стоимость  = Выборка.Цена*Выборка.Количество;
				Иначе
					Область.Параметры.Стоимость  = 0;		
				КонецЕсли; 
				
				Итого = Итого +  Область.Параметры.Стоимость;
				Область.Параметры.Номер      = Счетчик;
				Счетчик = Счетчик + 1;
				ТабДок.Вывести(Область);		
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("ИтогоСнтЗапчасти");
			Область.Параметры.Итого = Итого;
			ТабДок.Вывести(Область);
			
			//УстановленныеЗапчасти
			Если ИспользоватьХарактеристики И НЕ ИспользоватьСерии Тогда  
				ОбластьШапка = Макет.ПолучитьОбласть("УстЗапчастиФОШапка");
				Область      = Макет.ПолучитьОбласть("УстЗапчастиФО");
				ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика";
			ИначеЕсли ИспользоватьСерии И НЕ ИспользоватьХарактеристики Тогда
				ОбластьШапка = Макет.ПолучитьОбласть("УстЗапчастиФОШапка");
				Область      = Макет.ПолучитьОбласть("УстЗапчастиФО");
				ОбластьШапка.Параметры.ЗаголовокКолонки = "Серия";
			ИначеЕсли ИспользоватьХарактеристики И ИспользоватьСерии Тогда
				ОбластьШапка = Макет.ПолучитьОбласть("УстЗапчастиФОШапка");
				Область      = Макет.ПолучитьОбласть("УстЗапчастиФО");
				ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика, серия";
			Иначе 
				ОбластьШапка = Макет.ПолучитьОбласть("УстЗапчастиШапка");
				Область      = Макет.ПолучитьОбласть("УстЗапчасти");
			КонецЕсли;
			ТабДок.Вывести(ОбластьШапка);
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.НоменклатураНовая КАК Номенклатура,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ХарактеристикаНоменклатурыНовая КАК Характеристика,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.СерияНоменклатурыНовая КАК Серия,
			|	СУММА(торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.КоличествоНовое) КАК Количество,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ЕдиницаИзмеренияНовая КАК ЕдиницаИзмерения
			|ПОМЕСТИТЬ СерийныеЗапчасти
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.СерийныеЗапчасти КАК торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти
			|ГДЕ
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Ссылка = &Ссылка
			|	И торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.РемонтыОборудования_ID = &ID
			|
			|СГРУППИРОВАТЬ ПО
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.НоменклатураНовая,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ХарактеристикаНоменклатурыНовая,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.СерияНоменклатурыНовая,
			|	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ЕдиницаИзмеренияНовая
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СерийныеЗапчасти.Номенклатура КАК Номенклатура,
			|	СерийныеЗапчасти.Характеристика КАК Характеристика,
			|	СерийныеЗапчасти.Серия КАК Серия,
			|	СерийныеЗапчасти.Количество * ЕСТЬNULL(СпрУпаковки.Коэффициент, 1) КАК Количество,
			|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			|ПОМЕСТИТЬ втЗапчасти
			|ИЗ
			|	СерийныеЗапчасти КАК СерийныеЗапчасти
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|		ПО СерийныеЗапчасти.Номенклатура = СпрНоменклатура.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
			|		ПО СерийныеЗапчасти.ЕдиницаИзмерения = СпрУпаковки.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ЕдиницаИзмерения,
			|	Характеристика,
			|	Номенклатура,
			|	Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
			|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
			|	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта,
			|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
			|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ ЦеныНоменклатуры
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			&Дата,
			|			ВидЦены = &ТипЦены
			|				И Валюта = &Валюта
			|				И (Номенклатура, Характеристика, ЕдиницаИзмерения) В
			|					(ВЫБРАТЬ
			|						Таб.Номенклатура,
			|						Таб.Характеристика,
			|						Таб.ЕдиницаИзмерения
			|					ИЗ
			|						втЗапчасти КАК Таб)) КАК ЦеныНоменклатурыСрезПоследних
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Характеристика,
			|	ЕдиницаИзмерения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втЗапчасти.Номенклатура КАК Номенклатура,
			|	втЗапчасти.Характеристика КАК Характеристика,
			|	втЗапчасти.Серия КАК Серия,
			|	втЗапчасти.Количество КАК Количество,
			|	втЗапчасти.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ЕСТЬNULL(ЦеныНоменклатуры.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ВидЦены,
			|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ЦеныНоменклатуры.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
			|	втЗапчасти.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное
			|ИЗ
			|	втЗапчасти КАК втЗапчасти
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО втЗапчасти.Номенклатура = ЦеныНоменклатуры.Номенклатура
			|			И втЗапчасти.Характеристика = ЦеныНоменклатуры.Характеристика
			|			И втЗапчасти.ЕдиницаИзмерения = ЦеныНоменклатуры.ЕдиницаИзмерения";
			
			Запрос.УстановитьПараметр("Ссылка", Документ);
			Запрос.УстановитьПараметр("Дата", ДатаНачала);
			Запрос.УстановитьПараметр("ТипЦены",Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить());
			Запрос.УстановитьПараметр("Валюта",Константы.ВалютаУправленческогоУчета.Получить());
			Запрос.УстановитьПараметр("ID", РемонтОборудования.ID);

			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();

			Счетчик = 1;
			Итого = 0;
			Пока Выборка.Следующий() Цикл
				
				Область.Параметры.Запчасть   = Выборка.НоменклатураНаименованиеПолное;
				
				ЗапчастьХарактеристика = "";
				ЗапчастьСерия = "";
				Если ИспользоватьХарактеристики Тогда  
					ЗапчастьХарактеристика = Строка(Выборка.Характеристика);
				КонецЕсли;
				Если ИспользоватьСерии Тогда
					 ЗапчастьСерия = Строка(Выборка.Серия);
				КонецЕсли;
				Если ЗначениеЗаполнено(ЗапчастьХарактеристика) И ЗначениеЗаполнено(ЗапчастьСерия) Тогда
					Область.Параметры.ХарактеристикаСерия = ЗапчастьХарактеристика + ", " + ЗапчастьСерия;
				ИначеЕсли ИспользоватьХарактеристики ИЛИ ИспользоватьСерии Тогда 
					Область.Параметры.ХарактеристикаСерия = ЗапчастьХарактеристика + ЗапчастьСерия;
				КонецЕсли;
				
				Область.Параметры.Количество = Выборка.Количество;
				Если ЗначениеЗаполнено(Выборка.Цена) И Выборка.Цена <> 0 Тогда
					Область.Параметры.Стоимость  = Выборка.Цена*Выборка.Количество;
				Иначе
					Область.Параметры.Стоимость  = 0;		
				КонецЕсли; 
				
				Итого = Итого +  Область.Параметры.Стоимость;
				Область.Параметры.Номер      = Счетчик;
				Счетчик = Счетчик + 1;
				ТабДок.Вывести(Область);		
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("ИтогоУстЗапчасти");
			Область.Параметры.Итого = Итого;
			ОбщийИтог = ОбщийИтог + Итого;
			ТабДок.Вывести(Область);
			
			//Исполнители
				
			Область = Макет.ПолучитьОбласть("СобственныеШапка");
			ТабДок.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Собственные");
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Квалификация КАК Квалификация,
			|	СУММА(торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.ВремяРаботы) КАК ВремяРаботы,
			|	СУММА(торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.СуммаКНачислению) КАК СуммаКНачислению,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.ID) КАК ID,
			|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Сотрудник КАК Сотрудник
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.ТрудовыеЗатраты КАК торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты
			|ГДЕ
			|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Ссылка = &Ссылка
			|	И торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.РемонтыОборудования_ID = &ID
			|
			|СГРУППИРОВАТЬ ПО
			|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Квалификация,
			|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Сотрудник";
			
			
			Запрос.УстановитьПараметр("Ссылка", Документ);
			Запрос.УстановитьПараметр("ID", РемонтОборудования.ID);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			счетчик = 1;
			Итого = 0;
			Пока Выборка.Следующий() Цикл
				
				Область.Параметры.Квалификация = Выборка.Квалификация;
				Область.Параметры.ФИО = Выборка.Сотрудник;
				Область.Параметры.ВремяРаботы  = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(Выборка.ВремяРаботы);
				Область.Параметры.Стоимость    = Выборка.СуммаКНачислению;
				Область.Параметры.Номер        = счетчик;
				
				Итого = Итого + Область.Параметры.Стоимость;
				счетчик = счетчик + 1;
				ТабДок.Вывести(Область);		
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("ИтогоСобственные");
			Область.Параметры.Итого = Итого;
			ОбщийИтог = ОбщийИтог + Итого;
			ТабДок.Вывести(Область);
			// ИтогРаботы
				
				
			// Подрядчики
			Область = Макет.ПолучитьОбласть("ПодрядчикШапка");
			ТабДок.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Подрядчик");
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИсполнителиПоРемонтам.Исполнитель КАК Контрагент,
			|	ИсполнителиПоРемонтам.Сумма КАК Сумма
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК ИсполнителиПоРемонтам
			|ГДЕ
			|	ИсполнителиПоРемонтам.Ссылка = &Документ
			|	И ИсполнителиПоРемонтам.РемонтыОборудования_ID = &РемонтыОборудования_ID
			|	И ИсполнителиПоРемонтам.Исполнитель ССЫЛКА Справочник.Контрагенты";
			
			Запрос.УстановитьПараметр("Документ", Документ);
			Запрос.УстановитьПараметр("РемонтыОборудования_ID", РемонтОборудования.ID);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			счетчик = 1;
			Итого = 0;
			Пока Выборка.Следующий() Цикл
				
				Область.Параметры.Подрядчик   = Выборка.Контрагент;
				Область.Параметры.Стоимость  = Выборка.Сумма;
				Итого = Итого +  Область.Параметры.Стоимость;
				Область.Параметры.Номер      = счетчик;
				счетчик = счетчик + 1;
				ТабДок.Вывести(Область);
				
			КонецЦикла; 
			
			Область = Макет.ПолучитьОбласть("ИтогоПодрядчик");
			Область.Параметры.Итого = Итого;
			ОбщийИтог = ОбщийИтог + Итого;
			ТабДок.Вывести(Область);
			// ИтогРаботы
				
			
			// Подвал
			Область = Макет.ПолучитьОбласть("Подвал");
			Область.Параметры.СуммаУслуг = ОбщийИтог; 
			ФормСтрока = "Л = ru_RU; ДП = Истина";
			ПарамПред  = Справочники.Валюты.НайтиПоНаименованию(Константы.ВалютаУправленческогоУчета.Получить()).ПараметрыПрописи;
			СуммаУслуг = " " + Строка(Константы.ВалютаУправленческогоУчета.Получить())+" ("+ ЧислоПрописью(ОбщийИтог, ФормСтрока,ПарамПред)+")";
			Область.Параметры.СуммаУслугПрописью = СуммаУслуг;
			
			ТабДок.Вывести(Область);
			
			// Подписи комиссии
			Если ИспользоватьКомиссии И ЗначениеЗаполнено(ВыборкаРемонтов.ПредседательКомиссии) Тогда 
				ОбластьПодписьПредседателя = Макет.ПолучитьОбласть("ПодписьПредседателя");
				ОбластьПодписьПредседателя.Параметры.ПредседательКомиссии = ВыборкаРемонтов.ПредседательКомиссии;
				ТабДок.Вывести(ОбластьПодписьПредседателя);
			КонецЕсли;
			
			Если ИспользоватьКомиссии И ТЗЧленыКомиссии.Количество() Тогда
				ПерваяСтрока = Истина;
				ОбластьПодписьЧКСЗаголовком = Макет.ПолучитьОбласть("ПодписьЧКСЗаголовком");
				
				Для Каждого Строка Из ТЗЧленыКомиссии Цикл
					Если ПерваяСтрока Тогда
						ПерваяСтрока = Ложь;
						ОбластьПодписьЧКСЗаголовком.Параметры.ЧленКомиссии = Строка.ЧленКомиссии;
						ТабДок.Вывести(ОбластьПодписьЧКСЗаголовком);
						Продолжить;
					КонецЕсли;
					
					ОбластьПодписьЧК = Макет.ПолучитьОбласть("ПодписьЧК");
					ОбластьПодписьЧК.Параметры.ЧленКомиссии = Строка.ЧленКомиссии;
					ТабДок.Вывести(ОбластьПодписьЧК);
				КонецЦикла;
				
				Если ПерваяСтрока Тогда
					ТабДок.Вывести(ОбластьПодписьЧКСЗаголовком);
				КонецЕсли;
			КонецЕсли;
			
			// Ответственный и дата
			Область = Макет.ПолучитьОбласть("ПодписьОтветственный");
			Область.Параметры.Ответственный = Документ.Ответственный;
			Область.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
			ТабДок.Вывести(Область);	
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьАктВыполненныхРемонтныхРабот";
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьФормаКС2(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_АктОВыполненииЭтапаРабот.ПФ_MXL_ФормаКС2");
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка");
	СтрокаОтчета = Макет.ПолучитьОбласть("Строка");
	ПодвалОтчета = Макет.ПолучитьОбласть("Подвал");
	
	ПерваяСтраница = Истина;
	
	Для каждого Документ из МассивОбъектов Цикл		
		
		Если ПараметрыПечати.Свойство("Подрядчики") Тогда
			
			Если ТипЗнч(ПараметрыПечати.Подрядчики) = Тип("СписокЗначений") Тогда
				ФормироватьКС2Для = ПараметрыПечати.Подрядчики;
			Иначе
				ФормироватьКС2Для = Новый СписокЗначений;
				ФормироватьКС2Для.Добавить(ПараметрыПечати.Подрядчики);
			КонецЕсли;
			
		Иначе
			
			СписокПодрядчиков = торо_ПечатьСервер.ПолучитьСписокПодрядчиков(Документ);
			Если СписокПодрядчиков.Количество() = 0 Тогда
				ШаблонСообщения = НСтр("ru = 'В документе ""%1"" не указан ни один подрядчик. Формы КС-2 не будут созданы.'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, Документ);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			Иначе
				ФормироватьКС2Для = СписокПодрядчиков;
			КонецЕсли;
			
		КонецЕсли;
				
		// формируем список операций, выполненных подрядчиками
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ АктРемонтыОборудования
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|ГДЕ
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка
		|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&РемонтыID)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АктПодрядчики.Исполнитель КАК Контрагент,
		|	АктПодрядчики.Сумма КАК Сумма,
		|	АктПодрядчики.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктПодрядчики.УточнениеИсполнителя КАК УточнениеИсполнителя
		|ПОМЕСТИТЬ АктПодрядчики
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК АктПодрядчики
		|ГДЕ
		|	АктПодрядчики.Ссылка = &Ссылка
		|	И АктПодрядчики.РемонтыОборудования_ID В(&РемонтыID)
		|	И АктПодрядчики.Исполнитель В(&СписокКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АктВыполненныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		|	АктВыполненныеРаботы.ID КАК ID,
		|	АктВыполненныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктВыполненныеРаботы.Исполнитель КАК Контрагент,
		|	АктВыполненныеРаботы.ДоговорБригада КАК ДоговорБригада
		|ПОМЕСТИТЬ АктВыполненныеРаботы
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК АктВыполненныеРаботы
		|ГДЕ
		|	АктВыполненныеРаботы.Ссылка = &Ссылка
		|	И АктВыполненныеРаботы.РемонтыОборудования_ID В(&РемонтыID)
		|	И АктВыполненныеРаботы.Исполнитель В(&СписокКонтрагентов)
		|	И НЕ АктВыполненныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктПодрядчики.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктПодрядчики.Контрагент КАК Контрагент,
		|	СУММА(АктПодрядчики.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_СуммаПоКонтрагенту
		|ИЗ
		|	АктПодрядчики КАК АктПодрядчики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ПО АктПодрядчики.РемонтыОборудования_ID = АктРемонтыОборудования.ID
		|ГДЕ
		|	(АктПодрядчики.РемонтыОборудования_ID, АктПодрядчики.Контрагент) В
		|			(ВЫБРАТЬ
		|				АктВыполненныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|				АктВыполненныеРаботы.Контрагент КАК Контрагент
		|			ИЗ
		|				АктВыполненныеРаботы КАК АктВыполненныеРаботы)
		|
		|СГРУППИРОВАТЬ ПО
		|	АктПодрядчики.РемонтыОборудования_ID,
		|	АктПодрядчики.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктВыполненныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктВыполненныеРаботы.Контрагент КАК Контрагент,
		|	АктВыполненныеРаботы.ДоговорБригада КАК ДоговорБригада,
		|	АктПодрядчики.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТ_СуммаПоКонтрагентамИДоговорам
		|ИЗ
		|	АктВыполненныеРаботы КАК АктВыполненныеРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
		|		ПО АктВыполненныеРаботы.РемонтыОборудования_ID = АктПодрядчики.РемонтыОборудования_ID
		|			И АктВыполненныеРаботы.Контрагент = АктПодрядчики.Контрагент
		|			И (АктВыполненныеРаботы.ДоговорБригада = АктПодрядчики.УточнениеИсполнителя
		|				ИЛИ АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|					И АктПодрядчики.УточнениеИсполнителя В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ПО (АктПодрядчики.РемонтыОборудования_ID = АктРемонтыОборудования.ID)
		|
		|СГРУППИРОВАТЬ ПО
		|	АктВыполненныеРаботы.РемонтыОборудования_ID,
		|	АктВыполненныеРаботы.Контрагент,
		|	АктВыполненныеРаботы.ДоговорБригада,
		|	АктПодрядчики.Сумма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СуммаПоКонтрагентамИДоговорам.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	ВТ_СуммаПоКонтрагентамИДоговорам.Контрагент КАК Контрагент,
		|	СУММА(ВТ_СуммаПоКонтрагентамИДоговорам.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_СуммаПоРаботам
		|ИЗ
		|	ВТ_СуммаПоКонтрагентамИДоговорам КАК ВТ_СуммаПоКонтрагентамИДоговорам
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СуммаПоКонтрагентамИДоговорам.РемонтыОборудования_ID,
		|	ВТ_СуммаПоКонтрагентамИДоговорам.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктВыполненныеРаботы.Контрагент КАК Контрагент,
		|	АктВыполненныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		|	АктПодрядчики.Сумма КАК Сумма,
		|	АктРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
		|	АктРемонтыОборудования.ID КАК ID,
		|	ВТ_СуммаПоРаботам.Сумма КАК СуммаПоРаботам,
		|	ВТ_СуммаПоКонтрагенту.Сумма КАК СуммаПоКонтрагенту,
		|	АктПодрядчики.УточнениеИсполнителя КАК УточнениеИсполнителя,
		|	АктВыполненныеРаботы.Контрагент.КодПоОКПО КАК КонтрагентКодПоОКПО
		|ИЗ
		|	АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СуммаПоКонтрагенту КАК ВТ_СуммаПоКонтрагенту
		|				ПО АктПодрядчики.РемонтыОборудования_ID = ВТ_СуммаПоКонтрагенту.РемонтыОборудования_ID
		|					И АктПодрядчики.Контрагент = ВТ_СуммаПоКонтрагенту.Контрагент
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = АктПодрядчики.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = АктПодрядчики.Контрагент
		|				И (АктВыполненныеРаботы.ДоговорБригада = АктПодрядчики.УточнениеИсполнителя
		|					ИЛИ АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|						И АктПодрядчики.УточнениеИсполнителя В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СуммаПоРаботам КАК ВТ_СуммаПоРаботам
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = ВТ_СуммаПоРаботам.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = ВТ_СуммаПоРаботам.Контрагент
		|		ПО АктРемонтыОборудования.ID = АктВыполненныеРаботы.РемонтыОборудования_ID
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АктВыполненныеРаботы.Контрагент,
		|	АктВыполненныеРаботы.РемонтнаяРабота,
		|	ЕСТЬNULL(АктПодрядчики.Сумма, 0),
		|	АктРемонтыОборудования.ОбъектРемонта,
		|	АктРемонтыОборудования.ID,
		|	0,
		|	ЕСТЬNULL(ВТ_СуммаПоКонтрагенту.Сумма, 0),
		|	NULL,
		|	АктВыполненныеРаботы.Контрагент.КодПоОКПО
		|ИЗ
		|	АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаПоКонтрагенту КАК ВТ_СуммаПоКонтрагенту
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = ВТ_СуммаПоКонтрагенту.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = ВТ_СуммаПоКонтрагенту.Контрагент
		|			ЛЕВОЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = АктПодрядчики.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = АктПодрядчики.Контрагент
		|				И (АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|				И (АктПодрядчики.УточнениеИсполнителя В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|		ПО АктРемонтыОборудования.ID = АктВыполненныеРаботы.РемонтыОборудования_ID
		|ГДЕ
		|	АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|	И АктПодрядчики.УточнениеИсполнителя ЕСТЬ NULL
		|ИТОГИ
		|	СУММА(Сумма),
		|	МАКСИМУМ(ОбъектРемонта),
		|	МАКСИМУМ(СуммаПоРаботам),
		|	МАКСИМУМ(СуммаПоКонтрагенту),
		|	МАКСИМУМ(УточнениеИсполнителя)
		|ПО
		|	ID,
		|	Контрагент";
		
		Запрос.УстановитьПараметр("Ссылка", Документ);
		Если ПараметрыПечати.Свойство("МассивID") Тогда
			Запрос.УстановитьПараметр("РемонтыID", ПараметрыПечати.МассивID);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&РемонтыID)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И АктПодрядчики.РемонтыОборудования_ID В(&РемонтыID)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И АктВыполненныеРаботы.РемонтыОборудования_ID В(&РемонтыID)", "");
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокКонтрагентов", ФормироватьКС2Для);
		
		ВыборкаРемонтов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ID");
		
		Пока ВыборкаРемонтов.Следующий() Цикл
			
			ВыборкаКонтрагентов = ВыборкаРемонтов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Контрагент");
			
			Пока ВыборкаКонтрагентов.Следующий() Цикл
				
				Если НЕ ПерваяСтраница Тогда
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				Иначе
					ПерваяСтраница = Ложь;
				КонецЕсли;
				
				// формируем заголовок отчета
				ЗаголовокОтчета.Параметры.Заказчик = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Документ.Организация);
				ЗаголовокОтчета.Параметры.Подрядчик = ВыборкаКонтрагентов.Контрагент;
				ЗаголовокОтчета.Параметры.Объект = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаРемонтов.ОбъектРемонта);
				ЗаголовокОтчета.Параметры.Номер = Документ.Номер;
				ЗаголовокОтчета.Параметры.Дата = Формат(Документ.Дата, "ДФ=dd.MM.yy");
				ЗаголовокОтчета.Параметры.ИтогоПоРаботам = ВыборкаКонтрагентов.СуммаПоРаботам;
				ЗаголовокОтчета.Параметры.ВидДеятОКДП = Документ.ОКПД2;
				ЗаголовокОтчета.Параметры.ЗаказчикОКПО = Документ.Организация.КодПоОКПО; 
				ЗаголовокОтчета.Параметры.ПодрядчикОКПО = ВыборкаКонтрагентов.КонтрагентКодПоОКПО; 
				
				Если ЗначениеЗаполнено(ВыборкаКонтрагентов.УточнениеИсполнителя) Тогда
					ДоговорКонтрагента = ВыборкаКонтрагентов.УточнениеИсполнителя;	
					ЗаголовокОтчета.Параметры.НомерДоговорПодряда = ДоговорКонтрагента.Номер;
					ЗаголовокОтчета.Параметры.ДатаДоговорПодряда = Формат(ДоговорКонтрагента.Дата, "ДФ=dd");
					ЗаголовокОтчета.Параметры.МесяцДоговорПодряда = Формат(ДоговорКонтрагента.Дата, "ДФ=MM");
					ЗаголовокОтчета.Параметры.ГодДововорПодряда = Формат(ДоговорКонтрагента.Дата, "ДФ=yyyy");
				КонецЕсли; 
				
				ТабДок.Вывести(ЗаголовокОтчета);
				
				// формируем строки
				НПП = 1;
				ВыборкаОпераций = ВыборкаКонтрагентов.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока ВыборкаОпераций.Следующий() Цикл
					СтрокаОтчета.Параметры.НПП = НПП;
					СтрокаОтчета.Параметры.Стоимость = ВыборкаОпераций.Сумма;
					СтрокаОтчета.Параметры.Операция  = ВыборкаОпераций.РемонтнаяРабота;
					ТабДок.Вывести(СтрокаОтчета);
					НПП = НПП + 1;
				КонецЦикла;
				
				ПодвалОтчета.Параметры.ИтогоПоРаботам = ВыборкаКонтрагентов.СуммаПоРаботам;
				ПодвалОтчета.Параметры.ИтогоПоКонтрагенту = ВыборкаКонтрагентов.СуммаПоКонтрагенту;
				ПодвалОтчета.Параметры.НПП = ВыборкаОпераций.Количество();
				
				ТабДок.Вывести(ПодвалОтчета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;	
	ТабДок.КлючПараметровПечати = "торо_ПечатьФормаКС2";
	
	Возврат ТабДок;	
	
КонецФункции 

Функция ПечатьФормаКС3(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_АктОВыполненииЭтапаРабот.ПФ_MXL_ФормаКС3");
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	СтрокаОтчета = Макет.ПолучитьОбласть("Строка");
	ПодвалОтчета = Макет.ПолучитьОбласть("Подвал");
	
	ПерваяСтраница = Истина;
	
	Для каждого Документ из МассивОбъектов Цикл		
		
		Если ПараметрыПечати.Свойство("Подрядчики") Тогда
			
			Если ТипЗнч(ПараметрыПечати.Подрядчики) = Тип("СписокЗначений") Тогда
				ФормироватьКС3Для = ПараметрыПечати.Подрядчики;
			Иначе
				ФормироватьКС3Для = Новый СписокЗначений;
				ФормироватьКС3Для.Добавить(ПараметрыПечати.Подрядчики);
			КонецЕсли;
			
		Иначе
			
			СписокПодрядчиков = торо_ПечатьСервер.ПолучитьСписокПодрядчиков(Документ);
			Если СписокПодрядчиков.Количество() = 0 Тогда
				ШаблонСообщения = НСтр("ru = 'В документе ""%1"" не указан ни один подрядчик. Формы КС-3 не будут созданы.'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, Документ);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			Иначе
				ФормироватьКС3Для = СписокПодрядчиков;
			КонецЕсли;
			
		КонецЕсли;
		
		// формируем список операций, выполненных подрядчиками
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ АктРемонтыОборудования
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|ГДЕ
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка
		|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&РемонтыID)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АктПодрядчики.Исполнитель КАК Контрагент,
		|	АктПодрядчики.Сумма КАК Сумма,
		|	АктПодрядчики.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктПодрядчики.УточнениеИсполнителя КАК УточнениеИсполнителя
		|ПОМЕСТИТЬ АктПодрядчики
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК АктПодрядчики
		|ГДЕ
		|	АктПодрядчики.Ссылка = &Ссылка
		|	И АктПодрядчики.РемонтыОборудования_ID В(&РемонтыID)
		|	И АктПодрядчики.Исполнитель В(&СписокКонтрагентов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АктВыполненныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		|	АктВыполненныеРаботы.ID КАК ID,
		|	АктВыполненныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктВыполненныеРаботы.Исполнитель КАК Контрагент,
		|	АктВыполненныеРаботы.ДоговорБригада КАК ДоговорБригада
		|ПОМЕСТИТЬ АктВыполненныеРаботы
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК АктВыполненныеРаботы
		|ГДЕ
		|	АктВыполненныеРаботы.Ссылка = &Ссылка
		|	И АктВыполненныеРаботы.РемонтыОборудования_ID В(&РемонтыID)
		|	И АктВыполненныеРаботы.Исполнитель В(&СписокКонтрагентов)
		|	И НЕ АктВыполненныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктПодрядчики.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктПодрядчики.Контрагент КАК Контрагент,
		|	СУММА(АктПодрядчики.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_СуммаПоКонтрагенту
		|ИЗ
		|	АктПодрядчики КАК АктПодрядчики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ПО АктПодрядчики.РемонтыОборудования_ID = АктРемонтыОборудования.ID
		|ГДЕ
		|	(АктПодрядчики.РемонтыОборудования_ID, АктПодрядчики.Контрагент) В
		|			(ВЫБРАТЬ
		|				АктВыполненныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|				АктВыполненныеРаботы.Контрагент КАК Контрагент
		|			ИЗ
		|				АктВыполненныеРаботы КАК АктВыполненныеРаботы)
		|
		|СГРУППИРОВАТЬ ПО
		|	АктПодрядчики.РемонтыОборудования_ID,
		|	АктПодрядчики.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктВыполненныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	АктВыполненныеРаботы.Контрагент КАК Контрагент,
		|	АктВыполненныеРаботы.ДоговорБригада КАК ДоговорБригада,
		|	АктПодрядчики.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТ_СуммаПоКонтрагентамИДоговорам
		|ИЗ
		|	АктВыполненныеРаботы КАК АктВыполненныеРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
		|		ПО АктВыполненныеРаботы.РемонтыОборудования_ID = АктПодрядчики.РемонтыОборудования_ID
		|			И АктВыполненныеРаботы.Контрагент = АктПодрядчики.Контрагент
		|			И (АктВыполненныеРаботы.ДоговорБригада = АктПодрядчики.УточнениеИсполнителя
		|				ИЛИ АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|					И АктПодрядчики.УточнениеИсполнителя В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ПО (АктПодрядчики.РемонтыОборудования_ID = АктРемонтыОборудования.ID)
		|
		|СГРУППИРОВАТЬ ПО
		|	АктВыполненныеРаботы.РемонтыОборудования_ID,
		|	АктВыполненныеРаботы.Контрагент,
		|	АктВыполненныеРаботы.ДоговорБригада,
		|	АктПодрядчики.Сумма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СуммаПоКонтрагентамИДоговорам.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	ВТ_СуммаПоКонтрагентамИДоговорам.Контрагент КАК Контрагент,
		|	СУММА(ВТ_СуммаПоКонтрагентамИДоговорам.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_СуммаПоРаботам
		|ИЗ
		|	ВТ_СуммаПоКонтрагентамИДоговорам КАК ВТ_СуммаПоКонтрагентамИДоговорам
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СуммаПоКонтрагентамИДоговорам.РемонтыОборудования_ID,
		|	ВТ_СуммаПоКонтрагентамИДоговорам.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктВыполненныеРаботы.Контрагент КАК Контрагент,
		|	АктВыполненныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		|	АктПодрядчики.Сумма КАК Сумма,
		|	АктРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
		|	АктРемонтыОборудования.ID КАК ID,
		|	ВТ_СуммаПоРаботам.Сумма КАК СуммаПоРаботам,
		|	ВТ_СуммаПоКонтрагенту.Сумма КАК СуммаПоКонтрагенту,
		|	АктПодрядчики.УточнениеИсполнителя КАК УточнениеИсполнителя,
		|	АктПодрядчики.Контрагент.КодПоОКПО КАК КонтрагентКодПоОКПО
		|ИЗ
		|	АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СуммаПоКонтрагенту КАК ВТ_СуммаПоКонтрагенту
		|				ПО АктПодрядчики.РемонтыОборудования_ID = ВТ_СуммаПоКонтрагенту.РемонтыОборудования_ID
		|					И АктПодрядчики.Контрагент = ВТ_СуммаПоКонтрагенту.Контрагент
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = АктПодрядчики.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = АктПодрядчики.Контрагент
		|				И (АктВыполненныеРаботы.ДоговорБригада = АктПодрядчики.УточнениеИсполнителя
		|					ИЛИ АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|						И АктПодрядчики.УточнениеИсполнителя В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СуммаПоРаботам КАК ВТ_СуммаПоРаботам
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = ВТ_СуммаПоРаботам.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = ВТ_СуммаПоРаботам.Контрагент
		|		ПО АктРемонтыОборудования.ID = АктВыполненныеРаботы.РемонтыОборудования_ID
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АктВыполненныеРаботы.Контрагент,
		|	АктВыполненныеРаботы.РемонтнаяРабота,
		|	ЕСТЬNULL(АктПодрядчики.Сумма, 0),
		|	АктРемонтыОборудования.ОбъектРемонта,
		|	АктРемонтыОборудования.ID,
		|	0,
		|	ЕСТЬNULL(ВТ_СуммаПоКонтрагенту.Сумма, 0),
		|	NULL,
		|	АктПодрядчики.Контрагент.КодПоОКПО
		|ИЗ
		|	АктРемонтыОборудования КАК АктРемонтыОборудования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаПоКонтрагенту КАК ВТ_СуммаПоКонтрагенту
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = ВТ_СуммаПоКонтрагенту.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = ВТ_СуммаПоКонтрагенту.Контрагент
		|			ЛЕВОЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
		|			ПО АктВыполненныеРаботы.РемонтыОборудования_ID = АктПодрядчики.РемонтыОборудования_ID
		|				И АктВыполненныеРаботы.Контрагент = АктПодрядчики.Контрагент
		|				И (АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|				И (АктПодрядчики.УточнениеИсполнителя В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)))
		|		ПО АктРемонтыОборудования.ID = АктВыполненныеРаботы.РемонтыОборудования_ID
		|ГДЕ
		|	АктВыполненныеРаботы.ДоговорБригада В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|	И АктПодрядчики.УточнениеИсполнителя ЕСТЬ NULL
		|ИТОГИ
		|	СУММА(Сумма),
		|	МАКСИМУМ(ОбъектРемонта),
		|	МАКСИМУМ(СуммаПоРаботам),
		|	МАКСИМУМ(СуммаПоКонтрагенту),
		|	МАКСИМУМ(УточнениеИсполнителя),
		|	МАКСИМУМ(КонтрагентКодПоОКПО)
		|ПО
		|	ID,
		|	Контрагент";
		
		Запрос.УстановитьПараметр("Ссылка", Документ);
		Если ПараметрыПечати.Свойство("МассивID") Тогда
			Запрос.УстановитьПараметр("РемонтыID", ПараметрыПечати.МассивID);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&РемонтыID)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И АктПодрядчики.РемонтыОборудования_ID В(&РемонтыID)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И АктВыполненныеРаботы.РемонтыОборудования_ID В(&РемонтыID)", "");
		КонецЕсли;
		Запрос.УстановитьПараметр("СписокКонтрагентов", ФормироватьКС3Для);
		
		ВыборкаРемонтов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ID");
		
		Пока ВыборкаРемонтов.Следующий() Цикл
			
			ВыборкаКонтрагентов = ВыборкаРемонтов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Контрагент");
			
			Пока ВыборкаКонтрагентов.Следующий() Цикл
				
				Если НЕ ПерваяСтраница Тогда
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				Иначе
					ПерваяСтраница = Ложь;
				КонецЕсли;
				
				// формируем заголовок отчета
				ЗаголовокОтчета.Параметры.Заказчик = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Документ.Организация);
				ЗаголовокОтчета.Параметры.Подрядчик = ВыборкаКонтрагентов.Контрагент;
				ЗаголовокОтчета.Параметры.Объект = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаРемонтов.ОбъектРемонта);
				ЗаголовокОтчета.Параметры.Номер = Документ.Номер;
				ЗаголовокОтчета.Параметры.Дата = Формат(Документ.Дата, "ДФ=dd.MM.yy");
				ЗаголовокОтчета.Параметры.ВидДеятОКДП = Документ.ОКПД2;
				ЗаголовокОтчета.Параметры.ЗаказчикОКПО = Документ.Организация.КодПоОКПО; 
				ЗаголовокОтчета.Параметры.ПодрядчикОКПО = ВыборкаКонтрагентов.КонтрагентКодПоОКПО; 
				
				Если ЗначениеЗаполнено(ВыборкаКонтрагентов.УточнениеИсполнителя) Тогда
					ДоговорКонтрагента = ВыборкаКонтрагентов.УточнениеИсполнителя;	
					ЗаголовокОтчета.Параметры.НомерДоговорПодряда = ДоговорКонтрагента.Номер;
					ЗаголовокОтчета.Параметры.ДатаДоговорПодряда = Формат(ДоговорКонтрагента.Дата, "ДФ=dd");
					ЗаголовокОтчета.Параметры.МесяцДоговорПодряда = Формат(ДоговорКонтрагента.Дата, "ДФ=MM");
					ЗаголовокОтчета.Параметры.ГодДововорПодряда = Формат(ДоговорКонтрагента.Дата, "ДФ=yyyy");
				КонецЕсли;
				
				ТабДок.Вывести(ЗаголовокОтчета);
				
				// формируем строки
				НПП = 1;
				ВыборкаОпераций = ВыборкаКонтрагентов.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока ВыборкаОпераций.Следующий() Цикл
					СтрокаОтчета.Параметры.НПП = НПП;
					СтрокаОтчета.Параметры.Стоимость = ВыборкаОпераций.Сумма;
					СтрокаОтчета.Параметры.Операция  = ВыборкаОпераций.РемонтнаяРабота;
					ТабДок.Вывести(СтрокаОтчета);
					НПП = НПП + 1;
				КонецЦикла;
				
				ПодвалОтчета.Параметры.Итого = ВыборкаКонтрагентов.СуммаПоРаботам;
				ТабДок.Вывести(ПодвалОтчета);
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.КлючПараметровПечати = "торо_ПечатьФормаКС3";

	Возврат ТабДок;	
	
КонецФункции 

// Процедура выводит работы акта в табличный документ.
Процедура ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Комментарии,КолВо)
	Для каждого СписокРабот Из МассивСтрок Цикл
		СтрокаТаблицыРабот.Параметры.Номер = Ном;
		СтрокаТаблицыРабот.Параметры.Работа = СписокРабот.Работа;
		Если КолВо = Истина Тогда
    		СтрокаТаблицыРабот.Параметры.Количество=СписокРабот.Количество; 
			СтрокаТаблицыРабот.Параметры.ЕдИзм=СписокРабот.ЕдИзм; 
		КонецЕсли;	
		Если Комментарии = Истина Тогда
			СтрокаТаблицыРабот.Параметры.Комментарий = СписокРабот.Комментарий;
		КонецЕсли;
		ТабДок.Вывести(СтрокаТаблицыРабот);
		МассивID.Добавить(СписокРабот.ID);
		ВывестиРаботы(тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",СписокРабот.ID)),тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном + ".1",Комментарии,КолВо);
				
		КоличествоРазделителей = СтрЧислоВхождений(Ном, ".");
		ПозицияКрайнегоРазделителя = СтрНайти(Ном, ".", , , ?(КоличествоРазделителей = 0, 1, КоличествоРазделителей));
		ЦелаяЧасть = Лев(Ном, ?(ПозицияКрайнегоРазделителя = 1, СтрДлина(Ном), ПозицияКрайнегоРазделителя));
		ДробнаяЧасть = Строка(Число(Сред(Ном, ПозицияКрайнегоРазделителя + 1)) + 1);
		Ном = ЦелаяЧасть + ДробнаяЧасть;
	КонецЦикла;
КонецПроцедуры

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры

Процедура ВывестиИсполнителей(Макет, Документ, ID, ТабДок)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель КАК Исполнитель
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам
		|ГДЕ
		|	торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Ссылка = &Документ
		|	И торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.РемонтыОборудования_ID = &ID";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("ID", ID);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ИсполнительЗаполнен = Ложь;

	Пока Выборка.Следующий() Цикл
		Если Не ИсполнительЗаполнен Тогда
			Область = Макет.ПолучитьОбласть("ИсполнителиШапка");
			ИсполнительЗаполнен = Истина;
		Иначе
			Область = Макет.ПолучитьОбласть("Исполнители");
		КонецЕсли;
		Область.Параметры.Исполнитель = Выборка.Исполнитель;
		ТабДок.Вывести(Область);			
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиОснования(Макет, Документ, ТабДок)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДокументИсточник КАК ДокументОснование,
	               |	торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки
	               |ИЗ
	               |	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	               |		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	               |			И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта = торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта
	               |ГДЕ
	               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ОснованиеЗаполнено = Ложь;

	Пока Выборка.Следующий() Цикл
		
		Если Не ОснованиеЗаполнено Тогда
			Область = Макет.ПолучитьОбласть("ОснованиеШапка");
			ОснованиеЗаполнено = Истина;
		Иначе
			Область = Макет.ПолучитьОбласть("Основания");
		КонецЕсли;
		
		Если ТипЗнч(Выборка.ДокументОснование) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") 
		  ИЛИ ТипЗнч(Выборка.ДокументОснование) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
			Область.Параметры.Основание = Строка(Выборка.ДокументНачалаЦепочки) + " / " + Строка(Выборка.ДокументОснование);	
		Иначе
			Область.Параметры.Основание = Выборка.ДокументОснование;	
		КонецЕсли;	
		ТабДок.Вывести(Область);
		
	КонецЦикла;
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ 
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ДляВсехСтрок(&Ограничение_ОР)";

	ОграничениеОР = торо_УправлениеДоступом.ПолучитьОграничениеДоступаДляОбъектаРемонтаВТаблице("РемонтыОборудования.ОбъектРемонта", Истина);
	Ограничение.Текст = СтрЗаменить(Ограничение.Текст, "&Ограничение_ОР", ОграничениеОР);
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли
