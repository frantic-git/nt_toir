#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Наряд на выполнение огневых работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаВыполнениеОгневыхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Наряд-допуск на выполнение огневых работ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Наряд-допуск на производство работ на высоте
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядДопускНаПроизводствоРаботНаВысоте";
	КомандаПечати.Представление = НСтр("ru = 'Наряд-допуск на производство работ на высоте'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Наряд-допуск для работы в электроустановках
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядДопускДляРаботыВЭлектроустановках";
	КомандаПечати.Представление = НСтр("ru = 'Наряд-допуск для работы в электроустановках'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Наряд на производство работ повышенной опасности
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаПроизводствоРаботПовышеннойОпасности";
	КомандаПечати.Представление = НСтр("ru = 'Наряд-допуск на производство работ повышенной опасности'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаРаботы_НеОпасные";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на работы'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Наряд-допуск на проведение газоопасных работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядДопускНаПроведениеГазоопасныхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Наряд-допуск на проведение газоопасных работ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаРаботы_сПоказателями";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на работы (со списком показателей)'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаРаботы_ОднимДокументом";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на работы (одним документом)'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);

КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИменаОбъектовМетаданных = РегистрыСведений.торо_ВводНаОсновании.ИменаДоступныхОбъектовМетаданныхДляВводаНаОсновании(
		 Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.Имя);
		 
	Для Каждого ИмяОбъектаМетаданных Из ИменаОбъектовМетаданных Цикл
		Документы[ИмяОбъектаМетаданных].ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);		 
	КонецЦикла;		 
		
	торо_СозданиеНаОсновании.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
		
КонецПроцедуры

// Добавляет команду создания документа "Наряд на выполнение ремонтных работ".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот) Тогда
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "торо_ИспользоватьНарядыНаВыполнениеРабот";
        Возврат КомандаСоздатьНаОсновании;
	КонецЕсли; 
	
    Возврат Неопределено;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаВыполнениеОгневыхРабот") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядНаВыполнениеОгневыхРабот", 
		"Наряд на выполнение огневых работ", 
		ПечатьНарядНаВыполнениеОгневыхРабот(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаВыполнениеОгневыхРабот");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядДопускНаПроизводствоРаботНаВысоте") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядДопускНаПроизводствоРаботНаВысоте", 
		"Наряд допуск на производство работ на высоте", 
		ПечатьНарядДопускНаПроизводствоРаботНаВысоте(МассивОбъектов,ПараметрыПечати),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядДопускНаПроизводствоРаботНаВысоте");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядДопускДляРаботыВЭлектроустановках") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядДопускДляРаботыВЭлектроустановках", 
		"Наряд допуск для работы в электроустановках", 
		ПечатьНарядДопускДляРаботыВЭлектроустановках(МассивОбъектов,ПараметрыПечати),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядДопускДляРаботыВЭлектроустановках");		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаПроизводствоРаботПовышеннойОпасности") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядНаПроизводствоРаботПовышеннойОпасности", 
		"Наряд на производство работ повышенной опасности", 
		ПечатьНарядНаПроизводствоРаботПовышеннойОпасности(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаПроизводствоРаботПовышеннойОпасности");		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаРаботы_НеОпасные") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядНаРаботы_НеОпасные", 
		"Наряд на производство работ", 
		НарядНаРаботы_НеОпасные(МассивОбъектов, ПараметрыПечати, "НарядНаРаботы_НеОпасные"),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаРаботы_НеОпасные");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядДопускНаПроведениеГазоопасныхРабот") Тогда 
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"НарядДопускНаПроведениеГазоопасныхРабот",
		"Наряд допуск на проведение газоопасных работ",
		ПечатьНарядДопускНаПроведениеГазоопасныхРабот(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядДопускНаПроведениеГазоопасныхРабот");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаРаботы_сПоказателями") Тогда 
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"НарядНаРаботы_сПоказателями",
		"Наряд на производство работ (со списком показателей)",
		НарядНаРаботы_НеОпасные(МассивОбъектов, ПараметрыПечати, "НарядНаРаботы_сПоказателями"),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаРаботы_сПоказателями");
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаРаботы_ОднимДокументом") Тогда 
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"НарядНаРаботы_ОднимДокументом",
		"Наряд на производство работ (одним документом)",
		НарядНаРаботы_ОднимДокументом(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаРаботы_ОднимДокументом");
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Комментарии,КолВо)
	Для каждого СписокРабот Из МассивСтрок Цикл
		СтрокаТаблицыРабот.Параметры.Номер = Ном;
		СтрокаТаблицыРабот.Параметры.Работа = СписокРабот.Работа;
		Если КолВо = Истина Тогда
    		СтрокаТаблицыРабот.Параметры.Количество=СписокРабот.Количество; 
		КонецЕсли;	
		Если Комментарии = Истина Тогда
			СтрокаТаблицыРабот.Параметры.Комментарий = СписокРабот.Комментарий;
		КонецЕсли;
		ТабДок.Вывести(СтрокаТаблицыРабот);
		МассивID.Добавить(СписокРабот.ID);
		ВывестиРаботы(тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",СписокРабот.ID)),тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном + ".1",Комментарии,КолВо);
		Ном = Лев(Ном,СтрДлина(Ном)-1) + Строка(Число(Прав(Ном,1)) + 1);
	КонецЦикла;
КонецПроцедуры

Функция ПечатьНарядНаВыполнениеОгневыхРабот(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаВыполнениеОгневыхРабот");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Ответственный)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное КАК НаименованиеПолное,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРемонтныхРабот = РезультатЗапроса[1].Выбрать();
	ВыборкаИсполнителей = РезультатЗапроса[2].Выбрать();
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаРемонтов.Следующий() Цикл
			Если Не ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
			Шапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);
			Шапка.Параметры.ПодразделениеОрганизации = ВыборкаДокументов.Подразделение;
			ТабДок.Вывести(Шапка);
			
			ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
			РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
			
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			
			ПерваяРабота = Истина;
			Пока ВыборкаРемонтныхРабот.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаРемонтныхРабот.НаименованиеПолное = "" Тогда
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.Наименование;
				Иначе
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.НаименованиеПолное;
				КонецЕсли; 
				
				Если ПерваяРабота Тогда 
					ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ПерваяРабота = Ложь;
					ТабДок.Вывести(ПерваяРемонтнаяРабота);
				Иначе
					РемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ТабДок.Вывести(РемонтнаяРабота);
				КонецЕсли;
			КонецЦикла;
			
			ШапкаТаблицыИсполнители = Макет.ПолучитьОбласть("ШапкаТаблицыИсполнители");
			ТабДок.Вывести(ШапкаТаблицыИсполнители);       	
			
			СтрокаТаблицыИсполнители = Макет.ПолучитьОбласть("СтрокаТаблицыИсполнители");
			
			ПП = 0;
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				ПП = ПП + 1;
				СтрокаТаблицыИсполнители.Параметры.Заполнить(ВыборкаИсполнителей);
				СтрокаТаблицыИсполнители.Параметры.ПП = ПП;
				ТабДок.Вывести(СтрокаТаблицыИсполнители);
			КонецЦикла;
			
			Пункт5_10 = Макет.ПолучитьОбласть("Пункт5_10");
			ДатаНачала = ВыборкаРемонтов.ДатаНачала;
			ДатаОкончания = ВыборкаРемонтов.ДатаОкончания;
			
			Пункт5_10.Параметры.ВремяНачало	 =	Формат(ДатаНачала,"ДФ=ЧЧ:мм");
			Пункт5_10.Параметры.ДатаНачало     =  Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
			Пункт5_10.Параметры.ВремяОкончание =  Формат(ДатаОкончания ,"ДФ=ЧЧ:мм");
			Пункт5_10.Параметры.ДатаОкончание  =  Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
			
			ТабДок.Вывести(Пункт5_10);
			Пункт11_12 = Макет.ПолучитьОбласть("Пункт11_12");
			ТабДок.Вывести(Пункт11_12);
			
			ВыборкаРемонтныхРабот.Сбросить();
			ВыборкаИсполнителей.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьНарядНаВыполнениеОгневыхРабот";
	Возврат ТабДок;	
	
КонецФункции

Функция ПечатьНарядДопускНаПроизводствоРаботНаВысоте(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядДопускНаПроизводствоРаботНаВысоте");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Ответственный)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное КАК НаименованиеПолное,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).СодержаниеРабот КАК СодержаниеРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРемонтныхРабот = РезультатЗапроса[1].Выбрать();
	ВыборкаИсполнителей = РезультатЗапроса[2].Выбрать();
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаРемонтов.Следующий() Цикл
			Если Не ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			Шапка = Макет.ПолучитьОбласть("Шапка");
			
			Шапка.Параметры.Номер = ВыборкаДокументов.Номер;
			Шапка.Параметры.Дата = ВыборкаДокументов.Дата;
			Шапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);
			Шапка.Параметры.Подразделение = ВыборкаДокументов.Подразделение;
			
			СписокТО = "";
			СписокРабот = "";
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			ПерваяРабота = Истина;
			
			Пока ВыборкаРемонтныхРабот.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаРемонтныхРабот.НаименованиеПолное = "" Тогда
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.Наименование;
				Иначе
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.НаименованиеПолное;
				КонецЕсли; 
				
				СписокТО = СписокТО + НаименованиеРаботы + ", ";
				
				СодержаниеРабот = ?(ЗначениеЗаполнено(ВыборкаРемонтныхРабот.СодержаниеРабот), ВыборкаРемонтныхРабот.СодержаниеРабот + ", ", "");
				СписокРабот = СписокРабот + СодержаниеРабот;
			КонецЦикла;
			
			Шапка.Параметры.ТехОперации = Лев(СписокТО, СтрДлина(СписокТО) - 2);
			ТабДок.Вывести(Шапка);	
			
			СтрокаТаблицыИсполнители = Макет.ПолучитьОбласть("СтрокаЗаполнения");
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				СтрокаТаблицыИсполнители.Параметры.ФИО = ВыборкаИсполнителей.Сотрудник;
				ТабДок.Вывести(СтрокаТаблицыИсполнители);
			КонецЦикла;
			
			ТабЧасть0 = Макет.ПолучитьОбласть("Часть0");
			ТабЧасть0.Параметры.СодержаниеРаботТО = Лев(СписокРабот, СтрДлина(СписокРабот) - 2);
			
			ДатаНач = ВыборкаРемонтов.ДатаНачала;
			ДатаКон = ВыборкаРемонтов.ДатаОкончания;
			
			ТабЧасть0.Параметры.НачЧас		= Строка(Час(ДатаНач));
			ТабЧасть0.Параметры.НачМин		= Строка(Минута(ДатаНач));
			ТабЧасть0.Параметры.НачДень		= Строка(День(ДатаНач));
			ТабЧасть0.Параметры.НачМесяц	= торо_ПечатьСервер.НазваниеМесяцаСтрокойПадежное(Месяц(ДатаНач), "Род");
			ТабЧасть0.Параметры.НачГод		= Строка(Год(ДатаНач));
			
			ТабЧасть0.Параметры.КонЧас		= Строка(Час(ДатаКон));
			ТабЧасть0.Параметры.КонМин		= Строка(Минута(ДатаКон));
			ТабЧасть0.Параметры.КонДень		= Строка(День(ДатаКон));
			ТабЧасть0.Параметры.КонМесяц	= торо_ПечатьСервер.НазваниеМесяцаСтрокойПадежное(Месяц(ДатаКон), "Род");
			ТабЧасть0.Параметры.КонГод		= Строка(Год(ДатаКон));
			
			ТабДок.Вывести(ТабЧасть0);
			
			Для Сч = 1 По 11 Цикл
				ТабЧасть = Макет.ПолучитьОбласть("Часть" + Сч);
				ТабДок.Вывести(ТабЧасть);
			КонецЦикла;
			
			ВыборкаРемонтныхРабот.Сбросить();
			ВыборкаИсполнителей.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьНарядДопускНаПроизводствоРаботНаВысоте";
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьНарядДопускДляРаботыВЭлектроустановках(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядДопускДляРаботыВЭлектроустановках");

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Ответственный)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное КАК НаименованиеПолное,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРемонтныхРабот = РезультатЗапроса[1].Выбрать();
	ВыборкаИсполнителей = РезультатЗапроса[2].Выбрать();
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаРемонтов.Следующий() Цикл
			Если Не ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
			Шапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);
			Шапка.Параметры.ПодразделениеОрганизации = ВыборкаДокументов.Подразделение;
			Шапка.Параметры.Дата = Формат(ВыборкаДокументов.Дата,"ДФ=dd.MM.yyyy");
			Шапка.Параметры.Номер = ВыборкаДокументов.Номер;
			ТабДок.Вывести(Шапка);
			
			ТЗ = ВыборкаДокументов.Ссылка.Исполнители.Выгрузить(, "Сотрудник, Квалификация");
			ТЗ.Свернуть("Сотрудник, Квалификация");
			
			ПервыйЧленБригады = Макет.ПолучитьОбласть("ПервыйЧленБригады");
			ЧленБригады       = Макет.ПолучитьОбласть("ЧленБригады");
			
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			ЭтоПервыйСотрудник = Истина;
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				Если ЭтоПервыйСотрудник Тогда 
					ПервыйЧленБригады.Параметры.СоставБригады = ВыборкаИсполнителей.Сотрудник + " (" + ВыборкаИсполнителей.Квалификация + ")";
					ЭтоПервыйСотрудник = Ложь;
					ТабДок.Вывести(ПервыйЧленБригады);
				Иначе 
					ЧленБригады.Параметры.СоставБригады = ВыборкаИсполнителей.Сотрудник + " (" + ВыборкаИсполнителей.Квалификация + ")";
					ТабДок.Вывести(ЧленБригады);
				КонецЕсли;
			КонецЦикла;
			
			ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
			РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
			
			ПерваяРабота = Истина;
			Пока ВыборкаРемонтныхРабот.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаРемонтныхРабот.НаименованиеПолное = "" Тогда
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.Наименование;
				Иначе
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.НаименованиеПолное;
				КонецЕсли; 
				
				Если ПерваяРабота Тогда 
					ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ПерваяРабота = Ложь;
					ТабДок.Вывести(ПерваяРемонтнаяРабота);
				Иначе
					РемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ТабДок.Вывести(РемонтнаяРабота);
				КонецЕсли;
			КонецЦикла;
			
			Часть0 = Макет.ПолучитьОбласть("Часть0");
			ДатаНачала = ВыборкаРемонтов.ДатаНачала;
			ДатаОкончания = ВыборкаРемонтов.ДатаОкончания;
			Часть0.Параметры.ВремяНачало	=  Формат(ДатаНачала,"ДЛФ=T");
			Часть0.Параметры.ДатаНачало     =  Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
			Часть0.Параметры.ВремяОкончание =  Формат(ДатаОкончания ,"ДЛФ=T");
			Часть0.Параметры.ДатаОкончание  =  Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
			ТабДок.Вывести(Часть0);
			
			Часть1 = Макет.ПолучитьОбласть("Часть1");
			ТабДок.Вывести(Часть1);
			
			Часть2 = Макет.ПолучитьОбласть("Часть2");
			ТабДок.Вывести(Часть2);
			
			Часть3 = Макет.ПолучитьОбласть("Часть3");
			ТабДок.Вывести(Часть3);
			
			ВыборкаРемонтныхРабот.Сбросить();
			ВыборкаИсполнителей.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьНарядДопускДляРаботыВЭлектроустановках";
	Возврат ТабДок;
	
КонецФункции
	
Функция ПечатьНарядНаПроизводствоРаботПовышеннойОпасности(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаПроизводствоРаботПовышеннойОпасности");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Ответственный)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное КАК НаименованиеПолное,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРемонтныхРабот = РезультатЗапроса[1].Выбрать();
	ВыборкаИсполнителей = РезультатЗапроса[2].Выбрать();
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаРемонтов.Следующий() Цикл
			
			Если НЕ ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
			Шапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);
			Шапка.Параметры.ПодразделениеОрганизации = ВыборкаДокументов.Подразделение;
			
			Шапка.Параметры.Дата = Формат(ВыборкаДокументов.Дата,"ДФ=dd.MM.yyyy");
			Шапка.Параметры.Номер = ВыборкаДокументов.Номер;
			ТабДок.Вывести(Шапка);
			
			ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
			РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
			
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			
			ПерваяРабота = Истина;
			Пока ВыборкаРемонтныхРабот.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаРемонтныхРабот.НаименованиеПолное = "" Тогда
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.Наименование;
				Иначе
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.НаименованиеПолное;
				КонецЕсли; 
				
				Если ПерваяРабота Тогда 
					ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ПерваяРабота = Ложь;
					ТабДок.Вывести(ПерваяРемонтнаяРабота);
				Иначе
					РемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ТабДок.Вывести(РемонтнаяРабота);
				КонецЕсли;
			КонецЦикла;
			
			//Отбор = Новый Структура;
			//Отбор.Вставить("РемонтыОборудования_ID", ВыборкаРемонтов.ID);
			//СтрокиТекущегоОтбора = ВыборкаДокументов.Ссылка.РемонтныеРаботы.НайтиСтроки(Отбор);
			//
			//ПерваяРабота = Истина;
			//Для Каждого СтрокаОтбора Из СтрокиТекущегоОтбора Цикл
			//	Если ТипЗнч(СтрокаОтбора.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
			//		Если СтрокаОтбора.РемонтнаяРабота.НаименованиеПолное = "" Тогда
			//		    НаименованиеРаботы = СтрокаОтбора.РемонтнаяРабота.Наименование;
			//		Иначе
			//		    НаименованиеРаботы = СтрокаОтбора.РемонтнаяРабота.НаименованиеПолное;
			//		КонецЕсли;
			//		
			//		Если ПерваяРабота Тогда 
			//			ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
			//			ПерваяРабота = Ложь;
			//			ТабДок.Вывести(ПерваяРемонтнаяРабота);
			//		Иначе
			//			РемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
			//			ТабДок.Вывести(РемонтнаяРабота);
			//		КонецЕсли;
			//	КонецЕсли;
			//КонецЦикла;	
			
			Пункт3_4 = Макет.ПолучитьОбласть("Пункт3_4");
			
			ДатаНачала = ВыборкаРемонтов.ДатаНачала;
			ДатаОкончания = ВыборкаРемонтов.ДатаОкончания;
			
			Пункт3_4.Параметры.ЧасНачало	 =	Формат(ДатаНачала,"ДФ=HH");
			Пункт3_4.Параметры.МинутаНачало     =  Формат(ДатаНачала,"ДФ=мм");
			Пункт3_4.Параметры.ДатаНачало     =  Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
			
			Пункт3_4.Параметры.ЧасОкончание	 =	Формат(ДатаОкончания,"ДФ=HH");
			Пункт3_4.Параметры.МинутаОкончание     =  Формат(ДатаОкончания,"ДФ=мм");
			Пункт3_4.Параметры.ДатаОкончание    =  Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
			
			ТабДок.Вывести(Пункт3_4);
			
			
			Пункт5_6 = Макет.ПолучитьОбласть("Пункт5_6");
			
			ТабДок.Вывести(Пункт5_6);
			
			СтрокаТаблицыИсполнители = Макет.ПолучитьОбласть("СтрокаТаблицыИсполнители");
			
			ПП = 0;
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				ПП = ПП + 1;
				СтрокаТаблицыИсполнители.Параметры.Заполнить(ВыборкаИсполнителей);
				СтрокаТаблицыИсполнители.Параметры.ПП = ПП;
				ТабДок.Вывести(СтрокаТаблицыИсполнители);
			КонецЦикла;
			//ТЗ = ВыборкаДокументов.Ссылка.Исполнители.Выгрузить(, "Сотрудник,Квалификация");
			//ТЗ.Свернуть("Сотрудник,Квалификация");
			//ПП = 0;
			//
			//Для Каждого Стр Из ТЗ Цикл
			//	ПП = ПП+1;
			//	СтрокаТаблицыИсполнители.Параметры.Заполнить(Стр);
			//	СтрокаТаблицыИсполнители.Параметры.ПП = ПП;
			//	ТабДок.Вывести(СтрокаТаблицыИсполнители);
			//КонецЦикла;
			
			Пункт7_11 = Макет.ПолучитьОбласть("Пункт7_11");
			ТабДок.Вывести(Пункт7_11);
			
			ВыборкаРемонтныхРабот.Сбросить();
			ВыборкаИсполнителей.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьНарядНаПроизводствоРаботПовышеннойОпасности";
	Возврат ТабДок;
	
КонецФункции

Функция НарядНаРаботы_НеОпасные(МассивОбъектов, ПараметрыПечати, ИмяПФ = "")
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	ТабДок.ТолькоПросмотр = Истина;
	
	Если ИмяПФ = "НарядНаРаботы_сПоказателями" Тогда 
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаРаботы_сПоказателями");
	Иначе 
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаРаботы_НеОпасные");
	КонецЕсли;
	
	ИспользоватьКомиссии = Константы.торо_ИспользоватьКомиссии.Получить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Комментарий КАК Комментарий,
	|	&ПредседательКомиссии,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта.Наименование КАК Наименование,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта.АдресМестонахождения КАК АдресМестонахождения,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник КАК ДокументИсточник
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Ответственный)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное = """"
	|						ТОГДА ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование
	|					ИНАЧЕ ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное
	|				КОНЕЦ
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота)
	|	КОНЕЦ КАК РемонтнаяРаботаДляПечати,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).БазоваяЕдиницаИзмерения КАК ЕдИзм,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).СодержаниеРабот КАК СодержаниеРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Родитель_ID КАК Родитель_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ID КАК ID
	|ПОМЕСТИТЬ ВТ_Исполнители
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Исполнители.Ссылка КАК Ссылка,
	|	ВТ_Исполнители.Сотрудник КАК Сотрудник,
	|	ВТ_Исполнители.Квалификация КАК Квалификация,
	|	ВТ_Исполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ИЗ
	|	ВТ_Исполнители КАК ВТ_Исполнители
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Исполнители.Ссылка КАК Ссылка,
	|	ВТ_Исполнители.Сотрудник КАК Сотрудник,
	|	ВТ_Исполнители.Квалификация КАК Квалификация,
	|	ВТ_Исполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	ВТ_Исполнители.ID КАК ID
	|ИЗ
	|	ВТ_Исполнители КАК ВТ_Исполнители";
	
	Если ИспользоватьКомиссии Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + ";" + Символы.ПС + Символы.ПС +
							  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
							  |	торо_КомиссииСоставКомиссии.ЧленКомиссии КАК ЧленКомиссии,
							  |	торо_НарядНаВыполнениеРемонтныхРабот.Ссылка КАК Ссылка
							  |ИЗ
							  |	Справочник.торо_Комиссии.СоставКомиссии КАК торо_КомиссииСоставКомиссии
							  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот КАК торо_НарядНаВыполнениеРемонтныхРабот
							  |		ПО торо_КомиссииСоставКомиссии.Ссылка = торо_НарядНаВыполнениеРемонтныхРабот.Комиссия
							  |ГДЕ
							  |	торо_НарядНаВыполнениеРемонтныхРабот.Ссылка В(&Ссылка)";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПредседательКомиссии", "торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Комиссия.Председатель КАК ПредседательКомиссии");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПредседательКомиссии,", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РемонтныеРаботы = РезультатЗапроса[1].Выгрузить();
	РемонтныеРаботы.Индексы.Добавить("Ссылка");
	РемонтныеРаботы.Индексы.Добавить("РемонтыОборудования_ID");
	ВыборкаИсполнителей = РезультатЗапроса[3].Выбрать();
	ВыборкаИсполнителейПоРР = РезультатЗапроса[4].Выбрать();
	
	Если ИспользоватьКомиссии Тогда
	    ВыборкаКомиссий = РезультатЗапроса[5].Выбрать();
	КонецЕсли;
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока ВыборкаРемонтов.Следующий() Цикл
			Если Не ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			обШапка = Макет.ПолучитьОбласть("Шапка");
			
			обШапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);
			обШапка.Параметры.Подразделение = ВыборкаДокументов.Подразделение;
			
			обШапка.Параметры.ДатаОткрытия = Формат(ВыборкаДокументов.Дата,"ДФ=dd.MM.yyyy");
			обШапка.Параметры.Номер = ВыборкаДокументов.Номер;
			
			обШапка.Параметры.ДатаНачала = Формат(ВыборкаРемонтов.ДатаНачала,"ДФ=dd.MM.yyyy");
			обШапка.Параметры.ДатаОкончания = Формат(ВыборкаРемонтов.ДатаОкончания,"ДФ=dd.MM.yyyy");
		
			ПерваяСтрока = Истина;
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				Если перваяСтрока Тогда
					ПерваяСтрока = Ложь;
					обШапка.Параметры.СотрудникИКвалификация = Строка(ВыборкаИсполнителей.Сотрудник) + " (" + ВыборкаИсполнителей.Квалификация + ")";
					ТабДок.Вывести(обШапка);
					Продолжить;
				КонецЕсли;
				
				обСотрудник = Макет.ПолучитьОбласть("Сотрудник");
				обСотрудник.Параметры.СотрудникИКвалификация = Строка(ВыборкаИсполнителей.Сотрудник) + " (" + ВыборкаИсполнителей.Квалификация + ")";
				
				ПроверитьИВывести(ТабДок, обСотрудник);
			КонецЦикла;
			
			обСотрудник = Макет.ПолучитьОбласть("СотрудникПустаяСтрока");
			ПроверитьИВывести(ТабДок, обСотрудник);
			
			Если ПерваяСтрока Тогда
				ТабДок.Вывести(обШапка);
			КонецЕсли;
			
			ВывестиРемонты(Макет, ТабДок, РемонтныеРаботы.Скопировать(СтруктураПоиска), ВыборкаРемонтов, ВыборкаИсполнителейПоРР, ИмяПФ, ВыборкаДокументов);

			обОтветственный = Макет.ПолучитьОбласть("Ответственный");
			обОтветственный.Параметры.Сотрудник = ВыборкаДокументов.Ответственный;
			обОтветственный.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
			ПроверитьИВывести(ТабДок, обОтветственный);
			
			Если ИмяПФ = "ПФ_MXL_НарядНаРаботы_НеОпасные" Тогда  
				обВыполнено = Макет.ПолучитьОбласть("Выполнено");
				ПроверитьИВывести(ТабДок, обВыполнено);
			КонецЕсли;
			
			ПерваяСтрока = Истина;
			обИсполнительСЗаголовоком = Макет.ПолучитьОбласть("ИсполнительСЗаголовоком");
			
			ВыборкаИсполнителей.Сбросить();
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				Если ПерваяСтрока Тогда
					ПерваяСтрока = Ложь;
					обИсполнительСЗаголовоком.Параметры.Сотрудник = ВыборкаИсполнителей.Сотрудник;
					обИсполнительСЗаголовоком.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
					ПроверитьИВывести(ТабДок, обИсполнительСЗаголовоком);
					Продолжить;
				КонецЕсли;
				
				обИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
				обИсполнитель.Параметры.Сотрудник = ВыборкаИсполнителей.Сотрудник;
				обИсполнитель.Параметры.дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
				ПроверитьИВывести(ТабДок, обИсполнитель);
			КонецЦикла;
			
			Если ПерваяСтрока Тогда
				ПроверитьИВывести(ТабДок, обИсполнительСЗаголовоком);
			КонецЕсли;
			
			// Комиссия
			Если ИспользоватьКомиссии Тогда
				ОбластьПредседатель = Макет.ПолучитьОбласть("ПредседательКомиссии");
				ОбластьПредседатель.Параметры.ПредседательКомиссии = ВыборкаДокументов.ПредседательКомиссии;
				ОбластьПредседатель.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
				ПроверитьИВывести(ТабДок, ОбластьПредседатель);
				
				ПерваяСтрока = Истина;
				ОбластьЧленКомиссииСЗаголовком = Макет.ПолучитьОбласть("ЧленКомиссииСЗаголовком");
				
				СтруктураПоискаПоСсылке = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
				Пока ВыборкаКомиссий.НайтиСледующий(СтруктураПоискаПоСсылке) Цикл
				    Если ПерваяСтрока Тогда
						ПерваяСтрока = Ложь;
						ОбластьЧленКомиссииСЗаголовком.Параметры.ЧленКомиссии = ВыборкаКомиссий.ЧленКомиссии;
						ОбластьЧленКомиссииСЗаголовком.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
						ПроверитьИВывести(ТабДок, ОбластьЧленКомиссииСЗаголовком);
						Продолжить;
					КонецЕсли;
					
					ОбластьЧленКомиссии = Макет.ПолучитьОбласть("ЧленКомиссии");
					ОбластьЧленКомиссии.Параметры.ЧленКомиссии = ВыборкаКомиссий.ЧленКомиссии;
					ОбластьЧленКомиссии.Параметры.дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
					ПроверитьИВывести(ТабДок, ОбластьЧленКомиссии);
				КонецЦикла;
				
				Если ПерваяСтрока Тогда
					ПроверитьИВывести(ТабДок, ОбластьЧленКомиссииСЗаголовком);
				КонецЕсли;
				
				ВыборкаКомиссий.Сбросить();
			КонецЕсли;								
			
			ВыборкаИсполнителей.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.КлючПараметровПечати = "торо_НарядНаРаботы_НеОпасные";
	Возврат ТабДок;
	
КонецФункции

Функция НарядНаРаботы_ОднимДокументом(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	ТабДок.ТолькоПросмотр = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядНаРаботы_ОднимДокументом");
	
	ИспользоватьКомиссии = Константы.торо_ИспользоватьКомиссии.Получить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	|	&ПредседательКомиссии,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта.Наименование КАК Наименование,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта.АдресМестонахождения КАК АдресМестонахождения,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник КАК ДокументИсточник,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Ответственный)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное = """"
	|						ТОГДА ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование
	|					ИНАЧЕ ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное
	|				КОНЕЦ
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота)
	|	КОНЕЦ КАК РемонтнаяРаботаДляПечати,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Количество КАК Количество,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).БазоваяЕдиницаИзмерения КАК ЕдИзм,
	|	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).СодержаниеРабот КАК СодержаниеРабот,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID КАК ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Родитель_ID КАК Родитель_ID
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ID КАК ID
	|ПОМЕСТИТЬ ВТ_Исполнители
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	|	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Исполнители.Ссылка КАК Ссылка,
	|	ВТ_Исполнители.Сотрудник КАК Сотрудник,
	|	ВТ_Исполнители.Квалификация КАК Квалификация
	|ИЗ
	|	ВТ_Исполнители КАК ВТ_Исполнители
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Исполнители.Ссылка КАК Ссылка,
	|	ВТ_Исполнители.Сотрудник КАК Сотрудник,
	|	ВТ_Исполнители.Квалификация КАК Квалификация,
	|	ВТ_Исполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	ВТ_Исполнители.ID КАК ID
	|ИЗ
	|	ВТ_Исполнители КАК ВТ_Исполнители";
	
	Если ИспользоватьКомиссии Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + ";" + Символы.ПС + Символы.ПС +
							  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
							  |	торо_КомиссииСоставКомиссии.ЧленКомиссии КАК ЧленКомиссии,
							  |	торо_НарядНаВыполнениеРемонтныхРабот.Ссылка КАК Ссылка
							  |ИЗ
							  |	Справочник.торо_Комиссии.СоставКомиссии КАК торо_КомиссииСоставКомиссии
							  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот КАК торо_НарядНаВыполнениеРемонтныхРабот
							  |		ПО торо_КомиссииСоставКомиссии.Ссылка = торо_НарядНаВыполнениеРемонтныхРабот.Комиссия
							  |ГДЕ
							  |	торо_НарядНаВыполнениеРемонтныхРабот.Ссылка В(&Ссылка)";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПредседательКомиссии", "торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Комиссия.Председатель КАК ПредседательКомиссии");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПредседательКомиссии,", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РемонтныеРаботы = РезультатЗапроса[1].Выгрузить();
	РемонтныеРаботы.Индексы.Добавить("Ссылка");
	РемонтныеРаботы.Индексы.Добавить("РемонтыОборудования_ID");
	ВыборкаИсполнителей = РезультатЗапроса[3].Выбрать();
	ВыборкаИсполнителейПоРР = РезультатЗапроса[4].Выбрать();
	
	Если ИспользоватьКомиссии Тогда
	    ВыборкаКомиссий = РезультатЗапроса[5].Выбрать();
	КонецЕсли;
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	Пока ВыборкаДокументов.Следующий() Цикл
		обШапка = Макет.ПолучитьОбласть("Шапка");
		
		обШапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументов.Организация);
		обШапка.Параметры.Подразделение = ВыборкаДокументов.Подразделение;
		
		обШапка.Параметры.ДатаОткрытия = Формат(ВыборкаДокументов.Дата,"ДФ=dd.MM.yyyy");
		обШапка.Параметры.Номер = ВыборкаДокументов.Номер;
				
		ПерваяСтрока = Истина;
		СтруктураПоискаПоСсылке = Новый Структура("Ссылка", ВыборкаДокументов.Ссылка);
		Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоискаПоСсылке) Цикл
			Если перваяСтрока Тогда
				ПерваяСтрока = Ложь;
				обШапка.Параметры.СотрудникИКвалификация = Строка(ВыборкаИсполнителей.Сотрудник) + " (" + ВыборкаИсполнителей.Квалификация + ")";
				ТабДок.Вывести(обШапка);
				Продолжить;
			КонецЕсли;
			
			обСотрудник = Макет.ПолучитьОбласть("Сотрудник");
			обСотрудник.Параметры.СотрудникИКвалификация = Строка(ВыборкаИсполнителей.Сотрудник) + " (" + ВыборкаИсполнителей.Квалификация + ")";
			
			ПроверитьИВывести(ТабДок, обСотрудник);
		КонецЦикла;
		
		обСотрудник = Макет.ПолучитьОбласть("СотрудникПустаяСтрока");
		ПроверитьИВывести(ТабДок, обСотрудник);
			
		Если ПерваяСтрока Тогда
			ТабДок.Вывести(обШапка);
		КонецЕсли;
		
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать();
		Пока ВыборкаРемонтов.Следующий() Цикл
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			ВывестиРемонты(Макет, ТабДок, РемонтныеРаботы.Скопировать(СтруктураПоиска), ВыборкаРемонтов, ВыборкаИсполнителейПоРР, "НарядНаРаботы_ОднимДокументом", ВыборкаДокументов);
			// Пустая строка перед следующим ремонтом
			ПроверитьИВывести(ТабДок, обСотрудник);
		КонецЦикла;
		
		обОтветственный = Макет.ПолучитьОбласть("Ответственный");
		обОтветственный.Параметры.Сотрудник = ВыборкаДокументов.Ответственный;
		обОтветственный.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
		ПроверитьИВывести(ТабДок, обОтветственный);
		
		ПерваяСтрока = Истина;
		обИсполнительСЗаголовоком = Макет.ПолучитьОбласть("ИсполнительСЗаголовоком");
		
		ВыборкаИсполнителей.Сбросить();
		Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоискаПоСсылке) Цикл
			Если ПерваяСтрока Тогда
				ПерваяСтрока = Ложь;
				обИсполнительСЗаголовоком.Параметры.Сотрудник = ВыборкаИсполнителей.Сотрудник;
				обИсполнительСЗаголовоком.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
				ПроверитьИВывести(ТабДок, обИсполнительСЗаголовоком);
				Продолжить;
			КонецЕсли;
			
			обИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
			обИсполнитель.Параметры.Сотрудник = ВыборкаИсполнителей.Сотрудник;
			обИсполнитель.Параметры.дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
			ПроверитьИВывести(ТабДок, обИсполнитель);
		КонецЦикла;
		
		Если ПерваяСтрока Тогда
			ПроверитьИВывести(ТабДок, обИсполнительСЗаголовоком);
		КонецЕсли;
		
		// Комиссия
		Если ИспользоватьКомиссии Тогда
			ОбластьПредседатель = Макет.ПолучитьОбласть("ПредседательКомиссии");
			ОбластьПредседатель.Параметры.ПредседательКомиссии = ВыборкаДокументов.ПредседательКомиссии;
			ОбластьПредседатель.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
			ПроверитьИВывести(ТабДок, ОбластьПредседатель);
			
			ПерваяСтрока = Истина;
			ОбластьЧленКомиссииСЗаголовком = Макет.ПолучитьОбласть("ЧленКомиссииСЗаголовком");
			
			Пока ВыборкаКомиссий.НайтиСледующий(СтруктураПоискаПоСсылке) Цикл
			    Если ПерваяСтрока Тогда
					ПерваяСтрока = Ложь;
					ОбластьЧленКомиссииСЗаголовком.Параметры.ЧленКомиссии = ВыборкаКомиссий.ЧленКомиссии;
					ОбластьЧленКомиссииСЗаголовком.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
					ПроверитьИВывести(ТабДок, ОбластьЧленКомиссииСЗаголовком);
					Продолжить;
				КонецЕсли;
				
				ОбластьЧленКомиссии = Макет.ПолучитьОбласть("ЧленКомиссии");
				ОбластьЧленКомиссии.Параметры.ЧленКомиссии = ВыборкаКомиссий.ЧленКомиссии;
				ОбластьЧленКомиссии.Параметры.дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
				ПроверитьИВывести(ТабДок, ОбластьЧленКомиссии);
			КонецЦикла;
			
			Если ПерваяСтрока Тогда
				ПроверитьИВывести(ТабДок, ОбластьЧленКомиссииСЗаголовком);
			КонецЕсли;
			
			ВыборкаКомиссий.Сбросить();
		КонецЕсли;								
		
		ВыборкаИсполнителей.Сбросить();
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	ТабДок.КлючПараметровПечати = "торо_НарядНаРаботы_ОднимДокументом";
	Возврат ТабДок;
	
КонецФункции

Процедура ВывестиРемонты(Макет, ТабДок, тчРемРаботы, ВыборкаРемонтов, ВыборкаИсполнителейПоРР, ИмяПФ = "", ВыборкаДокументов)
	
	НайС = тчРемРаботы.НайтиСтроки(Новый Структура("Родитель_ID", ""));
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("РемонтнаяРабота");
	Дерево.Колонки.Добавить("РемонтыОборудования_ID");
	Дерево.Колонки.Добавить("ID");
	Дерево.Колонки.Добавить("Количество");
	Дерево.Колонки.Добавить("НомерОперацииПоПорядку");
	Дерево.Колонки.Добавить("Исполнитель");

	НужноПолучитьНормыЗапчастей = Истина;
	
	// Затраты из сметы
	СтруктураЗатратИзСметы = Новый Структура("РемонтныеРаботыИзСметы, СтруктураТаблиц", Новый Массив, Новый Структура);
	Если ТипЗнч(ВыборкаРемонтов.ДокументИсточник) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
	    СтруктураЗатратИзСметы = ПолучитьНормыЗатратИзСметы(тчРемРаботы, ВыборкаРемонтов, ВыборкаРемонтов.ДокументИсточник);
		НужноПолучитьНормыЗапчастей = Ложь;
	КонецЕсли;
	
	РемонтныеРаботыИзСметы = СтруктураЗатратИзСметы.РемонтныеРаботыИзСметы;
	
	Для каждого текСтрока Из НайС Цикл
		Если Не РемонтныеРаботыИзСметы.Найти(текСтрока.ID) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		нс = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(нс, текСтрока);
		СобратьДерево(нс, тчРемРаботы, РемонтныеРаботыИзСметы);
	КонецЦикла;
	
	торо_ЗаполнениеДокументов20.ПроставитьНомераОпераций(Дерево);
	
	// Затраты из нормативов
	СтруктураТаблиц = Новый Структура("МатериальныеЗатраты, ИнструментыИТехника");
	стрЗатрат = торо_Ремонты.ПолучитьНормыЗатратИзВетвиДереваОпераций(Дерево, ВыборкаРемонтов.ДатаНачала, ВыборкаРемонтов.ДатаОкончания, ВыборкаРемонтов.ДатаНачала, СтруктураТаблиц,, Истина);
	
	тчМатЗатраты = Новый ТаблицаЗначений;
	тчМатЗатраты.Колонки.Добавить("Наименование");
	тчМатЗатраты.Колонки.Добавить("Характеристика");
	тчМатЗатраты.Колонки.Добавить("ЕдИзм");
	тчМатЗатраты.Колонки.Добавить("Количество");
	
	тчИнструменты = Новый ТаблицаЗначений();
	тчИнструменты.Колонки.Добавить("Инструмент", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	тчИнструменты.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	тчИнструменты.Колонки.Добавить("Наименование");
	тчИнструменты.Колонки.Добавить("ЕдИзм");
	тчИнструменты.Колонки.Добавить("ID", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(36)));
	
	Для каждого текСтрока Из СтрЗатрат Цикл
		МатЗатраты = текСтрока.СтруктураТаблиц.МатериальныеЗатраты;
		Инструменты = текСтрока.СтруктураТаблиц.ИнструментыИТехника;
		
		Для каждого текСтрокаТЧ Из МатЗатраты Цикл
			нс = тчМатЗатраты.Добавить();
			нс.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текСтрокаТЧ.Номенклатура, "НаименованиеПолное");
			нс.Характеристика = текСтрокаТЧ.Характеристика; 
			нс.ЕдИзм = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текСтрокаТЧ.Номенклатура, "ЕдиницаИзмерения");
			нс.Количество = текСтрокаТЧ.Количество;
		КонецЦикла;
		
		Для каждого текСтрокаТЧ Из Инструменты Цикл
			нс = тчИнструменты.Добавить();
            ЗаполнитьЗначенияСвойств(нс, текСтрокаТЧ);
		КонецЦикла;
	КонецЦикла;
	
	Если СтруктураЗатратИзСметы.СтруктураТаблиц.Количество() > 0 Тогда
		МатериальныеЗатраты = СтруктураЗатратИзСметы.СтруктураТаблиц.МатериальныеЗатраты;
		Инструменты = СтруктураЗатратИзСметы.СтруктураТаблиц.ИнструментыИТехника;
		
		Для каждого СтрокаЗатрат Из МатериальныеЗатраты Цикл
			НоваяСтрокаЗатрат = тчМатЗатраты.Добавить();
			НоваяСтрокаЗатрат.Наименование = СтрокаЗатрат.Номенклатура; // Номенклатура = Номенклатура.НаименованиеПолное.
			НоваяСтрокаЗатрат.Характеристика = СтрокаЗатрат.ХарактеристикаНоменклатуры; 
			НоваяСтрокаЗатрат.ЕдИзм = СтрокаЗатрат.ЕдиницаИзмерения;
			НоваяСтрокаЗатрат.Количество = СтрокаЗатрат.Количество;
		КонецЦикла;
		
		Для каждого СтрокаИнструментов Из Инструменты Цикл
			НоваяСтрокаИнструментов = тчИнструменты.Добавить();
			НоваяСтрокаИнструментов.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаИнструментов.Инструмент, "НаименованиеПолное");
			НоваяСтрокаИнструментов.ЕдИзм = СтрокаИнструментов.ЕдиницаИзмерения;
			НоваяСтрокаИнструментов.Количество = СтрокаИнструментов.Количество;
		КонецЦикла;
	Иначе
		ПотребностьИнструментов = ПолучитьПотребностьИнструментовИзНормативов(тчРемРаботы, тчИнструменты);
		
		тчИнструменты.Очистить();
		
		Для каждого СтрокаИнструментов Из ПотребностьИнструментов Цикл
			НоваяСтрокаИнструментов = тчИнструменты.Добавить();
			НоваяСтрокаИнструментов.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаИнструментов.Инструмент, "НаименованиеПолное");
			НоваяСтрокаИнструментов.ЕдИзм = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаИнструментов.Инструмент, "ЕдиницаИзмерения");
			НоваяСтрокаИнструментов.Количество = СтрокаИнструментов.Количество;
		КонецЦикла;
	КонецЕсли;
	
	// Если наряд не на основании сметы, то запчасти нужно брать из ОР
	Если НужноПолучитьНормыЗапчастей Тогда
	    НормыЗапчастей = ПолучитьНормыЗапчастей(ВыборкаРемонтов.ОбъектРемонта, ВыборкаРемонтов.ВидРемонтныхРабот);
		Для каждого СтрокаЗапчасти Из НормыЗапчастей Цикл
		    НоваяСтрокаЗатрат = тчМатЗатраты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаЗатрат, СтрокаЗапчасти);
		КонецЦикла; 
	КонецЕсли;
	
	тчМатЗатраты.Свернуть("Наименование, Характеристика, ЕдИзм", "Количество");
	
	//Основания
	Если ИмяПФ = "НарядНаРаботы_ОднимДокументом" Тогда 
		обСроки = Макет.ПолучитьОбласть("СрокиВыполнения");
		обСроки.Параметры.ДатаНачала = Формат(ВыборкаРемонтов.ДатаНачала,"ДФ=dd.MM.yyyy");
		обСроки.Параметры.ДатаОкончания = Формат(ВыборкаРемонтов.ДатаОкончания,"ДФ=dd.MM.yyyy");
		ПроверитьИВывести(ТабДок, обСроки);
	КонецЕсли;

	ВывестиОснования(Макет, ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID, ТабДок);
	
	обОписаниеОР = Макет.ПолучитьОбласть("ОписаниеОР");
	обОписаниеОР.Параметры.ОР = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаРемонтов.ОбъектРемонта);
	обОписаниеОР.Параметры.Местонахождение = ВыборкаРемонтов.АдресМестонахождения;
	обОписаниеОР.Параметры.Описание = ВыборкаРемонтов.ВидРемонтныхРабот;
	ПроверитьИВывести(ТабДок, обОписаниеОР);
	
	//Комментарий 
	Если ЗначениеЗаполнено(ВыборкаДокументов.Комментарий) Тогда
		Область = Макет.ПолучитьОбласть("КомментарийШапка");
		Область.Параметры.Комментарий = ВыборкаДокументов.Комментарий;
		ТабДок.Вывести(Область);
	КонецЕсли;
	
	обШапкаТЧСостав = Макет.ПолучитьОбласть("ШапкаТЧСостав");
	ПроверитьИВывести(ТабДок, обШапкаТЧСостав);
	
	СтрокиВКорне = тчРемРаботы.НайтиСтроки(Новый структура("Родитель_ID", ""));
	ВывестиРекурсивно(Макет, тчРемРаботы, СтрокиВКорне, ТабДок, "СтрокаТЧСостав", "", ВыборкаИсполнителейПоРР);
	
	ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	Если ИспользоватьХарактеристики Тогда 
		обШапкаТЧМатериалы = Макет.ПолучитьОбласть("ШапкаТЧМатериалыФО");
		обСтрокаТЧМатериалы = Макет.ПолучитьОбласть("СтрокаТЧМатериалыФО");
	Иначе 
		обШапкаТЧМатериалы = Макет.ПолучитьОбласть("ШапкаТЧМатериалы");
		обСтрокаТЧМатериалы = Макет.ПолучитьОбласть("СтрокаТЧМатериалы");
	КонецЕсли;
	ПроверитьИВывести(ТабДок, обШапкаТЧМатериалы);
	
	Если тчМатЗатраты.Количество() > 0 Тогда 
		номерПП = 1;
		Для каждого текСтрока из тчМатЗатраты Цикл
			обСтрокаТЧМатериалы.Параметры.Ном = НомерПП;
			обСтрокаТЧМатериалы.Параметры.Наименование = текСтрока.Наименование;
			Если ИспользоватьХарактеристики Тогда
				обСтрокаТЧМатериалы.Параметры.Характеристика = текСтрока.Характеристика;
			КонецЕсли; 
			обСтрокаТЧМатериалы.Параметры.ЕдИзм = текСтрока.ЕдИзм;
			обСтрокаТЧМатериалы.Параметры.Количество = текСтрока.Количество;
			
			НомерПП = НомерПП + 1;
			ПроверитьИВывести(ТабДок, обСтрокаТЧМатериалы);
		КонецЦикла;
	Иначе
		обСтрокаТЧМатериалы.Параметры.Ном = "-";
		ПроверитьИВывести(ТабДок, обСтрокаТЧМатериалы);
	КонецЕсли;
	
	
	обШапкаТЧИнструменты = Макет.ПолучитьОбласть("ШапкаТЧИнструменты");
	ПроверитьИВывести(ТабДок, обШапкаТЧИнструменты);
	
	обСтрокаТЧИнструменты = Макет.ПолучитьОбласть("СтрокаТЧИнструменты");
	
	Если тчИнструменты.Количество() > 0 Тогда
		НомерПП = 1;
		Для каждого ТекСтрока Из тчИнструменты Цикл 
			обСтрокаТЧИнструменты.Параметры.Ном = НомерПП;
			обСтрокаТЧИнструменты.Параметры.Наименование = ТекСтрока.Наименование;
			обСтрокаТЧИнструменты.Параметры.ЕдИзм = ТекСтрока.ЕдИзм;
			обСтрокаТЧИнструменты.Параметры.Количество = ТекСтрока.Количество;
			
			НомерПП = НомерПП + 1;
			ПроверитьИВывести(ТабДок, обСтрокаТЧИнструменты);
		КонецЦикла;
	Иначе
		обСтрокаТЧИнструменты.Параметры.Ном = "-";
		ПроверитьИВывести(ТабДок, обСтрокаТЧИнструменты);
	КонецЕсли;
	
	КонтрПоказатели = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(ВыборкаРемонтов.ОбъектРемонта);
	Если ИмяПФ = "НарядНаРаботы_сПоказателями" И КонтрПоказатели.Количество() > 0 Тогда 
		обШапкаТЧПоказатели = Макет.ПолучитьОбласть("ШапкаТЧПоказатели");
		ПроверитьИВывести(ТабДок, обШапкаТЧПоказатели);
		
		обСтрокаТЧПоказатели = Макет.ПолучитьОбласть("СтрокаТЧПокзатели");
			
		Если КонтрПоказатели.Количество() > 0 Тогда 
			НомерПП = 1;
			Для каждого Строка Из КонтрПоказатели Цикл 
				Если НЕ Строка.Удален Тогда 
				
					обСтрокаТЧПоказатели.Параметры.Ном = НомерПП;
					обСтрокаТЧПоказатели.Параметры.Показатель = Строка.Показатель;
					
					НомерПП = НомерПП + 1;
					ПроверитьИВывести(ТабДок, обСтрокаТЧПоказатели);
				КонецЕсли;
			КонецЦикла;
		Иначе
			обСтрокаТЧПоказатели.Параметры.Ном = "-";
			ПроверитьИВывести(ТабДок, обСтрокаТЧПоказатели);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРекурсивно(Макет, ТЧ, Мас, ТабДок, ИмяОбластиВМакете, НомерРодителя, ВыборкаИсполнителейПоРР)
	
	НомерСтроки = 1;
	Для каждого текСтрока из Мас Цикл
		НомерСтрокой = НомерРодителя + Строка(НомерСтроки);
		
		обСтрокаТЧСостав = Макет.ПолучитьОбласть(ИмяОбластиВМакете);
		обСтрокаТЧСостав.Параметры.Ном = НомерСтрокой;
		обСтрокаТЧСостав.Параметры.Наименование = текСтрока.РемонтнаяРаботаДляПечати;
		обСтрокаТЧСостав.Параметры.СодержаниеРабот = текСтрока.СодержаниеРабот;
		обСтрокаТЧСостав.Параметры.Количество = текСтрока.Количество;
		обСтрокаТЧСостав.Параметры.ЕдИзм = текСтрока.ЕдИзм;
		
		СтрокаИсполнителей = "";
		СтруктураПоиска = Новый Структура("ID, РемонтыОборудования_ID", текСтрока.ID, текСтрока.РемонтыОборудования_ID);
		Пока ВыборкаИсполнителейПоРР.НайтиСледующий(СтруктураПоиска) Цикл
			СтрокаИсполнителей = СтрокаИсполнителей + Строка(ВыборкаИсполнителейПоРР.Сотрудник) + " (" + ВыборкаИсполнителейПоРР.Квалификация + "), ";
		КонецЦикла;
		
		ВыборкаИсполнителейПоРР.Сбросить();
		
		Если Не ПустаяСтрока(СтрокаИсполнителей) Тогда
		    СтрокаИсполнителей = Лев(СтрокаИсполнителей, СтрДлина(СтрокаИсполнителей) - 2);
		КонецЕсли;
		
		обСтрокаТЧСостав.Параметры.Исполнитель = СтрокаИсполнителей;
		
		ПроверитьИВывести(ТабДок, обСтрокаТЧСостав);
		
		подСтроки = тч.НайтиСтроки(Новый структура("Родитель_ID", текСтрока.ID));
		ВывестиРекурсивно(Макет, тч, подСтроки, ТабДок, ИмяОбластиВМакете, НомерСтрокой + ".", ВыборкаИсполнителейПоРР);
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьИВывести(ТабДок, ТекБлок)
	
	Если НЕ ТабДок.ПроверитьВывод(ТекБлок) Тогда
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабДок.Вывести(ТекБлок);	
	
КонецПроцедуры

Процедура СобратьДерево(Корень, Выгрузка, РемонтныеРаботыИзСметы)
	
	НайС = Выгрузка.НайтиСтроки(Новый Структура("Родитель_ID", Корень.ID));
	Для каждого текСтрока из НайС Цикл
		Если Не РемонтныеРаботыИзСметы.Найти(текСтрока.ID) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		нс = Корень.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(нс, текСтрока);
		
		СобратьДерево(нс, Выгрузка, РемонтныеРаботыИзСметы);
	КонецЦикла;
	
КонецПроцедуры	

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры

Функция ПолучитьПотребностьИнструментовИзНормативов(РемонтныеРаботы, Инструменты)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗРемонтныеРаботы.РемонтыОборудования_ID КАК IDРемонта,
	               |	"""" КАК Документ,
	               |	ТЗРемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации,
	               |	ТЗРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ТЗРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
	               |	ТЗРемонтныеРаботы.ID КАК ID
	               |ПОМЕСТИТЬ ВТ_РемонтныеРаботы
	               |ИЗ
	               |	&ТЗРемонтныеРаботы КАК ТЗРемонтныеРаботы
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗИнструментовТО.ID КАК ID,
	               |	ТЗИнструментовТО.Инструмент КАК ОбъектПотребности,
	               |	ТЗИнструментовТО.Количество КАК Количество
	               |ПОМЕСТИТЬ ВТ_ИнструментыТО
	               |ИЗ
	               |	&ТЗИнструментовТО КАК ТЗИнструментовТО
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РемонтныеРаботы.IDРемонта КАК IDРемонта,
	               |	"""" КАК Документ,
	               |	ВТ_РемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации,
	               |	ВТ_РемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_РемонтныеРаботы.Родитель_ID КАК Родитель_ID,
	               |	ВТ_РемонтныеРаботы.ID КАК ID,
	               |	ЕСТЬNULL(ВТ_ИнструментыТО.ОбъектПотребности, НЕОПРЕДЕЛЕНО) КАК ОбъектПотребности,
	               |	ЕСТЬNULL(ВТ_ИнструментыТО.Количество, 0) КАК Количество
	               |ПОМЕСТИТЬ ВТ_ИтоговыеДанные
	               |ИЗ
	               |	ВТ_РемонтныеРаботы КАК ВТ_РемонтныеРаботы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИнструментыТО КАК ВТ_ИнструментыТО
	               |		ПО ВТ_РемонтныеРаботы.ID = ВТ_ИнструментыТО.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_ИтоговыеДанные.IDРемонта КАК IDРемонта,
	               |	ВТ_ИтоговыеДанные.Документ КАК Документ,
	               |	ВТ_ИтоговыеДанные.ОбъектПотребности КАК ОбъектПотребности
	               |ИЗ
	               |	ВТ_ИтоговыеДанные КАК ВТ_ИтоговыеДанные
	               |ГДЕ
	               |	НЕ ВТ_ИтоговыеДанные.ОбъектПотребности = НЕОПРЕДЕЛЕНО
	               |ИТОГИ ПО
	               |	IDРемонта,
	               |	Документ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ИтоговыеДанные.IDРемонта КАК IDРемонта,
	               |	ВТ_ИтоговыеДанные.Документ КАК Документ,
	               |	ВТ_ИтоговыеДанные.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации,
	               |	ВТ_ИтоговыеДанные.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_ИтоговыеДанные.Родитель_ID КАК Родитель_ID,
	               |	ВТ_ИтоговыеДанные.ID КАК ID,
	               |	ВТ_ИтоговыеДанные.ОбъектПотребности КАК ОбъектПотребности,
	               |	ВТ_ИтоговыеДанные.Количество КАК Количество
	               |ИЗ
	               |	ВТ_ИтоговыеДанные КАК ВТ_ИтоговыеДанные";
	
	Запрос.УстановитьПараметр("ТЗРемонтныеРаботы", РемонтныеРаботы);
	Запрос.УстановитьПараметр("ТЗИнструментовТО", Инструменты);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПотребностей = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщая = РезультатЗапроса[4].Выбрать();
	
	ПараметрыРасчета = Новый Структура();
	ПараметрыРасчета.Вставить("ОбъектПотребности", "Инструмент");
	ПараметрыРасчета.Вставить("РСПотребности", "РегистрСведений.торо_ИтоговаяПлановаяПотребностьВИнструментах");
	ПараметрыРасчета.Вставить("РСПотребностиИмя", "торо_ИтоговаяПлановаяПотребностьВИнструментах");
	ПараметрыРасчета.Вставить("ТипОбъектаПотребности", "СправочникСсылка.Номенклатура");
	
	ПотребностьИнструментов = торо_Ремонты.ОбновитьПотребностьПоРемонтам("", ВыборкаПотребностей, ВыборкаОбщая, ПараметрыРасчета, Ложь);
	
	Возврат ПотребностьИнструментов;
	
КонецФункции

Функция ПолучитьНормыЗатратИзСметы(РемонтныеРаботы, ВыборкаРемонтов, ДокументИсточник)
	МассивНайденныхРабот = Новый Массив;
	
	СтруктураТаблиц = Новый Структура("МатериальныеЗатраты, ИнструментыИТехника");
	
	СтруктураТаблиц.ИнструментыИТехника = Новый ТаблицаЗначений;
	СтруктураТаблиц.ИнструментыИТехника.Колонки.Добавить("Инструмент");
	СтруктураТаблиц.ИнструментыИТехника.Колонки.Добавить("ЕдиницаИзмерения");
	СтруктураТаблиц.ИнструментыИТехника.Колонки.Добавить("Количество");
	
	РемонтныеРаботыЗаявки = ДокументИсточник.РемонтныеРаботы;
	Инструменты = ДокументИсточник.Инструменты;
	
	Для каждого РемонтнаяРабота Из РемонтныеРаботы Цикл
		СтруктураПоиска = Новый Структура("ID, РемонтыОборудования_ID", РемонтнаяРабота.ID, ВыборкаРемонтов.ID);
		НайденныеРаботы = РемонтныеРаботыЗаявки.НайтиСтроки(СтруктураПоиска);
		Если НайденныеРаботы.Количество() = 0 Или Не ТипЗнч(РемонтнаяРабота.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
		    Продолжить
		КонецЕсли;
		
		МассивНайденныхРабот.Добавить(РемонтнаяРабота.ID);
	КонецЦикла;
	
	ПараметрыРасчета = Новый Структура();
	ПараметрыРасчета.Вставить("ОбъектПотребности", "Инструмент");
	ПараметрыРасчета.Вставить("РСПотребности", "РегистрСведений.торо_ИтоговаяПлановаяПотребностьВИнструментах");
	ПараметрыРасчета.Вставить("РСПотребностиИмя", "торо_ИтоговаяПлановаяПотребностьВИнструментах");
	ПараметрыРасчета.Вставить("ТипОбъектаПотребности", "СправочникСсылка.Номенклатура");
	
	ПотребностьИнструментов = торо_Ремонты.РассчитатьПотребностьПоРемонтуДокумента(ВыборкаРемонтов.ID, ДокументИсточник, ПараметрыРасчета);
	
	Для каждого СтрокаТЗ Из ПотребностьИнструментов Цикл
		НоваяСтрокаТЗ = СтруктураТаблиц.ИнструментыИТехника.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЗ, СтрокаТЗ);
		
		НоваяСтрокаТЗ.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрокаТЗ.Инструмент, "ЕдиницаИзмерения");
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РемонтныеРаботы.ID КАК ID,
		|	РемонтныеРаботы.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_РемонтныеРаботы
		|ИЗ
		|	&РемонтныеРаботы КАК РемонтныеРаботы
		|ГДЕ
		|	РемонтныеРаботы.ID В(&СписокОпераций)
		|	И РемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID КАК ID,
		|	торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_РемонтныеРаботыЗаявки
		|ИЗ
		|	Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
		|ГДЕ
		|	торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка = &Регистратор
		|	И торо_ЗаявкаНаРемонтРемонтныеРаботы.ID В(&СписокОпераций)
		|	И торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID = &IDРемонта
		|	И торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура КАК Номенклатура,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Количество) КАК Количество,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ID КАК ID
		|ПОМЕСТИТЬ ВТ_МатериальныеЗатраты
		|ИЗ
		|	РегистрНакопления.торо_ПлановыеМатериальныеЗатратыРемонтныхРабот КАК торо_ПлановыеМатериальныеЗатратыРемонтныхРабот
		|ГДЕ
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Регистратор = &Регистратор
		|	И торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID = &IDРемонта
		|	И торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ID В(&СписокОпераций)
		|	И торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура.ЕдиницаИзмерения,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ID
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МатериальныеЗатраты.Номенклатура.НаименованиеПолное КАК Номенклатура,
		|	ВТ_МатериальныеЗатраты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_МатериальныеЗатраты.Количество / ВТ_РемонтныеРаботыЗаявки.Количество * ВТ_РемонтныеРаботы.Количество КАК Количество,
		|	ВТ_МатериальныеЗатраты.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	ВТ_МатериальныеЗатраты КАК ВТ_МатериальныеЗатраты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РемонтныеРаботыЗаявки КАК ВТ_РемонтныеРаботыЗаявки
		|		ПО ВТ_МатериальныеЗатраты.ID = ВТ_РемонтныеРаботыЗаявки.ID
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РемонтныеРаботы КАК ВТ_РемонтныеРаботы
		|		ПО ВТ_МатериальныеЗатраты.ID = ВТ_РемонтныеРаботы.ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПлановыеЗатратыЗапчастей.Номенклатура.НаименованиеПолное КАК Номенклатура,
		|	торо_ПлановыеЗатратыЗапчастей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(торо_ПлановыеЗатратыЗапчастей.Количество) КАК Количество,
		|	торо_ПлановыеЗатратыЗапчастей.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрНакопления.торо_ПлановыеЗатратыЗапчастей КАК торо_ПлановыеЗатратыЗапчастей
		|ГДЕ
		|	торо_ПлановыеЗатратыЗапчастей.Регистратор = &Регистратор
		|	И торо_ПлановыеЗатратыЗапчастей.РемонтыОборудования_ID = &IDРемонта
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ПлановыеЗатратыЗапчастей.Номенклатура,
		|	торо_ПлановыеЗатратыЗапчастей.ХарактеристикаНоменклатуры,
		|	торо_ПлановыеЗатратыЗапчастей.Номенклатура.ЕдиницаИзмерения,
		|	торо_ПлановыеЗатратыЗапчастей.Номенклатура.НаименованиеПолное";
	
	Запрос.УстановитьПараметр("Регистратор", ДокументИсточник);
	Запрос.УстановитьПараметр("IDРемонта", ВыборкаРемонтов.ID);
	Запрос.УстановитьПараметр("СписокОпераций", МассивНайденныхРабот);
	Запрос.УстановитьПараметр("РемонтныеРаботы", РемонтныеРаботы);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураТаблиц.МатериальныеЗатраты = РезультатЗапроса[3].Выгрузить();
	Запчасти = РезультатЗапроса[4].Выгрузить();
	
	Для каждого СтрокаЗапчасти Из Запчасти Цикл
		ЗаполнитьЗначенияСвойств(СтруктураТаблиц.МатериальныеЗатраты.Добавить(), СтрокаЗапчасти);
	КонецЦикла;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("РемонтныеРаботыИзСметы", МассивНайденныхРабот);
	СтруктураРезультата.Вставить("СтруктураТаблиц", СтруктураТаблиц);
	
	Возврат СтруктураРезультата;
КонецФункции

Функция ПолучитьНормыЗапчастей(ОбъектРемонта, ВидРемонтныхРабот)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура.НаименованиеПолное КАК Наименование,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Количество КАК Количество,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика КАК Характеристика,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм
	               |ИЗ
	               |	РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонта КАК торо_НормыЗапчастейНаОбъектыРемонта
	               |ГДЕ
	               |	торо_НормыЗапчастейНаОбъектыРемонта.ОбъектРемонта = &ОбъектРемонта
	               |	И торо_НормыЗапчастейНаОбъектыРемонта.ВидРемонта = &ВидРемонта";
	
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Запрос.УстановитьПараметр("ВидРемонта", ВидРемонтныхРабот);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПечатьНарядДопускНаПроведениеГазоопасныхРабот(МассивОбъектов, ПараметрыПечати)

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "торо_НарядНаВыполнениеРемонтныхРабот";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПФ_MXL_НарядДопускНаПроведениеГазоопасныхРабот");
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка КАК Ссылка,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Номер КАК Номер,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Дата КАК Дата,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Организация КАК Организация,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID КАК ID,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ОпаснаяРабота КАК ОпаснаяРабота,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.МестоПроведенияРабот КАК МестоПроведенияРабот
	                |ИЗ
	                |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	                |ГДЕ
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка В(&Ссылка)
	                |	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)
	                |ИТОГИ
	                |	МАКСИМУМ(Номер),
	                |	МАКСИМУМ(Дата),
	                |	МАКСИМУМ(Организация),
	                |	МАКСИМУМ(Подразделение),
	                |	МАКСИМУМ(Ответственный)
	                |ПО
	                |	Ссылка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование КАК Наименование,
	                |	ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное КАК НаименованиеПолное,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка КАК Ссылка,
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	                |ИЗ
	                |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	                |ГДЕ
	                |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка В(&Ссылка)
	                |	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	                |	И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка КАК Ссылка,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование КАК Сотрудник,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование КАК Квалификация,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	                |	МИНИМУМ(торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ДатаНачала) КАК ДатаНачала,
	                |	МАКСИМУМ(торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ДатаОкончания) КАК ДатаОкончания
	                |ИЗ
	                |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
	                |ГДЕ
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка В(&Ссылка)
	                |	И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник.Наименование,
	                |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация.Наименование";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаРемонтныхРабот = РезультатЗапроса[1].Выбрать();
	ВыборкаИсполнителей = РезультатЗапроса[2].Выбрать();
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		ВыборкаРемонтов = ВыборкаДокументов.Выбрать();
		Пока ВыборкаРемонтов.Следующий() Цикл
			Если Не ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
			Шапка.Параметры.Номер = ВыборкаДокументов.Номер;
			Шапка.Параметры.Дата = Формат(ВыборкаДокументов.Дата,"ДФ=dd.MM.yyyy");
			ТабДок.Вывести(Шапка);
			
			ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
			РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
			
			СтруктураПоиска = Новый Структура("Ссылка, РемонтыОборудования_ID", ВыборкаДокументов.Ссылка, ВыборкаРемонтов.ID);
			
			ПерваяРабота = Истина;
			Пока ВыборкаРемонтныхРабот.НайтиСледующий(СтруктураПоиска) Цикл
				Если ВыборкаРемонтныхРабот.НаименованиеПолное = "" Тогда
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.Наименование;
				Иначе
				    НаименованиеРаботы = ВыборкаРемонтныхРабот.НаименованиеПолное;
				КонецЕсли; 
				
				Если ПерваяРабота Тогда 
					ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ПерваяРабота = Ложь;
					ТабДок.Вывести(ПерваяРемонтнаяРабота);
				Иначе
					РемонтнаяРабота.Параметры.РемонтнаяРабота = НаименованиеРаботы;
					ТабДок.Вывести(РемонтнаяРабота);
				КонецЕсли;
			КонецЦикла;
			
			Пункт4_10 = Макет.ПолучитьОбласть("Пункт4_10");
			ТабДок.Вывести(Пункт4_10);
			ШапкаТаблицыИсполнители = Макет.ПолучитьОбласть("ШапкаТаблицыИсполнители");
			ТабДок.Вывести(ШапкаТаблицыИсполнители);
			
			ПП = 0;
			Пока ВыборкаИсполнителей.НайтиСледующий(СтруктураПоиска) Цикл
				ПП = ПП + 1;
				СтрокаТаблицыИсполнители = Макет.ПолучитьОбласть("СтрокаТаблицыИсполнители");
				СтрокаТаблицыИсполнители.Параметры.Заполнить(ВыборкаИсполнителей);
				СтрокаТаблицыИсполнители.Параметры.ПП = ПП;
				ТабДок.Вывести(СтрокаТаблицыИсполнители);
			КонецЦикла;
			
			Пункт12_16 = Макет.ПолучитьОбласть("Пункт12_16");
			ТабДок.Вывести(Пункт12_16);
			
			ВыборкаРемонтныхРабот.Сбросить();
			ВыборкаИсполнителей.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьНарядДопускНаПроведениеГазоопасныхРабот";
	Возврат ТабДок;
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ 
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ДляВсехСтрок(&Ограничение_ОР)";

	ОграничениеОР = торо_УправлениеДоступом.ПолучитьОграничениеДоступаДляОбъектаРемонтаВТаблице("РемонтыОборудования.ОбъектРемонта", Истина);
	Ограничение.Текст = СтрЗаменить(Ограничение.Текст, "&Ограничение_ОР", ОграничениеОР);
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

Процедура ВывестиОснования(Макет, Документ, ИДРемонта, ТабДок)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник КАК ДокументОснование
	|ИЗ
	|	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|ГДЕ
	|	торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка = &Ссылка
	|	И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID = &ID";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("ID", ИДРемонта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ОснованиеЗаполнено = Ложь;

	Пока Выборка.Следующий() Цикл
		Если Не ОснованиеЗаполнено Тогда
			Область = Макет.ПолучитьОбласть("ОснованиеШапка");
			ОснованиеЗаполнено = Истина;
		Иначе
			Область = Макет.ПолучитьОбласть("Основания");
		КонецЕсли;
		Область.Параметры.Основание = Выборка.Документоснование;
		ТабДок.Вывести(Область);			
	КонецЦикла;
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли