
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("Анализ") Тогда
		ТекстСообщения = НСтр("ru = 'Форма не предназначена для непосредственного использования.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("Анализ") Тогда
		Анализ = Параметры.Анализ;	
	КонецЕсли;	
	
	Если Параметры.Свойство("ДокументОснование") Тогда
		ДокументОснование = Параметры.ДокументОснование;	
	КонецЕсли;	
	
	ЗаполнитьРемонтыОборудования();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	ЗаполнитьРемонтыОборудования();
КонецПроцедуры

&НаКлиенте
Процедура РемонтыОборудованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Выбрать(Элементы.РемонтыОборудования);
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураОтбора = Новый Структура("Проведен", Истина); 
	ПараметрыОткрытия = Новый Структура("Отбор", СтруктураОтбора);
	ОткрытьФорму("Документ.торо_ВыявленныеДефекты.Форма.ФормаВыбора", ПараметрыОткрытия, Элемент);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Выбрать(Команда)
	ТекущиеДанные = Элементы.РемонтыОборудования.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		СтруктураВыбора = Новый Структура();
		СтруктураВыбора.Вставить("ДокументОснование", ДокументОснование);
		СтруктураВыбора.Вставить("ИДРемонта", ТекущиеДанные.ИДРемонта);
		СтруктураВыбора.Вставить("ОбъектРемонта", ТекущиеДанные.ОбъектРемонта);
		СтруктураВыбора.Вставить("КраткоеОписание", ТекущиеДанные.ДефектОписание);
		СтруктураВыбора.Вставить("Причина", ТекущиеДанные.Причина);
		СтруктураВыбора.Вставить("ДатаСобытия", ТекущиеДанные.ДатаСобытия);
		ОповеститьОВыборе(СтруктураВыбора);		
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьРемонтыОборудования()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ВыявленныеДефектыСписокДефектов.ДефектОписание КАК ДефектОписание,
		|	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ВыявленныеДефектыСписокДефектов.ID КАК ИДРемонта,
		|	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент КАК ОтказавшийЭлемент,
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка.ДатаОбнаружения КАК ДатаСобытия,
		|	торо_ВыявленныеДефектыСписокДефектов.ДефектПричина КАК Причина
		|ИЗ
		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АнализКоренныхПричин КАК торо_АнализКоренныхПричин
		|		ПО торо_ВыявленныеДефектыСписокДефектов.ID = торо_АнализКоренныхПричин.ИДРемонта
		|ГДЕ
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
		|	И (торо_АнализКоренныхПричин.Ссылка ЕСТЬ NULL
		|			ИЛИ торо_АнализКоренныхПричин.ПометкаУдаления = ИСТИНА
		|			ИЛИ торо_АнализКоренныхПричин.Ссылка = &Анализ)";
	
	Запрос.УстановитьПараметр("Анализ", Анализ);
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	РемонтыОборудования.Очистить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = РемонтыОборудования.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти






