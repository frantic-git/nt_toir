#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ЗаполнитьТаблицуПоказателей();
	СоздатьЗакладки(ТаблицаСоответствияПоказателей);
	
	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Объект, ЭтаФорма, "");
	// Заголовок формы--
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Объект, ЭтаФорма, "");
	// Заголовок формы--
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаВводаПриИзменении(Элемент)
	Для каждого СтрокаТЧ Из Объект.ЗависимыеОбъектыРемонта Цикл
		СтрокаТЧ.ДатаВвода = Объект.ДатаВвода;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыРемонта
&НаКлиенте
Процедура ОбъектыРемонтаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ID_ОбъектаРемонта = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.ОбъектРемонта) Тогда
		
		Для каждого СтраницаПанелиНаработки Из Элементы.ПанельПараметровНаработки.ПодчиненныеЭлементы Цикл
			
			ПараметрыПоиска = Новый Структура("ОбъектРемонта, ИмяСтраницы", ТекДанные.ОбъектРемонта, СтраницаПанелиНаработки.Имя);
			СтрокаПоказатель = ТаблицаСоответствияПоказателей.НайтиСтроки(ПараметрыПоиска);
			Если СтрокаПоказатель.Количество() = 0 Тогда
				
				СтраницаПанелиНаработки.Видимость = Ложь;
				
			Иначе
				
				СтраницаПанелиНаработки.Видимость = Истина;
				
				Элементы["ТабличноеПоле" + СтрокаПоказатель[0].КодПоказателя].ОтборСтрок = Новый ФиксированнаяСтруктура("ID_ВышестоящегоОбъекта, ПараметрНаработки", Элемент.ТекущиеДанные.ID_ОбъектаРемонта, СтрокаПоказатель[0].Показатель);
				
			КонецЕсли;
			
		КонецЦикла;
	ИначеЕсли Не (ТекДанные = Неопределено ИЛИ ТекДанные.ID_ОбъектаРемонта = "") Тогда
		Для каждого СтраницаПанелиНаработки Из Элементы.ПанельПараметровНаработки.ПодчиненныеЭлементы Цикл
			СтраницаПанелиНаработки.Видимость = Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПередУдалением(Элемент, Отказ)
	Если Не Отказ Тогда
		УдалитьСтраницы(Элемент.ТекущиеДанные.ОбъектРемонта, Элемент.ТекущиеДанные.ID_ОбъектаРемонта);
		
		МассивДляУдаления = ТаблицаСоответствияПоказателей.НайтиСтроки(Новый структура("ОбъектРемонта", Элемент.ТекущиеДанные.ОбъектРемонта));
		Для каждого текСтрока из МассивДляУдаления Цикл
			ТаблицаСоответствияПоказателей.Удалить(текСтрока);
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаОбъектРемонтаПриИзменении(Элемент)
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено И ЗначениеЗаполнено(ТекДанные.ОбъектРемонта) Тогда
		СтруктураВозврата = ПолучитьПоказателиОРНаСервере(ТекДанные.ОбъектРемонта);	
		
		Для каждого Элем Из СтруктураВозврата Цикл
			
			НС = ТаблицаСоответствияПоказателей.Добавить();
			
			ЗаполнитьЗначенияСвойств(НС, Элем);
			
		КонецЦикла; 
		
		СоздатьЗакладки(СтруктураВозврата);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если Не (НоваяСтрока И ОтменаРедактирования) И ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.ОбъектРемонта) Тогда
		СтруктураПоиска = Новый Структура("ОбъектРемонта", ТекДанные.ОбъектРемонта);
		Если Объект.ОбъектыРемонта.НайтиСтроки(СтруктураПоиска).Количество() > 1 Тогда
			ТекстСообщения = НСтр("ru = 'Выбранный объект ремонта уже есть в списке!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		ОбъектыРемонтаПриАктивизацииСтроки(Элемент);
	Иначе
		Для каждого СтраницаПанелиНаработки Из Элементы.ПанельПараметровНаработки.ПодчиненныеЭлементы Цикл
			СтраницаПанелиНаработки.Видимость = Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаОбъектРемонтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыВыбораОР = Новый Структура;
	ПараметрыВыбораОР.Вставить("СписокСтатусов", торо_СтатусыОРВУчете.СписокСтатусовДляПодбора(Истина));
	ТекущиеДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ОбъектРемонта) Тогда
		ПараметрыВыбораОР.Вставить("ТекущаяСтрока", ТекущиеДанные.ОбъектРемонта);
	КонецЕсли;
	ОткрытьФорму("Справочник.торо_ОбъектыРемонта.ФормаВыбора", ПараметрыВыбораОР, Элемент,,
		ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗависимыеОбъектыРемонта
&НаКлиенте
Процедура ЗависимыеОбъектыРемонтаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Элементы.ОбъектыРемонта.ТекущиеДанные = Неопределено  ИЛИ НЕ ЗначениеЗаполнено(Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта) Тогда
		ТекстСообщения = НСтр("ru = 'Для добавления зависимого объекта ремонта необходимо выбрать объект ремонта!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗависимыеОбъектыРемонтаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
		ТекДанные.ID_ВышестоящегоОбъекта = Элементы.ОбъектыРемонта.ТекущиеДанные.ID_ОбъектаРемонта;
		СтрокаПоказатель = ТаблицаСоответствияПоказателей.НайтиСтроки(Новый Структура("ИмяСтраницы", Элементы.ПанельПараметровНаработки.ТекущаяСтраница.Имя));
		Если СтрокаПоказатель.Количество() Тогда
			ТекДанные.ПараметрНаработки = СтрокаПоказатель[0].Показатель;
		КонецЕсли;
		ТекДанные.ДатаВвода = Объект.ДатаВвода;
	КонецЕсли;
	Если Не (НоваяСтрока И ОтменаРедактирования) Тогда
		СтруктураПоиска = Новый Структура("ID_ВышестоящегоОбъекта, Организация, Подразделение, Направление, ТипОбъектаРемонта, ОбъектРемонта, ПараметрНаработки",
										  ТекДанные.ID_ВышестоящегоОбъекта, ТекДанные.Организация, ТекДанные.Подразделение, ТекДанные.Направление, ТекДанные.ТипОбъектаРемонта, ТекДанные.ОбъектРемонта, ТекДанные.ПараметрНаработки);
		
		НайденныеСтроки = Объект.ЗависимыеОбъектыРемонта.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 1 Тогда
			ТекстСообщения = НСтр("ru = 'Строка с такими данными уже добавлена!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗависимыеОбъектыРемонтаОбъектРемонтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НайденныеПоказатели = ТаблицаСоответствияПоказателей.НайтиСтроки(Новый Структура("ИмяСтраницы", Элементы.ПанельПараметровНаработки.ТекущаяСтраница.Имя));
	
	Если НайденныеПоказатели.Количество() Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокОбъектов = ПолучитьСписокОбъектовРемонтаПоТекПоказателю(НайденныеПоказатели[0].Показатель);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("КлючНазначенияИспользования", "торо_НастройкаРегистрацииНаработкиЗависимыхОР");
		СтруктураПараметров.Вставить("СписокОР", СписокОбъектов);
		СтруктураПараметров.Вставить("ПараметрНаработки", НайденныеПоказатели[0].Показатель);
		
		ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
		 СтруктураПараметров.Вставить("ТекущаяСтрока", ТекущиеДанные.ОбъектРемонта);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.торо_ОбъектыРемонта.ФормаВыбора", СтруктураПараметров, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ЗаполнитьТаблицуПоказателей()
	
	МассивОР = Новый Массив;
	Для каждого СтрокаТЧ Из Объект.ОбъектыРемонта Цикл
		МассивОР.Добавить(СтрокаТЧ.ОбъектРемонта);
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель.Код КАК КодПоказателя,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта,
	|	""Страница"" + торо_ПараметрыНаработкиОбъектовРемонта.Показатель.Код КАК ИмяСтраницы
	|ИЗ
	|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта В(&ОбъектРемонта)";
	
	Запрос.УстановитьПараметр("ОбъектРемонта", МассивОР);
	
	Результат = Запрос.Выполнить();
	
	ТаблицаСоответствияПоказателей.Загрузить(Результат.Выгрузить());
			
КонецПроцедуры

&НаСервере
Процедура СоздатьЗакладки(МассивПоказателей)
	
	Для каждого Выборка Из МассивПоказателей Цикл
		
			Если Элементы.ПанельПараметровНаработки.ПодчиненныеЭлементы.Найти("Страница" + Выборка.КодПоказателя) = Неопределено Тогда
				
				ДобавляемоеТабПоле = "ТабличноеПоле" + Выборка.КодПоказателя;
				ДобавляемаяКомПанель = "КомПанель" + Выборка.КодПоказателя;
				
				ЭлемФормы = Элементы.Добавить("Страница" + Выборка.КодПоказателя,  Тип("ГруппаФормы") , Элементы.ПанельПараметровНаработки);
				ЭлемФормы.Заголовок = Строка(Выборка.Показатель);
				ЭлемФормы.Подсказка = Строка(Выборка.Показатель);
				ЭлемФормы.ТолькоПросмотр = Ложь;
				ЭлемФормы.Доступность = Истина;
				
				Элементы.ПанельПараметровНаработки.ТекущаяСтраница = Элементы.ПанельПараметровНаработки.ПодчиненныеЭлементы.Найти("Страница" + Выборка.КодПоказателя); 
				
				НовоеТабПоле = Элементы.Добавить(ДобавляемоеТабПоле, Тип("ТаблицаФормы"), ЭлемФормы);
				НовоеТабПоле.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта";
				НовоеТабПоле.ТолькоПросмотр = Ложь;
				НовоеТабПоле.Доступность = Истина;
				
				НовоеТабПоле.УстановитьДействие("ПередОкончаниемРедактирования", "ЗависимыеОбъектыРемонтаПередОкончаниемРедактирования"); 
				
				НовоеТабПоле.УстановитьДействие("ПередНачаломДобавления", "ЗависимыеОбъектыРемонтаПередНачаломДобавления"); 
				
				НовоеПолеФормы = Элементы.Добавить(Строка(НовоеТабПоле.Имя) + "Организация", Тип("ПолеФормы"), НовоеТабПоле);
				НовоеПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
				НовоеПолеФормы.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта.Организация";

				НовоеПолеФормы = Элементы.Добавить(Строка(НовоеТабПоле.Имя) + "Подразделение", Тип("ПолеФормы"), НовоеТабПоле);
				НовоеПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
				НовоеПолеФормы.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта.Подразделение";

				НовоеПолеФормы = Элементы.Добавить(Строка(НовоеТабПоле.Имя) + "Направление", Тип("ПолеФормы"), НовоеТабПоле);
				НовоеПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
				НовоеПолеФормы.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта.Направление";

				НовоеПолеФормы = Элементы.Добавить(Строка(НовоеТабПоле.Имя) + "ТипОбъектаРемонта", Тип("ПолеФормы"), НовоеТабПоле);
				НовоеПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
				НовоеПолеФормы.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта.ТипОбъектаРемонта";
				
				НовоеПолеФормы = Элементы.Добавить(Строка(НовоеТабПоле.Имя) + "ОбъектРемонта", Тип("ПолеФормы"), НовоеТабПоле);
				НовоеПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
				НовоеПолеФормы.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта.ОбъектРемонта";
				НовоеПолеФормы.УстановитьДействие("НачалоВыбора","ЗависимыеОбъектыРемонтаОбъектРемонтаНачалоВыбора");

				НовоеПолеФормы = Элементы.Добавить(Строка(НовоеТабПоле.Имя) + "КоэффициентПересчета", Тип("ПолеФормы"), НовоеТабПоле);
				НовоеПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
				НовоеПолеФормы.ПутьКДанным = "Объект.ЗависимыеОбъектыРемонта.КоэффициентПересчета";
				
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницы(ОбъектРемонта, IDОбъектаРемонта)
	ПоказателиУдаляемогоОР = ТаблицаСоответствияПоказателей.НайтиСтроки(Новый Структура("ОбъектРемонта", ОбъектРемонта));
	МассивУдаляемыхСтрок = Объект.ЗависимыеОбъектыРемонта.НайтиСтроки(Новый Структура("ID_ВышестоящегоОбъекта", IDОбъектаРемонта));
	Для Каждого СтрокаМассива Из МассивУдаляемыхСтрок Цикл
		Объект.ЗависимыеОбъектыРемонта.Удалить(СтрокаМассива);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоказателиОРНаСервере(ОбъектРемонта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель.Код КАК КодПоказателя
	|ИЗ
	|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = &ОбъектРемонта";
	
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	СтруктураВозврата = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		
		СтруктураВозврата.Добавить(Новый Структура("Показатель, КодПоказателя, ОбъектРемонта, ИмяСтраницы", Выборка.Показатель, ВЫборка.КодПоказателя, ОбъектРемонта, "Страница" + Строка(Выборка.КодПоказателя)));
		
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокОбъектовРемонтаПоТекПоказателю(Показатель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|ИЗ
	|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель = &Показатель";
	
	Запрос.УстановитьПараметр("Показатель", Показатель);
	
	Результат = Запрос.Выполнить();
	
	СписокОбъектов = Новый СписокЗначений;
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокОбъектов.Добавить(ВыборкаДетальныеЗаписи.ОбъектРемонта);
	КонецЦикла;
	
	Возврат СписокОбъектов;
	
КонецФункции // ()

#КонецОбласти

