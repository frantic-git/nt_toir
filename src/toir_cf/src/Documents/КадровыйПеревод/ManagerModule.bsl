#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект);
	
	ДанныеДляПроведения = Документы.КадровыйПеревод.ПолучитьДанныеДляПроведения(ДокументОбъект.Ссылка);
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(ДокументОбъект.Движения, ДанныеДляПроведения.СотрудникиДаты, ДокументОбъект.Ссылка);
	
	Если ДанныеДляПроведения.КадровыеДвижения.Количество() > 0 Тогда
		КадровыйУчет.СформироватьКадровыеДвижения(ДокументОбъект, ДокументОбъект.Движения, ДанныеДляПроведения.КадровыеДвижения);
	КонецЕсли;
	
	Если ДанныеДляПроведения.ГрафикРаботыСотрудников.Количество() > 0 Тогда
		КадровыйУчетРасширенный.СформироватьИсториюИзмененияГрафиков(ДокументОбъект.Движения, ДанныеДляПроведения.ГрафикРаботыСотрудников);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	ПроверкаСтрокиСписочногоДокумента = ДокументОбъект.ДополнительныеСвойства.Свойство("ПроверкаСтрокиСписочногоДокумента");
	Если ПроверкаСтрокиСписочногоДокумента Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Дата");
	КонецЕсли;
	
	ПроверяетсяКадровыйПеревод = ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.КадровыйПеревод");
	
	Если ПроверяетсяКадровыйПеревод Тогда
		ЭтоСписочныйДокумент = Ложь;
		ПроверяемыеСтруктуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументОбъект);
	Иначе
		ЭтоСписочныйДокумент = Истина;
		ПроверяемыеСтруктуры = ДокументОбъект.Сотрудники;
	КонецЕсли;
	
	СотрудникиДокумента = Новый Соответствие();
	
	Для каждого ПроверяемаяСтруктура Из ПроверяемыеСтруктуры Цикл
		
		Если ПроверяемаяСтруктура.ДатаНачала > ПроверяемаяСтруктура.ДатаОкончания
			И ЗначениеЗаполнено(ПроверяемаяСтруктура.ДатаОкончания) Тогда
			
			ТекстСообщения = НСтр("ru='Дата окончания не может быть меньше даты перевода'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект, "ДатаОкончания", ,Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПроверяемаяСтруктура.Сотрудник) Тогда 
			// Проверка дублирования строк по сотруднику списочного документа
			Если Не ПроверяетсяКадровыйПеревод Тогда
				
				НомерСтроки = СотрудникиДокумента.Получить(ПроверяемаяСтруктура.Сотрудник);
				Если НомерСтроки <> Неопределено Тогда
					
					ШаблонСообщения = НСтр("ru = 'По сотруднику %1 уже оформлен перевод в строке номер %2'");
					ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроверяемаяСтруктура.Сотрудник, НомерСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, "Объект.Сотрудники[" + (ПроверяемаяСтруктура.НомерСтроки - 1) + "].Сотрудник", , Отказ);
					
				Иначе
					СотрудникиДокумента.Вставить(ПроверяемаяСтруктура.Сотрудник, ПроверяемаяСтруктура.НомерСтроки);
				КонецЕсли;
				
			КонецЕсли;
			
			МассивРаботающихСотрудников = Документы.КадровыйПеревод.СписокПодходящихСорудников(ПроверяемаяСтруктура.ДатаНачала, ПроверяемаяСтруктура.ДатаОкончания, ДокументОбъект.Организация, "");
			Если МассивРаботающихСотрудников.Найти(ПроверяемаяСтруктура.Сотрудник) = Неопределено Тогда
				ШаблонСообщения = НСтр("ru='Сотрудник ""%1"" не работает в организации ""%2"".'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроверяемаяСтруктура.Сотрудник, ДокументОбъект.Организация);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоСписочныйДокумент Тогда
		// Не требуется заполнять график, если он не изменяется
		Если Не ПроверяемаяСтруктура.ИзменитьГрафикРаботы Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ГрафикРаботы");
		КонецЕсли;
		
		Если Не ПроверяемаяСтруктура.ИзменитьПодразделениеИДолжность Тогда
			// Не требуется заполнять подразделение и количество ставок, если оно не изменяется.
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОбособленноеПодразделение");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Подразделение");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Должность");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДолжностьПоШтатномуРасписанию");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КоличествоСтавок");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидЗанятости");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приказ о переводе
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.торо_ПечатьКадровыхПриказов";
	КомандаПечати.Идентификатор = "ПФ_MXL_Т5";
	КомандаПечати.Представление = НСтр("ru = 'Приказ о переводе'");
	КомандаПечати.ДополнительныеПараметры.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
	КомандаПечати.ПроверкаПроведенияПередПечатью = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ПечатьДокументовБезПредварительногоПросмотра",
			Ложь);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПроведения(Ссылка)Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыйПеревод.ДатаНачала КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КадровыйПеревод.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(КадровыйПеревод.ДатаОкончания, ДЕНЬ, 1)
	|		ИНАЧЕ КадровыйПеревод.ДатаОкончания
	|	КОНЕЦ КАК ДействуетДо,
	|	КадровыйПеревод.Сотрудник КАК Сотрудник,
	|	КадровыйПеревод.Организация КАК Организация,
	|	КадровыйПеревод.ИзменитьПодразделениеИДолжность КАК ИзменитьПодразделениеИДолжность,
	|	КадровыйПеревод.Подразделение КАК Подразделение,
	|	КадровыйПеревод.Должность КАК Должность,
	|	КадровыйПеревод.КоличествоСтавок КАК КоличествоСтавок,
	|	КадровыйПеревод.ИзменитьГрафикРаботы КАК ИзменитьГрафикРаботы,
	|	КадровыйПеревод.ГрафикРаботы КАК ГрафикРаботы,
	|	КадровыйПеревод.ВидЗанятости КАК ВидЗанятости,
	|	КадровыйПеревод.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перемещение) КАК ВидСобытия
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Документ.КадровыйПеревод КАК КадровыйПеревод
	|ГДЕ
	|	КадровыйПеревод.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сотрудники.ДатаСобытия КАК ДатаСобытия,
	|	ВТ_Сотрудники.ДействуетДо КАК ДействуетДо,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	|	ВТ_Сотрудники.Организация КАК Организация,
	|	ВТ_Сотрудники.Подразделение КАК Подразделение,
	|	ВТ_Сотрудники.Должность КАК Должность,
	|	ВТ_Сотрудники.КоличествоСтавок КАК КоличествоСтавок,
	|	ВТ_Сотрудники.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТ_Сотрудники.ВидЗанятости КАК ВидЗанятости,
	|	ВТ_Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_Сотрудники.ВидСобытия КАК ВидСобытия
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|ГДЕ
	|	ВТ_Сотрудники.ИзменитьПодразделениеИДолжность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сотрудники.ДатаСобытия КАК ДатаСобытия,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	|	ВТ_Сотрудники.ДействуетДо КАК ДействуетДо,
	|	ВТ_Сотрудники.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТ_Сотрудники.ВидСобытия КАК ВидСобытия
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|ГДЕ
	|	ВТ_Сотрудники.ИзменитьГрафикРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сотрудники.ДатаСобытия КАК ДатаСобытия,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(ВТ_Сотрудники.ДействуетДо, ДЕНЬ, 1),
	|	ВТ_Сотрудники.Сотрудник
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|ГДЕ
	|	ВТ_Сотрудники.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)";
	
	Если ТипЗнч(Ссылка) <> Тип("ДокументСсылка.КадровыйПеревод") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.КадровыйПеревод", "Документ.КадровыйПереводСписком.Сотрудники");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КадровыйПеревод.Организация", "КадровыйПеревод.Ссылка.Организация");
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПроведения = Новый Структура; 
	
	// Таблица для формирования кадровых движений, истории графиков, авансов.
	КадровыеДвижения = РезультатыЗапроса[1].Выгрузить();
	ДанныеДляПроведения.Вставить("КадровыеДвижения", КадровыеДвижения);
	
	// Таблица для формирования истории графиков.
	ГрафикРаботыСотрудников = РезультатыЗапроса[2].Выгрузить();
	ДанныеДляПроведения.Вставить("ГрафикРаботыСотрудников", ГрафикРаботыСотрудников);
	
	// Таблица для формирования времени регистрации документа.
	СотрудникиДаты = РезультатыЗапроса[3].Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
	Возврат ДанныеДляПроведения;

КонецФункции	

Функция ПолныеПраваНаДокумент() Экспорт 
	
	Возврат Пользователи.РолиДоступны("ДобавлениеИзменениеПроведениеПометкаУдаленияКадровыхПереводов", , Ложь);
	
КонецФункции	

Функция ДанныеДляПроверкиОграниченийНаУровнеЗаписей(Объект) Экспорт 

	ФизическоеЛицо = ?(ЗначениеЗаполнено(Объект.Сотрудник), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Сотрудник, "ФизическоеЛицо"), Справочники.ФизическиеЛица.ПустаяСсылка());
	
	ДанныеДляПроверкиОграничений = Новый Структура("Организация, МассивФизическихЛиц, Подразделение");
	
	ДанныеДляПроверкиОграничений.Организация = Объект.Организация;
	ДанныеДляПроверкиОграничений.МассивФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	ДанныеДляПроверкиОграничений.Подразделение = Объект.Подразделение;
	
	Возврат ДанныеДляПроверкиОграничений;
	
КонецФункции

Функция СписокПодходящихСорудников(ДатаНачала, ДатаОкончания, Организация, Текст) Экспорт 
	
	ПараметрыПолученияСотрудниковОрганизаций = Новый Структура(
		"КадровыеДанные, НачалоПериода, ОкончаниеПериода, Организация, ОтбиратьПоГоловнойОрганизации, Подразделение, РаботникиПоДоговорамГПХ, РаботникиПоТрудовымДоговорам, СписокФизическихЛиц",
		"", ДатаНачала, ДатаОкончания, Организация, Ложь, Неопределено, Неопределено, Истина, Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.Ссылка В(&Сотрудники)
	               |	И Сотрудники.Наименование ПОДОБНО (&Текст + ""%"")";
	
	Запрос.УстановитьПараметр("Сотрудники", КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудниковОрганизаций));
	Запрос.УстановитьПараметр("Текст", Текст);
	
	резЗапроса = Запрос.Выполнить();
	
	Если резЗапроса.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат резЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ПолучитьДатуЗавершенияТД(Сотрудник, ДатаНачала) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриемНаРаботу.Сотрудник КАК Сотрудник,
		|	ПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора
		|ПОМЕСТИТЬ ВТ_ПриемНаРаботу
		|ИЗ
		|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
		|ГДЕ
		|	ПриемНаРаботу.Сотрудник = &Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриемНаРаботуСпискомСотрудники.Сотрудник КАК Сотрудник,
		|	ПриемНаРаботуСпискомСотрудники.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора
		|ИЗ
		|	Документ.ПриемНаРаботуСписком.Сотрудники КАК ПриемНаРаботуСпискомСотрудники
		|ГДЕ
		|	ПриемНаРаботуСпискомСотрудники.Сотрудник = &Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КадровыйПеревод.Сотрудник КАК Сотрудник,
		|	КадровыйПеревод.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора,
		|	КадровыйПеревод.ДатаНачала КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_КадровыйПеревод
		|ИЗ
		|	Документ.КадровыйПеревод КАК КадровыйПеревод
		|ГДЕ
		|	КадровыйПеревод.Сотрудник = &Сотрудник
		|	И КадровыйПеревод.ДатаНачала <= &ДатаНачала
		|	И КадровыйПеревод.ИзменитьСведенияОДоговоре
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КадровыйПереводСпискомСотрудники.Сотрудник КАК Сотрудник,
		|	КадровыйПереводСпискомСотрудники.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора,
		|	КадровыйПереводСпискомСотрудники.ДатаНачала КАК ДатаНачала
		|ИЗ
		|	Документ.КадровыйПереводСписком.Сотрудники КАК КадровыйПереводСпискомСотрудники
		|ГДЕ
		|	КадровыйПереводСпискомСотрудники.Сотрудник = &Сотрудник
		|	И КадровыйПереводСпискомСотрудники.ДатаНачала <= &ДатаНачала
		|	И КадровыйПереводСпискомСотрудники.ИзменитьСведенияОДоговоре
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_КадровыйПеревод.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(ВТ_КадровыйПеревод.ДатаНачала) КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_ДействующийПеревод
		|ИЗ
		|	ВТ_КадровыйПеревод КАК ВТ_КадровыйПеревод
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_КадровыйПеревод.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_КадровыйПеревод.Сотрудник КАК Сотрудник,
		|	ВТ_КадровыйПеревод.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора
		|ПОМЕСТИТЬ ВТ_ДатаЗавершенияТДПоКП
		|ИЗ
		|	ВТ_КадровыйПеревод КАК ВТ_КадровыйПеревод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДействующийПеревод КАК ВТ_ДействующийПеревод
		|		ПО ВТ_КадровыйПеревод.Сотрудник = ВТ_ДействующийПеревод.Сотрудник
		|			И ВТ_КадровыйПеревод.ДатаНачала = ВТ_ДействующийПеревод.ДатаНачала
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ДатаЗавершенияТДПоКП.ДатаЗавершенияТрудовогоДоговора, ВТ_ПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора) КАК ДатаЗавершенияТрудовогоДоговора
		|ИЗ
		|	ВТ_ПриемНаРаботу КАК ВТ_ПриемНаРаботу
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатаЗавершенияТДПоКП КАК ВТ_ДатаЗавершенияТДПоКП
		|		ПО ВТ_ПриемНаРаботу.Сотрудник = ВТ_ДатаЗавершенияТДПоКП.Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	    Возврат Дата(1, 1, 1);
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.ДатаЗавершенияТрудовогоДоговора;
КонецФункции

#КонецОбласти

#КонецЕсли