#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриходнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Поступление товаров и услуг'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;

КонецПроцедуры

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриходнаяНакладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПриходнаяНакладная",
			НСтр("ru = 'Поступление товаров и услуг'"),
			СформироватьПечатнуюФормуПриходнойНакладной(МассивОбъектов, ОбъектыПечати),
			,
		    "Документ.ПоступлениеТоваровУслуг.ПФ_MXL_ПриходнаяНакладная");
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция СформироватьПечатнуюФормуПриходнойНакладной(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходнаяНакладная";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_ПриходнаяНакладная");
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документы", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка КАК Документ,
	               |	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	               |	ПоступлениеТоваровУслуг.Организация КАК Организация,
	               |	ПоступлениеТоваровУслуг.Склад КАК Склад,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	               |	ПоступлениеТоваровУслугТовары.Серия КАК Серия,
	               |	СУММА(ПоступлениеТоваровУслугТовары.КоличествоУпаковок) КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ПоступлениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	               |		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка.Наименование
	               |	КОНЕЦ КАК ЕдИзм,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура.Артикул КАК Артикул,
	               |	ПоступлениеТоваровУслуг.Договор КАК ДоговорКонтрагента,
	               |	ПоступлениеТоваровУслугТовары.Характеристика.Наименование КАК НаименованиеХарактеристики,
	               |	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
	               |	СУММА(ПоступлениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	               |	ПоступлениеТоваровУслуг.Валюта КАК Валюта,
	               |	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
	               |	ПоступлениеТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	               |	ПоступлениеТоваровУслуг.Дата КАК Дата
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Ссылка В(&Документы)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПоступлениеТоваровУслуг.Ссылка,
	               |	ПоступлениеТоваровУслуг.Контрагент,
	               |	ПоступлениеТоваровУслуг.Организация,
	               |	ПоступлениеТоваровУслуг.Склад,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.Характеристика,
	               |	ПоступлениеТоваровУслугТовары.Серия,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура.Артикул,
	               |	ПоступлениеТоваровУслуг.Договор,
	               |	ПоступлениеТоваровУслугТовары.Характеристика.Наименование,
	               |	ПоступлениеТоваровУслуг.Валюта,
	               |	ПоступлениеТоваровУслугТовары.Цена,
	               |	ПоступлениеТоваровУслуг.ЦенаВключаетНДС,
	               |	ПоступлениеТоваровУслуг.Дата,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура.НаименованиеПолное,
	               |	ВЫБОР
	               |		КОГДА ПоступлениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	               |		ИНАЧЕ ПоступлениеТоваровУслугТовары.Упаковка.Наименование
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Документ,
	               |	Номенклатура,
	               |	НаименованиеХарактеристики
	               |ИТОГИ
	               |	МАКСИМУМ(Контрагент),
	               |	МАКСИМУМ(Организация),
	               |	МАКСИМУМ(Склад)
	               |ПО
	               |	Документ";
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
	
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		Если НЕ ЭтоПервый Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭтоПервый = Ложь;
		
		ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьЗаголовка);
		
		ОбластьШапки = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапки.Параметры.Документ = ВыборкаДокумент.Документ;
		ОбластьШапки.Параметры.Склад = ВыборкаДокумент.Склад;
		ТабличныйДокумент.Вывести(ОбластьШапки);
		
		ОбластьПоставщика = Макет.ПолучитьОбласть("Поставщик");
		ОбластьПоставщика.Параметры.Контрагент = ВыборкаДокумент.Контрагент;
		ОбластьПоставщика.Параметры.ДоговорКонтрагента = ВыборкаДокумент.ДоговорКонтрагента;
		ТабличныйДокумент.Вывести(ОбластьПоставщика);
		
		ОбластьПокупателя = Макет.ПолучитьОбласть("Покупатель");
		ОбластьПокупателя.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокумент.Организация);
		ТабличныйДокумент.Вывести(ОбластьПокупателя);
				
		ВыборкаТоваров = ВыборкаДокумент.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
		ИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
		
		Если ИспользоватьХарактеристики И НЕ ИспользоватьСерии Тогда  
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыФО");
			ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика";
		ИначеЕсли ИспользоватьСерии И НЕ ИспользоватьХарактеристики Тогда
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыФО");
			ОбластьШапка.Параметры.ЗаголовокКолонки = "Серия";
		ИначеЕсли ИспользоватьХарактеристики И ИспользоватьСерии Тогда
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыФО");
			ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика, серия";
		Иначе 
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		КонецЕсли;
		ОбластьПодвал     = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьПодписи    = Макет.ПолучитьОбласть("Подписи");

		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		СчетчикПозиций = 0;
		СуммаИтого = 0;
		СуммаНДС = 0;
		Счетчик = 0;
		Пока ВыборкаТоваров.Следующий() Цикл
			Счетчик = Счетчик + 1;
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТоваров);
			ОбластьСтрока.Параметры.НомерСтроки = Счетчик;
			ТоварыХарактеристика = "";
			ТоварыСерия = "";
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТоваров);
			Если ИспользоватьХарактеристики Тогда  
				ТоварыХарактеристика = ?(ЗначениеЗаполнено(ВыборкаТоваров.Характеристика),ВыборкаТоваров.Характеристика, 
				?(ЗначениеЗаполнено(ВыборкаТоваров.НаименованиеХарактеристики),ВыборкаТоваров.НаименованиеХарактеристики,""));
			КонецЕсли;
			Если ИспользоватьСерии Тогда
				ТоварыСерия = ?(ЗначениеЗаполнено(ВыборкаТоваров.Серия), ВыборкаТоваров.Серия, "");
			КонецЕсли;
			Если ЗначениеЗаполнено(ТоварыХарактеристика) И ЗначениеЗаполнено(ТоварыСерия) Тогда
				ОбластьСтрока.Параметры.ХарактеристикаСерия = Строка(ТоварыХарактеристика) + ", " + Строка(ТоварыСерия);
			ИначеЕсли ИспользоватьХарактеристики ИЛИ ИспользоватьСерии Тогда 
				ОбластьСтрока.Параметры.ХарактеристикаСерия = Строка(ТоварыХарактеристика) + Строка(ТоварыСерия);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			СчетчикПозиций = СчетчикПозиций + 1;
			СуммаИтого = СуммаИтого + ВыборкаТоваров.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаТоваров.СуммаНДС;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);		
		
		ОбластьПодписи.Параметры.Итого = СчетчикПозиций;
		Если ВыборкаДокумент.ЦенаВключаетНДС Тогда
			ОбщаяСумма = СуммаИтого;
		Иначе
			ОбщаяСумма = СуммаИтого + СуммаНДС;
		КонецЕсли;
		ОбластьПодписи.Параметры.ОбщаяСумма = ОбщаяСумма;
		ОбластьПодписи.Параметры.Валюта = ВыборкаДокумент.Валюта;		
		
		ОбластьПодписи.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ОбщаяСумма, ВыборкаДокумент.Валюта);
		
		ОбластьПодписи.Параметры.СуммаИтого = СуммаИтого;
		ОбластьПодписи.Параметры.СуммаНДС = СуммаНДС;

		ТабличныйДокумент.Вывести(ОбластьПодписи);		
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	// ТОиР
	ТабличныйДокумент.КлючПараметровПечати = "торо_ПечатьПриходнойНакладной";
	// ТОиР		
	
	Возврат ТабличныйДокумент;

КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли
