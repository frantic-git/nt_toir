#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ПроверитьЦельностьНаработкиПриОтменеПроведения(Отказ);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ШаблонСообщенияИерархия = НСтр("ru = 'В строке №%1 табличной части ""Наработка оборудования"" не заполнено поле ""Структура иерархии"".'");
	Для Каждого Строка Из НаработкаОбъектов Цикл
		Если ЗначениеЗаполнено(Строка.ДатаИВремяОперации) И Строка.ДатаПоследнейНаработки > Строка.ДатаИВремяОперации Тогда
			ШаблонСообщения = НСтр("ru = 'Строка %1: Значение ""Дата и время операции"" должно быть больше чем ""Дата последней наработки""'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		Если Строка.РаспространятьНаПодчиненных И НЕ ЗначениеЗаполнено(Строка.СтруктураИерархии) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщенияИерархия, Строка.НомерСтроки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьЦельностьНаработкиПриПроведении(Отказ);
	
	Если Не Отказ Тогда
		
		Для Каждого Строка Из НаработкаОбъектов Цикл
			
			Если Строка.ДатаИВремяОперации <> Строка.ДатаПоследнейНаработки Тогда
				ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
				ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
				ДвижениеПриход.Период = Строка.ДатаИВремяОперации;
				ДвижениеПриход.ОбъектРемонта = Строка.ОбъектРемонта;
				ДвижениеПриход.Показатель = Строка.Показатель;
				ДвижениеПриход.Наработка = Строка.Наработка;
				ДвижениеПриход.ДатаКон = Строка.ДатаИВремяОперации;
				ДвижениеПриход.ДатаНач = Строка.ДатаПоследнейНаработки;
				
				Движение = Движения.торо_ПериодыНаработкиОР.Добавить();
				Движение.Период = Строка.ДатаИВремяОперации;
				Движение.ОбъектРемонта = Строка.ОбъектРемонта;
				Движение.Показатель = Строка.Показатель;
			КонецЕсли;
			
			Если Строка.Наработка = 0 И Строка.НаработкаДоОперации - Строка.НаработкаПослеОперации = 0 Тогда
				// Синхронизация дат с подчиненными.
				Продолжить;
			КонецЕсли;
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеПриход.Период = Строка.ДатаИВремяОперации;
			ДвижениеПриход.ОбъектРемонта = Строка.ОбъектРемонта;
			ДвижениеПриход.Показатель = Строка.Показатель;
			ДвижениеПриход.Наработка = Строка.НаработкаДоОперации - Строка.НаработкаПослеОперации;
			ДвижениеПриход.ДатаКон = Строка.ДатаИВремяОперации;
			ДвижениеПриход.ДатаНач = Строка.ДатаИВремяОперации;			
			
		КонецЦикла;
		
		Для Каждого Строка Из НаработкаПодчиненныхОбъектов Цикл
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			ДвижениеПриход.Период = Строка.ДатаИВремяОперации;
			ДвижениеПриход.ОбъектРемонта = Строка.ОбъектРемонта;
			ДвижениеПриход.Показатель = Строка.Показатель;
			ДвижениеПриход.Наработка = Строка.Наработка;
			ДвижениеПриход.ДатаКон = Строка.ДатаИВремяОперации;
			ДвижениеПриход.ДатаНач = Строка.ДатаПоследнейНаработки;
			
			Движение = Движения.торо_ПериодыНаработкиОР.Добавить();
			Движение.Период = Строка.ДатаИВремяОперации;
			Движение.ОбъектРемонта = Строка.ОбъектРемонта;
			Движение.Показатель = Строка.Показатель;
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеПриход.Период = Строка.ДатаИВремяОперации;
			ДвижениеПриход.ОбъектРемонта = Строка.ОбъектРемонта;
			ДвижениеПриход.Показатель = Строка.Показатель;
			ДвижениеПриход.Наработка = Строка.НаработкаДоОперации - Строка.НаработкаПослеОперации;
			ДвижениеПриход.ДатаКон = Строка.ДатаИВремяОперации;
			ДвижениеПриход.ДатаНач = Строка.ДатаИВремяОперации;
		КонецЦикла;
		
		Движения.торо_НаработкаОбъектовРемонта.Записать();
		ДвиженияПоРегистру_торо_ГарантийностьРемонтов();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого Строка Из НаработкаОбъектов Цикл
		АктуализироватьДанныеСтрокиНаработки(Строка);
	КонецЦикла;
	
	Для Каждого Строка Из НаработкаПодчиненныхОбъектов Цикл
		АктуализироватьДанныеСтрокиНаработки(Строка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ Отказ Тогда
		Движения.торо_НаработкаОбъектовРемонта.Записать();
		торо_ГарантийноеОбслуживание.ПроверитьГарантийностьРемонтовПослеНаработки(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУправляемыеБлокировки()
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_НаработкаОбъектовРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = НаработкаОбъектов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","ОбъектРемонта");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_НаработкаОбъектовРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = НаработкаПодчиненныхОбъектов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","ОбъектРемонта");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура АктуализироватьДанныеСтрокиНаработки(Строка)

	СтруктураВозврата = торо_РаботаСНаработкой.ПолучитьТекущееЗначениеНаработки(Строка.ОбъектРемонта, Строка.Показатель, Ссылка);
	
	Строка.ДатаИВремяОперации = ТекущаяДата();
	Строка.ЗафиксированнаяНаработка = СтруктураВозврата.НаработаноЗначение;
	Строка.ДатаПоследнейНаработки = СтруктураВозврата.НаработаноДата;
	Строка.НаработкаДоОперации = Строка.ЗафиксированнаяНаработка + Строка.Наработка; 
	Строка.АбсолютнаяНаработка = торо_РаботаСНаработкой.АбсолютноеЗначениеНаработки(Ссылка, Строка.ОбъектРемонта, Строка.Показатель);	

КонецПроцедуры

Процедура ПроверитьЦельностьНаработкиПриПроведении(Отказ)
		
	// Проверка, что при вводе данного документа не получится интервала с "незаполненным" значением наработки.
	// При вводе на основании документа "Учет наработки" (происходит при превышении максимального значения) сброс счетчика не требуется.
	Если НЕ Проведен И НЕ ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) Тогда
		
		УстановитьУправляемыеБлокировки();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НаработкаОбъектов.ОбъектРемонта КАК Объект,
		|	НаработкаОбъектов.Показатель КАК Показатель,
		|	НаработкаОбъектов.ДатаПоследнейНаработки КАК ДатаРаботыС
		|ПОМЕСТИТЬ НаработкаОбъектов
		|ИЗ
		|	&НаработкаОбъектов КАК НаработкаОбъектов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаработкаПодчиненныхОбъектов.ОбъектРемонта КАК Объект,
		|	НаработкаПодчиненныхОбъектов.Показатель КАК Показатель,
		|	НаработкаПодчиненныхОбъектов.ДатаПоследнейНаработки КАК ДатаРаботыС
		|ПОМЕСТИТЬ НаработкаПодчиненныхОбъектов
		|ИЗ
		|	&НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(НаработкаОбъектов.Объект КАК Справочник.торо_ОбъектыРемонта) КАК Объект,
		|	НаработкаОбъектов.Показатель КАК Показатель,
		|	НаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС
		|ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
		|ИЗ
		|	НаработкаОбъектов КАК НаработкаОбъектов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(НаработкаПодчиненныхОбъектов.Объект КАК Справочник.торо_ОбъектыРемонта),
		|	НаработкаПодчиненныхОбъектов.Показатель,
		|	НаработкаПодчиненныхОбъектов.ДатаРаботыС
		|ИЗ
		|	НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект,
		|	Показатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
		|	торо_ПериодыНаработкиОРСрезПоследних.Период КАК ДатаКон
		|ПОМЕСТИТЬ ВТ_Даты
		|ИЗ
		|	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
		|			,
		|			(ОбъектРемонта, Показатель) В
		|					(ВЫБРАТЬ
		|						торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
		|						торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель
		|					ИЗ
		|						торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов)
		|				И Регистратор <> &Ссылка) КАК торо_ПериодыНаработкиОРСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта,
		|	Показатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
		|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
		|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС,
		|	ЕСТЬNULL(ВТ_Даты.ДатаКон, торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект.ДатаВводаВЭксплуатацию) КАК ДатаКон
		|ИЗ
		|	торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
		|		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект = ВТ_Даты.ОбъектРемонта
		|			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = ВТ_Даты.Показатель
		|ГДЕ
		|	ЕСТЬNULL(ВТ_Даты.ДатаКон, торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект.ДатаВводаВЭксплуатацию) <> торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыС";
		
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("НаработкаОбъектов", НаработкаОбъектов);
		Запрос.УстановитьПараметр("НаработкаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			ВыборкаНаработокСОшибками = РезультатЗапроса.Выбрать();
			Пока ВыборкаНаработокСОшибками.Следующий() Цикл
				Если ВыборкаНаработокСОшибками.ДатаКон = ВыборкаНаработокСОшибками.Объект.ДатаВводаВЭксплуатацию Тогда 
					ШаблонСообщения = НСтр("ru = 'Для объекта ремонта ""%1"" не зафиксировано значение наработки ""%2"", дата ввода объекта в эксплуатацию: %3,
					|  поле ""Дата работы с"" в документе заполнено неверно! Проверьте корректность заполнения данного поля табличной части документа.'");
					ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаНаработокСОшибками.Объект, ВыборкаНаработокСОшибками.Показатель, ВыборкаНаработокСОшибками.ДатаКон);
				Иначе
					ШаблонСообшения = НСтр("ru = 'Для объекта ремонта ""%1"" зафиксировано значение наработки ""%2"", на %3,
					|  поле ""Дата работы с"" в документе заполнено неверно! Проверьте корректность заполнения данного поля табличной части документа.'");
					ТекстСообщения = СтрШаблон(ШаблонСообшения, ВыборкаНаработокСОшибками.Объект, ВыборкаНаработокСОшибками.Показатель, ВыборкаНаработокСОшибками.ДатаКон);
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЦельностьНаработкиПриОтменеПроведения(Отказ)
	
	// Проверка, что при вводе данного документа не получится интервала с "незаполненным" значением наработки.
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ОбъектРемонта КАК Объект,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаИВремяОперации КАК ДатаРаботыПо
	|ПОМЕСТИТЬ НаработкаОбъектов
	|ИЗ
	|	&НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.ОбъектРемонта КАК Объект,
	|	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.Показатель КАК Показатель,
	|	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.ДатаИВремяОперации КАК ДатаРаботыПо
	|ПОМЕСТИТЬ НаработкаПодчиненныхОбъектов
	|ИЗ
	|	&НаработкаПодчиненныхОбъектов КАК торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаработкаОбъектов.Объект КАК Объект,
	|	НаработкаОбъектов.Показатель КАК Показатель,
	|	НаработкаОбъектов.ДатаРаботыПо КАК ДатаРаботыПо
	|ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
	|ИЗ
	|	НаработкаОбъектов КАК НаработкаОбъектов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаработкаПодчиненныхОбъектов.Объект,
	|	НаработкаПодчиненныхОбъектов.Показатель,
	|	НаработкаПодчиненныхОбъектов.ДатаРаботыПо
	|ИЗ
	|	НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НаработкаОбъектов", НаработкаОбъектов);
	Запрос.УстановитьПараметр("НаработкаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
	Запрос.Выполнить();
	
	РезультатЗапроса = торо_РаботаСНаработкой.ПолучитьОбъектыРемонтаСНаработкойВБудущем(МВТ, Ссылка);
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		ВыборкаНаработокСОшибками = РезультатЗапроса.Выбрать();
		Пока ВыборкаНаработокСОшибками.Следующий() Цикл
			ШаблонСообщения = НСтр("ru = 'Для объекта ремонта ""%1"" зафиксировано значение наработки ""%2"" на более позднюю дату, чем документом: по %3. 
			|Отмена проведения документа невозможна! Для выполнения действий с документом отмените проведение более поздних документов.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаНаработокСОшибками.Объект, ВыборкаНаработокСОшибками.Показатель, ВыборкаНаработокСОшибками.ДатаКон);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ГарантийностьРемонтов()
	
	Если НЕ ПолучитьФункциональнуюОпцию("торо_ИспользоватьГарантии") Тогда
		Возврат;
	КонецЕсли;
	
	Движения.торо_ГарантийностьРемонтов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаОбъектов.ОбъектРемонта КАК ОбъектРемонта,
	               |	ТаблицаОбъектов.Показатель КАК Показатель,
	               |	ТаблицаОбъектов.Наработка КАК Наработка,
	               |	ТаблицаОбъектов.ДатаИВремяОперации КАК ДатаРаботыПо
	               |ПОМЕСТИТЬ ВТ_Объекты
	               |ИЗ
	               |	&ТаблицаОбъектов КАК ТаблицаОбъектов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаПодчиненныхОбъектов.ОбъектРемонта КАК ОбъектРемонта,
	               |	ТаблицаПодчиненныхОбъектов.Показатель КАК Показатель,
	               |	ТаблицаПодчиненныхОбъектов.Наработка КАК Наработка,
	               |	ТаблицаПодчиненныхОбъектов.ДатаИВремяОперации КАК ДатаРаботыПо
	               |ПОМЕСТИТЬ ВТ_ПодчиненныеОбъекты
	               |ИЗ
	               |	&ТаблицаПодчиненныхОбъектов КАК ТаблицаПодчиненныхОбъектов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Объекты.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_Объекты.Показатель КАК Показатель,
	               |	ВТ_Объекты.Наработка КАК Наработка,
	               |	ВТ_Объекты.ДатаРаботыПо КАК ДатаРаботыПо
	               |ПОМЕСТИТЬ ВТ_ВсеОбъекты
	               |ИЗ
	               |	ВТ_Объекты КАК ВТ_Объекты
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ПодчиненныеОбъекты.ОбъектРемонта,
	               |	ВТ_ПодчиненныеОбъекты.Показатель,
	               |	ВТ_ПодчиненныеОбъекты.Наработка,
	               |	ВТ_ПодчиненныеОбъекты.ДатаРаботыПо
	               |ИЗ
	               |	ВТ_ПодчиненныеОбъекты КАК ВТ_ПодчиненныеОбъекты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_НаработкаОбъектовРемонтаОстатки.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_НаработкаОбъектовРемонтаОстатки.Показатель КАК Показатель,
	               |	торо_НаработкаОбъектовРемонтаОстатки.НаработкаОстаток КАК Наработка
	               |ПОМЕСТИТЬ ВТ_НаработкаОР
	               |ИЗ
	               |	РегистрНакопления.торо_НаработкаОбъектовРемонта.Остатки(
	               |			&ДатаНаработки,
	               |			(ОбъектРемонта, Показатель) В
	               |				(ВЫБРАТЬ
	               |					ВТ_ВсеОбъекты.ОбъектРемонта КАК ОбъектРемонта,
	               |					ВТ_ВсеОбъекты.Показатель КАК Показатель
	               |				ИЗ
	               |					ВТ_ВсеОбъекты КАК ВТ_ВсеОбъекты)) КАК торо_НаработкаОбъектовРемонтаОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеОбъекты.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_ВсеОбъекты.Показатель КАК Показатель,
	               |	ВТ_НаработкаОР.Наработка КАК Наработка,
	               |	ВТ_ВсеОбъекты.ДатаРаботыПо КАК ДатаРаботыПо
	               |ПОМЕСТИТЬ ВТ_ВсеОбъектыСНаработкой
	               |ИЗ
	               |	ВТ_ВсеОбъекты КАК ВТ_ВсеОбъекты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаработкаОР КАК ВТ_НаработкаОР
	               |		ПО ВТ_ВсеОбъекты.ОбъектРемонта = ВТ_НаработкаОР.ОбъектРемонта
	               |			И ВТ_ВсеОбъекты.Показатель = ВТ_НаработкаОР.Показатель
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	Показатель,
	               |	Наработка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеОбъектыСНаработкой.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_ВсеОбъектыСНаработкой.ДатаРаботыПо КАК ДатаРаботыПо
	               |ПОМЕСТИТЬ ВТ_ОбъектыРемонта
	               |ИЗ
	               |	ВТ_ВсеОбъектыСНаработкой КАК ВТ_ВсеОбъектыСНаработкой
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СрокиГарантииОбъектовРемонта КАК торо_СрокиГарантииОбъектовРемонта
	               |		ПО ВТ_ВсеОбъектыСНаработкой.ОбъектРемонта = торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта
	               |			И (торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьНаработку)
	               |			И ВТ_ВсеОбъектыСНаработкой.Показатель = торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПоказательНаработки
	               |			И ВТ_ВсеОбъектыСНаработкой.Наработка >= торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ЗначениеНаработки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта КАК ОбъектРемонта
	               |ПОМЕСТИТЬ ВТ_Ремонты
	               |ИЗ
	               |	ВТ_ОбъектыРемонта КАК ВТ_ОбъектыРемонта
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	               |		ПО (торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта = ВТ_ОбъектыРемонта.ОбъектРемонта)
	               |			И (торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала > ВТ_ОбъектыРемонта.ДатаРаботыПо)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_СвернутыеФактическиеДатыРемонтов.IDРемонта,
	               |	торо_СвернутыеФактическиеДатыРемонтов.ОбъектРемонта
	               |ИЗ
	               |	ВТ_ОбъектыРемонта КАК ВТ_ОбъектыРемонта
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СвернутыеФактическиеДатыРемонтов КАК торо_СвернутыеФактическиеДатыРемонтов
	               |		ПО (торо_СвернутыеФактическиеДатыРемонтов.ОбъектРемонта = ВТ_ОбъектыРемонта.ОбъектРемонта)
	               |			И (торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала > ВТ_ОбъектыРемонта.ДатаРаботыПо)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта,
	               |	ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ГарантийностьРемонтовСрезПоследних.IDРемонта КАК IDРемонта
	               |ИЗ
	               |	РегистрСведений.торо_ГарантийностьРемонтов.СрезПоследних(
	               |			&ДатаНаработки,
	               |			IDРемонта В
	               |				(ВЫБРАТЬ
	               |					ВТ_Ремонты.IDРемонта КАК IDРемонта
	               |				ИЗ
	               |					ВТ_Ремонты КАК ВТ_Ремонты)) КАК торо_ГарантийностьРемонтовСрезПоследних
	               |ГДЕ
	               |	торо_ГарантийностьРемонтовСрезПоследних.Гарантийный"; 
	
	Запрос.УстановитьПараметр("ТаблицаОбъектов", НаработкаОбъектов);
	Запрос.УстановитьПараметр("ТаблицаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
	Запрос.УстановитьПараметр("ДатаНаработки", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.торо_ГарантийностьРемонтов.Добавить();
		Движение.Период = Дата;
		Движение.IDРемонта = Выборка.IDРемонта;
		Движение.Гарантийный = Ложь;
	КонецЦикла;
	
	Движения.торо_ГарантийностьРемонтов.Записать();
	
	торо_ГарантийноеОбслуживание.ПроверитьГарантийностьРемонтовПослеНаработки(Ссылка);

КонецПроцедуры

#КонецОбласти

#КонецЕсли