#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область Печать

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Инвентаризационная опись товаров (ИНВ-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ3";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись товаров (ИНВ-3)'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР",
		"ПечатьДокументовБезПредварительногоПросмотра",
		Ложь);
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНВ3", "ИНВ-3 (Инвентаризационная опись товаров)", 
			ПечатьИнв3(МассивОбъектов, ОбъектыПечати), , "Документ.торо_Инвентаризация.ПФ_MXL_ИНВ3");
	КонецЕсли;

		
КонецПроцедуры

Функция ПолучитьВыборкуШапок(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_Инвентаризация.Ссылка КАК Ссылка,
	               |	торо_Инвентаризация.Номер КАК Номер,
	               |	торо_Инвентаризация.Дата КАК Дата,
	               |	торо_Инвентаризация.Организация КАК Организация,
	               |	торо_Инвентаризация.Подразделение КАК Подразделение,
	               |	торо_Инвентаризация.Склад КАК Склад,
	               |	торо_Инвентаризация.ОтветственноеЛицо КАК ОтветственноеЛицо,
	               |	торо_Инвентаризация.ДокументОснованиеВид КАК ДокументОснованиеВид,
	               |	торо_Инвентаризация.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	               |	торо_Инвентаризация.ДокументОснованиеДата КАК ДокументОснованиеДата,
	               |	торо_Инвентаризация.ПричинаПроведенияИнвентаризации КАК ПричинаПроведенияИнвентаризации,
	               |	торо_Инвентаризация.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	               |	торо_Инвентаризация.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	               |	торо_Инвентаризация.Ответственный КАК Ответственный,
	               |	торо_Инвентаризация.Комментарий КАК Комментарий,
	               |	торо_Инвентаризация.СтатусДокумента КАК СтатусДокумента,
	               |	торо_Инвентаризация.ДатаСнятияОстатков КАК ДатаСнятияОстатков,
	               |	торо_Инвентаризация.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура.НаименованиеПолное КАК Товар,
	               |		Характеристика КАК Характеристика,
	               |		Серия КАК Серия,
	               |		Количество КАК Количество,
	               |		10 КАК Сумма,
	               |		10 КАК СуммаПоУчету,
	               |		КоличествоУчет КАК КоличествоПоУчету,
	               |		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНаименование,
	               |		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	               |		Номенклатура.Код КАК НоменклатураКод,
	               |		Номенклатура.Артикул КАК НоменклатураАртикул
	               |	) КАК Товары,
	               |	торо_Инвентаризация.Комиссия.СоставКомиссии.(
	               |		Ссылка КАК КомиссияСсылка,
	               |		НомерСтроки КАК КомиссияНомерСтроки,
	               |		ЧленКомиссии КАК КомиссияЧленКомиссии
	               |	) КАК ИнвентаризационнаяКомиссия,
	               |	торо_Инвентаризация.Комиссия.Председатель КАК КомиссияПредседатель
	               |ИЗ
	               |	Документ.торо_Инвентаризация КАК торо_Инвентаризация
	               |ГДЕ
	               |	торо_Инвентаризация.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Ссылка,
	               |	Товар,
	               |	Характеристика";
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

Функция ПечатьИнв3(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаПечати = Константы.торо_ВалютаРегламентированногоУчета.Получить();
	ВидЦены = Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить();
	ФОХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	ФОСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	
	Шапка = ПолучитьВыборкуШапок(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_торо_Инвентаризация_ИНВ3";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_Инвентаризация.ПФ_MXL_ИНВ3");
	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		ЧленКомиссии = Шапка.ИнвентаризационнаяКомиссия.Выбрать();

		//////////////////////////////////////////////////////////////////////
		// 1-я страница формы

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Шапка.Организация);
		
		ОбластьМакета.Параметры.ДатаДокумента            = Шапка.Дата;
		ОбластьМакета.Параметры.НомерДокумента           = Шапка.Номер;
		ОбластьМакета.Параметры.ДатаОкончанияИнвентаризацииЛокальныйФормат = Шапка.ДатаОкончанияИнвентаризации; 
	
		ОбластьМакета.Параметры.ДолжностьМОЛ1     = торо_ПроцедурыУправленияПерсоналом.ДолжностьФизЛица(Шапка.Организация, Шапка.ОтветственноеЛицо);
		ОбластьМакета.Параметры.ФИОМОЛ1           = Шапка.ОтветственноеЛицо;
			
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы

		ИтогФактКоличество = 0;
		ИтогФактСумма      = 0;
		ИтогФактСуммаВсего = 0;
		ИтогБухКоличество  = 0;
		ИтогБухСумма       = 0;

		КолвоСтрокПоСтранице = 0;
		КолвоПоСтранице      = 0;
		СуммаЛиста           = 0;
		ИтогоКолво           = 0;
		
		НомерСтраницы = 2;
	    Ном = 0;

		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		// Выводим многострочную часть документа
		ПодвалСтраницы  = Макет.ПолучитьОбласть("ПодвалСтраницы");	
		
		СтрокаТаблицы   = Макет.ПолучитьОбласть("Строка");
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Ном = Ном + 1;
			ЦенаТовара = ПолучитьЦенуТовара(ВыборкаСтрокТовары.Товар, ВыборкаСтрокТовары.Характеристика, ВидЦены, ВалютаПечати, Шапка.Дата);
			Сумма = ВыборкаСтрокТовары.Количество * ЦенаТовара;
			СуммаПоУчету = ВыборкаСтрокТовары.КоличествоПоУчету * ЦенаТовара;
			СтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
			СтрокаТаблицы.Параметры.Сумма = Сумма;
			СтрокаТаблицы.Параметры.СуммаПоУчету = СуммаПоУчету;
			СтрокаТаблицы.Параметры.Цена = ЦенаТовара;
			СтрокаТаблицы.Параметры.КодАртикул = ?(ЗначениеЗаполнено(ВыборкаСтрокТовары.НоменклатураАртикул), 
													ВыборкаСтрокТовары.НоменклатураАртикул, ВыборкаСтрокТовары.НоменклатураКод);
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалСтраницы);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

				ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
				ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

				ПараметрыОбласти.ИтогоФактКоличество = ИтогФактКоличество;
				ПараметрыОбласти.ИтогоФактСумма      = ИтогФактСумма;
				ПараметрыОбласти.ИтогоБухКоличество  = ИтогБухКоличество;
				ПараметрыОбласти.ИтогоБухСумма       = ИтогБухСумма;

				ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
				ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ЧислоПрописью(КолвоПоСтранице);
				ПараметрыОбласти.СуммаФактическиНаСтраницеПрописью                 = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);

				ИтогФактКоличество = 0;
				ИтогФактСумма      = 0;
				ИтогБухКоличество  = 0;
				ИтогБухСумма       = 0;

				КолвоСтрокПоСтранице = 0;
				КолвоПоСтранице      = 0;
				СуммаЛиста           = 0;

			КонецЕсли;

			СтрокаТаблицы.Параметры.Номер = Ном;
			ПредставлениеТовара = "" + ВыборкаСтрокТовары.Товар;
			Если ФОХарактеристики И ЗначениеЗаполнено(ВыборкаСтрокТовары.Характеристика) Тогда
				ПредставлениеТовара = ПредставлениеТовара + " / " + ВыборкаСтрокТовары.Характеристика; 
			КонецЕсли; 
			Если ФОСерии И ЗначениеЗаполнено(ВыборкаСтрокТовары.Серия) Тогда
				ПредставлениеТовара = ПредставлениеТовара + " / " + ВыборкаСтрокТовары.Серия; 
			КонецЕсли; 

			СтрокаТаблицы.Параметры.ТоварНаименование = ПредставлениеТовара;
			
			ТабДокумент.Вывести(СтрокаТаблицы);

			ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.Количество;
			ИтогФактСумма      = ИтогФактСумма      + Сумма;
			ИтогФактСуммаВсего = ИтогФактСуммаВсего + Сумма;
			ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.КоличествоПоУчету;
			ИтогБухСумма       = ИтогБухСумма       + СуммаПоУчету;
			ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.Количество;

			КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
			КолвоПоСтранице      = КолвоПоСтранице      + ВыборкаСтрокТовары.Количество;
			СуммаЛиста           = СуммаЛиста           + Сумма;

		КонецЦикла;

		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

		ПараметрыОбласти.ИтогоФактКоличество  = ИтогФактКоличество;
		ПараметрыОбласти.ИтогоФактСумма       = ИтогФактСумма;
		ПараметрыОбласти.ИтогоБухКоличество   = ИтогБухКоличество;
		ПараметрыОбласти.ИтогоБухСумма        = ИтогБухСумма;
		ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
		ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ЧислоПрописью(КолвоПоСтранице);
		ПараметрыОбласти.СуммаФактическиНаСтраницеПрописью                 = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Выводим подвал документа
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ЧислоПрописью(ИтогоКолво);
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
		ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью                 = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогФактСуммаВсего, ВалютаПечати);
		
		Инд = 1;
		ОбластьМакета.Параметры["ДолжностьПредседателя"] = торо_ПроцедурыУправленияПерсоналом.ДолжностьСотрудника(Шапка.Организация, Шапка.КомиссияПредседатель);
		ОбластьМакета.Параметры["ФИОПредседателя"] = Шапка.КомиссияПредседатель;
		Пока ЧленКомиссии.Следующий() Цикл
			ДолжностьЧленаКомиссии = торо_ПроцедурыУправленияПерсоналом.ДолжностьСотрудника(Шапка.Организация, ЧленКомиссии.КомиссияЧленКомиссии);
			Если Инд <= 1 Тогда
				ОбластьМакета.Параметры["ДолжностьЧленаКомиссии2"] = ДолжностьЧленаКомиссии;
				ОбластьМакета.Параметры["ФИОЧленаКомиссии2"] = ЧленКомиссии.КомиссияЧленКомиссии;
			Иначе
				ТабДокумент.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("ДопЧленКомиссии");
		       	ОбластьМакета.Параметры["ДолжностьЧленаКомиссии"] = ДолжностьЧленаКомиссии;
				ОбластьМакета.Параметры["ФИОЧленаКомиссии"] = ЧленКомиссии.КомиссияЧленКомиссии;
			КонецЕсли;
			Инд = Инд + 1;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписиМОЛ");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
			
		ОбластьМакета.Параметры.ДолжностьМОЛ1     = торо_ПроцедурыУправленияПерсоналом.ДолжностьФизЛица(Шапка.Организация, Шапка.ОтветственноеЛицо);
		ОбластьМакета.Параметры.ФИОМОЛ1           = Шапка.ОтветственноеЛицо;
		ОбластьМакета.Параметры.ДатаДокумента 	= Шапка.Дата;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьЦенуТовара(Товар, Характеристика, ВидЦены, Валюта, Дата)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	    "ВЫБРАТЬ
	    |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	    |	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
	    |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	    |	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта
	    |ПОМЕСТИТЬ ВТ_Цены
	    |ИЗ
	    |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	    |			&Дата,
	    |			Номенклатура = &Номенклатура
	    |				И Характеристика = &Характеристика
	    |				И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВТ_Цены.Номенклатура КАК Номенклатура,
	    |	ВТ_Цены.Характеристика КАК Характеристика,
	    |	ВТ_Цены.Цена * КурсыВалютСрезПоследних.Курс КАК Цена
	    |ИЗ
	    |	ВТ_Цены КАК ВТ_Цены
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) КАК КурсыВалютСрезПоследних
	    |		ПО ВТ_Цены.Валюта = КурсыВалютСрезПоследних.Валюта";
	
	Запрос.УстановитьПараметр("Номенклатура", Товар);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Цена;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

#КонецОбласти 

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли

