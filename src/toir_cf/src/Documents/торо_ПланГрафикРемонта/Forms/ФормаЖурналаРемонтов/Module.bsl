
#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументППР = Параметры.ДокументППР;
	ЗаполнитьПоДокументу(ДокументППР);
	ФОХарактеристики = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура ПечатьЖурналаРемонтов(Команда)
	
	СформироватьЖурналРемонтов(Неопределено);
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьЖурналРемонтов(Команда)
	Отказ = Ложь;
	
	Если ЗначениеЗаполнено(Период) Тогда 
		ПериодС = Период.ДатаНачала;
		ПериодПо = Период.ДатаОкончания;
	ИначеЕсли ЗначениеЗаполнено(ДокументППР) Тогда
		ПолучитьПериодИзДокумента(ДокументППР);
		ПериодС = Период.ДатаНачала;
		ПериодПо = Период.ДатаОкончания;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодС) Тогда
		Если НЕ ЗначениеЗаполнено(ПериодПо) Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо заполнить дату окончания периода.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		ИначеЕсли ПериодПо < ПериодС Тогда
			ТекстСообщения = НСтр("ru = 'Дата окончания периода меньше даты его начала.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ПериодПо) Тогда
		Если НЕ ЗначениеЗаполнено(ПериодС) Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо заполнить дату начала периода.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		ИначеЕсли ПериодПо < ПериодС Тогда
			ТекстСообщения = НСтр("ru = 'Дата окончания периода меньше даты его начала.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументППР) Тогда
		ДокументПроведен = ПроверкаПроведенияДокумента();
		Если НЕ ДокументПроведен Тогда
			ТекстСообщения = НСтр("ru = 'Выбранный документ не проведен!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;			
	КонецЕсли;
	  
 	Если Не Отказ Тогда
		Результат = ПолучитьСписокРемонтов();
		ПериодС = Дата(1,1,1);
		ПериодПо = Дата(1,1,1);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	
	ОбъектыРемонта.Очистить();
	ВидыРемонта.Очистить();
	
	ЗаполнитьПоДокументу(ДокументППР);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСписокРемонтов()
	СД = ЗаполнитьНаборДанных();
	
	НаборДанных = СД["ТабОпераций"];
	МатЗатраты = СД["ТабМатЗатрат"];
	ТабВремени = СД["ТабВремени"];
	
	Результат.Очистить();
	
	ТабДок = Новый ТабличныйДокумент;
	
	СписокОбъектовРемонта = НаборДанных.Скопировать(, "ОбъектРемонта");
	СписокОбъектовРемонта.Свернуть("ОбъектРемонта");
	
	МакетЖурнала = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_ПланГрафикРемонта.ПФ_MXL_ЖурналЗапланированныхРемонтов");
	
	ОбластьЗаголовок = МакетЖурнала.ПолучитьОбласть("Заголовок");
	ОбластьОтбор = МакетЖурнала.ПолучитьОбласть("Отбор");
	
	ОбластьШапкаЖурнала = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтовШапка");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ОбластьОтбор.Параметры.Документ = ДокументППР;
	
	Если ЗначениеЗаполнено(ПериодС) И ЗначениеЗаполнено(ПериодПо) Тогда
		ОбластьОтбор.Параметры.Период = "Период с " + Формат(ПериодС,"ДФ=dd.MM.yyyy") + " по " + Формат(ПериодПо, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		НаименованиеОрганизации = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Организация);
		ОбластьОтбор.Параметры.Организация = "Организация: " + НаименованиеОрганизации;
	КонецЕсли;
    Если ЗначениеЗаполнено(Подразделение) Тогда
		ОбластьОтбор.Параметры.Подразделение = "Подразделение: " + Подразделение;
	КонецЕсли; 

	Если ОбъектыРемонта.Количество() > 0 Тогда
		
		ПредставленияОбъектовРемонта = Новый Массив;
		Для Каждого ОбъектРемонта Из ОбъектыРемонта Цикл
			ПредставленияОбъектовРемонта.Добавить(
				торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОбъектРемонта.Значение));		
		КонецЦикла;	
		
		ОбъектыРемонтаСтрокой = СтрСоединить(ПредставленияОбъектовРемонта, ", ");
		ШаблонВывода = ?(ОбъектыРемонта.Количество() = 1, "Объект ремонта: %1", "Объекты ремонта: %1");
		
		ОбластьОтбор.Параметры.ОбъектРемонта = СтрШаблон(ШаблонВывода, ОбъектыРемонтаСтрокой);	
	КонецЕсли;
	
	Если ВидыРемонта.Количество() > 0 Тогда
		
		ПредставленияВидовРемонта = Новый Массив;
		Для Каждого ВидРемонта Из ВидыРемонта Цикл
			ПредставленияВидовРемонта.Добавить(
				торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(ВидРемонта.Значение));		
		КонецЦикла;	
		
		ВидыРемонтаСтрокой = СтрСоединить(ПредставленияВидовРемонта, ", ");
		ШаблонВывода = ?(ВидыРемонта.Количество() = 1, "Вид ремонта: %1", "Виды ремонта: %1");
		
		ОбластьОтбор.Параметры.ВидРемонта = СтрШаблон(ШаблонВывода, ВидыРемонтаСтрокой);	
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьОтбор);
	ТабДок.Вывести(ОбластьШапкаЖурнала);
	
	Для Каждого Элемент Из СписокОбъектовРемонта Цикл
		ТекущийОбъект = Элемент.ОбъектРемонта;
		ТаблицаВидовРемонта = НаборДанных.Скопировать(Новый Структура("ОбъектРемонта", ТекущийОбъект), "ВидРемонта, ДатаНачалаРемонтныхРабот, Исполнитель, ВремяВыполнения, ID");
		ТаблицаВидовРемонта.Свернуть("ВидРемонта, ДатаНачалаРемонтныхРабот, id", "ВремяВыполнения");
		СтрокаОбъектВид = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтов");
		СтрокаОбъектВид.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ТекущийОбъект);
		СтрокаОбъектВид.Параметры.ПараметрРасшифровки = ТекущийОбъект;
		ОбластьСтроки = СтрокаОбъектВид.Область(1,2,1,СтрокаОбъектВид.ШиринаТаблицы);
     	ОбластьСтроки.Объединить();
		ОбластьСтроки.Шрифт = Новый Шрифт(ОбластьСтроки.Шрифт,,10,Истина);
		ОбластьСтроки.ЦветФона = Новый Цвет(192, 192, 192);
		ТабДок.Вывести(СтрокаОбъектВид);
		
		ТабДок.НачатьГруппуСтрок();
		
		Для Каждого Строка Из ТаблицаВидовРемонта Цикл
			СтрокаОбъектВид = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтов");
			СтрокаОбъектВид.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(Строка.ВидРемонта);
			СтрокаОбъектВид.Параметры.Описание = Строка.ДатаНачалаРемонтныхРабот;
			ТабИсполнителей = НаборДанных.Скопировать(Новый Структура("ОбъектРемонта, ВидРемонта, ID", ТекущийОбъект, Строка.ВидРемонта, Строка.ID), "Исполнитель");
			ТабИсполнителей.Свернуть("Исполнитель");
			СтрокаОбъектВид.Параметры.Исполнитель = ПолучитьИсполнителейСтрокой(ТабИсполнителей);
			СтрокаОбъектВид.Параметры.ПараметрРасшифровки = Строка.ВидРемонта;
			
			ТаблицаТехОпераций = НаборДанных.Скопировать(Новый Структура("ОбъектРемонта, ВидРемонта, ДатаНачалаРемонтныхРабот", ТекущийОбъект, Строка.ВидРемонта, Строка.ДатаНачалаРЕмонтныхРабот), "ВидРемонта, ТехОперация, ВремяВыполнения, Описание");
			// подсчет времени на выполнение ремонта - сумма времени выполнения тех операций
			ТабДляПодсчетаВремени = ТаблицаТехОпераций.Скопировать(, "ВидРемонта, ТехОперация, ВремяВыполнения");
			ТабДляПодсчетаВремени.Свернуть("ВидРемонта, ТехОперация, ВремяВыполнения");
			ТабДляПодсчетаВремени.Свернуть("ВидРемонта", "ВремяВыполнения");
			
			ВремЗатраты = ТабВремени.Скопировать(Новый структура("id", Строка.id), "НормаВремени");
			Если ВремЗатраты.количество() = 0 Тогда
				СтрокаОбъектВид.Параметры.ВремяВыполнения = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности("0","0");
			Иначе 
				СтрокаОбъектВид.Параметры.ВремяВыполнения = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(ВремЗатраты[0].НормаВремени,"0");
			КонецЕсли;
			
			ТабДок.Вывести(СтрокаОбъектВид);
			
			ТаблицаТехОпераций.Свернуть("ТехОперация, ВремяВыполнения, Описание");
			
			ВремяРемонта = 0;
			ТабДок.НачатьГруппуСтрок();

			Для Каждого СтрокаСОперацией из ТаблицаТехОпераций Цикл
				Если НЕ СтрокаСОперацией.ТехОперация = Null Тогда
					СтрокаТехОпераций = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтов");
					СтрокаТехОпераций.Параметры.ОбъектРемонта = СтрокаСОперацией.ТехОперация;
					СтрокаТехОпераций.Параметры.ВремяВыполнения = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(СтрокаСОперацией.ВремяВыполнения,"0");
					СтрокаТехОпераций.Параметры.Описание = СтрокаСОперацией.Описание;
					СтрокаТехОпераций.Параметры.ПараметрРасшифровки = СтрокаСОперацией.ТехОперация;
					
					ТаблицаМатЗатрат = МатЗатраты.скопировать(Новый структура("id, Операция", Строка.id, СтрокаСОперацией.ТехОперация), "Номенклатура, Характеристика, Количество, ЕдиницаИзмерения");
					СтрокаМатЗатрат = ПолучитьМатЗатратыСтрокой(ТаблицаМатЗатрат); 		
					СтрокаТехОпераций.Параметры.МатЗатраты = СтрокаМатЗатрат;
					
					ТабДок.Вывести(СтрокаТехОпераций);
				КонецЕсли;
			КонецЦикла;
			
			ТабДок.ЗакончитьГруппуСтрок();
		КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();

	КонецЦикла;
	
	ТабДок.КлючПараметровПечати = "торо_ПланГрафикРемонта_ФормаЖурнала";
	ТабДок.ИмяПараметровПечати = "торо_ПланГрафикРемонта_ФормаЖурнала";
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция ЗаполнитьНаборДанных()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_ОбщиеДанныеПоРемонтам.IDРемонта КАК ID,
	               |	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонтныхРабот,
	               |	торо_ОбщиеДанныеПоРемонтам.ВидРемонта КАК ВидРемонтныхРабот,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ПлановыеИсполнителиРемонтов.Исполнитель КАК Исполнитель,
	               |	торо_ОбщиеДанныеПоРемонтам.ЕстьЗаявка КАК ЕстьЗаявка
	               |ИЗ
	               |	РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	               |		ПО торо_ОбщиеДанныеПоРемонтам.IDРемонта = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеИсполнителиРемонтов КАК торо_ПлановыеИсполнителиРемонтов
	               |		ПО торо_ОбщиеДанныеПоРемонтам.IDРемонта = торо_ПлановыеИсполнителиРемонтов.IDРемонта
	               |ГДЕ
	               |	торо_ОбщиеДанныеПоРемонтам.IDРемонта В(&МассивID)
	               |	И торо_ОбщиеДанныеПоРемонтам.ВидДокументаНачалаЦепочки = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ПланГрафикППР)
	               |	И торо_ОбщиеДанныеПоРемонтам.Организация = &Организация
	               |	И торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта В (&ОбъектыРемонта)
				   |	И торо_ОбщиеДанныеПоРемонтам.ВидРемонта В (&ВидыРемонта)
	               |	И НЕ торо_ОбщиеДанныеПоРемонтам.Отменен
	               |	И НЕ торо_ОбщиеДанныеПоРемонтам.Замещен
	               |	И НЕ торо_ОбщиеДанныеПоРемонтам.ЕстьНаряд
	               |	И НЕ торо_ОбщиеДанныеПоРемонтам.ЕстьАкт
	               |	И торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания";
				   
	Запрос.УстановитьПараметр("ДатаНачала", ПериодС);
	Запрос.УстановитьПараметр("ДатаОкончания", ПериодПо);
	
	Если ЗначениеЗаполнено(ДокументППР) Тогда 
		Запрос.УстановитьПараметр("МассивID", ДокументППР.ПланРемонтов.ВыгрузитьКолонку("ID"));
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "торо_ОбщиеДанныеПоРемонтам.IDРемонта В(&МассивID)", "ИСТИНА");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("Организация", Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "торо_ОбщиеДанныеПоРемонтам.Организация = &Организация", "ИСТИНА");
	КонецЕсли;
	
	Если ОбъектыРемонта.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ОбъектыРемонта", ОбъектыРемонта);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта В (&ОбъектыРемонта)", "ИСТИНА");
	КонецЕсли;
	Если ВидыРемонта.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ВидыРемонта", ВидыРемонта);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "торо_ОбщиеДанныеПоРемонтам.ВидРемонта В (&ВидыРемонта)", "ИСТИНА");
	КонецЕсли;
	
	ТабРемонтов = Запрос.Выполнить().Выгрузить();
	ТабРемонтовБезЗаявок = ТабРемонтов.Скопировать(Новый Структура ("ЕстьЗаявка", Ложь));
	ТабРемонтовСЗаявками  = ТабРемонтов.Скопировать(Новый Структура ("ЕстьЗаявка", Истина));
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабРемонтовБезЗаявок.ID КАК ID,
	               |	ТабРемонтовБезЗаявок.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	ТабРемонтовБезЗаявок.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	ТабРемонтовБезЗаявок.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	ТабРемонтовБезЗаявок.Исполнитель КАК Исполнитель
	               |ПОМЕСТИТЬ вт_РемонтыБезЗаявок
	               |ИЗ
	               |	&ТабРемонтовБезЗаявок КАК ТабРемонтовБезЗаявок
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID,
	               |	ОбъектРемонтныхРабот
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_РемонтыБезЗаявок.ID КАК ID,
	               |	вт_РемонтыБезЗаявок.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	вт_РемонтыБезЗаявок.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	вт_РемонтыБезЗаявок.Исполнитель КАК Исполнитель,
	               |	торо_РемонтныеЦиклыОборудования.ВидЦепочки КАК ВидЦепочки
	               |ПОМЕСТИТЬ ВТ_Цепочки
	               |ИЗ
	               |	вт_РемонтыБезЗаявок КАК вт_РемонтыБезЗаявок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
	               |		ПО вт_РемонтыБезЗаявок.ОбъектРемонтныхРабот = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вт_РемонтыБезЗаявок.ID КАК ID,
	               |	вт_РемонтыБезЗаявок.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	НормРемонты.НормативныйРемонт КАК НормативныйРемонт,
	               |	ВЫБОР
	               |		КОГДА НормРемонты.ТиповойОР = &ПустойТОР
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Приоритет
	               |ПОМЕСТИТЬ РемонтыТкИПриоритетОР
	               |ИЗ
	               |	вт_РемонтыБезЗаявок КАК вт_РемонтыБезЗаявок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК НормРемонты
	               |		ПО вт_РемонтыБезЗаявок.ОбъектРемонтныхРабот = НормРемонты.ОбъектРемонта
	               |			И вт_РемонтыБезЗаявок.ВидРемонтныхРабот = НормРемонты.ВидРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Цепочки.ID КАК ID,
	               |	ВТ_Цепочки.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт КАК НормативныйРемонт,
	               |	0 КАК Приоритет
	               |ПОМЕСТИТЬ РемонтыТкИПриоритетЦепочек
	               |ИЗ
	               |	ВТ_Цепочки КАК ВТ_Цепочки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
	               |		ПО ВТ_Цепочки.ВидЦепочки = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
	               |			И ВТ_Цепочки.ВидРемонтныхРабот = торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ВТ_Цепочки.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыТкИПриоритетОР.ID КАК ID,
	               |	РемонтыТкИПриоритетОР.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	ЕСТЬNULL(РемонтыТкИПриоритетОР.НормативныйРемонт, РемонтыТкИПриоритетЦепочек.НормативныйРемонт) КАК НормативныйРемонт,
	               |	ЕСТЬNULL(РемонтыТкИПриоритетОР.Приоритет, РемонтыТкИПриоритетЦепочек.Приоритет) КАК Приоритет
	               |ПОМЕСТИТЬ РемонтыТкИПриоритет
	               |ИЗ
	               |	РемонтыТкИПриоритетОР КАК РемонтыТкИПриоритетОР
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РемонтыТкИПриоритетЦепочек КАК РемонтыТкИПриоритетЦепочек
	               |		ПО РемонтыТкИПриоритетОР.ID = РемонтыТкИПриоритетЦепочек.ID
	               |			И РемонтыТкИПриоритетОР.ДатаНачалаРемонтныхРабот = РемонтыТкИПриоритетЦепочек.ДатаНачалаРемонтныхРабот
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыТкИПриоритет.ID КАК ID,
	               |	МАКСИМУМ(РемонтыТкИПриоритет.Приоритет) КАК Приоритет
	               |ПОМЕСТИТЬ максПриоритет
	               |ИЗ
	               |	РемонтыТкИПриоритет КАК РемонтыТкИПриоритет
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РемонтыТкИПриоритет.ID
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыТкИПриоритет.ID КАК ID,
	               |	РемонтыТкИПриоритет.НормативныйРемонт КАК НормативныйРемонт,
	               |	РемонтыТкИПриоритет.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот
	               |ПОМЕСТИТЬ РемонтыИТК
	               |ИЗ
	               |	максПриоритет КАК максПриоритет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РемонтыТкИПриоритет КАК РемонтыТкИПриоритет
	               |		ПО максПриоритет.ID = РемонтыТкИПриоритет.ID
	               |			И максПриоритет.Приоритет = РемонтыТкИПриоритет.Приоритет
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НормативныйРемонт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РемонтыИТК.ID КАК ID,
	               |	РемонтыИТК.НормативныйРемонт КАК НормативныйРемонт,
	               |	РемонтыИТК.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	МАКСИМУМ(торо_ВерсииТехКарт.Период) КАК Период
	               |ПОМЕСТИТЬ РемонтыИТК_МаксПериод
	               |ИЗ
	               |	РемонтыИТК КАК РемонтыИТК
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |		ПО РемонтыИТК.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И РемонтыИТК.ДатаНачалаРемонтныхРабот >= торо_ВерсииТехКарт.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РемонтыИТК.ID,
	               |	РемонтыИТК.НормативныйРемонт,
	               |	РемонтыИТК.ДатаНачалаРемонтныхРабот
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НормативныйРемонт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РемонтыИТК_МаксПериод.ID КАК ID,
	               |	ЕСТЬNULL(торо_ТехКартыСписокОпераций.Операция, РемонтыИТК_МаксПериод.НормативныйРемонт) КАК НормативныйРемонт,
	               |	РемонтыИТК_МаксПериод.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта,
	               |	торо_ТехКартыСписокОпераций.ID КАК ID_ТК
	               |ПОМЕСТИТЬ РемонтыИТкИОперации
	               |ИЗ
	               |	РемонтыИТК_МаксПериод КАК РемонтыИТК_МаксПериод
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |		ПО РемонтыИТК_МаксПериод.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И РемонтыИТК_МаксПериод.Период = торо_ВерсииТехКарт.Период
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
	               |		ПО (торо_ВерсииТехКарт.ТехКарта = торо_ТехКартыСписокОпераций.Ссылка)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НормативныйРемонт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РемонтыИТК_МаксПериод.ID КАК ID,
	               |	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта
	               |ПОМЕСТИТЬ РемонтыИТехКарты
	               |ИЗ
	               |	РемонтыИТК_МаксПериод КАК РемонтыИТК_МаксПериод
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |		ПО РемонтыИТК_МаксПериод.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И РемонтыИТК_МаксПериод.Период = торо_ВерсииТехКарт.Период
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	торо_ВерсииТехКарт.ТехКарта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РемонтыИТехКарты.ID КАК ID,
	               |	МатЗатраты.Номенклатура КАК Номенклатура,
	               |	МатЗатраты.Количество КАК Количество,
	               |	МатЗатраты.Операция КАК Операция,
	               |	МатЗатраты.Характеристика КАК Характеристика,
	               |	МатЗатраты.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ПОМЕСТИТЬ РемонтыИМатЗатраты
	               |ИЗ
	               |	РемонтыИТехКарты КАК РемонтыИТехКарты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.МатериальныеЗатраты КАК МатЗатраты
	               |		ПО РемонтыИТехКарты.ТехКарта = МатЗатраты.Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РемонтыИТехКарты.ID КАК ID,
	               |	Карта.НормаВремени КАК НормаВремени
	               |ПОМЕСТИТЬ РемонтыИВремя_БезЗаявок
	               |ИЗ
	               |	РемонтыИТехКарты КАК РемонтыИТехКарты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты КАК Карта
	               |		ПО РемонтыИТехКарты.ТехКарта = Карта.Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыИТкИОперации.ID КАК ID,
				   |	РемонтыИТкИОперации.ID_ТК КАК ID_ТК,
	               |	РемонтыИТкИОперации.НормативныйРемонт КАК НормативныйРемонт,
	               |	РемонтыИТкИОперации.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	РемонтыИТкИОперации.ТехКарта КАК ТехКарта
	               |ИЗ
	               |	РемонтыИТкИОперации КАК РемонтыИТкИОперации";
	
	Запрос.УстановитьПараметр("ТабРемонтовБезЗаявок", ТабРемонтовБезЗаявок);
	Запрос.УстановитьПараметр("ПустойТОР", Справочники.торо_ТиповыеОР.ПустаяСсылка());
	
	тмпТаблица = Запрос.Выполнить().Выгрузить();
	КоличествоЦиклов = 0;
	Пока Истина Цикл
		Запрос.Текст = "ВЫБРАТЬ                       
		               |	РемонтыИТкИОперации.ID КАК ID,
		               |	РемонтыИТкИОперации.ID_ТК КАК ID_ТК,
		               |	РемонтыИТкИОперации.НормативныйРемонт КАК НормативныйРемонт,
		               |	РемонтыИТкИОперации.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
		               |	РемонтыИТкИОперации.ТехКарта КАК ТехКарта
		               |ПОМЕСТИТЬ РемонтыИТК_дляДобавления
		               |ИЗ
		               |	&РемонтыИТкИОперации КАК РемонтыИТкИОперации
		               |ГДЕ
		               |	РемонтыИТкИОперации.НормативныйРемонт ССЫЛКА Справочник.торо_ТехнологическиеОперации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ РемонтыИТК_МаксПериод
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РемонтыИТК.ID КАК ID,
		               |	РемонтыИТК.ID_ТК КАК ID_ТК,
		               |	РемонтыИТК.НормативныйРемонт КАК НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
		               |	МАКСИМУМ(торо_ВерсииТехКарт.Период) КАК Период
		               |ПОМЕСТИТЬ РемонтыИТК_МаксПериод
		               |ИЗ
		               |	РемонтыИТкИОперации КАК РемонтыИТК
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		               |		ПО РемонтыИТК.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
		               |			И РемонтыИТК.ДатаНачалаРемонтныхРабот >= торо_ВерсииТехКарт.Период
		               |ГДЕ
		               |	РемонтыИТК.НормативныйРемонт ССЫЛКА Справочник.торо_ИдентификаторыТехКарт
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РемонтыИТК.ID,
		               |	РемонтыИТК.ID_ТК,
		               |	РемонтыИТК.НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	НормативныйРемонт
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ РемонтыИТкИОперации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РемонтыИТК_МаксПериод.ID КАК ID,
		               |	РемонтыИТК_МаксПериод.ID_ТК КАК ID_ТК,
		               |	торо_ТехКартыСписокОпераций.ID КАК ID_ТО,
		               |	торо_ТехКартыСписокОпераций.Операция КАК НормативныйРемонт,
		               |	РемонтыИТК_МаксПериод.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
		               |	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта
		               |ПОМЕСТИТЬ РемонтыИТкИОперации
		               |ИЗ
		               |	РемонтыИТК_МаксПериод КАК РемонтыИТК_МаксПериод
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		               |		ПО РемонтыИТК_МаксПериод.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
		               |			И РемонтыИТК_МаксПериод.Период = торо_ВерсииТехКарт.Период
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
		               |		ПО (торо_ВерсииТехКарт.ТехКарта = торо_ТехКартыСписокОпераций.Ссылка)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	НормативныйРемонт
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РемонтыИТК.ID КАК ID,
		               |	РемонтыИТК.ID_ТО КАК ID_ТК,
		               |	РемонтыИТК.НормативныйРемонт КАК НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура КАК Номенклатура,
		               |	торо_ТехКартыМатериальныеЗатраты.Количество КАК Количество,
		               |	РемонтыИТК.ТехКарта КАК ТехКарта,
		               |	торо_ТехКартыМатериальныеЗатраты.Характеристика КАК Характеристика,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		               |ИЗ
		               |	РемонтыИТкИОперации КАК РемонтыИТК
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_ТехКартыМатериальныеЗатраты
		               |		ПО РемонтыИТК.НормативныйРемонт = торо_ТехКартыМатериальныеЗатраты.Операция
		               |			И РемонтыИТК.ТехКарта = торо_ТехКартыМатериальныеЗатраты.Ссылка
		               |			И РемонтыИТК.ID_ТО = торо_ТехКартыМатериальныеЗатраты.ID
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РемонтыИТК.ID,
		               |	РемонтыИТК.ID_ТК,
		               |	РемонтыИТК.НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура,
		               |	торо_ТехКартыМатериальныеЗатраты.Количество,
		               |	РемонтыИТК.ТехКарта,
		               |	торо_ТехКартыМатериальныеЗатраты.Характеристика,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения,
		               |	РемонтыИТК.ID_ТО
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	РемонтыИТК.ID,
		               |	РемонтыИТК.ID_ТК,
		               |	РемонтыИТК.НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура,
		               |	торо_ТехКартыМатериальныеЗатраты.Количество,
		               |	РемонтыИТК.ТехКарта,
		               |	торо_ТехКартыМатериальныеЗатраты.Характеристика,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения
		               |ИЗ
		               |	РемонтыИТК_дляДобавления КАК РемонтыИТК
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_ТехКартыМатериальныеЗатраты
		               |		ПО РемонтыИТК.НормативныйРемонт = торо_ТехКартыМатериальныеЗатраты.Операция
		               |			И РемонтыИТК.ТехКарта = торо_ТехКартыМатериальныеЗатраты.Ссылка
		               |			И РемонтыИТК.ID_ТК = торо_ТехКартыМатериальныеЗатраты.ID
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РемонтыИТК.ID,
		               |	РемонтыИТК.ID_ТК,
		               |	РемонтыИТК.НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура,
		               |	торо_ТехКартыМатериальныеЗатраты.Количество,
		               |	РемонтыИТК.ТехКарта,
		               |	торо_ТехКартыМатериальныеЗатраты.Характеристика,
		               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения,
		               |	торо_ТехКартыМатериальныеЗатраты.ID
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ РемонтыИТК_дляДобавления
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РемонтыИТК.ID КАК ID,
		               |	РемонтыИТК.НормативныйРемонт КАК НормативныйРемонт,
		               |	РемонтыИТК.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
		               |	РемонтыИТК.ТехКарта КАК ТехКарта
		               |ИЗ
		               |	РемонтыИТкИОперации КАК РемонтыИТК
		               |ГДЕ
		               |	РемонтыИТК.НормативныйРемонт ССЫЛКА Справочник.торо_ИдентификаторыТехКарт";
					   
		Запрос.УстановитьПараметр("РемонтыИТкИОперации", тмпТаблица);
					   
		пВыборка = Запрос.ВыполнитьПакет();
		ВыборкаРезультат = пВыборка[5].Выгрузить();
		тмпТаблица = ВыборкаРезультат;
		ВыборкаУсловие = пВыборка[7].Выгрузить();
		
		Если ВыборкаУсловие.количество() = 0 или КоличествоЦиклов > 100 Тогда
			Прервать;
		КонецЕсли;
		
		КоличествоЦиклов = КоличествоЦиклов + 1;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабРемонтовСЗаявками.ID КАК ID,
	               |	ТабРемонтовСЗаявками.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	ТабРемонтовСЗаявками.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	ТабРемонтовСЗаявками.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	ТабРемонтовСЗаявками.Исполнитель КАК Исполнитель
	               |ПОМЕСТИТЬ вт_РемонтыСЗаявками
	               |ИЗ
	               |	&ТабРемонтовСЗаявками КАК ТабРемонтовСЗаявками
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID,
	               |	ОбъектРемонтныхРабот
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_РемонтыБезЗаявок.ID КАК ID,
	               |	вт_РемонтыБезЗаявок.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	вт_РемонтыБезЗаявок.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	вт_РемонтыБезЗаявок.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	вт_РемонтыБезЗаявок.Исполнитель КАК Исполнитель
	               |ПОМЕСТИТЬ Ремонты
	               |ИЗ
	               |	вт_РемонтыБезЗаявок КАК вт_РемонтыБезЗаявок
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	вт_РемонтыСЗаявками.ID,
	               |	вт_РемонтыСЗаявками.ОбъектРемонтныхРабот,
	               |	вт_РемонтыСЗаявками.ВидРемонтныхРабот,
	               |	вт_РемонтыСЗаявками.ДатаНачалаРемонтныхРабот,
	               |	вт_РемонтыСЗаявками.Исполнитель
	               |ИЗ
	               |	вт_РемонтыСЗаявками КАК вт_РемонтыСЗаявками
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	тмпТаблица.ID КАК ID,
	               |	тмпТаблица.ID_ТК КАК ID_ТК,
	               |	тмпТаблица.НормативныйРемонт КАК НормативныйРемонт,
	               |	тмпТаблица.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	тмпТаблица.Номенклатура КАК Номенклатура,
	               |	тмпТаблица.Количество КАК Количество,
	               |	тмпТаблица.ТехКарта КАК ТехКарта,
	               |	тмпТаблица.Характеристика КАК Характеристика,
	               |	тмпТаблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ПОМЕСТИТЬ вт_Результат
	               |ИЗ
	               |	&тмпТаблица КАК тмпТаблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вт_РемонтыСЗаявками.ID КАК ID,
	               |	вт_РемонтыСЗаявками.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ЗаявкаНаРемонтТКБезТО.РемонтнаяРабота КАК ТехКарта,
	               |	торо_ЗаявкаНаРемонтТКБезТО.ID КАК ID_ТК,
	               |	торо_ЗаявкаНаРемонтТКБезТО.Количество КАК Количество
	               |ПОМЕСТИТЬ вт_РезультатЗаявокТолькоТКБезПодчиненных
	               |ИЗ
	               |	вт_РемонтыСЗаявками КАК вт_РемонтыСЗаявками
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтТКБезТО
	               |		ПО вт_РемонтыСЗаявками.ID = торо_ЗаявкаНаРемонтТКБезТО.РемонтыОборудования_ID
	               |			И (ТИПЗНАЧЕНИЯ(торо_ЗаявкаНаРемонтТКБезТО.РемонтнаяРабота) = ТИП(Справочник.торо_ИдентификаторыТехКарт))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтПодчиненныеТО
	               |		ПО (торо_ЗаявкаНаРемонтТКБезТО.ID = торо_ЗаявкаНаРемонтПодчиненныеТО.Родитель_ID)
	               |ГДЕ
	               |	торо_ЗаявкаНаРемонтПодчиненныеТО.ID ЕСТЬ NULL
	               |	И ЕСТЬNULL(торо_ЗаявкаНаРемонтТКБезТО.Родитель_ID, """") = """"
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_РемонтыСЗаявками.ID КАК ID,
	               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота КАК НормативныйРемонт,
	               |	вт_РемонтыСЗаявками.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	торо_ЗаявкаНаРемонтМатериальныеЗатраты.Номенклатура КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА торо_ЗаявкаНаРемонтМатериальныеЗатраты.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА торо_ЗаявкаНаРемонтМатериальныеЗатраты.Количество
	               |		ИНАЧЕ торо_ЗаявкаНаРемонтМатериальныеЗатраты.Количество * торо_ЗаявкаНаРемонтМатериальныеЗатраты.ЕдиницаИзмерения.Коэффициент
	               |	КОНЕЦ КАК Количество,
	               |	торо_ЗаявкаНаРемонтТК.РемонтнаяРабота КАК ТехКарта,
	               |	торо_ЗаявкаНаРемонтМатериальныеЗатраты.ХарактеристикаНоменклатуры КАК Характеристика,
	               |	торо_ЗаявкаНаРемонтМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА торо_ЗаявкаНаРемонтТК.РемонтнаяРабота ЕСТЬ NULL
	               |			ТОГДА торо_ЗаявкаНаРемонтРемонтныеРаботы.ID
	               |		ИНАЧЕ торо_ЗаявкаНаРемонтТК.ID
	               |	КОНЕЦ КАК ID_ТК,
	               |	ЕСТЬNULL(торо_ЗаявкаНаРемонтТК.Родитель_ID, """") КАК Родитель_ID,
	               |	торо_ЗаявкаНаРемонтТК.РемонтнаяРабота ЕСТЬ NULL КАК НетРодителяТК,
	               |	ВЫБОР
	               |		КОГДА торо_ЗаявкаНаРемонтТК.РемонтнаяРабота ЕСТЬ NULL
	               |			ТОГДА торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество
	               |		ИНАЧЕ торо_ЗаявкаНаРемонтТК.Количество
	               |	КОНЕЦ КАК КоличествоТК
	               |ПОМЕСТИТЬ вт_РезультатЗаявок
	               |ИЗ
	               |	вт_РемонтыСЗаявками КАК вт_РемонтыСЗаявками
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.МатериальныеЗатраты КАК торо_ЗаявкаНаРемонтМатериальныеЗатраты
	               |			ПО торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка = торо_ЗаявкаНаРемонтМатериальныеЗатраты.Ссылка
	               |				И торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID = торо_ЗаявкаНаРемонтМатериальныеЗатраты.РемонтыОборудования_ID
	               |				И торо_ЗаявкаНаРемонтРемонтныеРаботы.ID = торо_ЗаявкаНаРемонтМатериальныеЗатраты.ID
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтТК
	               |			ПО торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID = торо_ЗаявкаНаРемонтТК.ID
	               |		ПО вт_РемонтыСЗаявками.ID = торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID
	               |			И (ТИПЗНАЧЕНИЯ(торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота) <> ТИП(Справочник.торо_ИдентификаторыТехКарт))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_РезультатЗаявок.ID КАК ID,
	               |	вт_РезультатЗаявок.НормативныйРемонт КАК НормативныйРемонт,
	               |	вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	вт_РезультатЗаявок.Номенклатура КАК Номенклатура,
	               |	вт_РезультатЗаявок.Количество КАК Количество,
	               |	вт_РезультатЗаявок.ТехКарта КАК ТехКарта,
	               |	вт_РезультатЗаявок.Характеристика КАК Характеристика,
	               |	вт_РезультатЗаявок.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	вт_РезультатЗаявок.ID_ТК КАК ID_ТК
	               |ИЗ
	               |	вт_РезультатЗаявок КАК вт_РезультатЗаявок
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_РезультатЗаявок.ID,
	               |	вт_РезультатЗаявок.НормативныйРемонт,
	               |	вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот,
	               |	вт_РезультатЗаявок.Номенклатура,
	               |	вт_РезультатЗаявок.ТехКарта,
	               |	вт_РезультатЗаявок.Характеристика,
	               |	вт_РезультатЗаявок.ЕдиницаИзмерения,
	               |	вт_РезультатЗаявок.Количество,
	               |	вт_РезультатЗаявок.ID_ТК
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	вт_Результат.ID,
	               |	вт_Результат.НормативныйРемонт,
	               |	вт_Результат.ДатаНачалаРемонтныхРабот,
	               |	вт_Результат.Номенклатура,
	               |	вт_Результат.Количество,
	               |	вт_Результат.ТехКарта,
	               |	вт_Результат.Характеристика,
	               |	вт_Результат.ЕдиницаИзмерения,
	               |	вт_Результат.ID_ТК
	               |ИЗ
	               |	вт_Результат КАК вт_Результат
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вт_РезультатЗаявок.ID КАК ID,
	               |	вт_РезультатЗаявок.ТехКарта КАК ТехКарта,
	               |	вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	МАКСИМУМ(торо_ВерсииТехКарт.Период) КАК Период,
	               |	вт_РезультатЗаявок.ID_ТК КАК ID_ТК,
	               |	вт_РезультатЗаявок.КоличествоТК КАК КоличествоТК
	               |ПОМЕСТИТЬ РемонтыИТКЗаявок_МаксПериод
	               |ИЗ
	               |	вт_РезультатЗаявок КАК вт_РезультатЗаявок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |		ПО вт_РезультатЗаявок.ТехКарта = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот >= торо_ВерсииТехКарт.Период
	               |ГДЕ
	               |	НЕ вт_РезультатЗаявок.НетРодителяТК
	               |	И вт_РезультатЗаявок.Родитель_ID = """"
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_РезультатЗаявок.ID,
	               |	вт_РезультатЗаявок.ТехКарта,
	               |	вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот,
	               |	вт_РезультатЗаявок.ID_ТК,
	               |	вт_РезультатЗаявок.КоличествоТК
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	вт_РезультатЗаявок.ID,
	               |	вт_РезультатЗаявок.ТехКарта,
	               |	вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот,
	               |	МАКСИМУМ(торо_ВерсииТехКарт.Период),
	               |	вт_РезультатЗаявок.ID_ТК,
	               |	вт_РезультатЗаявок.Количество
	               |ИЗ
	               |	вт_РезультатЗаявокТолькоТКБезПодчиненных КАК вт_РезультатЗаявок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |		ПО вт_РезультатЗаявок.ТехКарта = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот >= торо_ВерсииТехКарт.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_РезультатЗаявок.ID,
	               |	вт_РезультатЗаявок.ТехКарта,
	               |	вт_РезультатЗаявок.ДатаНачалаРемонтныхРабот,
	               |	вт_РезультатЗаявок.ID_ТК,
	               |	вт_РезультатЗаявок.Количество
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ТехКарта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РемонтыИТКЗаявок_МаксПериод.ID КАК ID,
	               |	торо_ВерсииТехКарт.ТехКарта.НормаВремени * РемонтыИТКЗаявок_МаксПериод.КоличествоТК КАК НормаВремени,
	               |	РемонтыИТКЗаявок_МаксПериод.ID_ТК КАК ID_ТК
	               |ПОМЕСТИТЬ РемонтыИВремя
	               |ИЗ
	               |	РемонтыИТКЗаявок_МаксПериод КАК РемонтыИТКЗаявок_МаксПериод
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |		ПО РемонтыИТКЗаявок_МаксПериод.ТехКарта = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И РемонтыИТКЗаявок_МаксПериод.Период = торо_ВерсииТехКарт.Период
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	РемонтыИВремя_БезЗаявок.ID,
	               |	РемонтыИВремя_БезЗаявок.НормаВремени,
	               |	""""
	               |ИЗ
	               |	РемонтыИВремя_БезЗаявок КАК РемонтыИВремя_БезЗаявок
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вт_РезультатЗаявок.ID,
	               |	торо_ТехнологическиеОперации.НормаВремени * вт_РезультатЗаявок.КоличествоТК,
	               |	вт_РезультатЗаявок.ID_ТК
	               |ИЗ
	               |	вт_РезультатЗаявок КАК вт_РезультатЗаявок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперации
	               |		ПО вт_РезультатЗаявок.НормативныйРемонт = торо_ТехнологическиеОперации.Ссылка
	               |ГДЕ
	               |	вт_РезультатЗаявок.НетРодителяТК
	               |	И НЕ вт_РезультатЗаявок.НормативныйРемонт ЕСТЬ NULL
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID";
	
	Запрос.УстановитьПараметр("ТабРемонтовСЗаявками", ТабРемонтовСЗаявками);
	Запрос.УстановитьПараметр("тмпТаблица", тмпТаблица); 
	тмпРезультат = Запрос.Выполнить().Выгрузить();			   
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РемонтыИТкИОперации.ID КАК ID,
	               |	РемонтыИТкИОперации.НормативныйРемонт КАК НормативныйРемонт,
	               |	РемонтыИТкИОперации.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	РемонтыИТкИОперации.Номенклатура КАК Номенклатура,
	               |	РемонтыИТкИОперации.Характеристика КАК Характеристика,
	               |	РемонтыИТкИОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	РемонтыИТкИОперации.ТехКарта КАК ТехКарта,
	               |	РемонтыИТкИОперации.Количество КАК Количество
	               |ПОМЕСТИТЬ Результат
	               |ИЗ
	               |	&Результат КАК РемонтыИТкИОперации
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НормативныйРемонт,
	               |	ID,
	               |	Номенклатура,
	               |	Количество
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Результат.ID КАК ID,
	               |	Результат.НормативныйРемонт КАК ТехОперация,
	               |	Результат.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
	               |	Ремонты.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	               |	Ремонты.ВидРемонтныхРабот КАК ВидРемонта,
	               |	Ремонты.Исполнитель КАК Исполнитель,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(торо_ТехКартыСписокОпераций.НормаВремениВСекундах, 0) = 0
	               |			ТОГДА торо_ТехКартыСписокОпераций.Продолжительность
	               |		ИНАЧЕ торо_ТехКартыСписокОпераций.НормаВремениВСекундах
	               |	КОНЕЦ КАК ВремяВыполнения,
	               |	"""" КАК Описание
	               |ИЗ
	               |	Результат КАК Результат
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
	               |		ПО Результат.ID = Ремонты.ID
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
	               |		ПО Результат.НормативныйРемонт = торо_ТехКартыСписокОпераций.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Результат.НормативныйРемонт,
	               |	Результат.ID,
	               |	Результат.ДатаНачалаРемонтныхРабот,
	               |	Ремонты.Исполнитель,
	               |	Ремонты.ВидРемонтныхРабот,
	               |	Ремонты.ОбъектРемонтныхРабот,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(торо_ТехКартыСписокОпераций.НормаВремениВСекундах, 0) = 0
	               |			ТОГДА торо_ТехКартыСписокОпераций.Продолжительность
	               |		ИНАЧЕ торо_ТехКартыСписокОпераций.НормаВремениВСекундах
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаНачалаРемонтныхРабот
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Результат.ID КАК ID,
	               |	Результат.НормативныйРемонт КАК Операция,
	               |	Результат.Номенклатура КАК Номенклатура,
	               |	Результат.Характеристика КАК Характеристика,
	               |	Результат.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	СУММА(Результат.Количество) КАК Количество
	               |ИЗ
	               |	Результат КАК Результат
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Результат.Номенклатура,
	               |	Результат.Характеристика,
	               |	Результат.ЕдиницаИзмерения,
	               |	Результат.ID,
	               |	Результат.НормативныйРемонт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыИВремя.ID КАК ID,
	               |	СУММА(РемонтыИВремя.НормаВремени) КАК НормаВремени
	               |ИЗ
	               |	РемонтыИВремя КАК РемонтыИВремя
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РемонтыИВремя.ID";
				   
	Запрос.УстановитьПараметр("Результат", тмпРезультат);
	пРезультат = Запрос.ВыполнитьПакет();
		
	Запрос.МенеджерВременныхТаблиц.Закрыть();
		
	струкВозврата = Новый Структура("ТабОпераций, ТабМатЗатрат, ТабВремени", пРезультат[1].Выгрузить(), пРезультат[2].Выгрузить(), пРезультат[3].Выгрузить());
	
	Возврат струкВозврата;
	
КонецФункции

// функция формирует представление таблицы материальных затрат строкой
//
&НаСервере
Функция ПолучитьМатЗатратыСтрокой(МатериальныеЗатраты)
	
	Представление = "";
	Для Каждого Строка Из МатериальныеЗатраты Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Если ФОХарактеристики Тогда
				Представление = Представление + Строка.Номенклатура + " (" + Строка.Характеристика + ") - " + Строка.Количество + " " + Строка.ЕдиницаИзмерения + Символы.ПС;
			Иначе	
				Представление = Представление + Строка.Номенклатура + " - " + Строка.Количество  + Строка.ЕдиницаИзмерения + Символы.ПС;			
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат Представление;
КонецФункции

&НаСервере
Функция ПолучитьИсполнителейСтрокой(Исполнители) 
	Представление = "";
	Для Каждого Строка Из Исполнители Цикл
		Представление = ?(ЗначениеЗаполнено(Представление), Представление + "," + Символы.ПС, Представление); 
		Представление = Представление + Строка.Исполнитель; 
	КонецЦикла;
	
	Возврат Представление;
КонецФункции

&НаСервере
Процедура ЗаполнитьПоДокументу(ДокументППР)
	
	ЕстьДокументППР = ЗначениеЗаполнено(ДокументППР);	
	
	РеквизитыКЗапросу = ?(ЕстьДокументППР, "Организация, Подразделение, ОбъектыРемонта", "Организация, Подразделение");
	
	РеквизитыДокументаППР = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументППР, РеквизитыКЗапросу);
	
	Организация = РеквизитыДокументаППР.Организация;
	Подразделение = РеквизитыДокументаППР.Подразделение;	
	
	Если ЕстьДокументППР Тогда
		
		ПолучитьПериодИзДокумента(ДокументППР);
		
		ОбъектыРемонтаКВыбору = Новый Массив;
		ВидыРемонтаКВыбору = Новый Массив;
		
		Выборка = РеквизитыДокументаППР.ОбъектыРемонта.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ОбъектыРемонтаКВыбору.Найти(Выборка.ОбъектРемонтныхРабот) = Неопределено Тогда
				ОбъектыРемонтаКВыбору.Добавить(Выборка.ОбъектРемонтныхРабот);
			КонецЕсли;	 
			Если ВидыРемонтаКВыбору.Найти(Выборка.ВидРемонтныхРабот) = Неопределено Тогда
				ВидыРемонтаКВыбору.Добавить(Выборка.ВидРемонтныхРабот);
			КонецЕсли;	
		КонецЦикла;
		
		Элементы.ОбъектыРемонта.СписокВыбора.ЗагрузитьЗначения(ОбъектыРемонтаКВыбору);

		Элементы.ВидыРемонта.СписокВыбора.ЗагрузитьЗначения(ВидыРемонтаКВыбору);
	Иначе 
		Элементы.ОбъектыРемонта.СписокВыбора.Очистить();

		Элементы.ВидыРемонта.СписокВыбора.Очистить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьПериодИзДокумента(ДокументППР)
	
	Период.ДатаНачала = ДокументППР.ДатаПланирования;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ДатаНачала, " + Строка(ДокументППР.ПериодичностьДетализации) + ", " + ?(ДокументППР.КоличествоПериодов=0, 1, ДокументППР.КоличествоПериодов) + ") КАК ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДокументППР.ДатаПланирования);
	
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
	Исключение
		Период.ДатаОкончания = Дата(3999,12,31,23,59,59);
	КонецПопытки;
	
	Если Выборка.Следующий() Тогда
		Период.ДатаОкончания = ?(ДокументППР.ПериодичностьДетализации = Перечисления.Периодичность.День, Выборка.ДатаОкончания-1, НачалоДня(Выборка.ДатаОкончания)-1);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаПроведенияДокумента()
	
	Возврат ДокументППР.Проведен;
	 	
КонецФункции

&НаКлиенте
Процедура ОбъектыРемонтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	
	ВыбранныеОбъектыРемонта = ОбъектыРемонта.ВыгрузитьЗначения();   
	
	СтруктураПараметров = Новый Структура;
	Если ЗначениеЗаполнено(ДокументППР) Тогда	
		СтруктураПараметров.Вставить("СписокОР", Элементы.ОбъектыРемонта.СписокВыбора);
	КонецЕсли;	
	СтруктураПараметров.Вставить("МассивВыбранных", ВыбранныеОбъектыРемонта);
	СтруктураПараметров.Вставить("ВыбиратьГруппу", Ложь);  
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбъектыРемонтаПослеВыбораИзСписка", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.торо_ФормаПодбораОРВСписок", СтруктураПараметров,,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПослеВыбораИзСписка(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектыРемонта.ЗагрузитьЗначения(Результат.МассивВыбранных);
	
КонецПроцедуры


#КонецОбласти