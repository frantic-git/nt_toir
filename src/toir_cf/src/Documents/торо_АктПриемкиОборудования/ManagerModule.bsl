#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт на приемку оборудования из ремонта
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктПриемкиОборудования";
	КомандаПечати.Идентификатор = "АктНаПриемкуОборудованияИзРемонта";
	КомандаПечати.Представление = НСтр("ru = 'Акт на приемку оборудования из ремонта'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт 
	
	торо_СозданиеНаОсновании.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Акт приемки оборудования".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.торо_АктПриемкиОборудования) Тогда
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.торо_АктПриемкиОборудования.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.торо_АктПриемкиОборудования);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "торо_ИспользоватьАктПриемкиОборудования";
        Возврат КомандаСоздатьНаОсновании;
	КонецЕсли; 
	
    Возврат Неопределено;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктНаПриемкуОборудованияИзРемонта") Тогда		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"АктНаПриемкуОборудованияИзРемонта", 
		"Акт на приемку оборудования из ремонта", 
		ПечатьАктНаПриемкуОборудованияИзРемонта(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_АктПриемкиОборудования.ПФ_MXL_АктНаПриемкуОборудованияИзРемонта");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАктНаПриемкуОборудованияИзРемонта(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_АктПриемкиОборудования.ПФ_MXL_АктНаПриемкуОборудованияИзРемонта");
	ШапкаАкта = Макет.ПолучитьОбласть("Шапка");
	
	ИспользоватьКомиссии = Константы.торо_ИспользоватьКомиссии.Получить();
	
	Если ИспользоватьКомиссии Тогда
		ПредседательКомиссии = Макет.ПолучитьОбласть("ПредседательКомиссии");
		ЧленыКомиссии = Макет.ПолучитьОбласть("ЧленыКомиссии");
		АктНачалоФОИспользоватьКомиссии = Макет.ПолучитьОбласть("АктНачалоФОИспользоватьКомиссии");
	КонецЕсли;
	
	АктНачалоБезФОИспользоватьКомиссии = Макет.ПолучитьОбласть("АктНачалоБезФОИспользоватьКомиссии");	
	ТекстАкта = Макет.ПолучитьОбласть("АктНаПриемку");
	
	Если ИспользоватьКомиссии Тогда
		ПредседательКомиссииПодпись = Макет.ПолучитьОбласть("ПредседательКомиссииПодпись");
		КомиссияПодписи = Макет.ПолучитьОбласть("КомиссияПодписи");		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_АктПриемкиОборудованияРемонтыОборудования.Ссылка КАК Ссылка,
	|	торо_АктПриемкиОборудованияРемонтыОборудования.Ссылка.Номер КАК Номер,
	|	торо_АктПриемкиОборудованияРемонтыОборудования.Ссылка.Дата КАК Дата,
	|	торо_АктПриемкиОборудованияРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,";
	Если ИспользоватьКомиссии Тогда
		Запрос.Текст = Запрос.Текст +
		"	торо_Комиссии.Председатель КАК Председатель,
		|	торо_Комиссии.СоставКомиссии.(
		|		ЧленКомиссии КАК ЧленКомиссии
		|	) КАК СоставКомиссии, ";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст +
	"	торо_АктПриемкиОборудованияРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_АктПриемкиОборудованияРемонтыОборудования.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.торо_АктПриемкиОборудования.РемонтыОборудования КАК торо_АктПриемкиОборудованияРемонтыОборудования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_Комиссии КАК торо_Комиссии
	|		ПО торо_АктПриемкиОборудованияРемонтыОборудования.Ссылка.Комиссия = торо_Комиссии.Ссылка
	|ГДЕ
	|	торо_АктПриемкиОборудованияРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_АктПриемкиОборудованияРемонтыОборудования.ID В(&МассивID)";	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("МассивID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктПриемкиОборудованияРемонтыОборудования.ID В(&МассивID)", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	ЭтоПервый = Истина;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЭтоПервый Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭтоПервый = Ложь;
			
		ШапкаАкта.Параметры.Номер = Выборка.Номер;
		ШапкаАкта.Параметры.Дата = Формат(Выборка.Дата,"ДЛФ=Д");	
		ШапкаАкта.Параметры.ОбъектРемонта =  торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Выборка.ОбъектРемонта);
		ТабДок.Вывести(ШапкаАкта);		
		Если ИспользоватьКомиссии Тогда
			
			ПредседательКомиссии.Параметры.ПредседательКомиссии = Выборка.Председатель;
			ТабДок.Вывести(ПредседательКомиссии);
			
			СписокЧленовКомиссии = Новый Массив;
			СоставКомиссии = Выборка.СоставКомиссии.Выбрать();
			Пока СоставКомиссии.Следующий() Цикл 
				ЧленыКомиссии.Параметры.ЧленКомиссии = СоставКомиссии.ЧленКомиссии;
				СписокЧленовКомиссии.Добавить(СоставКомиссии.ЧленКомиссии);
				ТабДок.Вывести(ЧленыКомиссии);
			КонецЦикла;
			
			ТабДок.Вывести(АктНачалоФОИспользоватьКомиссии);

		Иначе
			
			ТабДок.Вывести(АктНачалоБезФОИспользоватьКомиссии);
			
		КонецЕсли;
		
		ТекстАкта.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Выборка.ОбъектРемонта);
		ТекстАкта.Параметры.ДатаНачала = Выборка.ДатаНачала;
		ТекстАкта.Параметры.ДатаОкончания = Выборка.ДатаОкончания;	
		ТабДок.Вывести(ТекстАкта);
		
		Если ИспользоватьКомиссии Тогда
			
			ПредседательКомиссииПодпись.Параметры.ПредседательКомиссии = Выборка.Председатель;
			ТабДок.Вывести(ПредседательКомиссииПодпись);
			
			Для каждого Элемент Из СписокЧленовКомиссии Цикл
				КомиссияПодписи.Параметры.ЧленКомиссии = Элемент;
				ТабДок.Вывести(КомиссияПодписи); 
			КонецЦикла; 	
		
		КонецЕсли;
	КонецЦикла;
		
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;

	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьАктНаПриемкуОборудованияИзРемонта";
	Возврат ТабДок;
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ 
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ДляВсехСтрок(&Ограничение_ОР)";

	ОграничениеОР = торо_УправлениеДоступом.ПолучитьОграничениеДоступаДляОбъектаРемонтаВТаблице("РемонтыОборудования.ОбъектРемонта", Истина);
	Ограничение.Текст = СтрЗаменить(Ограничение.Текст, "&Ограничение_ОР", ОграничениеОР);

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли

