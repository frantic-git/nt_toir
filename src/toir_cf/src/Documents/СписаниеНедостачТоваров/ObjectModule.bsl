#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	КонецЕсли;
	
	ФОИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	Если ФОИспользоватьСерииНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ФОИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	ФОИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();

	// регистр ТоварыНаСкладах Приход
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СписаниеНедостачТоваров.Номенклатура КАК Номенклатура,
	               |	СписаниеНедостачТоваров.Характеристика КАК Характеристика,
	               |	СУММА(СписаниеНедостачТоваров.Количество) КАК Количество,
	               |	СписаниеНедостачТоваров.Серия КАК Серия,
	               |	СписаниеНедостачТоваров.Номенклатура.ВидНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры
	               |ИЗ
	               |	Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваров
	               |ГДЕ
	               |	СписаниеНедостачТоваров.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СписаниеНедостачТоваров.Номенклатура,
	               |	СписаниеНедостачТоваров.Характеристика,
	               |	СписаниеНедостачТоваров.Серия,
	               |	СписаниеНедостачТоваров.Номенклатура.ВидНоменклатуры.ТипНоменклатуры";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТЧТовары = Запрос.Выполнить().Выгрузить();

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из ТЧТовары Цикл
		Если ТекСтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар 
			ИЛИ ТекСтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
			
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения    = ВидДвиженияНакопления.Расход;
			Движение.Период         = Дата;
			Движение.Номенклатура   = ТекСтрокаТовары.Номенклатура;
			Движение.Склад          = Склад;
			Движение.ВНаличии       = ТекСтрокаТовары.Количество;
			
			Если ФОИспользоватьСерии Тогда
				Движение.Серия      = ТекСтрокаТовары.Серия;
			КонецЕсли;
			
			Если ФОИспользоватьХарактеристики Тогда
				Движение.Характеристика = ТекСтрокаТовары.Характеристика;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Записать();

	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	&Характеристика КАК Характеристика,
	               |	&Серия КАК Серия,
	               |	ТабТовары.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ТабТовары
	               |ИЗ
	               |	Документ.СписаниеНедостачТоваров.Товары КАК ТабТовары
	               |ГДЕ
	               |	ТабТовары.Ссылка = &Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.Серия КАК Серия,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	               |ПОМЕСТИТЬ ТоварыНаСкладах
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&Дата,
	               |			Склад = &Склад
	               |				И (Номенклатура, Характеристика, Серия) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика,
	               |						Таблица.Серия
	               |					ИЗ
	               |						ТабТовары КАК Таблица)) КАК ТоварыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_РезервыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	торо_РезервыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	торо_РезервыНаСкладахОстатки.Серия КАК Серия,
	               |	торо_РезервыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ПОМЕСТИТЬ Резервы
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(
	               |			&Дата,
	               |			Склад = &Склад
	               |				И (Номенклатура, Характеристика, Серия) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика,
	               |						Таблица.Серия
	               |					ИЗ
	               |						ТабТовары КАК Таблица)) КАК торо_РезервыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ТоварыНаСкладах.ВНаличииОстаток, 0) - ЕСТЬNULL(Резервы.КоличествоОстаток, 0) КАК ВНаличииОстаток,
	               |	ВЫРАЗИТЬ(ТабТовары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Серия КАК Серия,
	               |	ТабТовары.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	ТабТовары КАК ТабТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладах КАК ТоварыНаСкладах
	               |		ПО ТабТовары.Номенклатура = ТоварыНаСкладах.Номенклатура
	               |			И ТабТовары.Характеристика = ТоварыНаСкладах.Характеристика
	               |			И ТабТовары.Номенклатура = ТоварыНаСкладах.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
	               |		ПО ТабТовары.Номенклатура = Резервы.Номенклатура
	               |			И ТабТовары.Характеристика = Резервы.Характеристика
	               |			И ТабТовары.Серия = Резервы.Серия";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Дата", Дата + 1);
	
	Если ФОИспользоватьСерии Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Серия", "ТабТовары.Серия");
	Иначе
		Запрос.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Если ФОИспользоватьХарактеристики Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Характеристика", "ТабТовары.Характеристика");
	Иначе
		Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ВНаличииОстаток < 0 Тогда
			ШаблонСообщения = "Номенклатура %Номенклатура% / %Характеристика% / %Серия%.
			|Превышен свободный остаток товара на складе %СкладОтправитель% на %Количество% %ЕдИзм%";
			
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%",     Выборка.Номенклатура);				
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%СкладОтправитель%", Склад);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Количество%",       - Число(Выборка.ВналичииОстаток));
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%ЕдИзм%",            Выборка.ЕдиницаИзмерения);
			
			Если ФОИспользоватьСерии Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Серия%", Выборка.Серия); 				
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Серия%", "");
			КонецЕсли;
			
			Если ФОИспользоватьХарактеристики Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Характеристика%", Выборка.Характеристика); 				
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Характеристика%", "");
			КонецЕсли;   
			
			ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения,ЭтотОбъект,"Склад",,Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Константы.торо_ИспользоватьКонтрольОтрицательныхОстатков.Получить() Тогда
		Отказ = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ЭтотОбъект.Движения.ТоварыНаСкладах.Записывать = Истина;
	ЭтотОбъект.Движения.Записать();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.торо_Инвентаризация") Тогда 
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Дата = ТекущаяДата();
		Для Каждого СтрокаИнвентаризации Из ДанныеЗаполнения.Товары Цикл
			Отклонение = СтрокаИнвентаризации.Количество - СтрокаИнвентаризации.КоличествоУчет;
			Если Отклонение < 0 Тогда 
				НоваяСтрокаДокумента = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаДокумента, СтрокаИнвентаризации);
				НоваяСтрокаДокумента.Количество = - Отклонение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Склад = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойСклад");
	КонецЕсли;
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		 торо_Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
