#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			
			Объект.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнаяОрганизация",
			Истина);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
			
			Объект.Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновноеПодразделение",
			Истина);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
			
			Объект.Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнойОтветственный",
			Справочники.Пользователи.ПустаяСсылка());
			
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидОперации") Тогда
		Объект.ВидОперации = Параметры.ВидОперации;
	КонецЕсли;
	
	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Объект, ЭтаФорма, "");
	// Заголовок формы--	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВнешнийВидФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	Для Каждого Строка Из Объект.КвалификацииСотрудников Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Квалификация) Тогда
			ШаблонСообщения = НСтр("ru = 'Для сотрудника %1 не заполнена квалификация!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка.Сотрудник);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		ТекстСообщения = НСтр("ru = 'Документ не записан!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Объект, ЭтаФорма, "");
	// Заголовок формы--
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.УдалениеКвалификаций") Тогда
		ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок, "Присвоение квалификаций сотрудникам", "Удаление квалификаций сотрудников");
	КонецЕсли;
	
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Объект.КвалификацииСотрудников.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.КвалификацииСотрудников.Количество() > 0 Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьВопрос(Новый ОписаниеОповещения("ОрганизацияНачалоВыбораЗавершение",ЭтотОбъект, Новый Структура("Элемент",Элемент)),
						НСтр("ru = 'Табличная часть документа будет очищена! Продолжить?'"), РежимДиалогаВопрос.ДаНет, 60);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКвалификацииСотрудников
&НаКлиенте
Процедура КвалификацииСотрудниковКвалификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.УдалениеКвалификаций") Тогда
		
		ТекДанные = Элементы.КвалификацииСотрудников.ТекущиеДанные;
		Если ТекДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТекДанные.Сотрудник) Тогда
			ТекстСообщения = НСтр("ru = 'Для выбора удаляемой квалификации необходимо указать сотрудника!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Элементы.КвалификацииСотрудников.ТекущийЭлемент = Элементы.КвалификацииСотрудниковСотрудник;
			Возврат;
		КонецЕсли;
		
		МассивКвалификаций = Новый Массив;
		МассивСтрок = Объект.КвалификацииСотрудников.НайтиСтроки(Новый Структура("Сотрудник", ТекДанные.Сотрудник));
		Для каждого Элем Из МассивСтрок Цикл
			
			МассивКвалификаций.Добавить(Элем.Квалификация);
			
		КонецЦикла;
		
		СписокВыбора = торо_ПроцедурыУправленияПерсоналом.ЗаполнитьСписокВыбораКвалификаций(ТекДанные.Сотрудник, Объект.Ссылка, Объект.Дата, ТекДанные.Квалификация, МассивКвалификаций);
		
		Элемент.СписокВыбора.Очистить();
		Для каждого Элем Из СписокВыбора Цикл
			Элемент.СписокВыбора.Добавить(Элем.Значение, Элем.Представление);
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КвалификацииСотрудниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьПредупреждение(Неопределено,НСтр("ru = 'Для добавления сотрудников необходимо выбрать организацию!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Копирование Тогда
		Отказ = Истина;
		ТекДанные = Элементы.КвалификацииСотрудников.ТекущиеДанные;
		Если ТекДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		НС = Объект.КвалификацииСотрудников.Добавить();
		НС.Сотрудник = ТекДанные.Сотрудник;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КвалификацииСотрудниковПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.УдалениеКвалификаций") Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы.КвалификацииСотрудников.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.КвалификацииСотрудников.НайтиСтроки(Новый Структура("Сотрудник, Квалификация", ТекДанные.Сотрудник, ТекДанные.Квалификация)).Количество() > 1 Тогда
		Отказ = Истина;
		Если ОтменаРедактирования Тогда
			Объект.КвалификацииСотрудников.Удалить(ТекДанные);
		Иначе
			ШаблонСообщения = НСтр("ru = 'В данном документе сотруднику %1 уже присваевается подобная квалификация!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.Сотрудник);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КвалификацииСотрудниковОсновнаяПриИзменении(Элемент)
	
	ТекДанные = Элементы.КвалификацииСотрудников.ТекущиеДанные;
		
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
	Если ТекДанные.Основная Тогда
		
		МассивСтрок = Объект.КвалификацииСотрудников.НайтиСтроки(Новый Структура("Сотрудник, Основная", ТекДанные.Сотрудник, Истина));
		
		Если МассивСтрок.Количество() > 0 Тогда
			Для каждого Строка Из МассивСтрок Цикл
				Строка.Основная = Ложь;
			КонецЦикла; 
		КонецЕсли; 
		ТекДанные.Основная      = Истина;
КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КвалификацииСотрудниковСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Справочник.Сотрудники.ФормаВыбора", Новый Структура("РежимВыбора", Истина), Элемент, Объект.Ссылка);
	
	ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГоловнаяОрганизация");
	ЭлементОтбора.ПравоеЗначение = Объект.Организация;
	ЭлементОтбора.Использование = Истина;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КвалификацииСотрудниковКвалификацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ТекДанные = Элементы.КвалификацииСотрудников.ТекущиеДанные;
		ТекДанные.Квалификация = ВыбранноеЗначение;
		ТекущаяОсновная = торо_ПроцедурыУправленияПерсоналом.ПолучитьОсновнуюКвалификацию(ТекДанные.Сотрудник, Объект.Ссылка, Объект.Дата);
		
		Если ВыбранноеЗначение = ТекущаяОсновная Тогда
			ТекДанные.Основная = Истина;
			Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.ПрисвоениеКвалификаций") Тогда
				ТекДанные.НоваяОсновная = ТекущаяОсновная;
			Иначе 
				ТекДанные.НоваяОсновная = торо_ПроцедурыУправленияПерсоналом.ПолучитьПредыдущуюОсновнуюКвалификацию(ТекДанные.Сотрудник, Объект.Ссылка, Объект.Дата);
			КонецЕсли;
		ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.УдалениеКвалификаций") Тогда
			ТекДанные.Основная = Ложь;
			ТекДанные.НоваяОсновная = ТекущаяОсновная;
		КонецЕсли;
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура УстановитьВнешнийВидФормы()
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.ПрисвоениеКвалификаций") Тогда
		Элементы.КвалификацииСотрудниковКвалификация.Заголовок = НСтр("ru = 'Присваиваемая квалификация'");
		Элементы.КвалификацииСотрудниковКвалификация.РежимВыбораИзСписка = Ложь;
		Элементы.КвалификацииСотрудниковКвалификация.КнопкаСпискаВыбора = Ложь;
		Элементы.КвалификацииСотрудниковКвалификация.КнопкаВыбора = Истина;
		Элементы.КвалификацииСотрудниковОсновная.Доступность = Истина;
		Элементы.КвалификацииСотрудниковНоваяОсновная.Заголовок = НСтр("ru = 'Текущая основная'");
		Элементы.КвалификацииСотрудниковНоваяОсновная.Доступность = Ложь;
	Иначе
		Элементы.КвалификацииСотрудниковКвалификация.Заголовок = НСтр("ru = 'Удаляемая квалификация'");
		Элементы.КвалификацииСотрудниковКвалификация.РежимВыбораИзСписка = Истина;
		Элементы.КвалификацииСотрудниковКвалификация.КнопкаСпискаВыбора = Истина;
		Элементы.КвалификацииСотрудниковКвалификация.КнопкаВыбора = Ложь;
		Элементы.КвалификацииСотрудниковОсновная.Доступность = Ложь;
		Элементы.КвалификацииСотрудниковНоваяОсновная.Заголовок = НСтр("ru = 'Новая основная'");
		Элементы.КвалификацииСотрудниковНоваяОсновная.Доступность = Истина;
		ЭтаФорма.Заголовок = СтрЗаменить(ЭтаФорма.Заголовок, "Присвоение квалификаций сотрудникам", "Удаление квалификаций сотрудников");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
	
		ОткрытьФорму("Справочник.Организации.ФормаВыбора",,ДополнительныеПараметры.Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьТекущуюОсновную(СтрокаСотрудник = Неопределено)
	
	Если СтрокаСотрудник = Неопределено Тогда 
		СтрокаСотрудник = Элементы.КвалификацииСотрудников.ТекущиеДанные;
	КонецЕсли;
	
	Если СтрокаСотрудник <> Неопределено И ЗначениеЗаполнено(СтрокаСотрудник.Сотрудник) Тогда
			
		ТекОсновнаяКвалификация = торо_ПроцедурыУправленияПерсоналом.ПолучитьОсновнуюКвалификацию(СтрокаСотрудник.Сотрудник, Объект.Ссылка, Объект.Дата);
		СтрокаСотрудник.НоваяОсновная = ТекОсновнаяКвалификация;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КвалификацииСотрудниковСотрудникПриИзменении(Элемент)
	ОпределитьТекущуюОсновную();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Для каждого Строка Из Объект.КвалификацииСотрудников Цикл
		ОпределитьТекущуюОсновную(Строка);
		
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийСКвалификациями.УдалениеКвалификаций") Тогда
			Строка.Квалификация = ПредопределенноеЗначение("Справочник.торо_КвалификацииРемонтногоПерсонала.ПустаяСсылка");
			Строка.Основная = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");	
	
КонецПроцедуры


#КонецОбласти