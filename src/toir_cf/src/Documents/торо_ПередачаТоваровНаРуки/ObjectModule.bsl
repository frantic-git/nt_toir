#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.торо_РезервПодВнутреннийЗаказ") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Для Каждого ТекСтрокаДополнительныеРеквизиты Из ДанныеЗаполнения.ДополнительныеРеквизиты Цикл
			НоваяСтрока = ДополнительныеРеквизиты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаДополнительныеРеквизиты);
		КонецЦикла;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаТовары);
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ИзРабочегоМестаПередачаВозврат") И ДанныеЗаполнения.ИзРабочегоМестаПередачаВозврат Тогда
		Таблица = ПолучитьИзВременногоХранилища(ДанныеЗаполнения.АдресХранилища);
		Дата = ТекущаяДата();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Для Каждого Строка Из Таблица Цикл
			НоваяСтрокаТЧ = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, Строка);
			НоваяСтрокаТЧ.Количество = Строка.КПеремещению;
			НоваяСтрокаТЧ.КоличествоУпаковок = Строка.КПеремещению;
		КонецЦикла;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Склад = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойСклад");
	КонецЕсли;

	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ФОИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	ФОИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	ИспользоватьКонтрольОстатков = Константы.торо_ИспользоватьКонтрольОтрицательныхОстатков.Получить();
	
	Блокировка = Новый БлокировкаДанных;

	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");

	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_РезервыНаРуках");
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");	

	Блокировка.Заблокировать();

	Движения.торо_РезервыНаРуках.Записывать = Истина;
	Движения.торо_РезервыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.торо_ТоварыНаРуках.Записывать = Истина; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	               |	&Характеристика КАК Характеристика,
	               |	СУММА(ТабличнаяЧасть.Количество) КАК Количество,
	               |	&Серия КАК Серия,
	               |	ТабличнаяЧасть.Склад КАК Склад,
	               |	&ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	               |ПОМЕСТИТЬ ТабТовары
	               |ИЗ
	               |	Документ.торо_ПередачаТоваровНаРуки.Товары КАК ТабличнаяЧасть
	               |ГДЕ
	               |	ТабличнаяЧасть.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабличнаяЧасть.Номенклатура,
	               |	ТабличнаяЧасть.Характеристика,
	               |	ТабличнаяЧасть.Серия,
	               |	ТабличнаяЧасть.Склад
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Склад,
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.Серия КАК Серия,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	               |ПОМЕСТИТЬ ТоварыНаСкладах
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&Дата,
	               |			(Номенклатура, Характеристика, Серия, Склад) В
	               |				(ВЫБРАТЬ
	               |					Таблица.Номенклатура,
	               |					Таблица.Характеристика,
	               |					Таблица.Серия,
	               |					Таблица.Склад
	               |				ИЗ
	               |					ТабТовары КАК Таблица)) КАК ТоварыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Склад,
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_РезервыНаСкладахОстатки.Склад КАК Склад,
	               |	торо_РезервыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	торо_РезервыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	торо_РезервыНаСкладахОстатки.Серия КАК Серия,
	               |	торо_РезервыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ПОМЕСТИТЬ РезервыНаСкладах
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(
	               |			&Дата,
	               |			ЗаказНаВнутреннееПотребление <> &ЗаказНаВнутреннееПотребление
	               |				И (Номенклатура, Характеристика, Серия, Склад) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика,
	               |						Таблица.Серия,
	               |						Таблица.Склад
	               |					ИЗ
	               |						ТабТовары КАК Таблица)) КАК торо_РезервыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Склад,
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Склад КАК Склад,
	               |	ТабТовары.Серия КАК Серия,
	               |	ТабТовары.Количество КАК Количество,
	               |	ЕСТЬNULL(ТоварыНаСкладах.ВНаличииОстаток, 0) - СУММА(ЕСТЬNULL(Резервы.КоличествоОстаток, 0)) КАК СвобОстаток,
	               |	ТабТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	               |ПОМЕСТИТЬ Остатки
	               |ИЗ
	               |	ТабТовары КАК ТабТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладах КАК ТоварыНаСкладах
	               |		ПО ТабТовары.Номенклатура = ТоварыНаСкладах.Номенклатура
	               |			И ТабТовары.Характеристика = ТоварыНаСкладах.Характеристика
	               |			И ТабТовары.Серия = ТоварыНаСкладах.Серия
	               |			И ТабТовары.Склад = ТоварыНаСкладах.Склад
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РезервыНаСкладах КАК Резервы
	               |		ПО ТабТовары.Склад = Резервы.Склад
	               |			И ТабТовары.Номенклатура = Резервы.Номенклатура
	               |			И ТабТовары.Характеристика = Резервы.Характеристика
	               |			И ТабТовары.Серия = Резервы.Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабТовары.Номенклатура,
	               |	ТабТовары.Характеристика,
	               |	ТабТовары.Склад,
	               |	ТабТовары.Серия,
	               |	ТабТовары.ЗаказНаВнутреннееПотребление,
	               |	ТоварыНаСкладах.ВНаличииОстаток,
	               |	ТабТовары.Количество
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Остатки.Номенклатура КАК Номенклатура,
	               |	Остатки.Склад КАК Склад,
	               |	Остатки.Характеристика КАК Характеристика,
	               |	Остатки.Серия КАК Серия,
	               |	Остатки.СвобОстаток - Остатки.Количество КАК ОтрОстаток,
	               |	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ИЗ
	               |	Остатки КАК Остатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |		ПО Остатки.Номенклатура = СпрНоменклатура.Ссылка
	               |ГДЕ
	               |	Остатки.СвобОстаток - Остатки.Количество < 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("ЗаказНаВнутреннееПотребление", ЗаказНаВнутреннееПотребление);
	Если ФОИспользоватьСерии Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Серия", "ТабличнаяЧасть.Серия");
	Иначе
		Запрос.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	Если ФОИспользоватьХарактеристики Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Характеристика", "ТабличнаяЧасть.Характеристика"); 
	Иначе
		Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	КонецЕсли;

	РезЗапроса = Запрос.Выполнить();
	
	Если Не РезЗапроса.Пустой() Тогда 
		ВыборкаОтрОстатков = РезЗапроса.Выбрать();
		
		Если ИспользоватьКонтрольОстатков Тогда
			ПолеДляВыводаОшибки = "Склад";
		Иначе
			ПолеДляВыводаОшибки = "";
		КонецЕсли; 
		
		Пока ВыборкаОтрОстатков.Следующий() Цикл
			
			ШаблонСообщения = "Номенклатура %Номенклатура% / %Характеристика% / %Серия%.
				|Превышен свободный остаток товара на складе %СкладОтправитель% на %Количество% %ЕдИзм%";
			
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", ВыборкаОтрОстатков.Номенклатура);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%СкладОтправитель%", ВыборкаОтрОстатков.Склад);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Количество%", - Число(ВыборкаОтрОстатков.ОтрОстаток));
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%ЕдИзм%", ВыборкаОтрОстатков.ЕдиницаИзмерения);
			
			Если ФОИспользоватьСерии Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Серия%", ВыборкаОтрОстатков.Серия);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Серия%", "");
			КонецЕсли;
			
			Если ФОИспользоватьХарактеристики Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Характеристика%", ВыборкаОтрОстатков.Характеристика);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Характеристика%", "");
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения, ЭтотОбъект, ПолеДляВыводаОшибки, , Отказ);
			
		КонецЦикла;
		
		Если Отказ И ИспользоватьКонтрольОстатков Тогда 
			Возврат;
		ИначеЕсли НЕ ИспользоватьКонтрольОстатков Тогда  
			Отказ = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Количество КАК Количество,
	               |	ТабТовары.Серия КАК Серия,
	               |	ТабТовары.Склад КАК Склад
	               |ИЗ
	               |	ТабТовары КАК ТабТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_РезервыНаСкладахОстатки.Склад КАК Склад,
	               |	торо_РезервыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	торо_РезервыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	торо_РезервыНаСкладахОстатки.Серия КАК Серия,
	               |	торо_РезервыНаСкладахОстатки.ДокументРезерв КАК ДокументРезерв,
	               |	торо_РезервыНаСкладахОстатки.КоличествоОстаток КАК Количество,
	               |	торо_РезервыНаСкладахОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(
	               |			&Дата,
	               |			ЗаказНаВнутреннееПотребление = &ЗаказНаВнутреннееПотребление
	               |				И (Номенклатура, Характеристика, Серия, Склад) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика,
	               |						Таблица.Серия,
	               |						Таблица.Склад
	               |					ИЗ
	               |						ТабТовары КАК Таблица)) КАК торо_РезервыНаСкладахОстатки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Количество УБЫВ";
	РезЗапроса = Запрос.ВыполнитьПакет();
	ТЧТовары = РезЗапроса[0].Выгрузить(); 
	Если НЕ РезЗапроса[1].Пустой() Тогда 
		Резервы = РезЗапроса[1].Выгрузить();
		Резервы.Индексы.Добавить("Склад");
		Резервы.Индексы.Добавить("Номенклатура");
		Резервы.Индексы.Добавить("Характеристика");
		Резервы.Индексы.Добавить("Серия");
	Иначе
		Резервы = Новый ТаблицаЗначений;
	КонецЕсли;
	СтрПоиска = Новый Структура("Номенклатура, Характеристика, Склад, Серия");
	Для Каждого ТекСтрокаТовары Из ТЧТовары Цикл
		ДвижениеРасход = Движения.ТоварыНаСкладах.Добавить();
		ДвижениеПриход = Движения.торо_ТоварыНаРуках.Добавить();
		
		ДвижениеРасход.Период = Дата;
		ДвижениеРасход.Номенклатура = ТекСтрокаТовары.Номенклатура;
		ДвижениеРасход.Склад = ТекСтрокаТовары.Склад;
		ДвижениеРасход.ВНаличии = ТекСтрокаТовары.Количество;
		Если ФОИспользоватьСерии Тогда
			ДвижениеРасход.Серия = ТекСтрокаТовары.Серия;
		КонецЕсли; 	
		Если ФОИспользоватьХарактеристики Тогда
			ДвижениеРасход.Характеристика = ТекСтрокаТовары.Характеристика;
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(ДвижениеПриход, ДвижениеРасход);
		
		ДвижениеПриход.ЗаказНаВнутреннееПотребление = ЗаказНаВнутреннееПотребление;
		ДвижениеПриход.Количество = ТекСтрокаТовары.Количество;
		
		ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
		ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
		
		Если Резервы.Количество() Тогда
			ЗаполнитьЗначенияСвойств(СтрПоиска, ТекСтрокаТовары);
			НайденныеРезервы = Резервы.НайтиСтроки(СтрПоиска);
			Количество = ТекСтрокаТовары.Количество;
			Для Каждого Резерв Из НайденныеРезервы Цикл
				Если Количество = 0 Тогда
					Прервать;
				КонецЕсли;
				
				ДоступныйКПереносуРезерв = Мин(Количество, Резерв.Количество);
				
				ДвижениеПриход = Движения.торо_РезервыНаРуках.Добавить();
				ДвижениеРасход = Движения.торо_РезервыНаСкладах.Добавить();
				
				ЗаполнитьЗначенияСвойств(ДвижениеРасход, Резерв);				
				ДвижениеРасход.Период = Дата;
				ДвижениеРасход.Количество = ДоступныйКПереносуРезерв;
				ЗаполнитьЗначенияСвойств(ДвижениеПриход, ДвижениеРасход);
				Количество = Количество - ДоступныйКПереносуРезерв;
				
				ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход;
				ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры Тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ФОИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	Если ФОИспользоватьСерииНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, Отказ, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли