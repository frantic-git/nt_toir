#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СформироватьЖурналДефектов(Команда)
	
	Отказ = Ложь;

	Если ЗначениеЗаполнено(НачПериода) Тогда
		Если НЕ ЗначениеЗаполнено(КонПериода) Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо заполнить дату окончания периода.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		ИначеЕсли КонПериода < НачПериода Тогда
			ТекстСообщения = НСтр("ru = 'Дата окончания периода меньше даты его начала.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(КонПериода) Тогда
		Если НЕ ЗначениеЗаполнено(НачПериода) Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо заполнить дату начала периода.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		ИначеЕсли КонПериода < НачПериода Тогда
			ТекстСообщения = НСтр("ru = 'Дата окончания периода меньше даты его начала.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	КонецЕсли;		
 	Результат=ПолучитьСписокДефектов();	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЖурналаДефектов(Команда)
	
	СформироватьЖурналДефектов(Неопределено);
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОРНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокДоступныхСтатусов = торо_СтатусыОРВУчете.СписокСтатусовДляПодбора();
	ПараметрыОтбора = Новый Структура("СписокСтатусов", СписокДоступныхСтатусов);	
	ОткрытьФорму("Справочник.торо_ОбъектыРемонта.ФормаВыбора", ПараметрыОтбора, Элемент,,
		ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСписокДефектов()		
	
		ТабДок = Результат;
		ТабДок.Очистить();
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_ВыявленныеДефекты.ПФ_MXL_ЖурналДефектов");
		// Заголовок
		Область = Макет.ПолучитьОбласть("Заголовок");
		ТабДок.Вывести(Область);
		
		// Отбор
		ВывестиОбласть = Ложь;
		Область = Макет.ПолучитьОбласть("Отбор");
		Если ЗначениеЗаполнено(Организация) Тогда
			ВывестиОбласть					= Истина;		
			Область.Параметры.Организация	= торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(Организация);;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
			ВывестиОбласть								= Истина;
			Область.Параметры.ПодразделениеОрганизации	= ПодразделениеОрганизации;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОР) Тогда
			ВывестиОбласть			= Истина;
			Область.Параметры.ОР	= торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОР);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НачПериода) И ЗначениеЗаполнено(КонПериода) Тогда
			ВывестиОбласть			= Истина;
			Область.Параметры.Дата	= "Период с: " + НачПериода + " по: " + КонПериода;
		КонецЕсли;
		
		Если ВывестиОбласть Тогда
			ТабДок.Вывести(Область);
		КонецЕсли;
		
		Запрос = Новый Запрос();		
		Запрос.Текст = "ВЫБРАТЬ
		               |	торо_СтатусыРемонтовСрезПоследних.IDРемонта КАК IDРемонта,
		               |	торо_СтатусыРемонтовСрезПоследних.Период КАК Период,
		               |	торо_СтатусыРемонтовСрезПоследних.Регистратор КАК Регистратор,
		               |	торо_СтатусыРемонтовСрезПоследних.НомерСтроки КАК НомерСтроки,
		               |	торо_СтатусыРемонтовСрезПоследних.Активность КАК Активность,
		               |	торо_СтатусыРемонтовСрезПоследних.Статус КАК Статус
		               |ПОМЕСТИТЬ ВТ_СтатусыРемонтов
		               |ИЗ
		               |	РегистрСведений.торо_СтатусыРемонтов.СрезПоследних КАК торо_СтатусыРемонтовСрезПоследних
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	торо_ВыявленныеДефектыСписокДефектов.ID КАК ID,
		               |	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта КАК ОбъектРемонта,
		               |	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент КАК ОтказавшийЭлемент,
		               |	торо_ВыявленныеДефектыСписокДефектов.ДефектОписание КАК ДефектОписание,
		               |	торо_ВыявленныеДефектыСписокДефектов.ДефектПричина КАК ДефектПричина,
		               |	торо_ВыявленныеДефектыСписокДефектов.ВидДефекта КАК ВидДефекта,
		               |	торо_ВыявленныеДефектыСписокДефектов.ПоследствияДефекта КАК ПоследствияДефекта,
		               |	торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение КАК НаправлениеНаУстранение,
		               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка.Организация КАК Организация,
		               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка.ДатаОбнаружения КАК ДатаОбнаружения,
		               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка.Ответственный КАК Ответственный,
		               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка.Подразделение КАК Подразделение,
		               |	ВЫБОР
		               |		КОГДА ВТ_СтатусыРемонтов.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыРемонтов.Выполнен)
		               |			ТОГДА ""Устранен""
		               |		ИНАЧЕ ""Не устранен""
		               |	КОНЕЦ КАК Устранен,
		               |	ВТ_СтатусыРемонтов.Статус КАК СостояниеРабот
		               |ИЗ
		               |	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыРемонтов КАК ВТ_СтатусыРемонтов
		               |		ПО торо_ВыявленныеДефектыСписокДефектов.ID = ВТ_СтатусыРемонтов.IDРемонта
		               |ГДЕ
		               |	((НЕ &ИспользоватьОтборПоОрганизации
		               |				ИЛИ торо_ВыявленныеДефектыСписокДефектов.Ссылка.Организация = &Организация)
					   |				И (НЕ &ИспользоватьОтборПоПодразделению
		               |					ИЛИ торо_ВыявленныеДефектыСписокДефектов.Ссылка.Подразделение = &Подразделение)
		               |				И (НЕ &ИспользоватьОтборПоОбъектуРемонта
		               |					ИЛИ торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта = &ОбъектРемонта)
		               |				И торо_ВыявленныеДефектыСписокДефектов.Ссылка.ДатаОбнаружения >= &ДатаНачала
		               |				И (торо_ВыявленныеДефектыСписокДефектов.Ссылка.ДатаОбнаружения <= &ДатаОкончания
		               |					ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		               |				И торо_ВыявленныеДефектыСписокДефектов.Ссылка.Проведен
		               |				И (&ОтборПоСтатусуДефекта
		               |				ИЛИ ВТ_СтатусыРемонтов.Статус = &Статус))
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка.ДатаОбнаружения";	
		
		// СписокДефектов
		Область = Макет.ПолучитьОбласть("СписокДефектовШапка");
		ТабДок.Вывести(Область);
		ОбластьСписокДефектов = Макет.ПолучитьОбласть("СписокДефектов");
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ИспользоватьОтборПоОрганизации", ЗначениеЗаполнено(Организация));
		
		Запрос.УстановитьПараметр("ОбъектРемонта", ОР);
		Запрос.УстановитьПараметр("ИспользоватьОтборПоОбъектуРемонта", ЗначениеЗаполнено(ОР));
		
		Запрос.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("ИспользоватьОтборПоПодразделению", ЗначениеЗаполнено(ПодразделениеОрганизации));
		
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачПериода));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(КонПериода));
		
		Запрос.УстановитьПараметр("ОтборПоСтатусуДефекта", НЕ ЗначениеЗаполнено(ОтборПоСтатусу));
		Запрос.УстановитьПараметр("Статус", ОтборПоСтатусу);
			
		ВыборкаЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗапроса.Следующий() Цикл 
			ОбластьСписокДефектов.Параметры.Заполнить(ВыборкаЗапроса);
			ОбластьСписокДефектов.Параметры.ОбъектРемонтаПредставление = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаЗапроса.ОбъектРемонта);
			ОбластьСписокДефектов.Параметры.ОтказавшийЭлементПредставление = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаЗапроса.ОтказавшийЭлемент);
			ТабДок.Вывести(ОбластьСписокДефектов);
		КонецЦикла;
		
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Защита = Ложь;
		ТабДок.ТолькоПросмотр = Истина;
		ТабДок.ОтображатьЗаголовки = Ложь;
		// Зададим параметры макета
		ТабДок.ПолеСверху         = 0;
		ТабДок.ПолеСлева          = 0;
		ТабДок.ПолеСнизу          = 0;
		ТабДок.ПолеСправа         = 0;
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.АвтоМасштаб  = ИСТИНА;
		
		Возврат ТабДок;

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыОтбора") Тогда
		КонПериода = Параметры.ПараметрыОтбора.КонПериода;
		НачПериода = Параметры.ПараметрыОтбора.НачПериода;
		ОР = Параметры.ПараметрыОтбора.ОР;
		Организация = Параметры.ПараметрыОтбора.Организация;
		ПодразделениеОрганизации = Параметры.ПараметрыОтбора.ПодразделениеДляДок;
	Иначе 
		НачПериода = НачалоГода(ТекущаяДата());
		КонПериода = КонецГода(ТекущаяДата());
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР","ОсновнаяОрганизация",Истина);
		ПодразделениеОрганизации = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР","ОсновноеПодразделение",Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти