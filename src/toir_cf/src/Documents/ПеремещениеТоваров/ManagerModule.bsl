#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Накладная на перемещение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаПеремещение";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"НакладнаяНаПеремещение",
			НСтр("ru = 'Накладная на перемещение'"),
			СформироватьПечатнуюФормуНакладнойНаПеремещениеТоваров(МассивОбъектов, ОбъектыПечати),
			,
		    "Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение");
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция СформироватьПечатнуюФормуНакладнойНаПеремещениеТоваров(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_Накладная";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение");
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документы", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеТоваров.Организация КАК Организация,
	               |	ПеремещениеТоваров.СкладОтправитель КАК СкладОтправитель,
	               |	ПеремещениеТоваров.СкладПолучатель КАК СкладПолучатель,
	               |	ПеремещениеТоваров.Номер КАК Номер,
	               |	ПеремещениеТоваров.Дата КАК Дата,
	               |	ПеремещениеТоваров.Ссылка КАК Документ,
	               |	ПеремещениеТоваровТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	               |	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	               |	ПеремещениеТоваровТовары.Серия КАК Серия,
	               |	СУММА(ПеремещениеТоваровТовары.КоличествоУпаковок) КАК КолУп,
	               |	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	               |	ПеремещениеТоваровТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	               |	ПеремещениеТоваровТовары.Номенклатура.Артикул КАК Артикул,
	               |	ПеремещениеТоваровТовары.Характеристика.Наименование КАК НаименованиеХарактеристики
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	               |		ПО ПеремещениеТоваровТовары.Ссылка = ПеремещениеТоваров.Ссылка
	               |ГДЕ
	               |	ПеремещениеТоваров.Ссылка В(&Документы)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПеремещениеТоваров.Организация,
	               |	ПеремещениеТоваров.СкладОтправитель,
	               |	ПеремещениеТоваров.СкладПолучатель,
	               |	ПеремещениеТоваров.Номер,
	               |	ПеремещениеТоваров.Дата,
	               |	ПеремещениеТоваров.Ссылка,
	               |	ПеремещениеТоваровТовары.Номенклатура,
	               |	ПеремещениеТоваровТовары.Характеристика,
	               |	ПеремещениеТоваровТовары.Серия,
	               |	ПеремещениеТоваровТовары.Номенклатура.ЕдиницаИзмерения,
	               |	ПеремещениеТоваровТовары.Номенклатура.Артикул,
	               |	ПеремещениеТоваровТовары.Характеристика.Наименование,
	               |	ПеремещениеТоваровТовары.Номенклатура.НаименованиеПолное
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Документ,
	               |	Номенклатура,
	               |	НаименованиеХарактеристики
	               |ИТОГИ
	               |	МАКСИМУМ(Организация),
	               |	МАКСИМУМ(СкладОтправитель),
	               |	МАКСИМУМ(СкладПолучатель),
	               |	МАКСИМУМ(Номер),
	               |	МАКСИМУМ(Дата)
	               |ПО
	               |	Документ";
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
	
	ЭтоПервый = Истина;
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		Если НЕ ЭтоПервый Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭтоПервый = Ложь;
		
		ОбластьЗаголовкаПеремещение         = Макет.ПолучитьОбласть("ЗаголовокПеремещение");
		ОбластьЗаголовкаПеремещение.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокумент.Организация);
		ОбластьЗаголовкаПеремещение.Параметры.СкладОтправитель = ВыборкаДокумент.СкладОтправитель;
		ОбластьЗаголовкаПеремещение.Параметры.СкладПолучатель = ВыборкаДокумент.СкладПолучатель;
		ОбластьЗаголовкаПеремещение.Параметры.Дата = ВыборкаДокумент.Дата;
		ОбластьЗаголовкаПеремещение.Параметры.Номер = ВыборкаДокумент.Номер;
		ТабличныйДокумент.Вывести(ОбластьЗаголовкаПеремещение);
				
		ВыборкаТоваров = ВыборкаДокумент.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
		ИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
		
		Если ИспользоватьХарактеристики И НЕ ИспользоватьСерии Тогда  
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыФО");
			ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика";
		ИначеЕсли ИспользоватьСерии И НЕ ИспользоватьХарактеристики Тогда
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыФО");
			ОбластьШапка.Параметры.ЗаголовокКолонки = "Серия";
		ИначеЕсли ИспользоватьХарактеристики И ИспользоватьСерии Тогда
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыФО");
			ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика, серия";
		Иначе 
			ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		КонецЕсли;
		ОбластьПодвал     = Макет.ПолучитьОбласть("ПодвалТаблицы");

		ТабличныйДокумент.Вывести(ОбластьШапка);
		Счетчик = 0;
		Пока ВыборкаТоваров.Следующий() Цикл
			Счетчик = Счетчик + 1;
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТоваров);
			ОбластьСтрока.Параметры.НомерСтроки = Счетчик;			
			ТоварыХарактеристика = "";
			ТоварыСерия = "";
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТоваров);
			Если ИспользоватьХарактеристики Тогда  
				ТоварыХарактеристика = ?(ЗначениеЗаполнено(ВыборкаТоваров.Характеристика),ВыборкаТоваров.Характеристика, 
				                          ?(ЗначениеЗаполнено(ВыборкаТоваров.НаименованиеХарактеристики),ВыборкаТоваров.НаименованиеХарактеристики,""));
			КонецЕсли;
			Если ИспользоватьСерии Тогда
				ТоварыСерия = ?(ЗначениеЗаполнено(ВыборкаТоваров.Серия), ВыборкаТоваров.Серия, "");
			КонецЕсли;
			Если ЗначениеЗаполнено(ТоварыХарактеристика) И ЗначениеЗаполнено(ТоварыСерия) Тогда
				ОбластьСтрока.Параметры.ХарактеристикаСерия = Строка(ТоварыХарактеристика) + ", " + Строка(ТоварыСерия);
			ИначеЕсли ИспользоватьХарактеристики ИЛИ ИспользоватьСерии Тогда 
				ОбластьСтрока.Параметры.ХарактеристикаСерия = Строка(ТоварыХарактеристика) + Строка(ТоварыСерия);
			КонецЕсли;
							
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
					
		Подписи = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(Подписи);
		
	КонецЦикла;
		
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	// ТОиР
	ТабличныйДокумент.КлючПараметровПечати = "торо_ПечатьНакладнойНаПеремещениеТоваров";
	// ТОиР
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
Функция ПолучитьМассивыРеквизитов( МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли