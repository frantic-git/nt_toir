#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	Документы.ПеремещениеТоваров.ПолучитьМассивыРеквизитов( 
		МассивВсехРеквизитов, 
		МассивРеквизитовОперации);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;

	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);

	Если ЗначениеЗаполнено(СкладОтправитель) И СкладОтправитель = СкладПолучатель Тогда

		ТекстСообщения = НСтр("ru = 'Один склад не может быть как отправителем, так и получателем. Измените один из складов.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "СкладОтправитель",, Отказ);

	КонецЕсли;

	// Проверка указания характеристик.
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	ФОИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	Если ФОИспользоватьСерииНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	КонецЕсли;	
	
	ОбщегоНазначенияУТКлиентСервер.ЗаполнитьМассивНепроверяемыхРеквизитов(
		МассивВсехРеквизитов,
		МассивРеквизитовОперации,
		МассивНепроверяемыхРеквизитов);
				
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	ФОИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	ФОИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	               |	ПеремещениеТоваров.Характеристика КАК Характеристика,
	               |	СУММА(ПеремещениеТоваров.Количество) КАК Количество,
	               |	ПеремещениеТоваров.Серия КАК Серия,
	               |	ПеремещениеТоваров.Номенклатура.ВидНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры
				   |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	               |ГДЕ
	               |	ПеремещениеТоваров.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПеремещениеТоваров.Номенклатура,
	               |	ПеремещениеТоваров.Характеристика,
	               |	ПеремещениеТоваров.Серия,
	               |	ПеремещениеТоваров.Номенклатура.ВидНоменклатуры.ТипНоменклатуры";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТЧТовары = Запрос.Выполнить().Выгрузить();

	Для Каждого ТекСтрокаТовары Из ТЧТовары Цикл
		Если ТекСтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар 
			ИЛИ ТекСтрокаТовары.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
			
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения    = ВидДвиженияНакопления.Приход;
			Движение.Период         = Дата;
			Движение.Номенклатура   = ТекСтрокаТовары.Номенклатура;
			Движение.Склад          = СкладПолучатель;
			Движение.ВНаличии       = ТекСтрокаТовары.Количество;
			
			Если ФОИспользоватьХарактеристики Тогда
			    Движение.Характеристика = ТекСтрокаТовары.Характеристика;
			КонецЕсли;
			
			Если ФОИспользоватьСерии Тогда
				Движение.Серия      = ТекСтрокаТовары.Серия;
			КонецЕсли;		
			
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения    = ВидДвиженияНакопления.Расход;
			Движение.Период         = Дата;
			Движение.Номенклатура   = ТекСтрокаТовары.Номенклатура;
			Движение.Склад          = СкладОтправитель;
			Движение.ВНаличии       = ТекСтрокаТовары.Количество;
			
			Если ФОИспользоватьХарактеристики Тогда
				Движение.Характеристика = ТекСтрокаТовары.Характеристика;
			КонецЕсли;
			
			Если ФОИспользоватьСерии Тогда
				Движение.Серия      = ТекСтрокаТовары.Серия;
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Записать();
		
	ТабТовары = Товары.Выгрузить();
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	&Серия КАК Серия,
	               |	&Характеристика КАК Характеристика
	               |ПОМЕСТИТЬ ТабТовары
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары КАК ТабТовары
	               |ГДЕ
	               |	ТабТовары.Ссылка = &Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.Серия КАК Серия,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	               |ПОМЕСТИТЬ ТоварыНаСкладах
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Склад = &СкладОтправитель) КАК ТоварыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_РезервыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	торо_РезервыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	торо_РезервыНаСкладахОстатки.Серия КАК Серия,
	               |	торо_РезервыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ПОМЕСТИТЬ РезервыНаСкладах
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(&Дата, Склад = &СкладОтправитель) КАК торо_РезервыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Серия КАК Серия,
	               |	ЕСТЬNULL(ТоварыНаСкладах.ВНаличииОстаток, 0) - ЕСТЬNULL(Резервы.КоличествоОстаток, 0) КАК ВНаличииОстаток,
	               |	ВЫРАЗИТЬ(ТабТовары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ИЗ
	               |	ТабТовары КАК ТабТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладах КАК ТоварыНаСкладах
	               |		ПО (ТоварыНаСкладах.Номенклатура = ТабТовары.Номенклатура)
	               |			И (ТоварыНаСкладах.Характеристика = ТабТовары.Характеристика)
	               |			И (ТоварыНаСкладах.Серия = ТабТовары.Серия)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РезервыНаСкладах КАК Резервы
	               |		ПО ТабТовары.Номенклатура = Резервы.Номенклатура
	               |			И ТабТовары.Характеристика = Резервы.Характеристика
	               |			И ТабТовары.Серия = Резервы.Серия";
		
		Запрос.УстановитьПараметр("Ссылка",	Ссылка);
		Запрос.УстановитьПараметр("Дата", Дата + 1);
		Запрос.УстановитьПараметр("СкладОтправитель", СкладОтправитель);
		
		Если ФОИспользоватьСерии Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Серия", "ТабТовары.Серия");
		Иначе
			Запрос.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
		КонецЕсли;    
		
		Если ФОИспользоватьХарактеристики Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Характеристика", "ТабТовары.Характеристика");
		Иначе  
			Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		КонецЕсли;    
		
		Выборка = Запрос.Выполнить().Выбрать();   		

		Пока Выборка.Следующий() Цикл
			Если Выборка.ВНаличииОстаток < 0 Тогда
				
				ШаблонСообщения = "Номенклатура %Номенклатура% / %Характеристика% / %Серия%.
				|Превышен свободный остаток товара на складе %СкладОтправитель% на %Количество% %ЕдИзм%";
				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Номенклатура%",     Выборка.Номенклатура);				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%СкладОтправитель%", СкладОтправитель);
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Количество%",       - Число(Выборка.ВналичииОстаток));
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%ЕдИзм%",            Выборка.ЕдиницаИзмерения);
				
				Если ФОИспользоватьСерии Тогда
					ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Серия%", Выборка.Серия);
				Иначе 
					ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Серия%", "");
				КонецЕсли;
				
				Если ФОИспользоватьХарактеристики Тогда
					ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Характеристика%", Выборка.Характеристика);
				Иначе 
					ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Характеристика%", "");
				КонецЕсли;
				
				ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения,ЭтотОбъект,"СкладОтправитель",,Отказ);
				
			КонецЕсли;
		КонецЦикла;	
		Если Не Константы.торо_ИспользоватьКонтрольОтрицательныхОстатков.Получить() Тогда
			Отказ = Ложь;
		КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Если ДанныеЗаполнения.Свойство("Товары") Тогда
			Для каждого Строка Из ДанныеЗаполнения.Товары Цикл
				НоваяСтрока = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			КонецЦикла; 
		КонецЕсли; 
		Если ДанныеЗаполнения.Свойство("ИзРабочегоМестаМТО") И ДанныеЗаполнения.ИзРабочегоМестаМТО Тогда
			Дата = ТекущаяДата();
			Если ДанныеЗаполнения.Серии.Количество() = 0 Тогда
				СтрокаТЧ = Товары.Добавить();
				СтрокаТЧ.Номенклатура = ДанныеЗаполнения.Номенклатура;
				СтрокаТЧ.Характеристика = ДанныеЗаполнения.Характеристика;
				СтрокаТЧ.Количество = ДанныеЗаполнения.Количество;
				СтрокаТЧ.КоличествоУпаковок = ДанныеЗаполнения.Количество;
			Иначе
				Для Каждого Соответствие Из ДанныеЗаполнения.Серии Цикл
					СтрокаТЧ = Товары.Добавить();
					СтрокаТЧ.Номенклатура = ДанныеЗаполнения.Номенклатура;
					СтрокаТЧ.Характеристика = ДанныеЗаполнения.Характеристика;
					СтрокаТЧ.Серия = Соответствие.Ключ;
					СтрокаТЧ.Количество = Соответствие.Значение;
					СтрокаТЧ.КоличествоУпаковок = Соответствие.Значение;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнаяОрганизация");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СкладОтправитель) Тогда
		СкладОтправитель = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойСклад");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный");
		Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
			Ответственный = Пользователи.ТекущийПользователь();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		 торо_Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#КонецЕсли