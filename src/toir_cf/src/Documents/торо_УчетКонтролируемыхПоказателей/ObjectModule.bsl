#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа.

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") 
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.торо_ВыявленныеДефекты")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия")
		Тогда
		ЗаполнитьПоказателиИзТК(Основание);
		Организация = Основание.Организация;
		Подразделение = Основание.Подразделение;
				
	ИначеЕсли ТипЗнч(Основание)=Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		Если ЗначениеЗаполнено(Основание) Тогда
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "Организация, Подразделение");
			Организация = Реквизиты.Организация;
			Подразделение = Реквизиты.Подразделение;
		КонецЕсли;
		
		Дата = ТекущаяДата();
		
	ИначеЕсли ТипЗнч(Основание) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Основание);
		
		Если Основание.Свойство("ОбъектРемонта") И ЗначениеЗаполнено(Основание.ОбъектРемонта) Тогда
			Дата = ТекущаяДата();
			
		  	Если Основание.Свойство("Показатель") Тогда
				НоваяСтрока = Показатели.Добавить();
				НоваяСтрока.Показатель = Основание.Показатель;
				
				ДанныеПоказателя = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(Основание.ОбъектРемонта,Основание.Показатель,Истина);
				Если ДанныеПоказателя.Количество() > 0 Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеПоказателя[0]);
				КонецЕсли;
				НоваяСтрока.ОбъектРемонта = Основание.ОбъектРемонта;
				НоваяСтрока.ДатаКонтроля = Дата;
			Иначе
				НоваяСтрока = Показатели.Добавить();
				НоваяСтрока.ОбъектРемонта = Основание.ОбъектРемонта;
				НоваяСтрока.ДатаКонтроля = Дата;
			КонецЕсли;
		ИначеЕсли Основание.Свойство("ОбъектыРемонта") Тогда
			Для каждого СтрокаОР Из Основание.ОбъектыРемонта Цикл
			    Для каждого СтрокаПоказателя Из СтрокаОР.Показатели Цикл
				    НоваяСтрока = Показатели.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПоказателя);
					НоваяСтрока.ДатаКонтроля = Дата;
					НоваяСтрока.ОбъектРемонта = СтрокаОР.ОбъектРемонта;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
			
	КонецЕсли; 
	
	Если НЕ ТипЗнч(Основание) = Тип("Структура") Тогда 
		ДокументОснование = Основание;
	КонецЕсли;
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ФО_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей = Константы.торо_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей.Получить();
	
	ТипыХарактеристик = Метаданные.ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.Тип;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Показатели.ОбъектРемонта КАК ОбъектРемонта,
		|	Показатели.Показатель КАК Показатель,
		|	Показатели.ДатаКонтроля КАК ДатаКонтроля
		|ПОМЕСТИТЬ ВТ_ПоказателиДокумента
		|ИЗ
		|	&Показатели КАК Показатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ЗначенияКонтролируемыхПоказателей.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ЗначенияКонтролируемыхПоказателей.Показатель КАК Показатель,
		|	торо_ЗначенияКонтролируемыхПоказателей.ДатаКонтроля КАК ДатаКонтроля,
		|	КОЛИЧЕСТВО(торо_ЗначенияКонтролируемыхПоказателей.Значение) КАК Значение
		|ИЗ
		|	РегистрСведений.торо_ЗначенияКонтролируемыхПоказателей КАК торо_ЗначенияКонтролируемыхПоказателей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоказателиДокумента КАК ПоказателиДокумента
		|		ПО торо_ЗначенияКонтролируемыхПоказателей.ОбъектРемонта = ПоказателиДокумента.ОбъектРемонта
		|			И торо_ЗначенияКонтролируемыхПоказателей.Показатель = ПоказателиДокумента.Показатель
		|			И торо_ЗначенияКонтролируемыхПоказателей.ДатаКонтроля = ПоказателиДокумента.ДатаКонтроля
		|			И НЕ торо_ЗначенияКонтролируемыхПоказателей.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ЗначенияКонтролируемыхПоказателей.ОбъектРемонта,
		|	торо_ЗначенияКонтролируемыхПоказателей.Показатель,
		|	торо_ЗначенияКонтролируемыхПоказателей.ДатаКонтроля
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(торо_ЗначенияКонтролируемыхПоказателей.Значение) > 0
		|";
	
	Запрос.УстановитьПараметр("Показатели", Показатели);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
	    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ШаблонСообщения = НСтр("ru='Для объекта ремонта ""%1"" на дату контроля ""%2"" уже указано значение показателя ""%3""!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаДетальныеЗаписи.ОбъектРемонта, ВыборкаДетальныеЗаписи.ДатаКонтроля, ВыборкаДетальныеЗаписи.Показатель);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	тчПоказатели = Показатели.Выгрузить();
	тчПоказатели.Колонки.Добавить("КритическийМаксимум", ТипыХарактеристик);
	тчПоказатели.Колонки.Добавить("ДопустимыйМаксимум", ТипыХарактеристик);
	тчПоказатели.Колонки.Добавить("ДопустимыйМинимум", ТипыХарактеристик);
	тчПоказатели.Колонки.Добавить("КритическийМинимум", ТипыХарактеристик);
	
	Если ФО_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей Тогда
		тчПоказатели.Индексы.Добавить("ОбъектРемонта, Показатель");
		ЗаполнитьГраничныеЗначенияПоказателей(тчПоказатели);
	КонецЕсли;
		
	// Регистр торо_ЗначенияКонтролируемыхПоказателей
	Движения.торо_ЗначенияКонтролируемыхПоказателей.Записывать = Истина;
	
	Для Каждого ТекСтрокаПоказатели Из тчПоказатели Цикл
		Движение = Движения.торо_ЗначенияКонтролируемыхПоказателей.Добавить();
		Движение.Период        = Дата;
		Если ЗначениеЗаполнено(ТекСтрокаПоказатели.ДатаКонтроля) Тогда
			Движение.ДатаКонтроля  = ТекСтрокаПоказатели.ДатаКонтроля;
		Иначе
			Движение.ДатаКонтроля  = Дата;
		КонецЕсли; 
		
		Движение.ОбъектРемонта = ТекСтрокаПоказатели.ОбъектРемонта;
		Движение.Показатель    = ТекСтрокаПоказатели.Показатель;
		Движение.Значение      = ТекСтрокаПоказатели.Значение;
		Если ФО_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей Тогда
			ПроверитьЗначениеПоказателя(ТекСтрокаПоказатели);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Константы.торо_ИспользоватьФункциональныеМеста.Получить() Тогда
		торо_РаботаСФункциональнымиМестами.ДобавитьДокументДляПроверки(Ссылка);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если Константы.торо_ИспользоватьФункциональныеМеста.Получить() Тогда
		торо_РаботаСФункциональнымиМестами.УдалитьДокументДляПроверки(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	МассивОР = ОбщегоНазначения.ВыгрузитьКолонку(Показатели, "ОбъектРемонта", Истина);
	ОбъектыРемонтаСтрокой = торо_ЗаполнениеДокументов20.СформироватьСтрокуОбъектовРемонта(МассивОР);
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьГраничныеЗначенияПоказателей(табПоказатели)
	
	СписокОбъектовРемонта = табПоказатели.ВыгрузитьКолонку("ОбъектРемонта");
	СписокПоказателей = табПоказатели.ВыгрузитьКолонку("Показатель");
	МассивПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(СписокОбъектовРемонта,СписокПоказателей,Истина);
	
	СтруктураПоиска = Новый Структура("ОбъектРемонта, Показатель");
	Для каждого СтруктураВозврата из МассивПоказателей Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтруктураВозврата);
		СтруктураПоиска.ОбъектРемонта = СтруктураВозврата.ИсходныйОР;
		НайденныеСтроки = табПоказатели.НайтиСтроки(СтруктураПоиска);
		Для каждого НайденнаяСтрока из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока, СтруктураВозврата);
			НайденнаяСтрока.ОбъектРемонта = СтруктураВозврата.ИсходныйОР;
		КонецЦикла;
	КонецЦикла;		
КонецПроцедуры

// Процедура выполняет проверку показателей и формирует сообщения 
// в случае выхода за рамки критических показателей.
//
Процедура ПроверитьЗначениеПоказателя(СтрокаПроверки)
	
	Показатель	 = СтрокаПроверки.Показатель;
	Значение	 = СтрокаПроверки.Значение;
	ОР			 = СтрокаПроверки.ОбъектРемонта;
	
	КритическийМаксимум	 = СтрокаПроверки.КритическийМаксимум;
	ДопустимыйМаксимум	 = СтрокаПроверки.ДопустимыйМаксимум;
	ДопустимыйМинимум	 = СтрокаПроверки.ДопустимыйМинимум;
	КритическийМинимум	 = СтрокаПроверки.КритическийМинимум;
	
	Если ПолучитьФункциональнуюОпцию("торо_ИспользоватьУведомленияОСобытияхСистемы") И ПолучитьФункциональнуюОпцию("торо_ИспользоватьРемонтыПоСостоянию") Тогда
		НаборЗаписей = РегистрыСведений.торо_ПараметрыОповещенияОСостоянииОборудования.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОР);
		НаборЗаписей.Отбор.Показатель.Установить(Показатель);
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Если ЗначениеЗаполнено(Запись.СобытиеВозникновенияОповещения) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ТипЗнч(Значение) = Тип("Число") 
		ИЛИ НЕ ТипЗнч(КритическийМаксимум) = Тип("Число")
		ИЛИ НЕ ТипЗнч(ДопустимыйМаксимум) = Тип("Число")
		ИЛИ НЕ ТипЗнч(ДопустимыйМинимум) = Тип("Число")
		ИЛИ НЕ ТипЗнч(КритическийМинимум) = Тип("Число")
		Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	ТекстСообщения = "";
	Если Значение > КритическийМаксимум И ЗначениеЗаполнено(КритическийМаксимум) Тогда
		ТекстСообщения = "превышает критический максимум";
	ИначеЕсли (Значение > ДопустимыйМаксимум) и (Значение <= КритическийМаксимум) И ЗначениеЗаполнено(КритическийМаксимум + ДопустимыйМаксимум) Тогда
		ТекстСообщения = "превышает допустимый максимум";
	ИначеЕсли (Значение < ДопустимыйМинимум) и (Значение >= КритическийМинимум) И ЗначениеЗаполнено(ДопустимыйМинимум + КритическийМинимум)  Тогда
		ТекстСообщения = "ниже допустимого минимума";
	ИначеЕсли (Значение < КритическийМинимум) И ЗначениеЗаполнено(КритическийМинимум) Тогда
		ТекстСообщения = "ниже критического минимума";
	КонецЕсли;
	
	Если ТекстСообщения <> "" Тогда
		ТекстСообщения = "Значение показателя '"  + Показатель.Наименование + "' " + ТекстСообщения;
		
		МенеджерЗаписи = РегистрыСведений.торо_ОчередьУведомлений.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ТемаПисьма        = ОР;
		МенеджерЗаписи.ТелоПисьма        = ТекстСообщения;
		МенеджерЗаписи.ID_уведомления    = Новый УникальныйИдентификатор;
		МенеджерЗаписи.Источник          = Ссылка;
		МенеджерЗаписи.Пользователь      = Пользователи.ТекущийПользователь();
		МенеджерЗаписи.СпособУведомления = Перечисления.торо_СпособыУведомленияПользователей.УведомлениеВВидеВсплывающейПодсказки;
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет контролируемые показатели из технологических карт в ТЧ "Измеряемые показатели"
//
Процедура ЗаполнитьПоказателиИзТК(Основание)
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		Запрос = Новый Запрос;
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
			ПерваяЧастьЗапроса = "ВЫБРАТЬ
			|	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
			|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
			|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала
			|ПОМЕСТИТЬ ВТ_ИзОснования
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК торо_АктОВыполненииЭтапаРаботРемонтныеРаботы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
			|		ПО торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
			|ГДЕ
			|	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.Ссылка = &Ссылка
			|	И ТИПЗНАЧЕНИЯ(торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ИдентификаторыТехКарт)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	РемонтнаяРабота
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////";
		Иначе
			ПерваяЧастьЗапроса = "ВЫБРАТЬ
			|	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта КАК ОбъектРемонта,
			|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ДатаНачала КАК ДатаНачала,
			|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
			|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ID КАК ID
			|ПОМЕСТИТЬ ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания
			|ИЗ
			|	Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия КАК торо_АктОВыполненииРегламентногоМероприятияМероприятия
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
			|		ПО торо_АктОВыполненииРегламентногоМероприятияМероприятия.ОбъектРемонта = торо_МаршрутыРегламентныхМероприятий.СписокОбъектов
			|ГДЕ
			|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.Ссылка = &Ссылка
			|	И торо_АктОВыполненииРегламентногоМероприятияМероприятия.ОбъектРемонта.ИндивидуальноеОбслуживаниеОР = ИСТИНА
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ОбъектРемонта,
			|	ВидРемонтныхРабот
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания.ОбъектРемонта КАК ОбъектРемонта,
			|	ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания.ДатаНачала КАК ДатаНачала,
			|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК РемонтнаяРабота,
			|	ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания.ID КАК ID
			|ПОМЕСТИТЬ ВТ_ОРСВидомРабот
			|ИЗ
			|	ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания КАК ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
			|		ПО ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
			|			И ВТ_ОбъектыРемонтаИнвдивидуальногоОбслуживания.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидРемонта
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ID
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ОРСВидомРабот.ОбъектРемонта КАК ОбъектРемонта,
			|	ВТ_ОРСВидомРабот.ДатаНачала КАК ДатаНачала,
			|	ВТ_ОРСВидомРабот.РемонтнаяРабота КАК РемонтнаяРабота
			|ПОМЕСТИТЬ ВТ_ИзОснования
			|ИЗ
			|	ВТ_ОРСВидомРабот КАК ВТ_ОРСВидомРабот
			|ГДЕ
			|	НЕ ВТ_ОРСВидомРабот.РемонтнаяРабота ЕСТЬ NULL
			|	И ТИПЗНАЧЕНИЯ(ВТ_ОРСВидомРабот.РемонтнаяРабота) = ТИП(Справочник.торо_ИдентификаторыТехКарт)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_ОРСВидомРабот.ОбъектРемонта КАК ОбъектРемонта,
			|	ВТ_ОРСВидомРабот.ДатаНачала КАК ДатаНачала,
			|	торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота
			|ИЗ
			|	ВТ_ОРСВидомРабот КАК ВТ_ОРСВидомРабот
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииРегламентногоМероприятия.РемонтныеРаботы КАК торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы
			|		ПО ВТ_ОРСВидомРабот.ID = торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтыОборудования_ID
			|ГДЕ
			|	ВТ_ОРСВидомРабот.РемонтнаяРабота ЕСТЬ NULL
			|	И ТИПЗНАЧЕНИЯ(торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ИдентификаторыТехКарт)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.ОбъектРемонта,
			|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ДатаНачала,
			|	торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтнаяРабота
			|ИЗ
			|	Документ.торо_АктОВыполненииРегламентногоМероприятия.РемонтныеРаботы КАК торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия КАК торо_АктОВыполненииРегламентногоМероприятияМероприятия
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииРегламентногоМероприятия.МероприятияОбъектов КАК торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов
			|			ПО торо_АктОВыполненииРегламентногоМероприятияМероприятия.ID = торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Мероприятие_ID
			|		ПО торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтыОборудования_ID = торо_АктОВыполненииРегламентногоМероприятияМероприятия.ID
			|ГДЕ
			|	ТИПЗНАЧЕНИЯ(торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ИдентификаторыТехКарт)
			|	И торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.Ссылка = &Ссылка
			|	И торо_АктОВыполненииРегламентногоМероприятияМероприятия.ОбъектРемонта.ИндивидуальноеОбслуживаниеОР = ЛОЖЬ
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	РемонтнаяРабота
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////";
			
		КонецЕсли;	
		
		Запрос.Текст = ПерваяЧастьЗапроса + Символы.ПС +  
		"ВЫБРАТЬ
		|	МАКСИМУМ(торо_ВерсииТехКарт.Период) КАК Период,
		|	ВТ_ИзОснования.РемонтнаяРабота КАК РемонтнаяРабота,
		|	ВТ_ИзОснования.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ВТ_ВерсииТехКарт
		|ИЗ
		|	РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИзОснования КАК ВТ_ИзОснования
		|		ПО торо_ВерсииТехКарт.ИдентификаторТехКарты = ВТ_ИзОснования.РемонтнаяРабота
		|			И торо_ВерсииТехКарт.Период < ВТ_ИзОснования.ДатаНачала
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ВерсииТехКарт.ИдентификаторТехКарты,
		|	ВТ_ИзОснования.РемонтнаяРабота,
		|	ВТ_ИзОснования.ОбъектРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	РемонтнаяРабота
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта,
		|	ВТ_ВерсииТехКарт.Период КАК Период,
		|	ВТ_ВерсииТехКарт.РемонтнаяРабота КАК РемонтнаяРабота,
		|	ВТ_ВерсииТехКарт.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ВТ_КПизТК
		|ИЗ
		|	ВТ_ВерсииТехКарт КАК ВТ_ВерсииТехКарт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		|		ПО ВТ_ВерсииТехКарт.Период = торо_ВерсииТехКарт.Период
		|			И ВТ_ВерсииТехКарт.РемонтнаяРабота = торо_ВерсииТехКарт.ИдентификаторТехКарты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТехКарта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ТехКартыИзмеряемыеПоказатели.Показатель КАК Показатель,
		|	ВТ_КПизТК.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	ВТ_КПизТК КАК ВТ_КПизТК
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.ИзмеряемыеПоказатели КАК торо_ТехКартыИзмеряемыеПоказатели
		|		ПО ВТ_КПизТК.ТехКарта = торо_ТехКартыИзмеряемыеПоказатели.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Показатель,
		|	ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель КАК Показатель,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМинимум КАК ДопустимыйМинимум,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМаксимум КАК ДопустимыйМаксимум,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМинимум КАК КритическийМинимум,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМаксимум КАК КритическийМаксимум,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ЗначенияКонтролируемыхПоказателейИзОР КАК ЗначенияКонтролируемыхПоказателейИзОР,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ТочкаЗамера КАК ТочкаЗамера,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален КАК Удален
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ВТ_Показатели
		|		ПО торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель = ВТ_Показатели.Показатель
		|			И торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта = ВТ_Показатели.ОбъектРемонта";
				
		Запрос.УстановитьПараметр("Ссылка",Основание);		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Показатели.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ДатаКонтроля = Дата;
			НоваяСтрока.ОбъектРемонта = Выборка.ОбъектРемонта;
		КонецЦикла;	
		
	КонецЕсли;
КонецПроцедуры


#КонецОбласти   

#КонецЕсли






