#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции
#Область Печать

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Учет контролируемых показателей
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_УчетКонтролируемыхПоказателей";
	КомандаПечати.Идентификатор = "УчетКонтролируемыхПоказателей";
	КомандаПечати.Представление = НСтр("ru = 'Учет контролируемых показателей'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИменаОбъектовМетаданных = РегистрыСведений.торо_ВводНаОсновании.ИменаДоступныхОбъектовМетаданныхДляВводаНаОсновании(
		 Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.Имя);
		 
	Для Каждого ИмяОбъектаМетаданных Из ИменаОбъектовМетаданных Цикл
		Документы[ИмяОбъектаМетаданных].ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);		 
	КонецЦикла;		 
		
КонецПроцедуры

// Добавляет команду создания документа "Учет контролируемых показателей".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.торо_УчетКонтролируемыхПоказателей) Тогда
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.торо_УчетКонтролируемыхПоказателей);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Записывать";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "торо_УчетКонтролируемыхПоказателей";
        Возврат КомандаСоздатьНаОсновании;
	КонецЕсли; 
	
    Возврат Неопределено;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УчетКонтролируемыхПоказателей") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"УчетКонтролируемыхПоказателей", 
		"Учет контролируемых показателей", 
		ПечатьКонтролируемыхПоказателей(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_УчетКонтролируемыхПоказателей.ПФ_MXL_УчетКонтролируемыхПоказателей");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКонтролируемыхПоказателей(МассивОбъектов, ПараметрыПечати)

	ТабДок = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_УчетКонтролируемыхПоказателей.ПФ_MXL_УчетКонтролируемыхПоказателей");
	
	ЗапросШапки = Новый Запрос;
	ЗапросШапки.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_УчетКонтролируемыхПоказателей.Ссылка КАК Ссылка,
	|	торо_УчетКонтролируемыхПоказателей.Номер КАК Номер,
	|	торо_УчетКонтролируемыхПоказателей.Дата КАК Дата,
	|	торо_УчетКонтролируемыхПоказателей.Организация КАК Организация,
	|	торо_УчетКонтролируемыхПоказателей.Подразделение КАК Подразделение,
	|	торо_УчетКонтролируемыхПоказателей.Ответственный КАК Ответственный,
	|	торо_УчетКонтролируемыхПоказателей.Комментарий КАК Комментарий,
	|	торо_УчетКонтролируемыхПоказателей.Показатели.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ОбъектРемонта КАК ОбъектРемонта,
	|		Показатель КАК Показатель,
	|		Значение КАК Значение,
	|		ПредыдущееЗначение КАК ПредыдущееЗначение,
	|		ДатаКонтроля КАК ДатаКонтроля
	|	) КАК Показатели
	|ИЗ
	|	Документ.торо_УчетКонтролируемыхПоказателей КАК торо_УчетКонтролируемыхПоказателей
	|ГДЕ
	|	торо_УчетКонтролируемыхПоказателей.Ссылка В(&Ссылка)";
	
	ЗапросШапки.УстановитьПараметр("Ссылка", МассивОбъектов);
	ВыборкаШапки = ЗапросШапки.Выполнить().Выбрать();
	
	ЭтоПервый = Истина;
	
	Пока ВыборкаШапки.Следующий() Цикл	
		Если НЕ ЭтоПервый Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭтоПервый = Ложь;
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		СтрокаТаблициОР = Макет.ПолучитьОбласть("СтрокаТаблициОР");
		СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		Шапка.Параметры.Заполнить(ВыборкаШапки);
		Шапка.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаШапки.Организация);
		ТабДок.Вывести(Шапка);
		
		Ном = 1;                                                   
		СтароеЗначение  = Справочники.торо_ОбъектыРемонта.ПустаяСсылка();
		ТабПоказателей = ВыборкаШапки.Показатели.Выгрузить();
		СписокОР = ТабПоказателей.ВыгрузитьКолонку("ОбъектРемонта");
		СписокПоказателейДляОтбора = ТабПоказателей.ВыгрузитьКолонку("Показатель");
		
		ТаблицаПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(СписокОР,СписокПоказателейДляОтбора,Истина,,,Истина);		
		ТаблицаПоказателей.Индексы.Добавить("ИсходныйОР");
		ТаблицаПоказателей.Индексы.Добавить("Показатель");
		
		Для Каждого Строка Из ТабПоказателей Цикл	
					
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ИсходныйОР",Строка.ОбъектРемонта);
			ПараметрыОтбора.Вставить("Показатель",Строка.Показатель);
			
			НайденныеСтроки = ТаблицаПоказателей.НайтиСтроки(ПараметрыОтбора);
			
			Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
				
				Если ТипЗнч(Строка.Значение) <> Тип("СправочникСсылка.торо_ЗначенияИзмеряемыхПоказателейОбъектовРемонта") Тогда
					
					Если Строка.Значение <= НайденныеСтроки[0].ДопустимыйМаксимум
						И Строка.Значение >= НайденныеСтроки[0].ДопустимыйМинимум Тогда
						СтрокаТаблицы.Параметры.Отклонение = "Нормальное";						
					ИначеЕсли Строка.Значение <= НайденныеСтроки[0].КритическийМаксимум И Строка.Значение > НайденныеСтроки[0].ДопустимыйМаксимум
						ИЛИ Строка.Значение >= НайденныеСтроки[0].КритическийМинимум И Строка.Значение < НайденныеСтроки[0].ДопустимыйМинимум Тогда
						СтрокаТаблицы.Параметры.Отклонение = "Недопустимое";	
					ИначеЕсли Строка.Значение > НайденныеСтроки[0].КритическийМаксимум
						ИЛИ Строка.Значение < НайденныеСтроки[0].КритическийМинимум Тогда
						СтрокаТаблицы.Параметры.Отклонение = "Критическое";	
					КонецЕсли;
				Иначе
					
					ВыделятьКакНедопустимоеЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Значение, "ВыделятьКакНедопустимоеЗначение");
					ВыделятьКакКритическоеЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Значение, "ВыделятьКакКритическоеЗначение");
					
					Если ВыделятьКакКритическоеЗначение = Истина Тогда
						СтрокаТаблицы.Параметры.Отклонение = "Критическое";
					ИначеЕсли ВыделятьКакНедопустимоеЗначение = Истина Тогда
						СтрокаТаблицы.Параметры.Отклонение = "Недопустимое";
					Иначе
						СтрокаТаблицы.Параметры.Отклонение = "Нормальное";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				СтрокаТаблицы.Параметры.Отклонение = "Критическое";
			КонецЕсли;
			
			Если Строка.ОбъектРемонта <> СтароеЗначение Тогда		
				СтрокаТаблициОР.Параметры.Н = Ном;
				СтрокаТаблициОР.Параметры.Заполнить(Строка);
				СтрокаТаблициОР.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Строка.ОбъектРемонта);
				Если Не ЗначениеЗаполнено(Строка.ДатаКонтроля) Тогда
					СтрокаТаблициОР.Параметры.ДатаКонтроля = ВыборкаШапки.Дата;	
				КонецЕсли; 
				ТабДок.Вывести(СтрокаТаблициОР);
				СтароеЗначение = Строка.ОбъектРемонта;
				Ном = Ном + 1;
			КонецЕсли;
			СтрокаТаблицы.Параметры.ЕдиницаИзмерения = Строка.Показатель.ЕдиницаИзмерения;	
			СтрокаТаблицы.Параметры.Заполнить(Строка);
			ТабДок.Вывести(СтрокаТаблицы);
			
		КонецЦикла;
		
		Подвал.Параметры.Ответственный = ВыборкаШапки.Ответственный;
		Подвал.Параметры.Комментарий = ВыборкаШапки.Комментарий;
		
		ТабДок.Вывести(Подвал);
		
	КонецЦикла;
	
	ТабДок.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб         = Истина;
	ТабДок.ТолькоПросмотр      = Истина;
	ТабДок.ОтображатьСетку     = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.КлючПараметровПечати = "торо_ПечатьКонтролируемыхПоказателей";
	Возврат ТабДок;
	
КонецФункции // ПечатьКонтролируемыхПоказателей()

#КонецОбласти

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("ИзМобильного");
		
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ 
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ДляВсехСтрок(&Ограничение_ОР)";

	ОграничениеОР = торо_УправлениеДоступом.ПолучитьОграничениеДоступаДляОбъектаРемонтаВТаблице("Показатели.ОбъектРемонта", Истина);
	Ограничение.Текст = СтрЗаменить(Ограничение.Текст, "&Ограничение_ОР", ОграничениеОР);

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли