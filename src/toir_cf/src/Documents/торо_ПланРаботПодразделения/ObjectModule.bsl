#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа
Перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями. +

#КонецОбласти
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
		
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("ИзОбработки") ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
	    Возврат;
	КонецЕсли; 
	
	ВидДокумента = Перечисления.торо_ВидыДокументовСогласованияРемонтов.торо_ПланРаботПодразделения;
	ИспользоватьСогласованиеДокументов = торо_РаботаССогласованиями.ПроверитьИспользованиеСогласованияДокументов(ВидДокумента);
	
	Если Не ИспользоватьСогласованиеДокументов И ПометкаУдаления = Ссылка.ПометкаУдаления Тогда
		ТекстСообщения = НСтр("ru = 'Данный документ нельзя провести вручную! Необходимо воспользоваться обработкой ""Общий план работ"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
		 
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ШаблонСообщения = НСтр("ru = 'Есть непроведенный документ регистратор: %1'");

	МассивДокументовОснований = ОбщегоНазначения.ВыгрузитьКолонку(СписокРемонтовПлана,"ДокументОснование");
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	торо_ВнешнееОснованиеДляРабот.Ссылка КАК Ссылка,
	                      |	торо_ВнешнееОснованиеДляРабот.Проведен КАК Проведен
	                      |ИЗ
	                      |	Документ.торо_ВнешнееОснованиеДляРабот КАК торо_ВнешнееОснованиеДляРабот
	                      |ГДЕ
	                      |	торо_ВнешнееОснованиеДляРабот.Ссылка В(&МассивДокОсн)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	торо_ВыявленныеДефекты.Ссылка,
	                      |	торо_ВыявленныеДефекты.Проведен
	                      |ИЗ
	                      |	Документ.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
	                      |ГДЕ
	                      |	торо_ВыявленныеДефекты.Ссылка В(&МассивДокОсн)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	торо_ГрафикРегламентныхМероприятийТОиР.Ссылка,
	                      |	торо_ГрафикРегламентныхМероприятийТОиР.Проведен
	                      |ИЗ
	                      |	Документ.торо_ГрафикРегламентныхМероприятийТОиР КАК торо_ГрафикРегламентныхМероприятийТОиР
	                      |ГДЕ
	                      |	торо_ГрафикРегламентныхМероприятийТОиР.Ссылка В(&МассивДокОсн)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	торо_ОстановочныеРемонты.Ссылка,
	                      |	торо_ОстановочныеРемонты.Проведен
	                      |ИЗ
	                      |	Документ.торо_ОстановочныеРемонты КАК торо_ОстановочныеРемонты
	                      |ГДЕ
	                      |	торо_ОстановочныеРемонты.Ссылка В(&МассивДокОсн)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	торо_ПланГрафикРемонта.Ссылка,
	                      |	торо_ПланГрафикРемонта.Проведен
	                      |ИЗ
	                      |	Документ.торо_ПланГрафикРемонта КАК торо_ПланГрафикРемонта
	                      |ГДЕ
	                      |	торо_ПланГрафикРемонта.Ссылка В(&МассивДокОсн)");
	
	Запрос.УстановитьПараметр("МассивДокОсн", МассивДокументовОснований); 
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Проведен Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка(Выборка.Ссылка));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			Возврат;		
		КонецЕсли; 			
	КонецЦикла;

	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Отказ);
		торо_Ремонты.ОбновитьЗаписиНезависимыхРегистровПоРемонтам(ЭтотОбъект, РежимЗаписиДокумента.Проведение);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если Не Отказ Тогда
		торо_МТОСервер.ПоместитьРемонтыВРегистрДляПроверкиАктуальности(Ссылка);
		торо_Ремонты.ОбновитьЗаписиНезависимыхРегистровПоРемонтам(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДвиженияПоРегистрам(Отказ)
	ДвиженияПоРегистру_торо_СкользящийПланРабот(Отказ);
	ДвиженияПоРегистру_торо_ГарантийностьРемонтов();
	ДвиженияПоРегистру_торо_ВсеДокументыПоРемонтам();
	торо_МТОСервер.ПоместитьРемонтыВРегистрДляПроверкиАктуальности(Ссылка);
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_СкользящийПланРабот(Отказ)
	
	Движения.торо_СкользящийПланРегламентныхМероприятий.Записывать = Истина;
	Движения.торо_СкользящийПланРабот.Записывать                   = Истина;
	
	ДатаОкончания = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ДатаОтсчета, ПериодичностьПланирования, 1);
	
	ВидыПлана               = Новый Массив;
	
	Если ВидПлана = Справочники.торо_ВидыСкользящихПланов.Долгосрочный Тогда
				
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Оперативный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Среднесрочный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Годовой);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Долгосрочный);

	ИначеЕсли ВидПлана = Справочники.торо_ВидыСкользящихПланов.Годовой Тогда
				
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Оперативный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Среднесрочный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Годовой);

	ИначеЕсли ВидПлана = Справочники.торо_ВидыСкользящихПланов.Среднесрочный Тогда
				
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Оперативный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Среднесрочный);

	ИначеЕсли ВидПлана = Справочники.торо_ВидыСкользящихПланов.Оперативный Тогда
		
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Оперативный);
		
	ИначеЕсли ВидПлана = Справочники.торо_ВидыСкользящихПланов.Стратегический Тогда 
		
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Оперативный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Среднесрочный);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Годовой);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Стратегический);
		ВидыПлана.Добавить(Справочники.торо_ВидыСкользящихПланов.Долгосрочный);
		
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.ID КАК ID_Ремонта,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.Регламентный КАК Регламентный,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.Ссылка.ВидПлана КАК ВидПлана,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.ДатаНачала КАК ДатаНачала,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.ДатаОкончания КАК ДатаОкончания,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.КрайняяДатаЗавершения КАК КрайняяДатаЗавершения,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.Ссылка.ДатаОтсчета КАК ДатаОтсчета,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	Документ.торо_ПланРаботПодразделения.СписокРемонтовПлана КАК торо_ПланРаботПодразделенияСписокРемонтовПлана
		|ГДЕ
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_СкользящийПланРаботСрезПоследних.ID_Ремонта КАК ID_Ремонта,
		|	ЛОЖЬ КАК Регламентный
		|ИЗ
		|	РегистрСведений.торо_СкользящийПланРабот.СрезПоследних(
		|			,
		|			НЕ Регистратор = &Ссылка
		|				И ID_Ремонта В
		|					(ВЫБРАТЬ
		|						ДанныеДокумента.ID_Ремонта
		|					ИЗ
		|						ДанныеДокумента
		|					ГДЕ
		|						ДанныеДокумента.Регламентный = ЛОЖЬ)) КАК торо_СкользящийПланРаботСрезПоследних
		|ГДЕ
		|	торо_СкользящийПланРаботСрезПоследних.ВидПлана В(&ВидыПлана)
		|	И торо_СкользящийПланРаботСрезПоследних.ДатаОкончанияБазовогоПериода > &ДатаНачалаБазовогоПериода
		|	И НЕ торо_СкользящийПланРаботСрезПоследних.Регистратор = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_СкользящийПланРегламентныхМероприятийСрезПоследних.ID_Ремонта,
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.торо_СкользящийПланРегламентныхМероприятий.СрезПоследних(
		|			,
		|			НЕ Регистратор = &Ссылка
		|				И ID_Ремонта В
		|					(ВЫБРАТЬ
		|						ДанныеДокумента.ID_Ремонта
		|					ИЗ
		|						ДанныеДокумента
		|					ГДЕ
		|						ДанныеДокумента.Регламентный = ИСТИНА)) КАК торо_СкользящийПланРегламентныхМероприятийСрезПоследних
		|ГДЕ
		|	торо_СкользящийПланРегламентныхМероприятийСрезПоследних.ВидПлана В(&ВидыПлана)
		|	И торо_СкользящийПланРегламентныхМероприятийСрезПоследних.ДатаОкончанияБазовогоПериода > &ДатаНачалаБазовогоПериода
		|	И НЕ торо_СкользящийПланРегламентныхМероприятийСрезПоследних.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ДанныеДокумента.ID_Ремонта КАК ID_Ремонта,
		|	ДанныеДокумента.Регламентный КАК Регламентный,
		|	ДанныеДокумента.ДатаНачала КАК ДатаНачалаРемонта,
		|	ДанныеДокумента.ДатаОкончания КАК ДатаОкончанияРемонта,
		|	ДанныеДокумента.КрайняяДатаЗавершения КАК КрайняяДатаЗавершения,
		|	ДанныеДокумента.ВидПлана КАК ВидПлана,
		|	ДанныеДокумента.ДатаОтсчета КАК ДатаОтсчета,
		|	&ДатаНачалаБазовогоПериода КАК ДатаНачалаБазовогоПериода,
		|	&ДатаОкончанияБазовогоПериода КАК ДатаОкончанияБазовогоПериода
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента";
	
    Запрос.УстановитьПараметр("Ссылка"                      , Ссылка); 
    Запрос.УстановитьПараметр("Период"                      , Дата);   
    Запрос.УстановитьПараметр("ПериодОтбора"                , Новый Граница(МоментВремени(), ВидГраницы.Исключая));    
    Запрос.УстановитьПараметр("ВидыПлана"                   , ВидыПлана);
    Запрос.УстановитьПараметр("ДатаНачалаБазовогоПериода"   , ДатаОтсчета); 
    Запрос.УстановитьПараметр("ДатаОкончанияБазовогоПериода", ДатаОкончания);   

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	

	Выборка = РезультатЗапроса[2].Выбрать();
	Пока Выборка.Следующий() Цикл			
		Если Выборка.Регламентный Тогда
			Запись = Движения.торо_СкользящийПланРегламентныхМероприятий.Добавить();
		Иначе
			Запись = Движения.торо_СкользящийПланРабот.Добавить();
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
	КонецЦикла;
	Если Не РезультатЗапроса[1].Пустой() Тогда	
		ТекстСообщения = НСтр("ru = 'По ремонтам из документа имеются более поздние и приоритетные документы'"); 
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ВсеДокументыПоРемонтам()
	Движения.торо_ВсеДокументыПоРемонтам.Записывать = Истина;
	Движения.торо_ВсеДокументыПоРемонтам.Очистить();
	
	Для каждого СтрокаТЧ Из СписокРемонтовПлана Цикл
	    Движение = Движения.торо_ВсеДокументыПоРемонтам.Добавить();
		Движение.IDРемонта = СтрокаТЧ.ID;
		Движение.ДокументПоРемонту = Ссылка;
		Движение.ДатаДокумента = Дата;
		Движение.Организация = Организация;
		Движение.Подразделение = Подразделение;
	КонецЦикла;
КонецПроцедуры

Процедура ДвиженияПоРегистру_торо_ГарантийностьРемонтов()
	
	Если НЕ ПолучитьФункциональнуюОпцию("торо_ИспользоватьГарантии") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСОбъектамиИДатамиРемонтов = СписокРемонтовПлана.Выгрузить(, "ID, ОбъектРемонта, ДатаНачала, ДатаОкончания");
	ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Добавить("ГарантийныйРемонт");
	
	торо_ГарантийноеОбслуживание.ПроставитьЗначениеФлагаГарантийныйВТаблице(ТаблицаСОбъектамиИДатамиРемонтов);
	
	Движения.торо_ГарантийностьРемонтов.Записывать = Истина;
	Движения.торо_ГарантийностьРемонтов.Очистить();
	
	Для каждого Строка Из ТаблицаСОбъектамиИДатамиРемонтов Цикл
		Движение = Движения.торо_ГарантийностьРемонтов.Добавить();
		Движение.Период = Дата;
		Движение.IDРемонта = Строка.ID;
		Движение.Гарантийный = Строка.ГарантийныйРемонт;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли