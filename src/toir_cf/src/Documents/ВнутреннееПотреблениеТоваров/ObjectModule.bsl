#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Перем СкладПоступления;
	Перем РеквизитыШапки;
	Перем ОтборТовары;
	
	Отказ = Ложь;
	торо_ЗаполнениеДокументов.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения, Отказ, Ложь);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
		
		ЗаполнитьПоЗаказу(ДанныеЗаполнения);
		Комментарий = ДанныеЗаполнения;
		// {/УП} 
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Товары") Тогда
		
		ДанныеЗаполнения.Свойство("РеквизитыШапки", РеквизитыШапки);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыШапки);
		Товары.Загрузить(ДанныеЗаполнения.Товары.Выгрузить());
		
	// ТОИР		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("МассивСтрокНоменклатуры") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Для каждого Строка Из ДанныеЗаполнения.МассивСтрокНоменклатуры Цикл
			НС = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НС,Строка);
			НС.КоличествоУпаковок = Строка.Количество;
		КонецЦикла; 
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.торо_РезервПодВнутреннийЗаказ") Тогда
		ЗаполнитьПоРезерву(ДанныеЗаполнения);
	// ТОИР
	Иначе
		// Ввод из формы списка.
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Проверка количества в т.ч. товары.
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	// Проверка характеристик в т.ч. товары.
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры Тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	КонецЕсли;
	
	// Если накладная по заказу - то код строки должен быть заполнен.
	Если Не ЗначениеЗаполнено(ЗаказНаВнутреннееПотребление) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КодСтроки");
	КонецЕсли;
	
	Если ЕстьРасхождения Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары");
	КонецЕсли;
	
	ФОИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	Если ФОИспользоватьСерииНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ФОИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	ФОИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();	
	ИспользуетсяКонтрольОстатков = Константы.торо_ИспользоватьКонтрольОтрицательныхОстатков.Получить();

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.торо_ТоварыНаРуках.Записывать = Истина;
	Движения.торо_РезервыНаРуках.Записывать = Истина;
	Движения.торо_РезервыНаСкладах.Записывать = Истина;
	Движения.ЗаказыНаВнутреннееПотребление.Записывать = Истина;
	
	// контроль остатков
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВнутреннееПотреблениеТовары.Номенклатура КАК Номенклатура,
	               |	&Характеристика КАК Характеристика,
	               |	ВнутреннееПотреблениеТовары.Упаковка КАК Упаковка,
	               |	ВнутреннееПотреблениеТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	               |	ВнутреннееПотреблениеТовары.Количество КАК Количество,
	               |	ВнутреннееПотреблениеТовары.КодСтроки КАК КодСтроки,
	               |	ВнутреннееПотреблениеТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	ВнутреннееПотреблениеТовары.НомерСтроки КАК НомерСтроки,
	               |	&Склад КАК Склад,
	               |	&Серия КАК Серия
	               |ПОМЕСТИТЬ Таблица
	               |ИЗ
	               |	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТовары
	               |ГДЕ
	               |	ВнутреннееПотреблениеТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",	Ссылка);
	Запрос.УстановитьПараметр("Склад" ,	Склад);
		
	Если ФОИспользоватьСерии Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Серия", "ВнутреннееПотреблениеТовары.Серия");	
	Иначе
		Запрос.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());	
	КонецЕсли;
	
	Если ФОИспользоватьХарактеристики Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Характеристика", "ВнутреннееПотреблениеТовары.Характеристика");
	Иначе
		Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Запрос.Выполнить();

	УстановитьБлокировку();
		
	// проверка остатков
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	ТабТовары.Склад КАК Склад,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Серия КАК Серия,
	               |	ТабТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	СУММА(ТабТовары.Количество) КАК Количество,
	               |	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ПОМЕСТИТЬ ТЧБезДублей
	               |ИЗ
	               |	Таблица КАК ТабТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |		ПО ТабТовары.Номенклатура = СпрНоменклатура.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабТовары.Номенклатура,
	               |	ТабТовары.Характеристика,
	               |	ТабТовары.Серия,
	               |	ТабТовары.Склад,
	               |	ТабТовары.ЗаказНаВнутреннееПотребление,
	               |	СпрНоменклатура.ЕдиницаИзмерения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.Серия КАК Серия,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	               |ПОМЕСТИТЬ ТоварыНаСкладахОстатки
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&Дата,
	               |			(Номенклатура, Характеристика, Серия, Склад) В
	               |				(ВЫБРАТЬ
	               |					Таблица.Номенклатура,
	               |					Таблица.Характеристика,
	               |					Таблица.Серия,
	               |					Таблица.Склад
	               |				ИЗ
	               |					Таблица КАК Таблица)) КАК ТоварыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Склад,
	               |	Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_РезервыНаСкладахОстатки.Склад КАК Склад,
	               |	торо_РезервыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	торо_РезервыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	торо_РезервыНаСкладахОстатки.Серия КАК Серия,
	               |	&ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	СУММА(торо_РезервыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ РезервыНаСкладах
	               |ИЗ
	               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(
	               |			&Дата,
	               |			(Номенклатура, Характеристика, Серия, Склад) В
	               |				(ВЫБРАТЬ
	               |					Таблица.Номенклатура,
	               |					Таблица.Характеристика,
	               |					Таблица.Серия,
	               |					Таблица.Склад
	               |				ИЗ
	               |					Таблица)) КАК торо_РезервыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
				   |	&ЗаказНаВнутреннееПотребление,
	               |	торо_РезервыНаСкладахОстатки.Номенклатура,
	               |	торо_РезервыНаСкладахОстатки.Характеристика,
	               |	торо_РезервыНаСкладахОстатки.Склад,
	               |	торо_РезервыНаСкладахОстатки.Серия
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Склад,
	               |	Серия,
	               |	ЗаказНаВнутреннееПотребление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ТоварыНаРукахОстатки.Номенклатура КАК Номенклатура,
	               |	торо_ТоварыНаРукахОстатки.Характеристика КАК Характеристика,
	               |	торо_ТоварыНаРукахОстатки.Склад КАК Склад,
	               |	торо_ТоварыНаРукахОстатки.Серия КАК Серия,
	               |	торо_ТоварыНаРукахОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	торо_ТоварыНаРукахОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ТоварыНаРуках
	               |ИЗ
	               |	РегистрНакопления.торо_ТоварыНаРуках.Остатки(
	               |			&Дата,
	               |			(Номенклатура, Характеристика, Серия, Склад, ЗаказНаВнутреннееПотребление) В
	               |				(ВЫБРАТЬ
	               |					Таблица.Номенклатура,
	               |					Таблица.Характеристика,
	               |					Таблица.Серия,
	               |					Таблица.Склад,
	               |					Таблица.ЗаказНаВнутреннееПотребление
	               |				ИЗ
	               |					Таблица)) КАК торо_ТоварыНаРукахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	Склад,
	               |	Серия,
	               |	ЗаказНаВнутреннееПотребление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Склад КАК Склад,
	               |	ТабТовары.Серия КАК Серия,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) + ЕСТЬNULL(ТоварыНаРуках.КоличествоОстаток, 0) - СУММА(ЕСТЬNULL(Резервы.КоличествоОстаток, 0)) КАК СвобОстаток,
	               |	ТабТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	ТабТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) - СУММА(ЕСТЬNULL(Резервы.КоличествоОстаток, 0)) КАК НаСкладе,
	               |	ЕСТЬNULL(ТоварыНаРуках.КоличествоОстаток, 0) КАК НаРуках,
	               |	ТабТовары.Количество КАК Количество
	               |ПОМЕСТИТЬ Остатки
	               |ИЗ
	               |	ТЧБезДублей КАК ТабТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладахОстатки КАК ТоварыНаСкладахОстатки
	               |		ПО ТабТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ТабТовары.Характеристика = ТоварыНаСкладахОстатки.Характеристика
	               |			И ТабТовары.Серия = ТоварыНаСкладахОстатки.Серия
	               |			И ТабТовары.Склад = ТоварыНаСкладахОстатки.Склад
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РезервыНаСкладах КАК Резервы
	               |		ПО ТабТовары.Склад = Резервы.Склад
	               |			И ТабТовары.Номенклатура = Резервы.Номенклатура
	               |			И (&ВнутреннийЗаказ)
	               |			И ТабТовары.Характеристика = Резервы.Характеристика
	               |			И ТабТовары.Серия = Резервы.Серия
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаРуках КАК ТоварыНаРуках
	               |		ПО ТабТовары.Склад = ТоварыНаРуках.Склад
	               |			И ТабТовары.Номенклатура = ТоварыНаРуках.Номенклатура
	               |			И ТабТовары.ЗаказНаВнутреннееПотребление = ТоварыНаРуках.ЗаказНаВнутреннееПотребление
	               |			И ТабТовары.Характеристика = ТоварыНаРуках.Характеристика
	               |			И ТабТовары.Серия = ТоварыНаРуках.Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабТовары.Номенклатура,
	               |	ТабТовары.Характеристика,
	               |	ТабТовары.Склад,
	               |	ТабТовары.Серия,
	               |	ТабТовары.ЗаказНаВнутреннееПотребление,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток,
	               |	ТабТовары.Количество,
	               |	ТабТовары.ЕдиницаИзмерения,
	               |	ТоварыНаРуках.КоличествоОстаток";

	
	Если ПотреблениеПоЗаказам Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВнутреннийЗаказ", "ТабТовары.ЗаказНаВнутреннееПотребление <> Резервы.ЗаказНаВнутреннееПотребление");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЗаказНаВнутреннееПотребление", "торо_РезервыНаСкладахОстатки.ЗаказНаВнутреннееПотребление");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЗаказНаВнутреннееПотребление", "ЗНАЧЕНИЕ(Документ.ЗаказНаВнутреннееПотребление.ПустаяСсылка)");
		Запрос.УстановитьПараметр("ВнутреннийЗаказ", Истина);
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", Новый Граница(МоментВремени(), ВидГраницы.Включая));

	Запрос.Выполнить();
	ПроверитьПревышениеОстатка(Запрос.МенеджерВременныхТаблиц, Отказ, ФОИспользоватьСерии, ФОИспользоватьХарактеристики);
	
	Если Отказ И ИспользуетсяКонтрольОстатков Тогда 
		Возврат;
	ИначеЕсли НЕ ИспользуетсяКонтрольОстатков Тогда  
		Отказ = Ложь;
	КонецЕсли;

	Если ПотреблениеПоЗаказам Тогда
		СписатьЗаказыНаВнутреннееПотребление(Запрос.МенеджерВременныхТаблиц, Отказ, ФОИспользоватьСерии, ФОИспользоватьХарактеристики);
		Если Отказ Тогда 
			Возврат;
		КонецЕсли;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	торо_РезервыНаРукахОстатки.Склад КАК Склад,
		               |	торо_РезервыНаРукахОстатки.Номенклатура КАК Номенклатура,
		               |	торо_РезервыНаРукахОстатки.Характеристика КАК Характеристика,
		               |	торо_РезервыНаРукахОстатки.Серия КАК Серия,
		               |	торо_РезервыНаРукахОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		               |	торо_РезервыНаРукахОстатки.ДокументРезерв КАК ДокументРезерв,
		               |	торо_РезервыНаРукахОстатки.КоличествоОстаток КАК КоличествоОстаток
		               |ПОМЕСТИТЬ РезервыНаРуках
		               |ИЗ
		               |	РегистрНакопления.торо_РезервыНаРуках.Остатки(
		               |			&Дата,
		               |			(ЗаказНаВнутреннееПотребление, Номенклатура, Характеристика, Серия, Склад) В
		               |				(ВЫБРАТЬ
		               |					Таблица.ЗаказНаВнутреннееПотребление,
		               |					Таблица.Номенклатура,
		               |					Таблица.Характеристика,
		               |					Таблица.Серия,
		               |					Таблица.Склад
		               |				ИЗ
		               |					Таблица)) КАК торо_РезервыНаРукахОстатки
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Характеристика,
		               |	Номенклатура,
		               |	Склад,
		               |	Серия,
		               |	ЗаказНаВнутреннееПотребление
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	торо_РезервыНаСкладахОстатки.Склад КАК Склад,
		               |	торо_РезервыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		               |	торо_РезервыНаСкладахОстатки.Характеристика КАК Характеристика,
		               |	торо_РезервыНаСкладахОстатки.Серия КАК Серия,
		               |	торо_РезервыНаСкладахОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		               |	торо_РезервыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		               |	торо_РезервыНаСкладахОстатки.ДокументРезерв КАК ДокументРезерв
		               |ПОМЕСТИТЬ РезервыНаСкладахСДокументами
		               |ИЗ
		               |	РегистрНакопления.торо_РезервыНаСкладах.Остатки(
		               |			&Дата,
		               |			(ЗаказНаВнутреннееПотребление, Номенклатура, Характеристика, Серия, Склад) В
		               |				(ВЫБРАТЬ
		               |					Таблица.ЗаказНаВнутреннееПотребление,
		               |					Таблица.Номенклатура,
		               |					Таблица.Характеристика,
		               |					Таблица.Серия,
		               |					Таблица.Склад
		               |				ИЗ
		               |					Таблица)) КАК торо_РезервыНаСкладахОстатки
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура,
		               |	Характеристика,
		               |	Склад,
		               |	Серия,
		               |	ЗаказНаВнутреннееПотребление
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Остатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		               |	Остатки.Склад КАК Склад,
		               |	Остатки.Номенклатура КАК Номенклатура,
		               |	Остатки.Характеристика КАК Характеристика,
		               |	Остатки.Количество КАК Количество,
		               |	Остатки.Серия КАК Серия,
		               |	Остатки.НаСкладе КАК НаСкладе,
		               |	Остатки.НаРуках КАК НаРуках
		               |ИЗ
		               |	Остатки КАК Остатки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Остатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		               |	Остатки.Склад КАК Склад,
		               |	Остатки.Номенклатура КАК Номенклатура,
		               |	Остатки.Характеристика КАК Характеристика,
		               |	Остатки.Количество КАК Количество,
		               |	Остатки.Серия КАК Серия,
		               |	Остатки.НаСкладе КАК НаСкладе,
		               |	Остатки.НаРуках КАК НаРуках,
		               |	ЕСТЬNULL(РезервыНаСкладах.ДокументРезерв, ЗНАЧЕНИЕ(Документ.торо_РезервПодВнутреннийЗаказ.ПустаяСсылка)) КАК ДокументРезерв,
		               |	ЕСТЬNULL(РезервыНаСкладах.КоличествоОстаток, 0) КАК РезервНаСкладе
		               |ИЗ
		               |	Остатки КАК Остатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РезервыНаСкладахСДокументами КАК РезервыНаСкладах
		               |		ПО Остатки.Склад = РезервыНаСкладах.Склад
		               |			И Остатки.Номенклатура = РезервыНаСкладах.Номенклатура
		               |			И Остатки.Характеристика = РезервыНаСкладах.Характеристика
		               |			И Остатки.Серия = РезервыНаСкладах.Серия
		               |			И Остатки.ЗаказНаВнутреннееПотребление = РезервыНаСкладах.ЗаказНаВнутреннееПотребление
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Остатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		               |	Остатки.Склад КАК Склад,
		               |	Остатки.Номенклатура КАК Номенклатура,
		               |	Остатки.Характеристика КАК Характеристика,
		               |	Остатки.Количество КАК Количество,
		               |	Остатки.Серия КАК Серия,
		               |	Остатки.НаСкладе КАК НаСкладе,
		               |	Остатки.НаРуках КАК НаРуках,
		               |	ЕСТЬNULL(РезервыНаРуках.ДокументРезерв, ЗНАЧЕНИЕ(Документ.торо_РезервПодВнутреннийЗаказ.ПустаяСсылка)) КАК ДокументРезерв,
		               |	ЕСТЬNULL(РезервыНаРуках.КоличествоОстаток, 0) КАК РезервНаРуках
		               |ИЗ
		               |	Остатки КАК Остатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РезервыНаРуках КАК РезервыНаРуках
		               |		ПО Остатки.Склад = РезервыНаРуках.Склад
		               |			И Остатки.Номенклатура = РезервыНаРуках.Номенклатура
		               |			И Остатки.Характеристика = РезервыНаРуках.Характеристика
		               |			И Остатки.Серия = РезервыНаРуках.Серия
		               |			И Остатки.ЗаказНаВнутреннееПотребление = РезервыНаРуках.ЗаказНаВнутреннееПотребление";
		РезЗапроса = Запрос.ВыполнитьПакет();
		Выборка = РезЗапроса[2].Выбрать();
		Если НЕ РезЗапроса[3].Пустой() Тогда 
			РезервыНаСкладах = РезЗапроса[3].Выгрузить();
			РезервыНаСкладах.Индексы.Добавить("Склад");
			РезервыНаСкладах.Индексы.Добавить("Номенклатура");
			РезервыНаСкладах.Индексы.Добавить("Характеристика");
			РезервыНаСкладах.Индексы.Добавить("Серия");
		Иначе
			РезервыНаСкладах = Новый ТаблицаЗначений;
		КонецЕсли;
		Если НЕ РезЗапроса[4].Пустой() Тогда 
			РезервыНаРуках = РезЗапроса[4].Выгрузить();
			РезервыНаРуках.Индексы.Добавить("Склад");
			РезервыНаРуках.Индексы.Добавить("Номенклатура");
			РезервыНаРуках.Индексы.Добавить("Характеристика");
			РезервыНаРуках.Индексы.Добавить("Серия");
		Иначе
			РезервыНаРуках = Новый ТаблицаЗначений;
		КонецЕсли;
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	Остатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		               |	Остатки.Склад КАК Склад,
		               |	Остатки.Номенклатура КАК Номенклатура,
		               |	Остатки.Характеристика КАК Характеристика,
		               |	Остатки.Количество КАК Количество,
		               |	Остатки.Серия КАК Серия,
					   |	Остатки.НаСкладе КАК НаСкладе,
	               	   |	0 КАК НаРуках
		               |ИЗ
		               |	Остатки КАК Остатки";
		РезЗапроса = Запрос.Выполнить();
		Выборка = РезЗапроса.Выбрать();
		РезервыНаСкладах = Новый ТаблицаЗначений;
		РезервыНаРуках = Новый ТаблицаЗначений;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Склад, Номенклатура, Характеристика, Серия");  
	Пока Выборка.Следующий() Цикл 
		НадоСписать = Выборка.Количество;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Если Выборка.НаРуках > 0 Тогда
			СписатьОстаток = Мин(НадоСписать, Выборка.НаРуках);
			Движение = Движения.торо_ТоварыНаРуках.ДобавитьРасход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			Движение.Количество = СписатьОстаток;
			Если РезервыНаРуках.Количество() Тогда
				НайденныеРезервы = РезервыНаРуках.НайтиСтроки(СтруктураПоиска);
				СписатьРезерв = СписатьОстаток;
				Для Каждого СтрокаРезерв Из НайденныеРезервы Цикл
					Если СписатьРезерв = 0 ИЛИ СтрокаРезерв.РезервНаРуках <= 0 Тогда
						Прервать;
					КонецЕсли;
					Движение = Движения.торо_РезервыНаРуках.ДобавитьРасход();
					ЗаполнитьЗначенияСвойств(Движение, СтрокаРезерв);
					Движение.Период = Дата;
					Списать = Мин(СтрокаРезерв.РезервНаРуках, СписатьРезерв);
					Движение.Количество = Списать;
					СписатьРезерв = СписатьРезерв - Списать;
				КонецЦикла;
			КонецЕсли;
			НадоСписать = НадоСписать - СписатьОстаток;
		КонецЕсли;
		
		Если НадоСписать > 0 Тогда
			Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			Движение.ВНаличии = НадоСписать;
			Если РезервыНаСкладах.Количество() Тогда
				НайденныеРезервы = РезервыНаСкладах.НайтиСтроки(СтруктураПоиска);
				СписатьРезерв = НадоСписать;
				Для Каждого СтрокаРезерв Из НайденныеРезервы Цикл
					Если СтрокаРезерв.РезервНаСкладе <= 0 Тогда
						Прервать;
					КонецЕсли;
					Движение = Движения.торо_РезервыНаСкладах.ДобавитьРасход();
					ЗаполнитьЗначенияСвойств(Движение, СтрокаРезерв);
					Движение.Период = Дата;
					Списать = Мин(СписатьРезерв, СтрокаРезерв.РезервНаСкладе);
					Движение.Количество = Списать;
					СписатьРезерв = СписатьРезерв - Списать;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Движения.Записать();

КонецПроцедуры

// Заполняет документ по одному или нескольким заказам
// Параметры:
//   ДанныеЗаполнения - Массив, ДокументСсылка - ссылка на документ заказа или массив ссылок
//   РеквизитыШапки - Структура - значения реквизитов шапки
//   ЗаполнятьНаДату - Дата - дата, на которую нужно получить остатки заказов
//   ОтборТовары - ДанныеФормыКоллекция, ТаблицаЗначений - содержит отбор товаров.
Процедура ЗаполнитьПоЗаказу(ДанныеЗаполнения, РеквизитыШапки = Неопределено, ЗаполнятьНаДату = Истина, ОтборТовары = Неопределено)
	
	ТипДанныеЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныеЗаполнения = Тип("Массив") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыШапки);
		
	ИначеЕсли ТипДанныеЗаполнения = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
		
		ЗаказНаВнутреннееПотребление = ДанныеЗаполнения;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Заказы.Ссылка КАК ЗаказНаВнутреннееПотребление,
		|	Заказы.Организация КАК Организация,
		|	Заказы.Подразделение КАК Подразделение,
		|	Заказы.Склад КАК Склад,
		|	Заказы.Склад.УчетныйВидЦены КАК ВидЦены,
		|	(НЕ Заказы.Проведен) КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ЗаказНаВнутреннееПотребление КАК Заказы
		|ГДЕ
		|	Заказы.Ссылка = &Заказ");
		
		Запрос.УстановитьПараметр("Заказ", ЗаказНаВнутреннееПотребление);
		РеквизитыЗаказа = Запрос.Выполнить().Выбрать();
		РеквизитыЗаказа.Следующий();
		
		МассивДопустимыхСтатусов = Новый Массив();
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыЗаказа);
		
	КонецЕсли;
	
	ПотреблениеПоЗаказам = Истина;
	
	Если ТипДанныеЗаполнения = Тип("Массив") Тогда
		МассивЗаказов = ДанныеЗаполнения;
	Иначе
		МассивЗаказов = Новый Массив;
		МассивЗаказов.Добавить(ЗаказНаВнутреннееПотребление);
	КонецЕсли;
	
	Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьПоОстаткамЗаказов(ЭтотОбъект,Товары,МассивЗаказов);
	
	Если ОтборТовары <> Неопределено Тогда
		СтрокиКУдалению = Новый Массив;
		СтруктураПоиска = Новый Структура("ЗаказНаВнутреннееПотребление,КодСтроки");
		Для каждого ДанныеСтроки Из Товары Цикл
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
			СписокСтрок = ОтборТовары.НайтиСтроки(СтруктураПоиска);
			Если СписокСтрок.Количество() = 0 Тогда
				СтрокиКУдалению.Добавить(ДанныеСтроки);
			КонецЕсли; 
		КонецЦикла;
		Для каждого ДанныеСтроки Из СтрокиКУдалению Цикл
			Товары.Удалить(ДанныеСтроки);
		КонецЦикла; 
	КонецЕсли; 
	
	ЗаполнитьЗаказВШапкеПоЗаказамВТабличнойЧасти(ЗаказНаВнутреннееПотребление, Товары, "ЗаказНаВнутреннееПотребление");
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Склад = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойСклад");
	КонецЕсли;
	
	ДатаРаспоряжения = ТекущаяДата();
	ВидЦены          = Справочники.Склады.УчетныйВидЦены(Склад);
	
КонецПроцедуры

Процедура ЗаполнитьЗаказВШапкеПоЗаказамВТабличнойЧасти(ЗаказВШапке, Знач ТабличнаяЧасть, Знач ИмяЗаказаВТабличнойЧасти) Экспорт
	
	// Заполним заказ в шапке, если в табличной части указан один заказ
	ЗаказыТабличнойЧасти = ТабличнаяЧасть.Выгрузить(,ИмяЗаказаВТабличнойЧасти);
	ЗаказыТабличнойЧасти.Свернуть(ИмяЗаказаВТабличнойЧасти);
	
	Если ЗаказыТабличнойЧасти.Количество() = 1 Тогда
		СтрокаТабличнойЧасти = ЗаказыТабличнойЧасти[0];
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяЗаказаВТабличнойЧасти]) Тогда
			ЗаказВШапке = СтрокаТабличнойЧасти[ИмяЗаказаВТабличнойЧасти];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый() Тогда
		 торо_Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоРезерву(ДанныеЗаполнения)
	// Заполнение шапки
	ЗаказНаВнутреннееПотребление = ДанныеЗаполнения.ЗаказНаВнутреннееПотребление;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	ПотреблениеПоЗаказам = Истина;
	Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаТовары);
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьБлокировку()	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_ТоварыНаРуках");
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад); 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");	
	ЭлементБлокировки.УстановитьЗначение("ЗаказНаВнутреннееПотребление", ЗаказНаВнутреннееПотребление);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_РезервыНаСкладах");
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура"); 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");
	
	Если ПотреблениеПоЗаказам Тогда 
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ЗаказыНаВнутреннееПотребление");
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.УстановитьЗначение("ЗаказНаВнутреннееПотребление", ЗаказНаВнутреннееПотребление);
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
		ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_РезервыНаРуках");
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
		ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");	
		ЭлементБлокировки.УстановитьЗначение("ЗаказНаВнутреннееПотребление", ЗаказНаВнутреннееПотребление);
	КонецЕсли;
	
	Блокировка.Заблокировать();
КонецПроцедуры

Процедура ПроверитьПревышениеОстатка(МенеджерВТ, Отказ, ФОИспользоватьСерии, ФОИспользоватьХарактеристики)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабТовары.Номенклатура КАК Номенклатура,
	               |	ТабТовары.Склад КАК Склад,
	               |	ТабТовары.Характеристика КАК Характеристика,
	               |	ТабТовары.Серия КАК Серия,
	               |	ТабТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	СУММА(ТабТовары.СвобОстаток - ТабТовары.Количество) КАК ОтрОстаток
	               |ИЗ
	               |	Остатки КАК ТабТовары
	               |ГДЕ
	               |	ТабТовары.СвобОстаток - ТабТовары.Количество < 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабТовары.Номенклатура,
	               |	ТабТовары.Склад,
	               |	ТабТовары.Характеристика,
	               |	ТабТовары.Серия,
	               |	ТабТовары.ЕдиницаИзмерения";
	РезЗапроса = Запрос.Выполнить();
	Если Не РезЗапроса.Пустой() Тогда
		Выборка = РезЗапроса.Выбрать();
		Отказ = Истина;
		Пока Выборка.Следующий() Цикл 
			ШаблонСообщения = "Номенклатура %Номенклатура% / %Характеристика% / %Серия%.
				|Превышен свободный остаток товара на складе %СкладОтправитель% на %Количество% %ЕдИзм%";
			
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", Выборка.Номенклатура);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%СкладОтправитель%", Склад);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Количество%", - Число(Выборка.ОтрОстаток));
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%ЕдИзм%", Выборка.ЕдиницаИзмерения);
			
			Если ФОИспользоватьСерии Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Серия%", Выборка.Серия);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Серия%", "");
			КонецЕсли;
			
			Если ФОИспользоватьХарактеристики Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Характеристика%", Выборка.Характеристика);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Характеристика%", "");
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения, ЭтотОбъект);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура СписатьЗаказыНаВнутреннееПотребление(МенеджерВТ, Отказ, ФОИспользоватьСерии, ФОИспользоватьХарактеристики)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.Номенклатура КАК Номенклатура,
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.Характеристика КАК Характеристика,
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.КодСтроки КАК КодСтроки,
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.Склад КАК Склад,
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.Серия КАК Серия,
	               |	ЗаказыНаВнутреннееПотреблениеОстатки.КОформлениюОстаток КАК КОформлениюОстаток
	               |ПОМЕСТИТЬ Заказы
	               |ИЗ
	               |	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	               |			&Дата,
	               |			(ЗаказНаВнутреннееПотребление, Номенклатура, Характеристика, КодСтроки, Склад) В
	               |				(ВЫБРАТЬ
	               |					Таб.ЗаказНаВнутреннееПотребление,
	               |					Таб.Номенклатура,
	               |					Таб.Характеристика,
	               |					Таб.КодСтроки,
	               |					Таб.Склад
	               |				ИЗ
	               |					Таблица КАК Таб)) КАК ЗаказыНаВнутреннееПотреблениеОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаказНаВнутреннееПотребление,
	               |	Номенклатура,
	               |	Характеристика,
	               |	Склад,
	               |	Серия,
	               |	КодСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаОстатков.ЗаказНаВнутреннееПотребление КАК Заказ,
	               |	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	               |	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТаблицаОстатков.Характеристика КАК Характеристика,
	               |	ТаблицаОстатков.КодСтроки КАК КодСтроки,
	               |	ТаблицаОстатков.Склад КАК Склад,
	               |	ТаблицаОстатков.КОформлениюОстаток КАК Заказано,
	               |	Таблица.Количество КАК Количество,
	               |	ТаблицаОстатков.Серия КАК СерияВЗаказе,
	               |	Таблица.Серия КАК Серия,
	               |	Таблица.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	Таблица КАК Таблица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Заказы КАК ТаблицаОстатков
	               |		ПО (ТаблицаОстатков.ЗаказНаВнутреннееПотребление = Таблица.ЗаказНаВнутреннееПотребление)
	               |			И (ТаблицаОстатков.Номенклатура = Таблица.Номенклатура)
	               |			И (ТаблицаОстатков.Характеристика = Таблица.Характеристика)
	               |			И (ТаблицаОстатков.КодСтроки = Таблица.КодСтроки)
	               |			И (ТаблицаОстатков.Склад = Таблица.Склад)
	               |ИТОГИ
	               |	МИНИМУМ(Заказано),
	               |	СУММА(Количество)
	               |ПО
	               |	Заказ,
	               |	Номенклатура,
	               |	Характеристика";
	Запрос.УстановитьПараметр("Дата", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	РезЗапроса = Запрос.Выполнить();
	Если НЕ РезЗапроса.Пустой() Тогда 
		ВыборкаЗаказов = РезЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗаказов.Следующий() Цикл
			ВыборкаНоменклатур = ВыборкаЗаказов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатур.Следующий() Цикл
				ВыборкаХарактеристик = ВыборкаНоменклатур.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаХарактеристик.Следующий() Цикл
					ВыборкаСерий = ВыборкаХарактеристик.Выбрать();
					Пока ВыборкаСерий.Следующий() Цикл 
						Если ВыборкаСерий.Заказано - ВыборкаСерий.Количество < 0 Тогда
							ТекстСообщения = НСтр("ru = 'Номенклатура ""%Номенклатура%"", характеристика ""%Характеристика%"", серия ""%Серия%"", склад ""%Склад%"". 
							|По строке %НомерСтроки% оформлено больше, чем указано в распоряжении, на %Количество% %Единица%.'");
							
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", ВыборкаСерий.Номенклатура);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(- (ВыборкаСерий.Заказано - ВыборкаСерий.Количество)));
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(ВыборкаСерий.ЕдиницаИзмерения));
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(ВыборкаСерий.НомерСтроки));
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(ВыборкаСерий.Склад));
							
							Если ФОИспользоватьСерии Тогда
								ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Серия%", ВыборкаСерий.Серия);
							Иначе 
								ТекстСообщения = СтрЗаменить(ТекстСообщения, ", серия ""%Серия%""", "");
							КонецЕсли;
							
							Если ФОИспользоватьХарактеристики Тогда
								ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Характеристика%", ВыборкаСерий.Характеристика);
							Иначе 
								ТекстСообщения = СтрЗаменить(ТекстСообщения, ", характеристика ""%Характеристика%""", "");
							КонецЕсли; 
							
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
						КонецЕсли;
						
						Движение = Движения.ЗаказыНаВнутреннееПотребление.ДобавитьРасход();
						Движение.Период        					= Дата;
						Движение.ЗаказНаВнутреннееПотребление 	= ВыборкаСерий.Заказ;
						Движение.Номенклатура   				= ВыборкаСерий.Номенклатура;
						Движение.Склад          				= ВыборкаСерий.Склад;
						Движение.КОформлению       				= ВыборкаСерий.Количество;
						Движение.КодСтроки                      = ВыборкаСерий.КодСтроки;
						
						Если ФОИспользоватьСерии Тогда
							Движение.Серия = ВыборкаСерий.СерияВЗаказе;
						КонецЕсли; 
						
						Если ФОИспользоватьХарактеристики Тогда
							Движение.Характеристика = ВыборкаСерий.Характеристика;
						КонецЕсли; 
					КонецЦикла;
					
					Если ВыборкаСерий.Количество() > 1 И НЕ Отказ Тогда 
						Если ВыборкаХарактеристик.Заказано - ВыборкаХарактеристик.Количество < 0 Тогда
							ТекстСообщения = НСтр("ru = 'Номенклатура ""%Номенклатура%"", характеристика ""%Характеристика%"". 
							|По строке %НомерСтроки% оформлено больше, чем указано в распоряжении, на %Количество% %Единица%.'");
							
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", ВыборкаХарактеристик.Номенклатура);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(- (ВыборкаХарактеристик.Заказано - ВыборкаХарактеристик.Количество)));
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(ВыборкаХарактеристик.ЕдиницаИзмерения));
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(ВыборкаХарактеристик.НомерСтроки));
								
							Если ФОИспользоватьХарактеристики Тогда
								ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Характеристика%", ВыборкаХарактеристик.Характеристика);
							Иначе 
								ТекстСообщения = СтрЗаменить(ТекстСообщения, ", характеристика ""%Характеристика%""", "");
							КонецЕсли; 
							
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);	
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли