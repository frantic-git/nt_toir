
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Заполнение

// Формирует результат запроса по невыполненной части заказов.
//
// Параметры:
// ДанныеОтбора     - Структура - поля, по которым будут отобраны остатки заказов
// Дата             - Дата - дата, на которую будут отобраны остатки заказов
// МассивЗаказов      Массив - заказы, по которым будут отобраны остатки.
//
// Вовращаемое значение:
// Результат запроса - результат запроса по невыполненной части заказов.
//
Функция ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, Дата = Неопределено, МассивЗаказов)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор",           ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",           ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Подразделение",         ДанныеОтбора.Подразделение);
	Запрос.УстановитьПараметр("Склад",                 ДанныеОтбора.Склад);
	Запрос.УстановитьПараметр("МассивЗаказов",         МассивЗаказов);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу",      МассивЗаказов <> Неопределено);
	
	Если Дата <> Неопределено И Дата <> '00010101' Тогда
		
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ГраницаПериод", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		
	Иначе
		
		Запрос.УстановитьПараметр("Период", '00010101');
		Запрос.УстановитьПараметр("ГраницаПериод", Неопределено);
		
	КонецЕсли;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ИнтеграцияДокументов.ID КАК ID
	               |ПОМЕСТИТЬ ВТ_РемонтыПоЗаявкам
	               |ИЗ
	               |	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	               |ГДЕ
	               |	торо_ИнтеграцияДокументов.ДокументЕРП В(&МассивЗаказов)
	               |	И торо_ИнтеграцияДокументов.ДокументЕРП.Проведен = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(торо_ИнтеграцияДокументов.ДокументЕРП КАК Документ.ВнутреннееПотреблениеТоваров) КАК ДокументЕРП
	               |ПОМЕСТИТЬ ВТ_СвязанныеПоРемонтуДокументы
	               |ИЗ
	               |	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	               |ГДЕ
	               |	торо_ИнтеграцияДокументов.ID В
	               |			(ВЫБРАТЬ
	               |				ВТ_РемонтыПоЗаявкам.ID КАК ID
	               |			ИЗ
	               |				ВТ_РемонтыПоЗаявкам КАК ВТ_РемонтыПоЗаявкам)
	               |	И торо_ИнтеграцияДокументов.ДокументЕРП ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	               |	И торо_ИнтеграцияДокументов.ДокументЕРП.Проведен = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказНаВнутреннееПотребление.Ссылка КАК Заказ
	               |ПОМЕСТИТЬ ВТЗаказыОтбор
	               |ИЗ
	               |	Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ОтобратьПоЗаказу
	               |				ТОГДА ЗаказНаВнутреннееПотребление.Ссылка В (&МассивЗаказов)
	               |			ИНАЧЕ ЗаказНаВнутреннееПотребление.Подразделение = &Подразделение
	               |					И ЗаказНаВнутреннееПотребление.Организация = &Организация
	               |		КОНЕЦ
	               |	И ЗаказНаВнутреннееПотребление.Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &Склад)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.Ссылка КАК ЗаказНаВнутреннееПотребление,
	               |	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	               |	Товары.Номенклатура КАК Номенклатура,
	               |	Товары.Характеристика КАК Характеристика,
	               |	Товары.КодСтроки КАК КодСтроки,
	               |	МАКСИМУМ(Товары.Упаковка) КАК Упаковка,
	               |	Товары.Серия КАК Серия
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.ЗаказНаВнутреннееПотребление.Товары КАК Товары
	               |ГДЕ
	               |	Товары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				Т.Заказ
	               |			ИЗ
	               |				ВТЗаказыОтбор КАК Т)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Товары.Ссылка,
	               |	Товары.Номенклатура,
	               |	Товары.Характеристика,
	               |	Товары.КодСтроки,
	               |	Товары.Серия
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	КодСтроки,
	               |	Номенклатура,
	               |	Характеристика,
	               |	ЗаказНаВнутреннееПотребление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаЗаказы.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	ТаблицаЗаказы.Номенклатура КАК Номенклатура,
	               |	ТаблицаЗаказы.Характеристика КАК Характеристика,
	               |	ТаблицаЗаказы.КодСтроки КАК КодСтроки,
	               |	СУММА(ТаблицаЗаказы.КОформлению) КАК Количество,
	               |	ТаблицаЗаказы.Серия КАК Серия
	               |ПОМЕСТИТЬ ТаблицаОстатки
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказыОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	               |		ЗаказыОстатки.Характеристика КАК Характеристика,
	               |		ЗаказыОстатки.КодСтроки КАК КодСтроки,
	               |		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению,
	               |		ЗаказыОстатки.Серия КАК Серия
	               |	ИЗ
	               |		РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	               |				&ГраницаПериод,
	               |				ЗаказНаВнутреннееПотребление В
	               |					(ВЫБРАТЬ
	               |						Т.Заказ
	               |					ИЗ
	               |						ВТЗаказыОтбор КАК Т)) КАК ЗаказыОстатки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗаказыДвижения.ЗаказНаВнутреннееПотребление,
	               |		ЗаказыДвижения.Номенклатура,
	               |		ЗаказыДвижения.Характеристика,
	               |		ЗаказыДвижения.КодСтроки,
	               |		ВЫБОР
	               |			КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |				ТОГДА -ЗаказыДвижения.КОформлению
	               |			ИНАЧЕ ЗаказыДвижения.КОформлению
	               |		КОНЕЦ,
	               |		ЗаказыДвижения.Серия
	               |	ИЗ
	               |		РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК ЗаказыДвижения
	               |	ГДЕ
	               |		ЗаказыДвижения.Регистратор = &Регистратор
	               |		И ЗаказыДвижения.ЗаказНаВнутреннееПотребление В
	               |				(ВЫБРАТЬ
	               |					Т.Заказ
	               |				ИЗ
	               |					ВТЗаказыОтбор КАК Т)
	               |		И ЗаказыДвижения.Активность
	               |		И ВЫБОР
	               |				КОГДА &Период <> ДАТАВРЕМЯ(1, 1, 1)
	               |					ТОГДА ЗаказыДвижения.Период <= &Период
	               |				ИНАЧЕ ИСТИНА
	               |			КОНЕЦ) КАК ТаблицаЗаказы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаЗаказы.Номенклатура,
	               |	ТаблицаЗаказы.Характеристика,
	               |	ТаблицаЗаказы.КодСтроки,
	               |	ТаблицаЗаказы.ЗаказНаВнутреннееПотребление,
	               |	ТаблицаЗаказы.Серия
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ТаблицаЗаказы.КОформлению) > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	КодСтроки,
	               |	Номенклатура,
	               |	Характеристика,
	               |	ЗаказНаВнутреннееПотребление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВнутреннееПотреблениеТоваровТовары.Номенклатура КАК Номенклатура,
	               |	ВнутреннееПотреблениеТоваровТовары.Характеристика КАК Характеристика,
	               |	ВнутреннееПотреблениеТоваровТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	               |	ВнутреннееПотреблениеТоваровТовары.Количество КАК Количество,
	               |	ВнутреннееПотреблениеТоваровТовары.КодСтроки КАК КодСтроки,
	               |	ВнутреннееПотреблениеТоваровТовары.Серия КАК Серия
	               |ПОМЕСТИТЬ ВТ_ЗаказанныеПоСвязанномуРемонту
	               |ИЗ
	               |	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеПоРемонтуДокументы КАК ВТ_СвязанныеПоРемонтуДокументы
	               |		ПО ВнутреннееПотреблениеТоваровТовары.Ссылка = ВТ_СвязанныеПоРемонтуДокументы.ДокументЕРП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	ТаблицаОстатки.Номенклатура КАК Номенклатура,
	               |	ТаблицаОстатки.Характеристика КАК Характеристика,
	               |	ТаблицаОстатки.КодСтроки КАК КодСтроки,
	               |	ТаблицаОстатки.Количество - ЕСТЬNULL(ВТ_ЗаказанныеПоСвязанномуРемонту.Количество, 0) КАК Количество,
	               |	ТаблицаТовары.Упаковка КАК Упаковка,
	               |	ТаблицаТовары.Упаковка.Коэффициент КАК Коэффициент,
	               |	ТаблицаОстатки.Серия КАК Серия
	               |ИЗ
	               |	ТаблицаОстатки КАК ТаблицаОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	               |		ПО ТаблицаОстатки.Номенклатура = ТаблицаТовары.Номенклатура
	               |			И ТаблицаОстатки.Характеристика = ТаблицаТовары.Характеристика
	               |			И ТаблицаОстатки.КодСтроки = ТаблицаТовары.КодСтроки
	               |			И ТаблицаОстатки.ЗаказНаВнутреннееПотребление = ТаблицаТовары.ЗаказНаВнутреннееПотребление
	               |			И ТаблицаОстатки.Серия = ТаблицаТовары.Серия
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказанныеПоСвязанномуРемонту КАК ВТ_ЗаказанныеПоСвязанномуРемонту
	               |		ПО ТаблицаОстатки.Номенклатура = ВТ_ЗаказанныеПоСвязанномуРемонту.Номенклатура
	               |			И ТаблицаОстатки.Характеристика = ВТ_ЗаказанныеПоСвязанномуРемонту.Характеристика
	               |			И ТаблицаОстатки.Серия = ВТ_ЗаказанныеПоСвязанномуРемонту.Серия
	               |ГДЕ
	               |	ТаблицаОстатки.Количество - ЕСТЬNULL(ВТ_ЗаказанныеПоСвязанномуРемонту.Количество, 0) > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТаблицаОстатки.ЗаказНаВнутреннееПотребление.Дата,
	               |	ТаблицаОстатки.ЗаказНаВнутреннееПотребление,
	               |	ТаблицаТовары.НомерСтроки";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Запрос.Выполнить();

КонецФункции

// Заполняет таблицу товаров по данным отбора или массиву заказов.
//
// Параметры:
//  ДанныеОтбора    - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//  Товары          - ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки заказов
//  МассивЗаказов   - Массив - заказы, по которым будут отобраны остатки
//  ЗаполнятьНаДату - Булево - указывает на необходимость заполнения по остаткам на дату,
//							переданную в качестве поля в ДанныеОтбора.
//
Процедура ЗаполнитьПоОстаткамЗаказов(ДанныеОтбора, Товары, МассивЗаказов=Неопределено, ЗаполнятьНаДату=Истина) Экспорт
	
	Выборка = ПолучитьРезультатЗапросаПоОстаткамЗаказов(
		ДанныеОтбора,
		?(ЗаполнятьНаДату, ДанныеОтбора.Дата, Неопределено),
		МассивЗаказов
	).Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТоваров = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, Выборка);
		
		// Если упаковка заполнена нужно определить количество упаковок.
		Если ЗначениеЗаполнено(СтрокаТоваров.Упаковка) Тогда
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество / Выборка.Коэффициент;
		Иначе
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Прочее

// Функция выполняет проверки документа-распоряжения при создании расходного ордера.
//
// Параметры:
//	 Распоряжение - ДокументССылка - Ссылка на документ-распоряжение.
//	 Склад - СправочникСсылка.Склады - Ссылка на элемент справочника Склады.
//
// Возвращаемое значение:
//	 Структура - результаты проверки
//		- Отказ - Булево - Истина, если проверки прошли с ошибками, иначе - Ложь
//		- ТекстОшибки - Строка - Обязательно должен быть заполнен, когда Отказ = Истина
//		- ДатаОтгрузки - Дата
//		- ГруппаСкладовВРаспоряжении - Булево - В распоряжении выбрана группа складов 
//		- ИспользоватьОрдернуюСхему - Булево - На складе используется ордерная схема.
//
Функция ВыполнитьПроверкиРаспоряжения(Распоряжение, Склад) Экспорт 
		
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Операция", "");
	СтруктураВозврата.Вставить("ТекстОшибки", "");
	СтруктураВозврата.Вставить("ГруппаСкладовВРаспоряжении", Ложь);
	СтруктураВозврата.Вставить("ДатаОтгрузки");
	СтруктураВозврата.Вставить("ИспользоватьОрдернуюСхему"); 
	
	Реквизиты = Новый Структура("ДатаОтгрузки, Склад, ИспользоватьОрдернуюСхему", "Дата");
	
	Реквизиты.Склад = "Склад";
	Реквизиты.ИспользоватьОрдернуюСхему ="
	|ВЫБОР
	|	КОГДА ЕстьNULL(Склад.ИспользоватьОрдернуюСхемуПриОтгрузке, Ложь)
	|			И Дата >= ЕстьNULL(Склад.ДатаНачалаОрдернойСхемыПриОтгрузке, ДАТАВРЕМЯ(1,1,1))
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|КОНЕЦ";
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, Реквизиты);
	ИспользоватьОрдернуюСхему = ЗначенияРеквизитов.ИспользоватьОрдернуюСхему;
	
	СтруктураВозврата.ИспользоватьОрдернуюСхему = ИспользоватьОрдернуюСхему;
	
	Если ИспользоватьОрдернуюСхему Тогда
		
		Склад = ЗначенияРеквизитов.Склад;
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ЗначенияРеквизитов, "ДатаОтгрузки");
		
	Иначе
		
		ТекстОшибки = НСтр("ru = 'Для склада ""%Склад%"" оформление расходных ордеров не требуется.
			|Заполнение документа не выполнено.'");
		СтруктураВозврата.ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Склад%", Строка(ЗначенияРеквизитов.Склад));
		СтруктураВозврата.Операция = "Отказ";
		Возврат СтруктураВозврата;
		
	КонецЕсли;	
	
	Возврат СтруктураВозврата
	
КонецФункции

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВнутреннееПотреблениеТоваров - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - реквизиты внутреннего потребления товаров.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,);
	
	Возврат СтруктураРеквизитов;

КонецФункции

#КонецОбласти

// {УП}
#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

#Область ТекстСписаниеКомиссионныхТоваров             // (Дт  :: Кт 003.01, 004.01)
	ТекстСписаниеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Списание комиссионных и давальческих товаров (Дт  :: Кт 003.01, 004.01)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|
	|	Аналитика.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
#КонецОбласти

#Область ТекстСписаниеТоваровНаРасходы                // (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаРасходы = "
	|ВЫБРАТЬ //// Списание на расходы товаров (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Строки.СтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И СтатьиСтроительства.Ссылка ЕСТЬ NULL
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|";
#КонецОбласти

#Область ТекстСписаниеТоваровНаПрочиеАктивы           // (Дт 08.03 :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаПрочиеАктивы = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт 08.03 :: Кт 41.01, 76.ОК)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.АналитикаРасходов КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|";
#КонецОбласти

#Область ТекстПередачаТоваровДавальцаВПроизводство    // (Дт 003.02 :: Кт 003.01/002)
	ТекстПередачаТоваровДавальцаВПроизводство = "
	|ВЫБРАТЬ //// Передача товаров давальца в производство (Дт 003.02 :: Кт 003.01/002)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетДт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоДт1,
	|	Аналитика.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку)
	|	КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|";
#КонецОбласти

#Область ТекстСписаниеТоваровДавальца                 // (Дт  :: Кт 003.01/002)
	ТекстСписаниеТоваровДавальца = "
	|ВЫБРАТЬ //// Передача товаров давальца в производство (Дт  :: Кт 003.01/002)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку)
	|	КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
#КонецОбласти

#Область ТекстВключениеИсключениеНДСВСтоимость        // (Дт 25, 26, 44 :: Кт 19.03)
	ТекстВключениеИсключениеНДСВСтоимость = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе (Дт 25, 26, 44 :: Кт 19.03)
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Партии.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Партии.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Партии.СтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	Партии.СчетУчетаНДС КАК СчетКт,
	|
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И (Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|";
#КонецОбласти

	Возврат ТекстСписаниеКомиссионныхТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаРасходы
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаПрочиеАктивы
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровДавальцаВПроизводство
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровДавальца
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВключениеИсключениеНДСВСтоимость;
	
КонецФункции

#КонецОбласти
// {/УП}

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЗаказыНаВнутреннееПотребление(), "ТаблицаЗаказыНаВнутреннееПотребление");
	ТекстыЗапроса.Добавить(ТекстЗапросаВтТаблицаТоварыИОбеспечение(), "");

	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаСвободныеОстатки(),     "ТаблицаСвободныеОстатки");

	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Дата                           КАК Период,
		|	Таблица.Организация                    КАК Организация,
		|	Таблица.Склад                          КАК Склад,
		|	Таблица.ЗаказНаВнутреннееПотребление   КАК ЗаказНаВнутреннееПотребление,
		|	Таблица.ДатаРаспоряжения               КАК ДатаРаспоряжения,
		|	Таблица.ПотреблениеПоЗаказам           КАК ПоЗаказуНаВнутреннееПотребление,
		|	Таблица.Подразделение                  КАК Подразделение,
		|	Таблица.Ссылка                         КАК Ссылка
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка",                         ДокументСсылка);
		
		Реквизиты = Запрос.Выполнить().Выбрать();
		Реквизиты.Следующий();
		
		Запрос.УстановитьПараметр("Склад",                           Реквизиты.Склад);
		Запрос.УстановитьПараметр("Период",                          Реквизиты.Период);
		Запрос.УстановитьПараметр("ДатаРаспоряжения",                Реквизиты.ДатаРаспоряжения);
		Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
		Запрос.УстановитьПараметр("ЗаказНаВнутреннееПотребление",    Реквизиты.ЗаказНаВнутреннееПотребление);
		Запрос.УстановитьПараметр("ПоЗаказуНаВнутреннееПотребление", Реквизиты.ПоЗаказуНаВнутреннееПотребление);
		Запрос.УстановитьПараметр("Подразделение",                   Реквизиты.Подразделение);



КонецПроцедуры

Функция ТекстЗапросаТаблицаЗаказыНаВнутреннееПотребление()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)     КАК ВидДвижения,
		|	&ДатаРаспоряжения                          КАК Период,
		|	ТаблицаТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
		|	ТаблицаТовары.Характеристика               КАК Характеристика,
		|	ТаблицаТовары.КодСтроки                    КАК КодСтроки,
		|	&Склад                                     КАК Склад,
		|	ТаблицаТовары.Количество                   КАК КОформлению
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И &ПоЗаказуНаВнутреннееПотребление
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаТоварыИОбеспечение()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаТовары.КодСтроки                               КАК КодСтроки,
		|	&Склад                                                КАК Склад,
		|	ТаблицаТовары.Номенклатура                            КАК Номенклатура,
		|	ТаблицаТовары.Характеристика                          КАК Характеристика,
		|	ТаблицаТовары.ЗаказНаВнутреннееПотребление            КАК ЗаказНаВнутреннееПотребление,
		|	ТаблицаТовары.Количество                              КАК Количество
		|
		|ПОМЕСТИТЬ ТоварыИОбеспечение
		|
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТоварыЗаказа
		|		ПО ТаблицаТовары.ЗаказНаВнутреннееПотребление = ТоварыЗаказа.Ссылка
		|			И ТаблицаТовары.Номенклатура              = ТоварыЗаказа.Номенклатура
		|			И ТаблицаТовары.Характеристика            = ТоварыЗаказа.Характеристика
		|			И ТаблицаТовары.КодСтроки                 = ТоварыЗаказа.КодСтроки
		|			И &ПоЗаказуНаВнутреннееПотребление
		|
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Количество               КАК ВНаличии
		|
		|ИЗ
		|	ТоварыИОбеспечение КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Внутреннее потребление товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВнутреннееПотреблениеТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Внутреннее потребление товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВнутреннееПотреблениеТоваров") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ВнутреннееПотреблениеТоваров",
			НСтр("ru = 'Внутреннее потребление товаров'"),
			ПечатьВнутреннееПотреблениеТоваров(МассивОбъектов, ОбъектыПечати), 
			, 
			"Документ.ВнутреннееПотреблениеТоваров.ПФ_MXL_ВнутреннееПотреблениеТоваров");
		
	КонецЕсли;
КонецПроцедуры

Функция ПечатьВнутреннееПотреблениеТоваров(МассивОбъектов, ОбъектыПечати)

	ДопКолонка = Неопределено;
	ВыводитьДопКолонку = Ложь;
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Склад) КАК Склад,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Подразделение) КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Организация) КАК Организация,
	|	Документ.Организация.Префикс КАК Префикс,
	|	ТЧТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	ТЧТовары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ТЧТовары.Характеристика.Наименование КАК НаименованиеХарактеристики,
	|	ТЧТовары.Серия.Наименование КАК Серия,
	|	ВЫБОР
	|		КОГДА ТЧТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ТЧТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(ТЧТовары.Упаковка)
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТЧТовары.КоличествоУпаковок) КАК Количество,
	|	ВЫРАЗИТЬ(Документ.Комментарий КАК СТРОКА(150)) КАК Комментарий
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТЧТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Документ
	|		ПО ТЧТовары.Ссылка = Документ.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация.Префикс,
	|	ТЧТовары.Номенклатура.НаименованиеПолное,
	|	ТЧТовары.Характеристика.НаименованиеПолное,
	|	ТЧТовары.Характеристика.Наименование,
	|	ТЧТовары.Серия.Наименование,
	|	ВЫРАЗИТЬ(Документ.Комментарий КАК СТРОКА(150)),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Склад),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Подразделение),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Организация),
	|	ВЫБОР
	|		КОГДА ТЧТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ТЧТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(ТЧТовары.Упаковка)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	Номенклатура,
	|	НаименованиеХарактеристики
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Склад),
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Префикс)
	|ПО
	|	Ссылка";
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнутреннееПотреблениеТоваров";

	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = Метаданные.Документы.ВнутреннееПотреблениеТоваров.Синоним;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВнутреннееПотреблениеТоваров.ПФ_MXL_ВнутреннееПотреблениеТоваров");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодписи   = Макет.ПолучитьОбласть("Подписи");
	
	ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	ИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	
	Если ИспользоватьХарактеристики И НЕ ИспользоватьСерии Тогда  
		ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаФО");
		ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика";
	ИначеЕсли ИспользоватьСерии И НЕ ИспользоватьХарактеристики Тогда
		ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаФО");
		ОбластьШапка.Параметры.ЗаголовокКолонки = "Серия";
	ИначеЕсли ИспользоватьХарактеристики И ИспользоватьСерии Тогда
		ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицыФО");
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаФО");
		ОбластьШапка.Параметры.ЗаголовокКолонки = "Характеристика, серия";
	Иначе 
		ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	КонецЕсли;
	ОбластьГраница    = Макет.ПолучитьОбласть("Граница");
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Организация = торо_ЗаполнениеДокументов.ПолучитьПредставлениеОрганизацииДляПечати(ВыборкаДокументы.Организация);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		Если ЗначениеЗаполнено(ВыборкаДокументы.Комментарий) Тогда
			ОбластьКомментарий = Макет.ПолучитьОбласть("ОбластьКомментарий");
			ОбластьКомментарий.Параметры.Комментарий = ВыборкаДокументы.Комментарий;
			ТабДокумент.Вывести(ОбластьКомментарий);
		КонецЕсли;
		
		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьШапка);
		
		// Вывод строк документа.
		
		ВыборкаСтроки = ВыборкаДокументы.Выбрать();
		Счетчик = 0;
		Пока ВыборкаСтроки.Следующий() Цикл
			Счетчик = Счетчик + 1;
			МатериалыХарактеристика = "";
			МатериалыСерия = "";
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
			ОбластьСтрока.Параметры.НомерСтроки = Счетчик;
			Если ИспользоватьХарактеристики Тогда  
				МатериалыХарактеристика = ?(ЗначениеЗаполнено(ВыборкаСтроки.Характеристика),ВыборкаСтроки.Характеристика, 
				                          ?(ЗначениеЗаполнено(ВыборкаСтроки.НаименованиеХарактеристики),ВыборкаСтроки.НаименованиеХарактеристики,""));
			КонецЕсли;
			Если ИспользоватьСерии Тогда
				МатериалыСерия = ?(ЗначениеЗаполнено(ВыборкаСтроки.Серия), ВыборкаСтроки.Серия, "");
			КонецЕсли;
			Если ЗначениеЗаполнено(МатериалыХарактеристика) И ЗначениеЗаполнено(МатериалыСерия) Тогда
				ОбластьСтрока.Параметры.ХарактеристикаСерия = Строка(МатериалыХарактеристика) + ", " + Строка(МатериалыСерия);
			ИначеЕсли ИспользоватьХарактеристики ИЛИ ИспользоватьСерии Тогда 
				ОбластьСтрока.Параметры.ХарактеристикаСерия = Строка(МатериалыХарактеристика) + Строка(МатериалыСерия);
			КонецЕсли;
							
			ТабДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьГраница);
		
		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;

	// ТОиР
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.КлючПараметровПечати = "торо_ПечатьВнутреннееПотреблениеТоваров";
	// ТОиР
	Возврат ТабДокумент;

КонецФункции

#КонецОбласти

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли
