#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаГлобальные;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект);
	
	торо_СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, Новый Структура("УстановитьСвойствоЭлементовФормыОтПрав", Истина));
	ПравоРедактирование = ПравоДоступа("Редактирование", Метаданные.Справочники.торо_ИдентификаторыТехКарт);
	
	УстановитьВнешнийВидФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокТехКарт" Тогда
		Элементы.Список.Обновить();
		СписокПриАктивизацииСтроки(Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбранногоЗначенияТехкарты(ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТолькоПросмотрКарты = ТекущиеДанные.Статус <> ПредопределенноеЗначение("Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.ВРазработке") 
			                      ИЛИ НЕ ПравоРедактирование;
		
		Если Элементы.Найти("ФормаБизнесПроцессЗаданиеСоздатьНаОсновании") <> Неопределено Тогда
			Элементы.ФормаБизнесПроцессЗаданиеСоздатьНаОсновании.Доступность = НЕ ТолькоПросмотрКарты;
		КонецЕсли; 
		Если Элементы.Найти("ФормаОбщаяКомандаИнтеграцияС1СДокументооборотСоздатьПроцессСогласования1") <> Неопределено Тогда
			Элементы.ФормаОбщаяКомандаИнтеграцияС1СДокументооборотСоздатьПроцессСогласования.Доступность = Не ТолькоПросмотрКарты;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура СоздатьТехКарту(Команда)
	
	ТекущиеДанные =  Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда	
		ОткрытьФорму("Справочник.торо_ИдентификаторыТехКарт.Форма.ФормаЭлемента", Новый Структура("Родитель", ПредопределенноеЗначение("Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка")), ЭтаФорма,,,,Неопределено, РежимОткрытияОкнаФормы.Независимый);
		Возврат;
	КонецЕсли;
	
	Родитель = ?(ТекущиеДанные.ЭтоГруппа, ТекущиеДанные.Ссылка, ТекущиеДанные.Родитель);
	
	ОткрытьФорму("Справочник.торо_ИдентификаторыТехКарт.Форма.ФормаЭлемента", Новый Структура("Родитель", Родитель), ЭтаФорма,,,,Неопределено, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппу(Команда)
	
	ТекущиеДанные =  Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОткрытьФорму("Справочник.торо_ИдентификаторыТехКарт.Форма.ФормаГруппы", Новый Структура("ЭтоГруппа, Родитель", Истина, ПредопределенноеЗначение("Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка")), ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	Родитель = ?(ТекущиеДанные.ЭтоГруппа, ТекущиеДанные.Ссылка, ТекущиеДанные.Родитель);
	
	ОткрытьФорму("Справочник.торо_ИдентификаторыТехКарт.Форма.ФормаГруппы", Новый Структура("ЭтоГруппа, Родитель", Истина, Родитель), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;	
	Если НЕ ТекДанные = Неопределено Тогда
		ОткрытьФормуВыбранногоЗначенияТехкарты(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВнешнийВидФормы()
	Элементы.СодержитОпасныеОперации.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьОпасноеПроизводство");
	Элементы.СодержитРаботыПовышеннойОпасности.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьНарядДопускНаРаботыПовышеннойОпасностиОбязательно");
КонецПроцедуры

&НаКлиенте 
Процедура ОткрытьФормуВыбранногоЗначенияТехкарты(ВыбЗначение)
	
	Если ВыбЗначение.ЭтоГруппа Тогда
		ПоказатьЗначение(Неопределено,ВыбЗначение.Ссылка);
	Иначе
		ОткрытьФорму("Справочник.торо_ИдентификаторыТехКарт.Форма.ФормаЭлемента", Новый Структура("Ключ", ВыбЗначение.Ссылка),ЭтаФорма,,,,Неопределено, РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
