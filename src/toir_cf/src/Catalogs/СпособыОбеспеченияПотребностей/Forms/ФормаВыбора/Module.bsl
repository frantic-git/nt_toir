
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОтбиратьПоСкладу = Истина;
	Параметры.Свойство("Склад", Склад);
	ОбновитьОтборСписка(Список, ОтбиратьПоСкладу, Склад, Параметры.Отбор);
	Элементы.ГруппаОтбор.Видимость = Параметры.Свойство("Склад");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтбиратьПоСкладуПриИзменении(Элемент)

	Если Параметры.Свойство("Отбор") Тогда
		ПараметрыОтбор = Параметры.Отбор;
	Иначе
		ПараметрыОтбор = Неопределено;
	КонецЕсли;
	ОбновитьОтборСписка(Список, ОтбиратьПоСкладу, Склад, ПараметрыОтбор);

КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)

	ОбновитьОтборСписка(Список, ОтбиратьПоСкладу, Склад, Параметры.Отбор);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборСписка(Список, ОтбиратьПоСкладу, Склад, Отбор)

	Если Отбор <> Неопределено И Отбор.Свойство("ТипОбеспечения") Тогда

		СписокТиповОбеспечения = Новый СписокЗначений();
		Для Каждого Элемент Из Отбор.ТипОбеспечения Цикл
			СписокТиповОбеспечения.Добавить(Элемент);
		КонецЦикла;

		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
			"Ссылка.ТипОбеспечения", СписокТиповОбеспечения, ВидСравненияКомпоновкиДанных.ВСписке);

	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ОтбиратьПоСкладу", ОтбиратьПоСкладу);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Склад", Склад);

КонецПроцедуры

#КонецОбласти
