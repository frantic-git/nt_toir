////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем ОткрытыеФормы Экспорт; // Соответствие, хранит имя и саму открытую форму

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СотрудникиФормы.СотрудникиПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// =ТОиР==>
	Если ПолучитьФункциональнуюОпцию("торо_ИспользоватьУправлениеПерсоналом") Тогда
		ПолучитьДанныеТекущихТарифныхСтавокСотрудника();
	КонецЕсли;
	// <==ТОиР=
	
	// СтандартныеПодсистемы.Свойства
	Контекст = Новый Структура();
	Контекст.Вставить("Объект",                     Сотрудник);
	Контекст.Вставить("ИмяЭлементаДляРазмещения",   "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Контекст);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИсторияИзмененийМестаРаботы",
		"Видимость",
		ПравоДоступа("Чтение", Метаданные.РегистрыСведений.КадроваяИсторияСотрудников));

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	СотрудникиКлиент.СотрудникиПриЗакрытии(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ДокументПриемНаРаботуПослеЗаписи" И Параметр.Сотрудник = СотрудникСсылка Тогда 
				
		ПрочитатьДанныеСвязанныеСФизлицом();
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	СотрудникиФормы.СотрудникиПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Сотрудник);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	СотрудникиКлиент.СотрудникиПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	СотрудникиФормы.СотрудникиПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	СотрудникиФормы.СотрудникиПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// =ТОиР==>
	Если ПолучитьФункциональнуюОпцию("торо_ИспользоватьУправлениеПерсоналом") Тогда
		ЗаписатьДанныеТекущихТарифныхСтавокСотрудника(ТекущийОбъект.ГоловнаяОрганизация, ТекущийОбъект.Ссылка, ТекущийОбъект.ФизическоеЛицо);
	КонецЕсли;
	// <==ТОиР= 		

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	СотрудникиФормы.СотрудникиПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	ЭтаФорма.СозданиеНового =  Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Сотрудник, ПараметрыЗаписи);
	СотрудникиКлиент.СотрудникиПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	СотрудникиКлиент.СформироватьНаименованиеСотрудника(ЭтаФорма);
	ЭтаФорма.Прочитать();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	СотрудникиФормы.СотрудникиОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// При изменении данных физлица / сотрудника

&НаКлиенте
Процедура ТекущаяОрганизацияПриИзменении(Элемент)

	ТекущаяОрганизацияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВАрхивеПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриемаПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДатаУвольненияПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Редактирование ФИО

&НаКлиенте
Процедура СотрудникИзменилФИОНажатие(Элемент)

	СотрудникиКлиент.СотрудникИзменилФИОНажатие(ЭтаФорма);
	

КонецПроцедуры

&НаКлиенте
Процедура ФИОПриИзменении(Элемент)

	СотрудникиКлиент.ПриИзмененииФИОСотрудника(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ФизлицоПолПриИзменении(Элемент)

	СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Редактирование места рождения

&НаКлиенте
Процедура ФизлицоДатаРожденияПриИзменении(Элемент)

	СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ЭтаФорма);

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Сотрудник);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Сотрудник);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Сотрудник);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОформитьПриемНаРаботу(Команда)

	СотрудникиКлиент.ОформитьПриемНаРаботу(ЭтаФорма, СотрудникСсылка);

КонецПроцедуры

&НаКлиенте
Процедура ОформитьКадровыйПеревод(Команда)

	СотрудникиКлиент.ОформитьКадровыйПеревод(ЭтаФорма, СотрудникСсылка);

КонецПроцедуры

&НаКлиенте
Процедура ОформитьУвольнение(Команда)

	СотрудникиКлиент.ОформитьУвольнение(ЭтаФорма, СотрудникСсылка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Расширенные подсистемы

// Места работы

&НаКлиенте
Процедура ИсторияИзмененийМестаРаботы(Команда)

	ПараметрыОткрытия = Новый Структура("СсылкаНаСотрудника", СотрудникСсылка);
	ОткрытьФорму("Справочник.Сотрудники.Форма.ФормаИсторииИзмененияМестаРаботы", ПараметрыОткрытия, ЭтаФорма);

КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
		
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтотОбъект, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеСвязанныеСФизлицом()

	СотрудникиФормы.ПрочитатьДанныеСвязанныеССотрудником(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ТекущаяОрганизацияПриИзмененииНаСервере()


КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФизическогоЛицаНаСервере() Экспорт
	СотрудникиФормы.ОбновитьДанныеФизическогоЛица(ЭтотОбъект);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с дополнительными формами

// =ТОиР==>
&НаСервере
Процедура ПолучитьДанныеТекущихТарифныхСтавокСотрудника() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ТекущиеТарифныеСтавкиСотрудников.Оклад,
	|	торо_ТекущиеТарифныеСтавкиСотрудников.Премия
	|ИЗ
	|	РегистрСведений.торо_ТекущиеТарифныеСтавкиСотрудников КАК торо_ТекущиеТарифныеСтавкиСотрудников
	|ГДЕ
	|	торо_ТекущиеТарифныеСтавкиСотрудников.Организация = &Организация
	|	И торо_ТекущиеТарифныеСтавкиСотрудников.Сотрудник = &Сотрудник
	|	И торо_ТекущиеТарифныеСтавкиСотрудников.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Организация", Сотрудник.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник.Ссылка);
	Запрос.УстановитьПараметр("ФизическоеЛицо", Сотрудник.ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Оклад = Выборка.Оклад;
		Премия = Выборка.Премия;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеТекущихТарифныхСтавокСотрудника(Организация, Сотрудник, ФизическоеЛицо)
	
	НаборЗаписей = РегистрыСведений.торо_ТекущиеТарифныеСтавкиСотрудников.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.Сотрудник.Установить(Сотрудник);
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	НаборЗаписей.Прочитать();
	
	НаборЗаписей.Очистить();
	
	НС = НаборЗаписей.Добавить();
	НС.Организация = Организация;
	НС.Сотрудник = Сотрудник;
	НС.ФизическоеЛицо = ФизическоеЛицо;
	НС.Оклад = Оклад;
	НС.Премия = Премия;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры
// <==ТОиР=

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект,Сотрудник);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
      УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
      УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	ЗаписатьНаКлиенте(Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	ЗаписатьНаКлиенте(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиенте(ЗакрыватьПослеЗаписи)
	Если Не ПроверяютсяОднофамильцы Тогда
		Если ЭтотОбъект.Записать() И ЗакрыватьПослеЗаписи Тогда
			ЭтотОбъект.Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти
