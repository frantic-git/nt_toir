#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.СписокОграничений.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Заполните список ограничений'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
	НомерСтроки = 1;
	Для каждого Строка Из Объект.СписокОграничений Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Характеристика) Тогда 
			ШаблонСообщения = НСтр("ru = 'В строке %1 не заполнена характеристика!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки); 
			Поле = СтрШаблон("Объект.СписокОграничений[%1].Характеристика", Объект.СписокОграничений.Индекс(Строка));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.ВидСравнения) Тогда
			ШаблонСообщения = НСтр("ru = 'В строке %1 не заполнен вид сравнения!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки);   
			Поле = СтрШаблон("Объект.СписокОграничений[%1].ВидСравнения", Объект.СписокОграничений.Индекс(Строка));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.Значение) Тогда
			ШаблонСообщения = НСтр("ru = 'В строке %1 не заполнено значение характеристики!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НомерСтроки);       
			Поле = СтрШаблон("Объект.СписокОграничений[%1].Значение", Объект.СписокОграничений.Индекс(Строка));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	Если Модифицированность Тогда
		ДобавитьОбъектыДляПроверкиТребований();
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОграничений
&НаКлиенте
Процедура СписокОграниченийХарактеристикаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		МассивНаборов = ПолучитьМассивНаборовСвойств();
		НовыйПараметр = Новый ПараметрВыбора("Отбор.НаборСвойств", МассивНаборов);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.СписокОграниченийХарактеристика.ПараметрыВыбора = НовыеПараметры; 
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокОграниченийПередНачаломИзменения(Элемент, Отказ)
	УстановитьДоступностьКолонкиЗначений();
КонецПроцедуры

&НаКлиенте
Процедура СписокОграниченийХарактеристикаПриИзменении(Элемент)
	УстановитьДоступностьКолонкиЗначений();
КонецПроцедуры

&НаКлиенте
Процедура СписокОграниченийВидСравненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СписокОграничений.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		ЗаполнениеДанныхВыбораВидовСравнения(ТекДанные, СтандартнаяОбработка, ДанныеВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОграниченийЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СписокОграничений.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекДанные.ВидСравнения) И (ТекДанные.ВидСравнения <> ПредопределенноеЗначение("Перечисление.торо_ВидыСравнения.НеРавно")  
			И ТекДанные.ВидСравнения <> ПредопределенноеЗначение("Перечисление.торо_ВидыСравнения.Равно"))
			И (ВыбранноеЗначение <> Тип("Число") ИЛИ Тип(ВыбранноеЗначение) <> Тип("Число")) Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Нечисловые значения характеристик доступны только для видов сравнений ""Равно"" или ""Не равно""!'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ДобавитьОбъектыДляПроверкиТребований()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ОграниченияНаХарактеристики.Ссылка КАК ФункциональноеМесто
	               |ИЗ
	               |	Справочник.торо_ТиповыеОР.ОграниченияНаХарактеристикиОборудования КАК торо_ОграниченияНаХарактеристики
	               |ГДЕ
	               |	торо_ОграниченияНаХарактеристики.Ограничение = &Ограничение
	               |	И торо_ОграниченияНаХарактеристики.Ссылка.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.торо_ТипыОбъектовRCM.ФункциональноеМесто)";
	
	Запрос.УстановитьПараметр("Ограничение", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		торо_РаботаСФункциональнымиМестами.ДобавитьОбъектДляПроверки(Выборка.ФункциональноеМесто);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ОграниченияНаХарактеристикиОборудования.ФункциональноеМесто КАК ФункциональноеМесто
	               |ИЗ
	               |	РегистрСведений.торо_ОграниченияНаХарактеристикиОборудования КАК торо_ОграниченияНаХарактеристикиОборудования
	               |ГДЕ
	               |	торо_ОграниченияНаХарактеристикиОборудования.Ограничение = &Ограничение";
	
	Запрос.УстановитьПараметр("Ограничение", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		торо_РаботаСФункциональнымиМестами.ДобавитьОбъектДляПроверки(Выборка.ФункциональноеМесто);
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеДанныхВыбораВидовСравнения(ТекДанные, СтандартнаяОбработка, ДанныеВыбора)

	Если ЗначениеЗаполнено(ТекДанные.Значение) И ТипЗнч(ТекДанные.Значение) <> Тип("Число") Тогда
		СтандартнаяОбработка = Ложь;
		СписокВидовСравнения = ПолучитьСписокВидовСравненияДляНечисловых();
		ДанныеВыбора = СписокВидовСравнения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВидовСравненияДляНечисловых()
	
	Список = Новый СписокЗначений;
	Список.Добавить(Перечисления.торо_ВидыСравнения.Равно, НСтр("ru = 'Равно'"));
	Список.Добавить(Перечисления.торо_ВидыСравнения.НеРавно, НСтр("ru = 'Не равно'"));
	
	Возврат Список;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьКолонкиЗначений()
	
	ТекДанные = Элементы.СписокОграничений.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Элементы.СписокОграниченийЗначение.ТолькоПросмотр = НЕ ЗначениеЗаполнено(ТекДанные.Характеристика);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивНаборовСвойств()
	
	МассивРодителей = Новый Массив;
	МассивРодителей.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_торо_ОбъектыРемонта"));
	МассивРодителей.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_торо_НаправленияОбъектовРемонтныхРабот"));
	МассивРодителей.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_торо_ТиповыеОР"));
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеРеквизитыИСведения.НаборСвойств КАК НаборСвойств
	               |ИЗ
	               |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	               |ГДЕ
	               |	ДополнительныеРеквизитыИСведения.НаборСвойств.Родитель В (&МассивРодителей)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДополнительныеРеквизитыИСведения.НаборСвойств";
	
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.ВыгрузитьКолонку("НаборСвойств");
	
КонецФункции

&НаКлиенте
Процедура СписокОграниченийХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(Элементы.СписокОграничений.ТекущиеДанные.Характеристика) = Тип("ПланВидовХарактеристикСсылка.торо_ГруппыХарактеристикОборудования") Тогда
		ОткрытьФорму("ПланВидовХарактеристик.торо_ГруппыХарактеристикОборудования.ФормаВыбора",, Элементы.СписокОграниченийХарактеристика);
	ИначеЕсли ТипЗнч(Элементы.СписокОграничений.ТекущиеДанные.Характеристика) = Тип("ПланВидовХарактеристикСсылка.торо_ИзмеряемыеПоказателиОбъектовРемонта") Тогда
		ОткрытьФорму("ПланВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ФормаВыбора",, Элементы.СписокОграниченийХарактеристика);
	ИначеЕсли ТипЗнч(Элементы.СписокОграничений.ТекущиеДанные.Характеристика) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
		СтруктураПараметров.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
		СтруктураПараметров.Вставить("РазрешитьВыборКорня", Ложь);
		СтруктураПараметров.Вставить("РежимВыбора", Истина);
		МассивНаборов = ПолучитьМассивНаборовСвойств();
		СтруктураОтбора = Новый Структура("НаборСвойств", МассивНаборов);
		СтруктураПараметров.Вставить("Отбор", СтруктураОтбора);
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаВыбора", СтруктураПараметров, Элементы.СписокОграниченийХарактеристика);
	Иначе
		СтандартнаяОбработка = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокОграниченийЗначениеПриИзменении(Элемент)
	Если НЕ ТипЗнч(Элементы.СписокОграничений.ТекущиеДанные.Характеристика) = Тип("ПланВидовХарактеристикСсылка.торо_ИзмеряемыеПоказателиОбъектовРемонта")
		И ТипЗнч(Элементы.СписокОграничений.ТекущиеДанные.Значение) = Тип("Число") Тогда		
		Элементы.СписокОграничений.ТекущиеДанные.Значение = Окр(Элементы.СписокОграничений.ТекущиеДанные.Значение,0);		
	КонецЕсли;
КонецПроцедуры
#КонецОбласти






