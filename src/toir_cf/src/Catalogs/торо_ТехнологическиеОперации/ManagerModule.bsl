#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	ФорматнаяСтрока = торо_РаботаСПользовательскимПредставлениемПовтИсп.ПолучитьФорматнуюСтроку("Справочники.торо_ТехнологическиеОперации");
	Если ФорматнаяСтрока = Неопределено Тогда
		МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	
	МассивЛокализуемыхПолей = Новый Массив;
	МассивЛокализуемыхПолей.Добавить("Наименование");
	МассивЛокализуемыхПолей.Добавить("СодержаниеРабот");
	МассивЛокализуемыхПолей.Добавить("Комментарий");
	
	СписокПолей = торо_РаботаСПользовательскимПредставлением.ПолучитьСписокПолей(ФорматнаяСтрока);
	
	Для Каждого Поле Из СписокПолей Цикл
		Поля.Добавить(Поле);
		
		Если МассивЛокализуемыхПолей.Найти(Поле) <> Неопределено Тогда
			Если МультиязычностьСервер.ИспользуетсяПервыйДополнительныйЯзык() Тогда
				Поля.Добавить(Поле + "Язык1");
			КонецЕсли;
			Если МультиязычностьСервер.ИспользуетсяВторойДополнительныйЯзык() Тогда
				Поля.Добавить(Поле +"Язык2");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ФорматнаяСтрока = торо_РаботаСПользовательскимПредставлениемПовтИсп.ПолучитьФорматнуюСтроку("Справочники.торо_ТехнологическиеОперации");
	Если ФорматнаяСтрока = Неопределено Тогда
		МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
		Возврат;
	КонецЕсли;
		
	СтандартнаяОбработка = Ложь;
	Представление = торо_РаботаСПользовательскимПредставлением.ПолучитьПредставлениеПоФорматнойСтроке(ФорматнаяСтрока, Данные, Истина);
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	МультиязычностьСервер.ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка, Метаданные.Справочники.торо_ТехнологическиеОперации);
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция - заполняет список реквизитов, которые можно использовать при формировании форматной строки в конструкторе.
//
// Параметры:
//  СписокРеквизитов - СписокЗначений - пустой список значений для заполнения.
Процедура ЗаполнитьСписокРеквизитовДляФорматнойСтроки(СписокРеквизитов) Экспорт
	
	СписокРеквизитов.Добавить("Наименование",		"Наименование");
	СписокРеквизитов.Добавить("Код",				"Код");
	СписокРеквизитов.Добавить("СодержаниеРабот",	"Содержание работ");
	СписокРеквизитов.Добавить("Комментарий",		"Комментарий");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов.
//
//	Возвращаемое значение:
//		Массив Из Строка - массив имен реквизитов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	
	НеРедактируемыеРеквизиты.Добавить("СпособРасчетаПродолжительности");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

#КонецОбласти

#КонецЕсли