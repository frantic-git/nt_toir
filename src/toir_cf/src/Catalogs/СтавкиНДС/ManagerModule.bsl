#Область ОбработчикиСобытий

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	УчетНДС.ПолучитьДанныеВыбораСтавкиНДС(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецЕсли

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	// Без НДС
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "БезНДС";
	Элемент.Наименование = НСтр("ru = 'Без НДС'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	Элемент.РасчетнаяСтавка = Ложь;
	Элемент.Ставка = 0;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Без НДС'", КодыЯзыков);
	
	Элемент.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС;
	ЭлементТЧ = Элемент.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
	ЭлементТЧ = Элемент.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт;
	ЭлементТЧ = Элемент.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
	ЭлементТЧ = Элемент.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги;
	
	// 20%
	Элемент20 = Элементы.Добавить();
	Элемент20.Наименование = НСтр("ru = '20%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент20.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20;
	Элемент20.Ставка = 20; 
	Элемент20.РасчетнаяСтавка = Ложь;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент20, "Наименование", "ru = '20%'", КодыЯзыков);
	
	Элемент20.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент20.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент20.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;
	
	// 20/120
	Элемент20_120 = Элементы.Добавить();
	Элемент20_120.Наименование = НСтр("ru = '20/120'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент20_120.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20_120;
	Элемент20_120.РасчетнаяСтавка = Истина;
	Элемент20_120.Ставка = 20; 
	Элемент20_120.СоответствующаяРасчетнаяСтавка = ПолучитьСсылку(Новый УникальныйИдентификатор());	
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент20_120, "Наименование", "ru = '20/120'", КодыЯзыков);

	Элемент20_120.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент20_120.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент20_120.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;
	
	// 18%
	Элемент18 = Элементы.Добавить();
	Элемент18.Наименование = НСтр("ru = '18%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент18.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	Элемент18.РасчетнаяСтавка = Ложь;
	Элемент18.Ставка = 18;
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент18, "Наименование", "ru = '18%'", КодыЯзыков);
	
	Элемент18.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент18.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент18.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;
	
	// 18/118
	Элемент18_118 = Элементы.Добавить();
	Элемент18_118.Наименование = НСтр("ru = '18/118'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент18_118.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
	Элемент18_118.РасчетнаяСтавка = Истина;
	Элемент18_118.Ставка = 18; 
	Элемент18_118.СоответствующаяРасчетнаяСтавка = ПолучитьСсылку(Новый УникальныйИдентификатор());
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент18_118, "Наименование", "ru = '18/118'", КодыЯзыков);
	
	Элемент18_118.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент18_118.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент18_118.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;
	
	// 10%
	Элемент10 = Элементы.Добавить();
	Элемент10.Наименование = НСтр("ru = '10%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент10.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС10;
	Элемент10.РасчетнаяСтавка = Ложь;
	Элемент10.Ставка = 10;
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент10, "Наименование", "ru = '10%'", КодыЯзыков);
	
	Элемент10.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент10.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	
	// 10/110
	Элемент10_110 = Элементы.Добавить();
	Элемент10_110.Наименование = НСтр("ru = '10/110'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент10_110.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС10_110;
	Элемент10_110.РасчетнаяСтавка = Истина;
	Элемент10_110.Ставка = 10;
    Элемент10_110.СоответствующаяРасчетнаяСтавка = ПолучитьСсылку(Новый УникальныйИдентификатор());
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент10_110, "Наименование", "ru = '10/110'", КодыЯзыков);
	
	Элемент10_110.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент10_110.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент10_110.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;  
	
	// 15,25%
	Элемент15_25 = Элементы.Добавить();
	Элемент15_25.Наименование = НСтр("ru = '15,25%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент15_25.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
	Элемент15_25.РасчетнаяСтавка = Ложь;
	Элемент15_25.Ставка = 15.25;
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент15_25, "Наименование", "ru = '15,25%'", КодыЯзыков);
	
	Элемент15_25.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент15_25.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги;
	
	// 16,67%
	Элемент16_67 = Элементы.Добавить();
	Элемент16_67.Наименование = НСтр("ru = '16,67%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент16_67.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20_120;
	Элемент16_67.РасчетнаяСтавка = Ложь;
	Элемент16_67.Ставка = 16.67;
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент16_67, "Наименование", "ru = '16,67%'", КодыЯзыков);

	Элемент16_67.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент16_67.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги;
	
	// 0%
	Элемент0 = Элементы.Добавить();
	Элемент0.Наименование = НСтр("ru = '0%'", ОбщегоНазначения.КодОсновногоЯзыка());
	Элемент0.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС0;
	Элемент0.РасчетнаяСтавка = Ложь;
	Элемент0.Ставка = 0;
    МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент0, "Наименование", "ru = '0%'", КодыЯзыков);

	Элемент0.ТипыНалогообложенияНДС = ТабличныеЧасти.ТипыНалогообложенияНДС.Скопировать();
	ЭлементТЧ = Элемент0.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ЭлементТЧ = Элемент0.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
	ЭлементТЧ = Элемент0.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
	ЭлементТЧ = Элемент0.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
	ЭлементТЧ = Элемент0.ТипыНалогообложенияНДС.Добавить();
	ЭлементТЧ.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;

КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлемента
//
// Параметры:
//  Объект                  - СправочникОбъект.ВидыКонтактнойИнформации - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт

	Если Объект.Наименование = "20/120" Тогда
		НайденнаяБазоваяСтавка = ДополнительныеПараметры.ПредопределенныеДанные.НайтиСтроки(Новый Структура("Наименование", "20%"));
		Данные.СоответствующаяБазоваяСтавка = НайденнаяБазоваяСтавка[0].Ссылка;
		Объект.СоответствующаяБазоваяСтавка = НайденнаяБазоваяСтавка[0].Ссылка;
		Объект.УстановитьСсылкуНового(Объект.СоответствующаяРасчетнаяСтавка);
	ИначеЕсли Объект.Наименование = "18/118" Тогда 
		НайденнаяБазоваяСтавка = ДополнительныеПараметры.ПредопределенныеДанные.НайтиСтроки(Новый Структура("Наименование", "18%"));
		Данные.СоответствующаяБазоваяСтавка = НайденнаяБазоваяСтавка[0].Ссылка;  
		Объект.СоответствующаяБазоваяСтавка = НайденнаяБазоваяСтавка[0].Ссылка;
		Объект.УстановитьСсылкуНового(Объект.СоответствующаяРасчетнаяСтавка);   
	ИначеЕсли Объект.Наименование = "10/110" Тогда 
		НайденнаяБазоваяСтавка = ДополнительныеПараметры.ПредопределенныеДанные.НайтиСтроки(Новый Структура("Наименование", "10%"));
		Данные.СоответствующаяБазоваяСтавка = НайденнаяБазоваяСтавка[0].Ссылка;
		Объект.СоответствующаяБазоваяСтавка = НайденнаяБазоваяСтавка[0].Ссылка;
		Объект.УстановитьСсылкуНового(Объект.СоответствующаяРасчетнаяСтавка);
	КонецЕсли; 
	
КонецПроцедуры

#КонецЕсли

#КонецОбласти