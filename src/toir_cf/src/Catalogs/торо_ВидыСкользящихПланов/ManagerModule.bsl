#Область ПрограммныйИнтерфейс

// Функция - возвращает структуру значений реквизитов вида плана, переданного в параметре.
//
// Параметры:
//  ВидПлана - СправочникСсылка.торо_ВидыСкользящихПланов - Вид плана, для которого необходимо 
//															получить структуру значений реквизитов.
//
// Возвращаемое значение:
//		Структура - стркутура реквизитов справочника.
//
Функция ПолучитьДанныеПоВидуПлана(ВидПлана) Экспорт
	
	Запрос = Новый Запрос;
	# Область ТекстЗапроса
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_ВидыСкользящихПлановВидыРемонтов.ВидРемонта КАК ВидРемонта
	               |ИЗ
	               |	Справочник.торо_ВидыСкользящихПланов.ВидыРемонтов КАК торо_ВидыСкользящихПлановВидыРемонтов
	               |ГДЕ
	               |	торо_ВидыСкользящихПлановВидыРемонтов.Ссылка = &ВидПлана
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ВидыСкользящихПланов.ПериодичностьПланирования КАК Периодичность,
	               |	торо_ВидыСкользящихПланов.ЧислоОтображаемыхПериодов КАК КоличествоПериодов,
	               |	торо_ВидыСкользящихПланов.ТочностьПланирования КАК Детализация,
	               |	торо_ВидыСкользящихПланов.ВидИсполнителяРабот КАК ВидИсполнителяРабот
	               |ИЗ
	               |	Справочник.торо_ВидыСкользящихПланов КАК торо_ВидыСкользящихПланов
	               |ГДЕ
	               |	торо_ВидыСкользящихПланов.Ссылка = &ВидПлана";
	# КонецОбласти
	Запрос.УстановитьПараметр("ВидПлана", ВидПлана);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Массив = РезультатЗапроса[0].Выгрузить().ВыгрузитьКолонку("ВидРемонта");
	
	СтруктураВозврата = Новый Структура("Периодичность, КоличествоПериодов, Детализация, ВидИсполнителяРабот");
	
    Если Не РезультатЗапроса[1].Пустой() Тогда
		Выборка = РезультатЗапроса[1].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
	КонецЕсли; 
	
	СтруктураВозврата.Вставить("МассивРемонтов", Массив);
	
	Возврат СтруктураВозврата;	
	
КонецФункции

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Ложь;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Стратегический"; 
	Элемент.Наименование              = "Стратегический"; 
	Элемент.Использование             = Истина;
	Элемент.ПериодичностьПланирования = Перечисления.Периодичность.Год;
	Элемент.ЧислоОтображаемыхПериодов = 10;
	Элемент.ТочностьПланирования      = Перечисления.торо_ДетализацияПлана.Год;
	Элемент.ВидИсполнителяРабот       = Перечисления.торо_ДетализацияИсполнителя.Подразделение;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Долгосрочный";
	Элемент.Наименование              = "Долгосрочный";
	Элемент.Использование             = Истина;
	Элемент.ПериодичностьПланирования = Перечисления.Периодичность.Год;
	Элемент.ЧислоОтображаемыхПериодов = 5;
	Элемент.ТочностьПланирования      = Перечисления.торо_ДетализацияПлана.Месяц;
	Элемент.ВидИсполнителяРабот       = Перечисления.торо_ДетализацияИсполнителя.Подразделение;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Годовой";
	Элемент.Наименование              = "Годовой";
	Элемент.Использование             = Истина;
	Элемент.ПериодичностьПланирования = Перечисления.Периодичность.Год;
	Элемент.ЧислоОтображаемыхПериодов = 2;
	Элемент.ТочностьПланирования      = Перечисления.торо_ДетализацияПлана.Неделя;
	Элемент.ВидИсполнителяРабот       = Перечисления.торо_ДетализацияИсполнителя.Подразделение;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Среднесрочный";
	Элемент.Наименование              = "Среднесрочный";
	Элемент.Использование             = Истина;
	Элемент.ПериодичностьПланирования = Перечисления.Периодичность.Месяц;
	Элемент.ЧислоОтображаемыхПериодов = 3;
	Элемент.ТочностьПланирования      = Перечисления.торо_ДетализацияПлана.Неделя;
	Элемент.ВидИсполнителяРабот       = Перечисления.торо_ДетализацияИсполнителя.Бригада;
	
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Оперативный";
	Элемент.Наименование              = "Оперативный";
	Элемент.Использование             = Истина;
	Элемент.ПериодичностьПланирования = Перечисления.Периодичность.Неделя;
	Элемент.ЧислоОтображаемыхПериодов = 2;
	Элемент.ТочностьПланирования      = Перечисления.торо_ДетализацияПлана.Час;
	Элемент.ВидИсполнителяРабот       = Перечисления.торо_ДетализацияИсполнителя.Бригада;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлемента
//
// Параметры:
//  Объект                  - СправочникОбъект.ВидыКонтактнойИнформации - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры


#КонецОбласти

 
  
