#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТекСтруктураИерархии") Тогда
		ТекСтруктураИерархии = Параметры.ТекСтруктураИерархии;
	КонецЕсли;
	
	торо_РаботаСИерархией20.ЗаполнитьПараметрыИерархии(ЭтаФорма);
	
	Если Параметры.Свойство("РодительОР") Тогда
		РодительОР = Параметры.РодительОР;
	КонецЕсли;
	
	Если Параметры.Свойство("ОРВерхнегоУровня") Тогда
		торо_РаботаСИерархией20КлиентСервер.ПостроитьДеревоСКонечнымиЭлементами(ДеревоИерархии, СтруктураПараметровИерархии, Параметры.ОРВерхнегоУровня);
	КонецЕсли;
	
	Если Параметры.Свойство("СписокПараметровКопирования") Тогда
		СписокПараметровКопирования = Параметры.СписокПараметровКопирования;
	КонецЕсли;
			
	Если Параметры.Свойство("СоздаватьПослеВыбора") Тогда
		СоздаватьПослеВыбора = Параметры.СоздаватьПослеВыбора;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоИерархииВыбранПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ДеревоИерархии.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		Если ТекСтрока.Выбран Тогда
			ПроставитьГалочкиПоВеткеВверх(ТекСтрока, ТекСтрока.Выбран);
		Иначе 
			СнятьГалочкиПоВеткеВниз(ТекСтрока, ТекСтрока.Выбран);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьОперацию(Команда)
	Результат = ПродолжитьОперациюНаСервере();
	Если СоздаватьПослеВыбора И Результат Тогда
		Оповестить("ИзмененаСтруктураИерархииОР", ТекСтруктураИерархии, ЭтаФорма);
	КонецЕсли;
	
	Закрыть(Результат);	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	Для каждого Стр Из ДеревоИерархии.ПолучитьЭлементы() Цикл
		
		СвернутьПодчиненные(Стр);
		Элементы.ДеревоИерархии.Свернуть(Стр.ПолучитьИдентификатор());
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Элементы.ДеревоИерархии.Развернуть(ДеревоИерархии.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьЗначениеФлажков(ДеревоИерархии.ПолучитьЭлементы(), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьЗначениеФлажков(ДеревоИерархии.ПолучитьЭлементы(), Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьЗначениеФлажков(Строки, ЗначениеФлага)
	
	Для каждого Стр Из Строки Цикл
		Если ТипЗнч(Стр.Ссылка) <> Тип("СправочникСсылка.торо_СтруктурыОР") Тогда
			Стр.Выбран = ЗначениеФлага;
		КонецЕсли;
		УстановитьЗначениеФлажков(Стр.ПолучитьЭлементы(), ЗначениеФлага);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьПодчиненные(Строка)
	
	Для каждого Стр Из Строка.ПолучитьЭлементы() Цикл
		
		СвернутьПодчиненные(Стр);
		Элементы.ДеревоИерархии.Свернуть(Стр.ПолучитьИдентификатор());
		
	КонецЦикла; 	
	
КонецПроцедуры

&НаСервере
Функция ПродолжитьОперациюНаСервере()
	ДеревоОбъект = РеквизитФормыВЗначение("ДеревоИерархии");
	МассивСтрок = ДеревоОбъект.Строки.НайтиСтроки(Новый Структура("Выбран", Истина), Истина);
	
	ПодчиненныеОРДляКопирования = Новый Массив();
	Для каждого ТекущийОР Из МассивСтрок Цикл
		СтруктураОР = Новый Структура("Ссылка, ТипОбъекта, Родитель, ЭтоГруппа");
		ЗаполнитьЗначенияСвойств(СтруктураОР, ТекущийОР);
		СтруктураОР.Родитель = ТекущийОР.Родитель.Ссылка;
		ПодчиненныеОРДляКопирования.Добавить(СтруктураОР);
	КонецЦикла;
	
	Если Не СоздаватьПослеВыбора Тогда
	    Возврат ПодчиненныеОРДляКопирования;
	КонецЕсли;
	
	Возврат торо_РаботаСИерархией20.СкопироватьОРСПодчиненными(ПодчиненныеОРДляКопирования, РодительОР, ТекСтруктураИерархии, СписокПараметровКопирования);
КонецФункции

&НаКлиенте
Процедура СнятьГалочкиПоВеткеВниз(СтрокаДерева, ЗначГалки)
	
	Для Каждого Элем Из СтрокаДерева.ПолучитьЭлементы() Цикл
		Элем.Выбран = ЗначГалки;
		СнятьГалочкиПоВеткеВниз(Элем, ЗначГалки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьГалочкиПоВеткеВверх(СтрокаДерева, ЗначГалки)
	
	СтрРодитель = СтрокаДерева.ПолучитьРодителя();
	
	Если НЕ СтрРодитель = Неопределено Тогда
		Если ТипЗнч(СтрРодитель.Ссылка) <> Тип("СправочникСсылка.торо_СтруктурыОР") Тогда
			СтрРодитель.Выбран = ЗначГалки;
		КонецЕсли;
		ПроставитьГалочкиПоВеткеВверх(СтрРодитель, ЗначГалки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
