////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	
	СсылкаДляМатрицы = ?(ЗначениеЗаполнено(Параметры.ЗначениеКопирования), Параметры.ЗначениеКопирования, Объект.Ссылка);
	ЗаполнитьМатрицуПерехода(СсылкаДляМатрицы);
	УправлениеФормой(ЭтаФорма);	
	Элементы.МатрицаПереходаШаблонУведомления.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьУведомленияОСобытияхСистемы");
	
	// Имена элементов формы типа ТаблицаФормы, в которых необходимо обрабатывать события изменения строк.
	ИменаТаблицФормы = Новый Массив;
	ИменаТаблицФормы.Добавить("МатрицаПерехода");
	
	СтруктураДанныхДоРедактирования = торо_СобытияФорм.ПодготовитьСтруктуруСохраненныхСтрок(ЭтотОбъект, ИменаТаблицФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// ТЧ МатрицаПерехода
	НС = 0;
	Для Каждого ТекДанные Из МатрицаПерехода Цикл
		Если Не ЗначениеЗаполнено(ТекДанные.ТекущийСтатус) Тогда
			Текст  = НСтр("ru = 'Не заполнено поле ""Текущий статус""!'");
			Поле = "МатрицаПерехода["+НС+"].ТекущийСтатус"; 
			ОбщегоНазначения.СообщитьПользователю(Текст,,Поле,,Отказ);
			Возврат;
		КонецЕсли;
		НС = НС + 1;
	КонецЦикла;
	// ТЧ МатрицаПерехода
	
	// ТЧ СтатусыПерехода
	Для Каждого ТекДанные Из СтатусыПерехода Цикл
		Если Не ЗначениеЗаполнено(ТекДанные.НовыйСтатус) Тогда
			ШаблонСообщения = НСтр("ru = 'Обнаружено незаполненное поле ""Новый статус"" для статуса ""%1"" в таблице ""Статусы перехода""!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.ТекущийСтатус);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"СтатусыПерехода",, Отказ);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	// ТЧ СтатусыПерехода
	
	// ТЧ ПорядокСогласования
	Для Каждого ТекДанные Из Объект.ПорядокСогласования Цикл
		Если Не ЗначениеЗаполнено(ТекДанные.Пользователь) Тогда
			ШаблонСообщения = НСтр("ru = 'Обнаружено незаполненное поле ""Пользователь"" для статуса ""%1"" в таблице ""Порядок согласования""!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.ТекущийСтатус);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.ПорядокСогласования",, Отказ);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	// ТЧ ПорядокСогласования
	
	// ТЧ Замещающие
	Для Каждого ТекДанные Из Объект.Замещающие Цикл
		Если Не ЗначениеЗаполнено(ТекДанные.Замещающий) Тогда
			ШаблонСообщения = НСтр("ru = 'Обнаружено незаполненное поле ""Замещающий"" для статуса ""%1"" в таблице ""Замещающие""!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.ТекущийСтатус);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.Замещающие",, Отказ);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	// ТЧ Замещающие
	
	// ТЧ ОповещаемыеЛица
	Для Каждого ТекДанные Из Объект.ОповещаемыеЛица Цикл
		Если Не ЗначениеЗаполнено(ТекДанные.ОповещаемоеЛицо) Тогда
			ШаблонСообщения =  НСтр("ru = 'Обнаружено незаполненное поле ""Оповещаемое лицо"" для статуса ""%1"" в таблице ""Оповещаемые лица""!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.ТекущийСтатус);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.ОповещаемыеЛица",, Отказ);
			Возврат;
		КонецЕсли;
	КонецЦикла;	
	// ТЧ ОповещаемыеЛица
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	НаборЗаписей = РегистрыСведений.торо_НастройкиСтатусовСогласованияДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СпособСогласования.Установить(Объект.Ссылка);
	
	Для каждого Стр Из МатрицаПерехода Цикл
		Стр.НомерСтатуса = МатрицаПерехода.Индекс(Стр);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Стр);
		НоваяЗапись.Статус = Стр.ТекущийСтатус;
		НоваяЗапись.СпособСогласования = Объект.Ссылка;
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
	Для каждого Нсп Из СтатусыПерехода Цикл
		Нсп.НомерСтатусаПерехода = СтатусыПерехода.Индекс(Нсп);
	КонецЦикла;
	   	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МатрицаПерехода.ТекущийСтатус КАК ТекущийСтатус,
	|	МатрицаПерехода.НомерСтатуса КАК НомерСтатуса
	|ПОМЕСТИТЬ втМатрицаПерехода
	|ИЗ
	|	&МатрицаПерехода КАК МатрицаПерехода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПерехода.ТекущийСтатус КАК ТекущийСтатус,
	|	СтатусыПерехода.НовыйСтатус КАК НовыйСтатус,
	|	СтатусыПерехода.НомерСтатусаПерехода КАК НомерСтатусаПерехода
	|ПОМЕСТИТЬ втСтатусыПерехода
	|ИЗ
	|	&СтатусыПерехода КАК СтатусыПерехода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СпособСогласования КАК СпособСогласования,
	|	втМатрицаПерехода.ТекущийСтатус КАК ТекущийСтатус,
	|	втСтатусыПерехода.НовыйСтатус КАК СледующийСтатус,
	|	втМатрицаПерехода.НомерСтатуса КАК НомерСтатуса,
	|	втСтатусыПерехода.НомерСтатусаПерехода КАК НомерСтатусаПерехода
	|ИЗ
	|	втМатрицаПерехода КАК втМатрицаПерехода
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусыПерехода КАК втСтатусыПерехода
	|		ПО втМатрицаПерехода.ТекущийСтатус = втСтатусыПерехода.ТекущийСтатус";
	
	Запрос.УстановитьПараметр("СпособСогласования", Объект.Ссылка);
	Запрос.УстановитьПараметр("МатрицаПерехода"   , МатрицаПерехода.Выгрузить());
	Запрос.УстановитьПараметр("СтатусыПерехода"   , СтатусыПерехода.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.торо_МатрицаПереходаСтатусовДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СпособСогласования.Установить(Объект.Ссылка);
	НаборЗаписей.Загрузить(РезультатЗапроса);
	НаборЗаписей.Записать(Истина);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.торо_СтатусыСпособовСогласованияДокументов.Действует") Тогда
		ЕстьОшибкиЗаполнения = Ложь;
		ПроверитьКорректностьЗаполнения(ЕстьОшибкиЗаполнения);
		
		Если ЕстьОшибкиЗаполнения Тогда
			ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Способ согласования не может быть приведен в статус ""Действует""!'"), 60);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	ИначеЕсли ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.торо_СтатусыСпособовСогласованияДокументов.ВРазработке") Тогда
		
		УжеИспользуется = торо_РаботаССогласованиями.СпособСогласованияИспользуется(Объект.Ссылка);
		Если УжеИспользуется Тогда
			ТекстВопроса = НСтр("ru='Этот способ согласования уже используется в документах. Его изменение может привести к ошибкам в процессе согласования.'");
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Разрешить редактирование'"));
			Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Отмена'"));

			ОписаниеОповещения = Новый ОписаниеОповещения("ПерейтиВСтатусВРазработкеПослеВопроса", ЭтаФорма);
			
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки,, КодВозвратаДиалога.Нет);
			
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОповещаемыеЛица

&НаКлиенте
Процедура ОповещаемыеЛицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ПередНачаломДобавления(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ОповещаемыеЛицаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатрицаПерехода

&НаКлиенте
Процедура МатрицаПереходаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
	    Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование) 
	
	торо_СобытияФормКлиентСервер.СохранитьДанныеСтрокиДоРедактирования(СтруктураДанныхДоРедактирования, Элемент.Имя, Элемент.ТекущиеДанные); 
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НоваяСтрока И ОтменаРедактирования Тогда
	    Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.МатрицаПерехода.ТекущиеДанные;
	ТекущийСтатус = ТекущиеДанные.ТекущийСтатус;
	
	СтруктураПоиска = Новый Структура("ТекущийСтатус", ТекущийСтатус);
	НайденныеСтроки = МатрицаПерехода.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 1 Тогда
		ТекстСообщения = НСтр("ru = 'Данный статус уже добавлен в таблицу!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Если СтруктураДанныхДоРедактирования[Элемент.Имя] <> Неопределено
		И Не ТекущийСтатус = СтруктураДанныхДоРедактирования[Элемент.Имя].ТекущийСтатус Тогда
		ИзменитьСтатусВСвязанныхТаблицах(СтруктураДанныхДоРедактирования[Элемент.Имя].ТекущийСтатус, ТекущийСтатус);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда	
		
		УстановитьОтборыВСвязанныхТЧ(ТекущаяСтрока);
		
		// доступность статусов перехода
		Элементы.СтатусыПерехода.Доступность = Не ТекущаяСтрока.СогласованиеЗавершено ИЛИ ТекущаяСтрока.РазрешитьПометкуНаУдаление;
		
		ПорядокСогласованияПриАктивизацииСтроки(Элементы.ПорядокСогласования);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;	
	
	СтатусыДляУдаления = СтатусыПерехода.НайтиСтроки(Новый Структура("НовыйСтатус", ТекДанные.ТекущийСтатус));
	Если СтатусыДляУдаления.Количество() > 0 Тогда
		Для каждого ТекСтрока Из СтатусыДляУдаления Цикл 
			СтатусыПерехода.Удалить(ТекСтрока);
		КонецЦикла;			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаНачальныйПриИзменении(Элемент)
	
	// доступность согласующих и замещающих
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекущаяСтрокаСтатусов = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрокаСтатусов.Начальный Тогда
		
		МассивСтрок = Объект.ПорядокСогласования.НайтиСтроки(Новый Структура("ТекущийСтатус", ТекущаяСтрокаСтатусов.ТекущийСтатус));
		ПоказатьВопрос(Новый ОписаниеОповещения("МатрицаПереходаНачальныйПриИзмененииЗавершение", ЭтотОбъект, Новый Структура("МассивСтрок, ТекущаяСтрокаСтатусов", МассивСтрок, ТекущаяСтрокаСтатусов)), НСтр("ru = 'При установке признака начального статуса документа, данные, связанные с этим статусом будут очищены. Продолжить?'"),РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		
	Иначе
		
		ТекущаяСтрокаСтатусов.Начальный = Не ТекущаяСтрокаСтатусов.Начальный;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаНачальныйПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
	ТекущаяСтрокаСтатусов = ДополнительныеПараметры.ТекущаяСтрокаСтатусов;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Для Каждого Строка Из МассивСтрок Цикл
			
			МассвивЗамещающих = Объект.Замещающие.НайтиСтроки(Новый Структура("Пользователь",Строка.Пользователь));
			
			Если МассвивЗамещающих.Количество() > 0 Тогда
				Для Каждого СтрокаЗамещающих Из МассвивЗамещающих Цикл 
					Объект.Замещающие.Удалить(СтрокаЗамещающих.НомерСтроки - 1);
				КонецЦикла;
			КонецЕсли;
			
			Объект.ПорядокСогласования.Удалить(Строка.НомерСтроки - 1);
			
		КонецЦикла;
		
		ВсеНачальныеСтатусы = МатрицаПерехода.НайтиСтроки(Новый Структура("Начальный", Истина));
		РазрешенПереходТолькоВНачальный = МатрицаПерехода.НайтиСтроки(Новый Структура("СогласованиеЗавершено, РазрешитьПометкуНаУдаление", Истина, Истина));
		РазрешенПереходТолькоВНачальныйМассив = Новый Массив;
		Для каждого Строка из РазрешенПереходТолькоВНачальный Цикл
			РазрешенПереходТолькоВНачальныйМассив.Добавить(Строка.ТекущийСтатус);
		КонецЦикла;
		
		Для Каждого Строка из ВсеНачальныеСтатусы Цикл
			Если Строка.ТекущийСтатус <> ТекущаяСтрокаСтатусов.ТекущийСтатус Тогда
				Строка.Начальный = Ложь;
				
				СтрокиСПереходомВНачальный = СтатусыПерехода.НайтиСтроки(Новый Структура("НовыйСтатус", Строка.ТекущийСтатус));
				Для каждого СтрокаПерехода из СтрокиСПереходомВНачальный Цикл
					Если РазрешенПереходТолькоВНачальныйМассив.Найти(СтрокаПерехода.ТекущийСтатус) <> Неопределено Тогда
						СтатусыПерехода.Удалить(СтрокаПерехода);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
		ТекущаяСтрокаСтатусов.ЗапретитьРедактирование = Ложь;
		
	Иначе
		
		ТекущаяСтрокаСтатусов.Начальный = Не ТекущаяСтрокаСтатусов.Начальный;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаСогласованиеЗавершеноПриИзменении(Элемент)
	
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекущаяСтрокаСтатусов = Неопределено Тогда 
		Возврат;
	КонецЕсли;
		
	Если ТекущаяСтрокаСтатусов.СогласованиеЗавершено Тогда
		
		МассивСтрок = СтатусыПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", ТекущаяСтрокаСтатусов.ТекущийСтатус));
		ДополнительныеПараметры = Новый Структура("МассивСтрок, ТекущаяСтрокаСтатусов", МассивСтрок, ТекущаяСтрокаСтатусов);
		
		Если МассивСтрок.Количество() > 0 Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("МатрицаПереходаСогласованиеЗавершеноПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры), НСтр("ru = 'При установке признака завершения согласования дальнейшая смена статусов будет невозможна и табличная часть ""Новый статус"" будет очищена. Продолжить?'"),РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Иначе 
			МатрицаПереходаСогласованиеЗавершеноПриИзмененииЗавершение(Неопределено, ДополнительныеПараметры);
		КонецЕсли;
		
	Иначе
		
		Элементы.СтатусыПерехода.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаСогласованиеЗавершеноПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
	ТекущаяСтрокаСтатусов = ДополнительныеПараметры.ТекущаяСтрокаСтатусов;
	
	Если МассивСтрок.Количество() > 0 И РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		
		МассивНачальныхСтатусов = Новый Массив;
		Для Каждого Строка из МатрицаПерехода Цикл
			Если Строка.Начальный Тогда
				МассивНачальныхСтатусов.Добавить(Строка.ТекущийСтатус);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Строка Из МассивСтрок Цикл
			
			Если ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление 
				И МассивНачальныхСтатусов.Найти(Строка.НовыйСтатус) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			СтатусыПерехода.Удалить(Строка);
			
		КонецЦикла;
		
	ИначеЕсли  МассивСтрок.Количество() > 0 Тогда 
		
		ТекущаяСтрокаСтатусов.СогласованиеЗавершено = Не ТекущаяСтрокаСтатусов.СогласованиеЗавершено;
		
	КонецЕсли;
	
	Элементы.СтатусыПерехода.Доступность = Не ТекущаяСтрокаСтатусов.СогласованиеЗавершено ИЛИ ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление;

	Если ТекущаяСтрокаСтатусов.СогласованиеЗавершено И НЕ ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление Тогда
		ТекущаяСтрокаСтатусов.ПроводитьДокумент = Истина;
		ТекущаяСтрокаСтатусов.ЗапретитьРедактирование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаЗапретитьРедактированиеПриИзменении(Элемент)
	
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекущаяСтрокаСтатусов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрокаСтатусов.Начальный Тогда
		ТекущаяСтрокаСтатусов.ЗапретитьРедактирование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаРазрешитьПометкуНаУдалениеПриИзменении(Элемент)
	
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекущаяСтрокаСтатусов = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление Тогда
		Элементы.СтатусыПерехода.Доступность = Истина;
	Иначе
		
		Если ТекущаяСтрокаСтатусов.СогласованиеЗавершено Тогда
			
			МассивСтрок = СтатусыПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", ТекущаяСтрокаСтатусов.ТекущийСтатус));
			ДополнительныеПараметры = Новый Структура("МассивСтрок, ТекущаяСтрокаСтатусов", МассивСтрок, ТекущаяСтрокаСтатусов);
			
			Если МассивСтрок.Количество() > 0 Тогда
				ПоказатьВопрос(Новый ОписаниеОповещения("МатрицаПереходаРазрешитьПометкуНаУдалениеПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры), НСтр("ru = 'Дальнейшая смена статусов будет невозможна и табличная часть ""Новый статус"" будет очищена. Продолжить?'"),РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Иначе 
				МатрицаПереходаРазрешитьПометкуНаУдалениеПриИзмененииЗавершение(Неопределено, ДополнительныеПараметры);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаРазрешитьПометкуНаУдалениеПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
	ТекущаяСтрокаСтатусов = ДополнительныеПараметры.ТекущаяСтрокаСтатусов;
	
	Если МассивСтрок.Количество() > 0 И РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		
		Для Каждого Строка Из МассивСтрок Цикл
			СтатусыПерехода.Удалить(Строка);
		КонецЦикла;
		
	ИначеЕсли  МассивСтрок.Количество() > 0 Тогда 
		
		ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление = Не ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление;
		
	КонецЕсли;
	
	Элементы.СтатусыПерехода.Доступность = НЕ ТекущаяСтрокаСтатусов.СогласованиеЗавершено ИЛИ ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление;

	Если ТекущаяСтрокаСтатусов.СогласованиеЗавершено И НЕ ТекущаяСтрокаСтатусов.РазрешитьПометкуНаУдаление Тогда
		ТекущаяСтрокаСтатусов.ПроводитьДокумент = Истина;
		ТекущаяСтрокаСтатусов.ЗапретитьРедактирование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПроводитьДокументПриИзменении(Элемент)
	ТекДанные = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.АвтоматическоеПроведение Тогда
		ТекДанные.АвтоматическоеПроведение = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаАвтоматическоеПроведениеПриИзменении(Элемент)
	ТекДанные = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекДанные <> Неопределено И НЕ ТекДанные.ПроводитьДокумент Тогда
		ТекДанные.АвтоматическоеПроведение = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПорядокСогласования
&НаКлиенте
Процедура ПорядокСогласованияПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьЗамещающих();
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	ТекСтатус = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекСтатус <> Неопределено Тогда
		ТекСтатус = ТекСтатус.ТекущийСтатус;
	Иначе
		ТекСтатус = "------------";
	КонецЕсли;
		
	Если ТекущаяСтрока <> Неопределено Тогда
		// Отбор в новых Замещающих
		Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура("Пользователь, ТекущийСтатус", ТекущаяСтрока.Пользователь, ТекСтатус);
	Иначе 
		// Находим первую входящую в отбор строку
		ИдентификаторНайденнойСтроки = -1;
		Для каждого СтрокаПроверки Из Объект.ПорядокСогласования Цикл
			ИдентификаторСтроки = СтрокаПроверки.ПолучитьИдентификатор();
			Если Элементы.ПорядокСогласования.ПроверитьСтроку(ИдентификаторСтроки) Тогда
				ИдентификаторНайденнойСтроки = ИдентификаторСтроки;
				Пользователь = СтрокаПроверки.Пользователь;
				Прервать;			
			КонецЕсли;
		КонецЦикла; 
		Если ИдентификаторНайденнойСтроки = -1 Тогда
			Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура("Пользователь, ТекущийСтатус", "------------", ТекСтатус);
		Иначе
			// Если нашли -- ставим ее текущей
			Элементы.ПорядокСогласования.ТекущаяСтрока = ИдентификаторНайденнойСтроки;
		    Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура("Пользователь, ТекущийСтатус", Пользователь, ТекСтатус);
		КонецЕсли; 		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
	
	Если НЕ ОтменаРедактирования Тогда
		МассивСтрок = Объект.ПорядокСогласования.НайтиСтроки(Новый Структура("Пользователь, ТекущийСтатус", ТекДанные.Пользователь, ТекДанные.ТекущийСтатус));
		Если МассивСтрок.Количество() > 1 Тогда
			ШаблонСообщения = НСтр("ru = 'Пользователь %1 уже добавлен в список согласующих!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.Пользователь);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПередНачаломДобавления(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не (НоваяСтрока И ОтменаРедактирования) Тогда
		
		ТекДанные = Элемент.ТекущиеДанные;
		Если ТекДанные <> Неопределено И Элементы.Замещающие.ОтборСтрок.Свойство("Пользователь") И ТекДанные.Пользователь <> Элементы.Замещающие.ОтборСтрок.Пользователь Тогда
			ТекущийОтбор = Новый Структура;
			Для каждого КлючИЗначение из Элементы.Замещающие.ОтборСтрок Цикл
				ТекущийОтбор.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла;
			
			НайденныеСтроки = Объект.Замещающие.НайтиСтроки(ТекущийОтбор);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.Пользователь = ТекДанные.Пользователь;
			КонецЦикла;
			
			ТекущийОтбор.Пользователь = ТекДанные.Пользователь;
			Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура(ТекущийОтбор);
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьЗамещающих();
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ПорядокСогласования.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТипЗнч(ТекущиеДанные.Пользователь) <> Тип("СправочникСсылка.Пользователи") Тогда
		ВыбратьТипПолучателя();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТипПолучателяЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	ВыбранныйТип = ВыбранныйЭлемент;
	Если ВыбранныйТип <> Неопределено Тогда
		Если ВыбранныйТип.Значение = "Пользователи" Тогда
			Элементы.ПорядокСогласования.ТекущиеДанные.Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
		Иначе
			Элементы.ПорядокСогласования.ТекущиеДанные.Пользователь = ВыбранныйТип;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтатусыПерехода

&НаКлиенте
Процедура СтатусыПереходаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда 
		
		ТекущаяСтрока = Элемент.ТекущиеДанные;
		
		Если ТекущаяСтрока <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрока.НовыйСтатус) Тогда
			
			МассивСтрок = МатрицаПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус",ТекущаяСтрока.НовыйСтатус));
			Если МассивСтрок.Количество() < 1 Тогда
				
				 нс = МатрицаПерехода.Добавить();
				 нс.ТекущийСтатус = ТекущаяСтрока.НовыйСтатус;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусыПереходаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ПередНачаломДобавления(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура СтатусыПереходаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		ТекДанные = Элементы.СтатусыПерехода.ТекущиеДанные;

		МассивСтрок = МатрицаПерехода.НайтиСтроки(Новый Структура("Начальный", Истина));
		Если МассивСтрок.Количество() Тогда
			НачальныйСтатус = МассивСтрок[0].ТекущийСтатус;
				
			ТекущиеДанныеМатрицы = Элементы.МатрицаПерехода.ТекущиеДанные;
			Если ТекущиеДанныеМатрицы = Неопределено Тогда
				Возврат;
			КонецЕсли;
				
			Если ТекДанные.НовыйСтатус <> НачальныйСтатус И ТекущиеДанныеМатрицы.РазрешитьПометкуНаУдаление И ТекущиеДанныеМатрицы.СогласованиеЗавершено Тогда
				ТекстСообщения = НСтр("ru = 'Из завершающего статуса можно перейти только в начальный!'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли;
				
		КонецЕсли;
	КонецЕсли;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗамещающие

&НаКлиенте
Процедура ЗамещающиеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
	
	ТекущаяСтрока = Элементы.ПорядокСогласования.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		Элемент.ТекущиеДанные.Пользователь = ТекущаяСтрока.Пользователь;

	КонецЕсли;
	
	Если НЕ ОтменаРедактирования Тогда
		МассивСтрок = Объект.Замещающие.НайтиСтроки(Новый Структура("Замещающий, ТекущийСтатус, Пользователь", ТекДанные.Замещающий, ТекДанные.ТекущийСтатус, ТекДанные.Пользователь));
		Если МассивСтрок.Количество() > 1 Тогда
			ШаблонСообщения = НСтр("ru = 'Пользователь %1 уже добавлен в список замещающих!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.Замещающий);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		
		Если ТекДанные.Пользователь = ТекДанные.Замещающий Тогда
			ШаблонСообщения = НСтр("ru = 'Пользователь %1 указан в качестве согласующего. Согласующий и замещающий не должны совпадать!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекДанные.Замещающий);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамещающиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущаяСтрока = Элементы.ПорядокСогласования.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Выберите пользователя, корого нужно заместить.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОповещаемые

&НаКлиенте
Процедура ОповещаемыеЛицаОповещаемоеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ОповещаемыеЛица.ТекущиеДанные;
	ТекущийСтатус = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если Не ВыбранноеЗначение = Неопределено
		И Не ТекущиеДанные = Неопределено
		И Не ТекущийСтатус = Неопределено Тогда
		
		АдресЭП = ОбработкаВыбораОповещаемогоНаСервере(ВыбранноеЗначение);
		
		Если НЕ АдресЭП = Неопределено Тогда
			ТекущиеДанные.ОповещаемоеЛицо       = ВыбранноеЗначение;
			ТекущиеДанные.АдресЭлектроннойПочты = АдресЭП;
			ТекущиеДанные.ТекущийСтатус         = ТекущийСтатус.ТекущийСтатус;
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьМатрицуПерехода(Ссылка)
	
	МатрицаПерехода.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_НастройкиСтатусовСогласованияДокументов.Статус КАК ТекущийСтатус,
	|	торо_НастройкиСтатусовСогласованияДокументов.Начальный КАК Начальный,
	|	торо_НастройкиСтатусовСогласованияДокументов.СогласованиеЗавершено КАК СогласованиеЗавершено,
	|	торо_НастройкиСтатусовСогласованияДокументов.ПроводитьДокумент КАК ПроводитьДокумент,
	|	торо_НастройкиСтатусовСогласованияДокументов.ШаблонСообщенияЭлектроннойПочты КАК ШаблонСообщенияЭлектроннойПочты,
	|	торо_НастройкиСтатусовСогласованияДокументов.НеИспользоватьВПодборах КАК НеИспользоватьВПодборах,
	|	торо_НастройкиСтатусовСогласованияДокументов.ЗапретитьРедактирование КАК ЗапретитьРедактирование,
	|	торо_НастройкиСтатусовСогласованияДокументов.РазрешитьПометкуНаУдаление КАК РазрешитьПометкуНаУдаление,
	|	торо_НастройкиСтатусовСогласованияДокументов.НеОтображатьВСпискеЗадач КАК НеОтображатьВСпискеЗадач,
	|	торо_НастройкиСтатусовСогласованияДокументов.АвтоматическоеПроведение КАК АвтоматическоеПроведение,
	|	торо_НастройкиСтатусовСогласованияДокументов.ШаблонУведомления КАК ШаблонУведомления,
	|	торо_НастройкиСтатусовСогласованияДокументов.КомментарийОбязателен КАК КомментарийОбязателен
	|ИЗ
	|	РегистрСведений.торо_НастройкиСтатусовСогласованияДокументов КАК торо_НастройкиСтатусовСогласованияДокументов
	|ГДЕ
	|	торо_НастройкиСтатусовСогласованияДокументов.СпособСогласования = &СпособСогласования
	|
	|УПОРЯДОЧИТЬ ПО
	|	торо_НастройкиСтатусовСогласованияДокументов.НомерСтатуса";
	
	Запрос.УстановитьПараметр("СпособСогласования", Ссылка);
	
	ТЗМатрицаПерехода = Запрос.Выполнить().Выгрузить();
	МатрицаПерехода.Загрузить(ТЗМатрицаПерехода);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_МатрицаПереходаСтатусовДокументов.ТекущийСтатус КАК ТекущийСтатус,
	|	торо_МатрицаПереходаСтатусовДокументов.СледующийСтатус КАК НовыйСтатус
	|ИЗ
	|	РегистрСведений.торо_МатрицаПереходаСтатусовДокументов КАК торо_МатрицаПереходаСтатусовДокументов
	|ГДЕ
	|	торо_МатрицаПереходаСтатусовДокументов.СпособСогласования = &СпособСогласования
	|
	|УПОРЯДОЧИТЬ ПО
	|	торо_МатрицаПереходаСтатусовДокументов.НомерСтатуса,
	|	торо_МатрицаПереходаСтатусовДокументов.НомерСтатусаПерехода";
	
	Запрос.УстановитьПараметр("СпособСогласования", Ссылка);
	
	ВыборкаСтатусыПерехода = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаСтатусыПерехода.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаСтатусыПерехода.НовыйСтатус) Тогда
			НоваяСтрока = СтатусыПерехода.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаСтатусыПерехода);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборыВСвязанныхТЧ(ТекущаяСтрока)
	
	Элементы.СтатусыПерехода.ОтборСтрок     = Новый ФиксированнаяСтруктура("ТекущийСтатус", ТекущаяСтрока.ТекущийСтатус);
	Элементы.ПорядокСогласования.ОтборСтрок = Новый ФиксированнаяСтруктура("ТекущийСтатус", ТекущаяСтрока.ТекущийСтатус);
	Элементы.ОповещаемыеЛица.ОтборСтрок     = Новый ФиксированнаяСтруктура("ТекущийСтатус", ТекущаяСтрока.ТекущийСтатус);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломДобавления(Отказ) 
	
	ТекущаяСтрокаСтатуса = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатуса = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо сначало выбрать статус согласования.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущаяСтрокаСтатуса = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатуса <> Неопределено Тогда
		
		Если НоваяСтрока И Не ОтменаРедактирования И Элемент.ТекущиеДанные <> Неопределено Тогда
			
			Элемент.ТекущиеДанные.ТекущийСтатус = ТекущаяСтрокаСтатуса.ТекущийСтатус;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьОтборыВСвязанныхТЧ(ТекущаяСтрокаСтатуса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбработкаВыбораОповещаемогоНаСервере(Оповещаемый)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ФизическиеЛицаКонтактнаяИнформация.Представление
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка
	               |	И ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
	
	Запрос.УстановитьПараметр("Ссылка", Оповещаемый.ФизическоеЛицо);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Представление;
	Иначе
		ШаблонСообщения = НСтр("ru = 'У физического лица, связанного с сотрудником <%1> не указано ни одного адреса электроннной почты.'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Оповещаемый);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат "";
	КонецЕсли; 
	
КонецФункции

&НаКлиенте
Процедура ВыбратьТипПолучателя()
	СписокДоступныхТипов = Новый СписокЗначений;
	СписокДоступныхТипов.Добавить("Пользователи");
	СписокДоступныхТипов.Добавить("Ответственный по документу");
	СписокДоступныхТипов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ВыбратьТипПолучателяЗавершение", ЭтотОбъект), НСтр("ru = 'Кому формировать уведомления'"));
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьДоступностьЗамещающих()
	
	тчПорядокСогласования = Элементы.ПорядокСогласования.ТекущиеДанные;
	Если тчПорядокСогласования = Неопределено Или ТипЗнч(тчПорядокСогласования.Пользователь) = Тип("Строка") Тогда
		Элементы.Замещающие.Доступность = Ложь;
	Иначе 
		Элементы.Замещающие.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ЭтапыСогласования.ТолькоПросмотр = (Объект.Статус = ПредопределенноеЗначение("Перечисление.торо_СтатусыСпособовСогласованияДокументов.Действует"));	
КонецПроцедуры

&НаКлиенте 
Процедура ПроверитьКорректностьЗаполнения(Отказ)
	
	Для Каждого Выборка Из МатрицаПерехода Цикл
		
		Если Выборка.Начальный Тогда
			// Для начального статуса нужны согласующие, только если в него есть переходы. 
			ПереходыВНачальный = СтатусыПерехода.НайтиСтроки(Новый Структура("НовыйСтатус",Выборка.ТекущийСтатус)); 
			Если ПереходыВНачальный.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Выборка.ТекущийСтатус) Тогда
			
			ТекНомерСтроки = МатрицаПерехода.Индекс(Выборка);
			ШаблонНазванияПоля = НСтр("ru = 'МатрицаПерехода[%1].ТекущийСтатус'");
			НазваниеПоля = СтрШаблон(ШаблонНазванияПоля, ТекНомерСтроки);
			ШаблонСообщения = НСтр("ru = 'Текущий статус не заполнен!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,НазваниеПоля,, Отказ);			
			
		КонецЕсли;		
		
		Если Объект.ПорядокСогласования.НайтиСтроки(Новый Структура("ТекущийСтатус",Выборка.ТекущийСтатус)).Количество() < 1 Тогда
			
			ШаблонСообщения = НСтр("ru = 'Для статуса ""%1"" не задан ни один согласующий!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.ТекущийСтатус);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивСостоянийСПроведением = МатрицаПерехода.НайтиСтроки(Новый Структура("ПроводитьДокумент", Истина));
	
	Для Каждого Выборка Из МассивСостоянийСПроведением Цикл
		
		СледующиеСтатусы = СтатусыПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", Выборка.ТекущийСтатус));
		Для каждого СледующийСтатус из СледующиеСтатусы Цикл
			СтрокаСледующегоСтатуса = МатрицаПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", СледующийСтатус.НовыйСтатус));
			Если СтрокаСледующегоСтатуса.Количество() > 0 
				И СтрокаСледующегоСтатуса[0].ПроводитьДокумент = Ложь	Тогда
				ШаблонСообщения = НСтр("ru = 'Статус ""%1"", запрещающий проведение, идет после статуса ""%2"", разрешающего проведение.'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, СледующийСтатус.НовыйСтатус, Выборка.ТекущийСтатус);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВСтатусВРазработкеПослеВопроса(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Статус = ПредопределенноеЗначение("Перечисление.торо_СтатусыСпособовСогласованияДокументов.ВРазработке");
	СтатусПриИзменении(Элементы.Статус);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусВСвязанныхТаблицах(СтарыйСтатус, ТекущийСтатус)
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить("СтатусыПерехода");
	МассивТЧ.Добавить("Объект.ПорядокСогласования");
	МассивТЧ.Добавить("Объект.Замещающие");
	МассивТЧ.Добавить("Объект.ОповещаемыеЛица");
	
	Для каждого ИмяТЧ Из МассивТЧ Цикл
	    СтруктураПоиска = Новый Структура("ТекущийСтатус", СтарыйСтатус);
		КоллекцияСтрок = Вычислить(ИмяТЧ);
		НайденныеСтроки = КоллекцияСтрок.НайтиСтроки(СтруктураПоиска);
		
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		    НайденнаяСтрока.ТекущийСтатус = ТекущийСтатус;
		КонецЦикла;
	КонецЦикла;

	УстановитьОтборыВСвязанныхТЧ(Элементы.МатрицаПерехода.ТекущиеДанные);
	ПорядокСогласованияПриАктивизацииСтроки(Элементы.ПорядокСогласования);
КонецПроцедуры

#КонецОбласти