
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	
	ЗагрузитьСхемуКомпоновкиДанных(Параметры.ЗначениеКопирования);
	ЗаполнитьСписокВыбораОтчетов();
	РасставитьФлагиПоВариантуЗаполнения();
	
	Значение = СписокВыбораОтчетов.НайтиПоЗначению(Объект.Отчет);
	Если Значение <> Неопределено Тогда
		ОтчетДляРасшифровкиПредставление = Значение.Представление;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораЗначенийРазделителя();
	
	ОбновитьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не Параметры.Ключ.Пустая() Тогда
		
		Если НеобходимаКорректировкаЦелевыхЗначений(Объект.Ссылка, Объект.ЦелевойТренд) Тогда
			
			ПараметрыКорректировки = Новый Структура();
			ПараметрыКорректировки.Вставить("КорректировкаПриЗаписиПоказателя", Истина);
			ПараметрыКорректировки.Вставить("Показатель", Объект.Ссылка);
			ПараметрыКорректировки.Вставить("ЦелевойТренд", Объект.ЦелевойТренд);
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ПараметрыКорректировки", ПараметрыКорректировки);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеКорректировкиЦелевыхЗначение", ЭтотОбъект);
			ОткрытьФорму("Обработка.торо_КорректировкаЦелевыхЗначенийПоказателейKPI.Форма", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);
			
			ПоказатьПредупреждение(, НСтр("ru = 'Для записи показателя KPI с новым целевым трендом необходимо произвести корректировку целевых значений.'"));
			
			Отказ = Истина;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Отчет) Тогда
		обМетаданных = Метаданные.Отчеты.Найти(ТекущийОбъект.Отчет);
		Если обМетаданных = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Указанный отчёт не найден!'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.Отчет",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ПроверятьУникальностьИдентификатора = Ложь;
	Если ПроверятьУникальностьИдентификатора Тогда
		Если ЗначениеЗаполнено(ТекущийОбъект.ИдентификаторДляФормул) Тогда
			ЗапросДублей = Новый Запрос;
			ЗапросДублей.Текст = 
			"ВЫБРАТЬ
			|	торо_ПоказателиKPI.Ссылка
			|ИЗ
			|	Справочник.торо_ПоказателиKPI КАК торо_ПоказателиKPI
			|ГДЕ
			|	торо_ПоказателиKPI.Ссылка <> &Ссылка
			|	И торо_ПоказателиKPI.ИдентификаторДляФормул = &ИдентификаторДляФормул";
			ЗапросДублей.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
			ЗапросДублей.УстановитьПараметр("ИдентификаторДляФормул", ТекущийОбъект.ИдентификаторДляФормул);
			ВыборкаДублей = ЗапросДублей.Выполнить().Выбрать();
			
			ШаблонСообщения = НСтр("ru='Идентификатор для формул ""%1"" уже использован в показателе ""%2"".'");
			Пока ВыборкаДублей.Следующий() Цикл
				ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекущийОбъект.ИдентификаторДляФормул, ВыборкаДублей.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДублей.Ссылка,,,Отказ);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьСхемуКомпоновкиДанных(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененПоказательKPI", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СхемаКомпоновкиДанных") Тогда
			АдресСКД = ПоместитьВоВременноеХранилище(ВыбранноеЗначение, ЭтаФорма.УникальныйИдентификатор);
			Модифицированность = Истина;
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
    МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораОтчетов;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Ожидание > 0 Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Текст) Тогда
			ДанныеВыбора = Новый СписокЗначений;
			Для каждого Элемент из СписокВыбораОтчетов Цикл
				Если СтрНачинаетсяС(Элемент.Значение, Текст) Тогда
					ДанныеВыбора.Добавить(Элемент.Значение);
				КонецЕсли;
			КонецЦикла;
		Иначе
			ДанныеВыбора = СписокВыбораОтчетов;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДляРасшифровкиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораОтчетов;

КонецПроцедуры

&НаКлиенте
Процедура ОтчетДляРасшифровкиПредставлениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
		Если Ожидание > 0 Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Текст) Тогда
			ДанныеВыбора = Новый СписокЗначений;
			Для каждого Элемент из СписокВыбораОтчетов Цикл
				Если СтрНачинаетсяС(Элемент.Значение, Текст) ИЛИ СтрНачинаетсяС(Элемент.Представление, Текст) Тогда
					ДанныеВыбора.Добавить(Элемент.Значение, Элемент.Представление);
				КонецЕсли;
			КонецЦикла;
		Иначе
			ДанныеВыбора = СписокВыбораОтчетов;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтчетДляРасшифровкиПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Значение = СписокВыбораОтчетов.НайтиПоЗначению(ВыбранноеЗначение);
	Если Значение <> Неопределено Тогда
		Объект.Отчет = ВыбранноеЗначение;
		ОтчетДляРасшифровкиПредставление = Значение.Представление;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДляРасшифровкиПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Отчет = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДляРасшифровкиПредставлениеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ОтчетДляРасшифровкиПредставление) Тогда
		Объект.Отчет = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииФлажка(Элемент)
	
	ИзмененныйФлаг = Элемент.Имя;
	
	Если ЭтаФорма[ИзмененныйФлаг] = Истина Тогда
		
		Если Элемент = Элементы.ФлагФормула Тогда
			ФлагСКД = Ложь;
			ФлагВнешнийПоказатель = Ложь;
			Объект.ВариантЗаполнения = ПредопределенноеЗначение("Перечисление.торо_ВариантыЗаполненияПоказателяKPI.Формула");
		ИначеЕсли Элемент = Элементы.ФлагСКД Тогда
			ФлагФормула = Ложь;
			ФлагВнешнийПоказатель = Ложь;
			Объект.ВариантЗаполнения = ПредопределенноеЗначение("Перечисление.торо_ВариантыЗаполненияПоказателяKPI.СКД");
		ИначеЕсли Элемент = Элементы.ФлагВнешнийПоказатель Тогда
			ФлагСКД = Ложь;
			ФлагФормула = Ложь;
			Объект.ВариантЗаполнения = ПредопределенноеЗначение("Перечисление.торо_ВариантыЗаполненияПоказателяKPI.ВнешнийПоказатель");
		КонецЕсли;
		
	ИначеЕсли НЕ ФлагФормула И НЕ ФлагСКД И НЕ ФлагВнешнийПоказатель Тогда
		Объект.ВариантЗаполнения = ПредопределенноеЗначение("Перечисление.торо_ВариантыЗаполненияПоказателяKPI.ПустаяСсылка");
	КонецЕсли;
	
	ОбновитьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьНастройкиСКД(Команда)
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		СКД = ПолучитьИзВременногоХранилища(АдресСКД);
		Конструктор = Новый КонструкторСхемыКомпоновкиДанных(СКД);
		Конструктор.Редактировать(ЭтаФорма);
	#Иначе
		ТекстСообщения = НСтр("ru='Для того чтобы редактировать схему компоновки, необходимо запустить конфигурацию в режиме толстого клиента.'");
		ПоказатьПредупреждение(Неопределено, ТекстСообщения);
	#КонецЕсли	
		
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьЗапросСКД(Команда)
	
	ПараметрыФормы = Новый Структура("АдресСКД, Показатель", АдресСКД, Объект.Наименование);
	ОткрытьФорму("Справочник.торо_ПоказателиKPI.Форма.ФормаПросмотраТекстаЗапроса", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстФормулыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура("Показатель, ТекстФормулы", Объект.Ссылка, Объект.ТекстФормулы);
	ОткрытьФорму("Справочник.торо_ПоказателиKPI.Форма.РедакторФормул", ПараметрыФормы, Элемент, ЭтаФорма.УникальныйИдентификатор, ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Описание", "Описание");
КонецПроцедуры

&НаКлиенте
Процедура РазделительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ДоступныеЗначенияРазделителя;
КонецПроцедуры

&НаКлиенте
Процедура РазделительКакЕдиницаИзмеренияПриИзменении(Элемент)
	Элементы.ЕдиницаИзмерения.Доступность = Не Объект.РазделительКакЕдиницаИзмерения;
	Если Объект.РазделительКакЕдиницаИзмерения Тогда
	    Объект.ЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка");
		Элементы.Разделитель.АвтоОтметкаНезаполненного = Истина;
		Элементы.ЕдиницаИзмерения.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.Разделитель.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Разделитель.ОтметкаНезаполненного = Ложь;
		Элементы.ЕдиницаИзмерения.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеКорректировкиЦелевыхЗначение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Неопределено И Результат.Свойство("КорректировкаЗначенийВыполнена") Тогда
		
		ЭтотОбъект.Записать();
		
	Иначе
		
		Объект.ЦелевойТренд = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ЦелевойТренд");
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция НеобходимаКорректировкаЦелевыхЗначений(Показатель, ЦелевойТренд)
	
	ЦелевойТрендДоИзменения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Показатель, "ЦелевойТренд");
	
	Если ЦелевойТренд = ЦелевойТрендДоИзменения
		ИЛИ (ЦелевойТренд <> Перечисления.торо_ВидыЦелевыхТрендовПоказателейKPI.Диапазон
		И ЦелевойТрендДоИзменения <> Перечисления.торо_ВидыЦелевыхТрендовПоказателейKPI.Диапазон) Тогда 
		
		Возврат Ложь;
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ЦелевыеЗначенияKPIСрезПоследних.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.торо_ЦелевыеЗначенияKPI.СрезПоследних(, Показатель = &Показатель) КАК торо_ЦелевыеЗначенияKPIСрезПоследних
	|ГДЕ
	|	торо_ЦелевыеЗначенияKPIСрезПоследних.ДатаПО > &ТекущаяДата
	|	И ВЫБОР
	|			КОГДА &ЦелевойТренд = ЗНАЧЕНИЕ(Перечисление.торо_ВидыЦелевыхТрендовПоказателейKPI.Диапазон)
	|				ТОГДА торо_ЦелевыеЗначенияKPIСрезПоследних.МинимальноеЗначение = 0
	|						ИЛИ торо_ЦелевыеЗначенияKPIСрезПоследних.МаксимальноеЗначение = 0
	|			КОГДА &ЦелевойТренд = ЗНАЧЕНИЕ(Перечисление.торо_ВидыЦелевыхТрендовПоказателейKPI.Минимизация)
	|					ИЛИ &ЦелевойТренд = ЗНАЧЕНИЕ(Перечисление.торо_ВидыЦелевыхТрендовПоказателейKPI.Максимизация)
	|				ТОГДА торо_ЦелевыеЗначенияKPIСрезПоследних.Значение = 0
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";

	Запрос.УстановитьПараметр("ЦелевойТренд", ЦелевойТренд);
	Запрос.УстановитьПараметр("Показатель", Показатель);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции	

&НаСервере
Процедура РасставитьФлагиПоВариантуЗаполнения()
	
	ФлагФормула = (Объект.ВариантЗаполнения = Перечисления.торо_ВариантыЗаполненияПоказателяKPI.Формула);
	ФлагСКД = (Объект.ВариантЗаполнения = Перечисления.торо_ВариантыЗаполненияПоказателяKPI.СКД);
	ФлагВнешнийПоказатель = (Объект.ВариантЗаполнения = Перечисления.торо_ВариантыЗаполненияПоказателяKPI.ВнешнийПоказатель);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьФорму(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.ТекстФормулы.Доступность = Форма.ФлагФормула;
	Элементы.ТекстФормулы.АвтоОтметкаНезаполненного = Форма.ФлагФормула;
	Элементы.РедактироватьНастройкиСКД.Доступность = Форма.ФлагСКД;
	Элементы.ПросмотретьЗапросСКД.Доступность = Форма.ФлагСКД;
	Элементы.ИдентификаторВнешнегоПоказателя.Доступность = Форма.ФлагВнешнийПоказатель;
	
	Элементы.Разделитель.Видимость = Форма.ФлагСКД;
	Элементы.РазделительКакЕдиницаИзмерения.Видимость = Форма.ФлагСКД;
	Элементы.ЕдиницаИзмерения.Доступность = Не Объект.РазделительКакЕдиницаИзмерения;
	Если Объект.РазделительКакЕдиницаИзмерения Тогда
	    Элементы.Разделитель.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.ЕдиницаИзмерения.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораОтчетов()
	
	ОтчетыИсключения = Новый массив;
	ОтчетыИсключения.Добавить("торо_МониторKPI");
	
	СписокВыбораОтчетов.Очистить();
	Для каждого МетаданныеОтчета из Метаданные.Отчеты Цикл
		Если ОтчетыИсключения.Найти(МетаданныеОтчета.Имя) = Неопределено Тогда 
			Представление = МетаданныеОтчета.Синоним + " (" +МетаданныеОтчета.Имя+")"; 
			СписокВыбораОтчетов.Добавить(МетаданныеОтчета.Имя, Представление);
		Конецесли;
	КонецЦикла;
	
	СписокВыбораОтчетов.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСхемуКомпоновкиДанных(ЗначениеКопирования)
	
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		ОбъектЗначение = ЗначениеКопирования;
	Иначе
		ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	СКД = ОбъектЗначение.СхемаКомпоновкиДанных.Получить();
	Если СКД = Неопределено Тогда
		СКД = Новый СхемаКомпоновкиДанных;
	КонецЕсли;
	АдресСКД = ПоместитьВоВременноеХранилище(СКД, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСхемуКомпоновкиДанных(ТекущийОбъект)
	
	СКД = ПолучитьИзВременногоХранилища(АдресСКД);
	ТекущийОбъект.СхемаКомпоновкиДанных = Новый ХранилищеЗначения(СКД, Новый СжатиеДанных(9));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораЗначенийРазделителя()
	
	ДоступныеЗначенияРазделителя.Очистить();
	
	ДоступныеЗначенияАнализа = Новый СписокЗначений();
	торо_ПоказателиKPI.ЗаполнитьДоступныеЗначенияИОбъектыАнализа(Объект.Ссылка, ДоступныеЗначенияАнализа, ДоступныеЗначенияРазделителя);
	
КонецПроцедуры

#КонецОбласти


