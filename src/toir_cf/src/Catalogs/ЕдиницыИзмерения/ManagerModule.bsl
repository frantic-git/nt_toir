#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// Функция возвращает дерево значений с данными ОКЕИ.
//
// Возвращаемое значение:
//		ДеревоЗначений - дерево с данными классификатора.
//
Функция ПолучитьДанныеКлассификатора() Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Макет = Справочники.ЕдиницыИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения");
	Макет.Записать(ИмяВременногоФайла);
	Возврат ЗначениеИзФайла(ИмяВременногоФайла);
	
КонецФункции

// Выполняет поиск единицы измерения в справочнике "КлассификаторЕдиницИзмерения"
// если элемент в справочнике не найден, осуществляется попытка добавления элемента из ОКЕИ,
// если в ОКЕИ элемент не найден, то он создается с переданным кодом и наименованием
// Если Наименование не задано то добавление элемента в справочник произведено не будет!
//
// Параметры:
//  КодПоОКЕИ - Строка - код единицы измерения по ОКЕИ (Обязательный).
//  Наименование - Строка - Наименование единицы измерения (Необязательный).
//  НаименованиеПолное - Строка - Полное наименование единицы измерения (Необязательный).
//
// Возвращаемое значение:
//  Неопределено, СправочникСсылка.КлассификаторЕдиницИзмерения - Неопределено, если поиск или добавление успешны.
//      Ссылка на элемент справочника, если поиск и попытка добавления элемента не дали результатов.
// 
Функция ЕдиницаИзмеренияПоКоду(КодПоОКЕИ, Наименование = "", НаименованиеПолное = "") Экспорт
	
	Если НЕ ЗначениеЗаполнено(КодПоОКЕИ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Сначала попытаемся найти единицу среди уже существующих в справочнике
	ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоКоду(КодПоОКЕИ);
	Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда 
		Возврат ЕдиницаИзмерения;
	КонецЕсли;
	
	// Если единицы нет в справочнике, поищем ее в классификаторе
	// Классификатор хранится в макете "КлассификаторЕдиницИзмерения"
	
	ДеревоЕдиниц = ПолучитьДанныеКлассификатора();
	НайденнаяСтрока = ДеревоЕдиниц.Строки.Найти(КодПоОКЕИ, "КодЧисловой", Истина);
	
	// Инициализируем временную структуру для реквизитов единицы измерения
	ЗначенияЗаполнения = Новый Структура("Код, Наименование, НаименованиеПолное, МеждународноеСокращение");
	
	// Если единица найдена, заполняем нашу структуру из классификатора
	Если НайденнаяСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(НайденнаяСтрока.УсловноеОбозначениеНациональное) Тогда
			НаименованиеЕдиницы = НайденнаяСтрока.УсловноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.УсловноеОбозначениеМеждународное) Тогда
			НаименованиеЕдиницы = НайденнаяСтрока.УсловноеОбозначениеМеждународное;
		ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.КодовоеБуквенноеОбозначениеНациональное) Тогда
			НаименованиеЕдиницы = НайденнаяСтрока.КодовоеБуквенноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(НайденнаяСтрока.КодовоеБуквенноеОбозначениеМеждународное) Тогда
			НаименованиеЕдиницы = НайденнаяСтрока.КодовоеБуквенноеОбозначениеМеждународное;
		Иначе
			НаименованиеЕдиницы = НайденнаяСтрока.Наименование;
		КонецЕсли;
		ЗначенияЗаполнения.Наименование            = СтрЗаменить(НаименованиеЕдиницы, Символы.ПС,"/");
		ЗначенияЗаполнения.МеждународноеСокращение = СтрЗаменить(НайденнаяСтрока.КодовоеБуквенноеОбозначениеМеждународное,Символы.ПС,"/");
		ЗначенияЗаполнения.НаименованиеПолное      = СтрЗаменить(НайденнаяСтрока.Наименование,Символы.ПС,"/");
		ЗначенияЗаполнения.Код                     = НайденнаяСтрока.КодЧисловой;
			
	
	// Если в классификаторе нет подходящей единицы, но у нас есть данные для заполнения справочника
	// то добавляем новую единицу по этим данным
	ИначеЕсли ЗначениеЗаполнено(Наименование) Тогда
		
		ЗначенияЗаполнения.Вставить("Код", КодПоОКЕИ);
		
		ЗначенияЗаполнения.Вставить("Наименование", Наименование);
		
		ЗначенияЗаполнения.Вставить("НаименованиеПолное", ?(ЗначениеЗаполнено(НаименованиеПолное), НаименованиеПолное, Наименование));
		
	// Если единицы нет в классификаторе и ничего кроме кода о ней не известно
	// возвращаем неопределено
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	// Создаем единицу измерения в справочнике
	НоваяЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
	
	ЗаполнитьЗначенияСвойств(НоваяЕдиницаИзмерения, ЗначенияЗаполнения);
	
	НоваяЕдиницаИзмерения.Записать();
	
	ЕдиницаИзмерения = НоваяЕдиницаИзмерения.Ссылка;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

#КонецОбласти
#КонецЕсли
