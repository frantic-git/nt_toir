////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем ИзмеряемыйПоказательДобавляется;

#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Видимость и отбор значений.
	Элементы.Панель.ПодчиненныеЭлементы.ЗначенияИзмеряемогоПоказателя.Доступность
	= Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.торо_ЗначенияИзмеряемыхПоказателейОбъектовРемонта"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокЗначенийИзмеряемогоПоказателя, "Владелец", Объект.Ссылка,,,,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбработатьИзменениеТипаЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МультиязычностьСервер.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ТипЗначения = Новый ОписаниеТипов("Число");
		Объект.ДопустимыйМаксимум  = 0;
		Объект.ДопустимыйМинимум   = 0;
		Объект.КритическийМаксимум = 0;
		Объект.КритическийМинимум  = 0;
	КонецЕсли;
	
	Элементы.Панель.ПодчиненныеЭлементы.ГраницыДопустимыхЗначений.Доступность = Объект.ТипЗначения.СодержитТип(Тип("Число"));
	
	ЗаполнитьТаблицуОР();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверкаУникальностиИНаличияПустыхОР(Отказ); 
	ПроверкаГраницПоказателей(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МультиязычностьСервер.ПередЗаписьюНаСервере(ТекущийОбъект);
	
	Если Не торо_ОбщегоНазначения.НаименованиеУникально("ПланВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта", Объект.Наименование, Объект.Ссылка) Тогда
		
		ТекстСообщения = НСтр("ru = 'Наименование не уникально'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		Возврат;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьОбъектыРемонта(Отказ, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	МультиязычностьСервер.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокЗначенийИзмеряемогоПоказателя, "Владелец", Объект.Ссылка,,,,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	Элементы.Панель.ПодчиненныеЭлементы.ЗначенияИзмеряемогоПоказателя.Доступность = Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.торо_ЗначенияИзмеряемыхПоказателейОбъектовРемонта"));
	Элементы.Панель.ПодчиненныеЭлементы.ГраницыДопустимыхЗначений.Доступность = Объект.ТипЗначения.СодержитТип(Тип("Число"));
	
	Если НЕ Элементы.Панель.ПодчиненныеЭлементы.ЗначенияИзмеряемогоПоказателя.Доступность
		И Элементы.Панель.ТекущаяСтраница.Имя = "ЗначенияИзмеряемогоПоказателя" Тогда
		Элементы.Панель.ТекущаяСтраница = Элементы.Панель.ПодчиненныеЭлементы[0];
	КонецЕсли;
	
	Если НЕ Элементы.Панель.ПодчиненныеЭлементы.ГраницыДопустимыхЗначений.Доступность
		И Элементы.Панель.ТекущаяСтраница.Имя = "ГраницыДопустимыхЗначений" Тогда
		Элементы.Панель.ТекущаяСтраница = Элементы.Панель.ПодчиненныеЭлементы[0];
	КонецЕсли;
	
	ОбработатьИзменениеТипаЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_Открытие(Элемент, СтандартнаяОбработка)
	МультиязычностьКлиент.ПриОткрытии(ЭтотОбъект, Объект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыРемонта
&НаКлиенте
Процедура ОбъектыРемонтаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
	
		Элемент.ТекущиеДанные.Показатель = Объект.Ссылка;
		МодифицированностьОбъектовРемонта = Истина;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	ИмяФормыОбъекта = ?(ТипЗнч(ТекДанные.ОбъектРемонта)=Тип("СправочникСсылка.торо_ОбъектыРемонта"),"Справочник.торо_ОбъектыРемонта.ФормаОбъекта","Справочник.торо_ТиповыеОР.ФормаОбъекта");
	ОткрытьФорму(ИмяФормыОбъекта,Новый Структура("Ключ",ТекДанные.ОбъектРемонта));
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСписокОР(Команда)
	
	ОбъектыРемонта.Очистить();
	ЗаполнитьТаблицуОР();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗначенийИзмеряемогоПоказателя
&НаКлиенте
Процедура СписокЗначенийИзмеряемогоПоказателяПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Вопрос = НСтр("ru = 'Показатель еще не записан! Записать?'");
		Если Не ИзмеряемыйПоказательДобавляется Тогда
			Отказ = Истина;
			ПоказатьВопрос(Новый ОписаниеОповещения("СписокЗначенийИзмеряемогоПоказателяПередНачаломДобавленияЗавершение",ЭтотОбъект),
							Вопрос,РежимДиалогаВопрос.ОКОтмена);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверкаПриЗаписи

&НаКлиенте
Процедура ПроверкаГраницПоказателей(Отказ)

	ТекстСообщения = "";
	Если ТипЗнч(Объект.КритическийМинимум) = Тип("Число") 
		И ТипЗнч(Объект.ДопустимыйМинимум) = Тип("Число") 
		И ТипЗнч(Объект.ДопустимыйМаксимум) = Тип("Число") 
		И ТипЗнч(Объект.КритическийМаксимум) = Тип("Число") Тогда
		Если Объект.КритическийМинимум > Объект.ДопустимыйМинимум Тогда
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Критический минимум превышает допустимый минимум! '");
		КонецЕсли;
		Если Объект.ДопустимыйМинимум > Объект.ДопустимыйМаксимум Тогда
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Допустимый минимум превышает допустимый максимум! '");
		КонецЕсли;
		Если Объект.ДопустимыйМаксимум > Объект.КритическийМаксимум Тогда
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Допустимый максимум превышает критический максимум! '");
		КонецЕсли;
	КонецЕсли;
	Если ТекстСообщения <> "" Тогда
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Запись невозможна! Попробуйте отредактировать границы допустимых значений!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПроверкаУникальностиИНаличияПустыхОР(Отказ)

	ТекстСообщения = "";
	МассивДублей = Новый Массив();
	ПараметрыОтбора = Новый Структура();
	
	Для Каждого ТекущаяСтрока Из ОбъектыРемонта Цикл
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.ОбъектРемонта) Тогда
			ШаблонСообщения = НСтр("ru = 'Запись невозможна! Объект ремонта в строке %1 не заполнен.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбъектыРемонта.Индекс(ТекущаяСтрока) + 1);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		Иначе
			ПараметрыОтбора.Вставить("ОбъектРемонта", ТекущаяСтрока.ОбъектРемонта);
			МассивДублейТекущейСтроки = ОбъектыРемонта.НайтиСтроки(ПараметрыОтбора);				
			
			Если МассивДублейТекущейСтроки.Количество() > 1 Тогда
				УжеЕстьВДубликатах = МассивДублей.Найти(ТекущаяСтрока.ОбъектРемонта);
				Если УжеЕстьВДубликатах = Неопределено Тогда			
					
					МассивДублей.Добавить(ТекущаяСтрока.ОбъектРемонта);										
					ШаблонСообщения = НСтр("ru = 'Запись невозможна! Объект ремонта ''%1'' не уникален.'");
					ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекущаяСтрока.ОбъектРемонта);
					ШаблонНаименованияРеквизитаФормы = НСтр("ru = 'ОбъектыРемонта[%1].ОбъектРемонта'");
					НаименованиеРеквизитаФормы = СтрШаблон(ШаблонНаименованияРеквизитаФормы, ОбъектыРемонта.Индекс(ТекущаяСтрока));
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка,НаименованиеРеквизитаФормы,,Отказ);
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти

&НаКлиенте
Процедура СписокЗначенийИзмеряемогоПоказателяПередНачаломДобавленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ  = РезультатВопроса;
	Отказ = Ложь;
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ЗначениеВозврата = ЗаписатьЭлементНаСервере();
		Если ЗначениеВозврата <> Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки(),,,, Отказ);
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Элементы.СписокЗначенийИзмеряемогоПоказателя.ДобавитьСтроку();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЗаписатьЭлементНаСервере()
	
	Попытка
		Отказ = НЕ Записать();
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Исключение'"), УровеньЖурналаРегистрации.Предупреждение, 
			Метаданные.ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта,,ОписаниеОшибки());
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуОР()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель,
		|	ВЫБОР
		|		КОГДА торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта ССЫЛКА Справочник.торо_ТиповыеОР
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТиповойОР
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
		|ГДЕ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель = &Показатель
		|	И НЕ торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален";
		Запрос.УстановитьПараметр("Показатель", Объект.Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НС = ОбъектыРемонта.Добавить();
			
			ЗаполнитьЗначенияСвойств(НС, Выборка);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеТипаЗначения()
	
	Если Объект.ТипЗначения.Типы().Количество() > 1 Тогда
		Если ТипЗнч(Объект.ДопустимыйМаксимум) <> Тип("Число") Тогда
			Объект.ДопустимыйМаксимум = 0;
		КонецЕсли;
		Если ТипЗнч(Объект.ДопустимыйМинимум) <> Тип("Число") Тогда
			Объект.ДопустимыйМинимум = 0;
		КонецЕсли;
		Если ТипЗнч(Объект.КритическийМаксимум) <> Тип("Число") Тогда
			Объект.КритическийМаксимум = 0;
		КонецЕсли;
		Если ТипЗнч(Объект.КритическийМинимум) <> Тип("Число") Тогда
			Объект.КритическийМинимум = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьОбъектыРемонта(Отказ, ТекущийОбъект)
	НаборЗаписей = РегистрыСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Показатель.Значение = ТекущийОбъект.Ссылка;
	НаборЗаписей.Отбор.Показатель.Использование = Истина;
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Для каждого Строка из ОбъектыРемонта Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Строка);
		Запись.Показатель = ТекущийОбъект.Ссылка;
		Если НЕ Запись.ЗначенияКонтролируемыхПоказателейИзОР Тогда
			Запись.ДопустимыйМинимум = ТекущийОбъект.ДопустимыйМинимум;
			Запись.ДопустимыйМаксимум = ТекущийОбъект.ДопустимыйМаксимум;
			Запись.КритическийМинимум = ТекущийОбъект.КритическийМинимум;
			Запись.КритическийМаксимум = ТекущийОбъект.КритическийМаксимум;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Исключение'"), УровеньЖурналаРегистрации.Предупреждение, 
			Метаданные.ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта,,ОписаниеОшибки());
		ТекстСообщения = НСтр("ru = 'Не удалось записать назначения свойства: '") + ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецПопытки;

КонецПроцедуры

ИзмеряемыйПоказательДобавляется = Ложь;
#КонецОбласти

