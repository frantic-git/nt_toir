#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыбиратьГруппу = Ложь;
	
	Если Параметры.Свойство("МассивВыбранных") Тогда
		Для каждого Элемент Из Параметры.МассивВыбранных Цикл
			НС = СписокВыбораЗначений.Добавить();
			НС.ВыбранноеЗначение = Элемент;
		КонецЦикла; 
	КонецЕсли;
	
	Если Параметры.Свойство("СписокОР") Тогда
		СписокОР = Параметры.СписокОР; 
	КонецЕсли; 
	
	Если Параметры.Свойство("ВыбиратьГруппу") Тогда
		ВыбиратьГруппу = Параметры.ВыбиратьГруппу; 
	КонецЕсли;
	
	Если Параметры.Свойство("РазныеТипы") Тогда
		РазныеТипы = Истина; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СписокВыбораЗначенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	СтруктураПараметр = Новый Структура("ЗакрыватьПриВыборе, Добавление", Истина, Истина);
	
	ОбработкаВыбораТипа(СтруктураПараметр);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подбор(Команда)
	СтруктураПараметр = Новый Структура("ЗакрыватьПриВыборе, Добавление", Ложь, Ложь);
	ОбработкаВыбораТипа(СтруктураПараметр);	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	СтруктураВыбранных = Новый Структура;
	МассивВыбранных = Новый Массив;
	Сч = 0;
	Иерархия = Неопределено;
	Для Каждого Строка Из СписокВыбораЗначений Цикл
		Если ЗначениеЗаполнено(Строка.ВыбранноеЗначение) Тогда			
			МассивВыбранных.Добавить(Строка.ВыбранноеЗначение);
			Если ЗначениеЗаполнено(Строка.Иерархия) И Строка.Иерархия <> Иерархия Тогда
				Иерархия = Строка.Иерархия;
				Сч = Сч + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Сч <> 1 Тогда
		Иерархия = ПолучитьОсновнуюСтруктуруИерархии();
	КонецЕсли;
	
	СтруктураВыбранных.Вставить("МассивВыбранных",МассивВыбранных);
	СтруктураВыбранных.Вставить("Иерархия",Иерархия);
	
	ОповеститьОВыборе(СтруктураВыбранных);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ОбработкаВыбораТипа(ДопПараметры)
	
	Закрывать = Истина;
	ДопПараметры.Свойство("ЗакрыватьПриВыборе", Закрывать);
	Добавление = ДопПараметры.Добавление;
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("ЗакрыватьПриВыборе", Закрывать);
	
	Если ЗначениеЗаполнено(СписокОР) Тогда
		СтруктураВыбора.Вставить("СписокОР", СписокОР);
	КонецЕсли;
	
	СтруктураВыбора.Вставить("КлючНазначенияИспользования", "ИзППР");     
	СтруктураВыбора.Вставить("ВыбиратьГруппу", ВыбиратьГруппу);
	СтруктураВыбора.Вставить("ВернутьИерархию", Истина);
	
	Если РазныеТипы Тогда
		СписокТипов = Новый СписокЗначений;
		СписокТипов.Добавить(Тип("СправочникСсылка.торо_ОбъектыРемонта"));
		СписокТипов.Добавить(Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия"));
		СписокТипов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ПоказВыбораТипаТПОтборПечатнойФормыЗначениеНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ПараметрыВыбора", СтруктураВыбора)), "Выберите тип");
	Иначе
		ОткрытьФорму("Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораОбъектовДляПланаГрафикаППР", 
		СтруктураВыбора, Элементы.СписокВыбораЗначений);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокВыбораЗначенийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Если ВыбранноеЗначение.Свойство("ОбъектРемонта") Тогда 
			Если ТипЗнч(ВыбранноеЗначение.ОбъектРемонта) = Тип("Массив") Тогда
				Для Каждого Элемент Из ВыбранноеЗначение.ОбъектРемонта Цикл
					ДобавитьВыбранноеЗначениеВСписокВыбранных(Элемент,ВыбранноеЗначение.Иерархия);
				КонецЦикла; 
			Иначе
				ДобавитьВыбранноеЗначениеВСписокВыбранных(ВыбранноеЗначение.ОбъектРемонта,ВыбранноеЗначение.Иерархия);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ДобавитьВыбранноеЗначениеВСписокВыбранных(ВыбранноеЗначение);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьВыбранноеЗначениеВСписокВыбранных(ВыбранноеЗначение, Иерархия = Неопределено)
	
	СтруктураПоиска = Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение);	
	
	Если СписокВыбораЗначений.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда		
		Возврат;		
	КонецЕсли;
	
	НоваяСтрока = СписокВыбораЗначений.Добавить();
	НоваяСтрока.ВыбранноеЗначение = ВыбранноеЗначение; 
	НоваяСтрока.Иерархия = Иерархия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказВыбораТипаТПОтборПечатнойФормыЗначениеНачалоВыбораЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		Если РезультатВыбора.Значение = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
			ОткрытьФорму("Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораОбъектовДляПланаГрафикаППР", 
			ДопПараметры.ПараметрыВыбора, Элементы.СписокВыбораЗначений);
		ИначеЕсли РезультатВыбора.Значение = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
			ОткрытьФорму("Справочник.торо_СписокОбъектовРегламентногоМероприятия.Форма.ФормаВыбора", 
			ДопПараметры.ПараметрыВыбора, Элементы.СписокВыбораЗначений);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновнуюСтруктуруИерархии()
	
	Иерархия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ОсновнаяСтруктураИерархии",
	Истина);
	
	Если НЕ ЗначениеЗаполнено(Иерархия) Тогда
		Иерархия = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	КонецЕсли;
	
	Возврат Иерархия;
КонецФункции

#КонецОбласти