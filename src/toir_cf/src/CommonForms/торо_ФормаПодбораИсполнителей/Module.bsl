
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТаблицаИсполнителей.Параметры.УстановитьЗначениеПараметра("НачалоПериода", ТекущаяДата());
	
	ЭлементОтбора = ТаблицаБригады.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	ЭлементОтбора.Использование = Истина;
	
	Если Параметры.Свойство("СписокПодразделений") Тогда
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = Параметры.СписокПодразделений;
	Иначе
		ЭлементОтбора.ПравоеЗначение = Параметры.Подразделение;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.Квалификация КАК Квалификация,
	               |	Таб.Сотрудник КАК Сотрудник,
	               |	Таб.ID КАК ID,
	               |	Таб.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
				   |	Таб.ВремяРаботы КАК ВремяРаботы,
	               |	Таб.ДатаНачала КАК ДатаНачала,
	               |	Таб.ДатаОкончания КАК ДатаОкончания
				   |ПОМЕСТИТЬ Вт_Данные
	               |ИЗ
	               |	&Таб КАК Таб
	               |ГДЕ
	               |	&Парам1
	               |	И &Парам2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Данные.Квалификация КАК Квалификация,
	               |	МАКСИМУМ(Вт_Данные.Сотрудник) КАК Сотрудник
	               |ИЗ
	               |	Вт_Данные КАК Вт_Данные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Вт_Данные.Квалификация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Данные.Квалификация КАК Квалификация,
	               |	Вт_Данные.ID КАК ID,
	               |	Вт_Данные.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
				   |	Вт_Данные.ВремяРаботы КАК ВремяРаботы,
	               |	Вт_Данные.ДатаНачала КАК ДатаНачала,
	               |	Вт_Данные.ДатаОкончания КАК ДатаОкончания,
	               |	Вт_Данные.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	Вт_Данные КАК Вт_Данные";
	
	ТаблицаКвалификаций = Параметры.НеобходимыеКвалификации.Выгрузить();
	
	Если ТаблицаКвалификаций.Колонки.Найти("СуммаКНачислению") <> Неопределено Тогда 
		тз = Параметры.НеобходимыеКвалификации.Выгрузить(,"Квалификация, Сотрудник, ID, РемонтыОборудования_ID, КТУ, ДатаНачала, ДатаОкончания, ВремяРаботы, СуммаКНачислению");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Таб.ДатаОкончания КАК ДатаОкончания", "Таб.ДатаОкончания КАК ДатаОкончания, Таб.КТУ КАК КТУ, Таб.СуммаКНачислению КАК СуммаКНачислению");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Вт_Данные.Сотрудник КАК Сотрудник", "Вт_Данные.Сотрудник КАК Сотрудник, Вт_Данные.КТУ КАК КТУ, Вт_Данные.СуммаКНачислению КАК СуммаКНачислению");
	Иначе
		тз = Параметры.НеобходимыеКвалификации.Выгрузить(,"Квалификация, Сотрудник, ID, РемонтыОборудования_ID, ДатаНачала, ДатаОкончания, ВремяРаботы");		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Таб", тз);
	
	Если Параметры.ID = Неопределено Тогда
		Запрос.УстановитьПараметр("Парам1", Истина);
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Парам1", "Таб.ID В (&ID)");
		Запрос.УстановитьПараметр("ID", Параметры.ID);
	КонецЕсли;
	
	Если Параметры.РемонтыОборудования_ID = Неопределено Тогда
		Запрос.УстановитьПараметр("Парам2", Истина);
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Парам2", "Таб.РемонтыОборудования_ID = &РемонтыОборудования_ID");
		Запрос.УстановитьПараметр("РемонтыОборудования_ID", Параметры.РемонтыОборудования_ID);
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ИсходныеДанные.Загрузить(Результат[2].Выгрузить());
	ТаблицаВыбранныеИсполнители.Загрузить(Результат[2].Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьФлаги(Истина);
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаБригадыПриАктивизацииСтроки(Элемент)
	
	текСтрока = Элементы.ТаблицаБригады.ТекущиеДанные;
	ТаблицаИсполнителей.Отбор.Элементы.Очистить();
	
	Если текСтрока = Неопределено тогда
		ЭлементОтбора = ТаблицаИсполнителей.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РемонтнаяБригада");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = "";
	Иначе
		ЭлементОтбора = ТаблицаИсполнителей.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РемонтнаяБригада");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = текСтрока.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеИсполнителиПередУдалением(Элемент, Отказ)
	отказ = Истина;
	
	ТекСтрока = Элемент.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрока.Сотрудник = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсполнителейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	текСтрока = Элементы.ТаблицаИсполнителей.ДанныеСтроки(ВыбраннаяСтрока);
	Если текСтрока <> Неопределено Тогда
		ДобавитьИсполнителяКвалификации(текСтрока.Квалификация, текСтрока.Исполнитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеИсполнителиПередНачаломИзменения(Элемент, Отказ)
	РемонтнаяБригада = Элементы.ТаблицаБригады.ТекущаяСтрока;
	МассивОтбора = ПолучитьМассивСострудниковПоБригаде(РемонтнаяБригада, Элемент.ТекущиеДанные.Квалификация);
	Элементы.ТаблицаВыбранныеИсполнителиИсполнитель.СписокВыбора.ЗагрузитьЗначения(МассивОтбора);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьПриИзменении(Элемент)
	Если Свернуть Тогда 
		СвернутьНаСервере();
	Иначе 
		РазвернутьНаСервере();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПодбор(Команда)
	ОповеститьОВыборе(ПоложитьТЗВоВременноеХранилище());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере 
Процедура ДобавитьИсполнителяКвалификации(Квалификация, Сотрудник)
	
	мас = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый структура("Квалификация, Выбран", Квалификация, Истина));
	СотрудникДобавлен = Ложь;
	Для каждого текСтрока из Мас Цикл
		ТекСтрока.Сотрудник = Сотрудник;
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере 
Функция ПоложитьТЗВоВременноеХранилище()
	
	ВыбранныеКвалификации = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый Структура("Выбран", Истина));
	Если НЕ ВыбранныеКвалификации.Количество() > 0 Тогда 
		ПоместитьВоВременноеХранилище(ИсходныеДанные.Выгрузить(), Новый УникальныйИдентификатор);
	Иначе 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ИсходныеКвалификации.Квалификация КАК Квалификация,
		               |	ИсходныеКвалификации.ID КАК ID,
		               |	ИсходныеКвалификации.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		               |	ИсходныеКвалификации.КТУ КАК КТУ,
		               |	ИсходныеКвалификации.ДатаНачала КАК ДатаНачала,
		               |	ИсходныеКвалификации.ДатаОкончания КАК ДатаОкончания,
		               |	ИсходныеКвалификации.ВремяРаботы КАК ВремяРаботы,
		               |	ИсходныеКвалификации.Сотрудник КАК Сотрудник,
		               |	ИсходныеКвалификации.СуммаКНачислению КАК СуммаКНачислению
		               |ПОМЕСТИТЬ втИсходныеКвалификации
		               |ИЗ
		               |	&ИсходныеКвалификации КАК ИсходныеКвалификации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВыбранныеИсполнители.Выбран КАК Выбран,
		               |	ВыбранныеИсполнители.Квалификация КАК Квалификация,
		               |	ВыбранныеИсполнители.Сотрудник КАК Сотрудник,
		               |	ВыбранныеИсполнители.Свернута КАК Свернута
		               |ПОМЕСТИТЬ втСвернутыеКвалификации
		               |ИЗ
		               |	&ВыбранныеИсполнители КАК ВыбранныеИсполнители
		               |ГДЕ
		               |	ВыбранныеИсполнители.Свернута = ИСТИНА
		               |;
		               |
					   |////////////////////////////////////////////////////////////////////////////////
					   |ВЫБРАТЬ
					   |	втСвернутыеКвалификации.Квалификация КАК Квалификация,
					   |	втИсходныеКвалификации.ID КАК ID,
					   |	втИсходныеКвалификации.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
					   |	втИсходныеКвалификации.КТУ КАК КТУ,
					   |	втИсходныеКвалификации.ДатаНачала КАК ДатаНачала,
					   |	втИсходныеКвалификации.ДатаОкончания КАК ДатаОкончания,
					   |	втИсходныеКвалификации.ВремяРаботы КАК ВремяРаботы,
					   |	втИсходныеКвалификации.Сотрудник КАК Сотрудник,
					   |	втИсходныеКвалификации.СуммаКНачислению КАК СуммаКНачислению
					   |ИЗ
					   |	втСвернутыеКвалификации КАК втСвернутыеКвалификации
					   |		ЛЕВОЕ СОЕДИНЕНИЕ втИсходныеКвалификации КАК втИсходныеКвалификации
					   |		ПО втСвернутыеКвалификации.Квалификация = втИсходныеКвалификации.Квалификация
					   |ГДЕ			
					   |    НЕ втСвернутыеКвалификации.Выбран
					   |
					   |ОБЪЕДИНИТЬ ВСЕ
					   |
					   |ВЫБРАТЬ
					   |	втИсходныеКвалификации.Квалификация КАК Квалификация,
					   |	втИсходныеКвалификации.ID КАК ID,
					   |	втИсходныеКвалификации.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
					   |    МИНИМУМ(втИсходныеКвалификации.КТУ) КАК КТУ,
					   |	МИНИМУМ(ВЫБОР
					   |			КОГДА втИсходныеКвалификации.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
					   |				ТОГДА """"
					   |			ИНАЧЕ втИсходныеКвалификации.ДатаНачала
					   |		КОНЕЦ) КАК ДатаНачала,
					   |	МАКСИМУМ(втИсходныеКвалификации.ДатаОкончания) КАК ДатаОкончания,
					   |	СУММА(втИсходныеКвалификации.ВремяРаботы) КАК ВремяРаботы,
					   |    МИНИМУМ(втСвернутыеКвалификации.Сотрудник) КАК Сотрудник,
					   |	СУММА(втИсходныеКвалификации.СуммаКНачислению) КАК СуммаКНачислению
					   |ИЗ
					   |    втСвернутыеКвалификации КАК втСвернутыеКвалификации
					   |	ЛЕВОЕ СОЕДИНЕНИЕ втИсходныеКвалификации КАК втИсходныеКвалификации
					   |		ПО втСвернутыеКвалификации.Квалификация = втИсходныеКвалификации.Квалификация
					   |ГДЕ 
					   |    втСвернутыеКвалификации.Выбран
					   |
					   |СГРУППИРОВАТЬ ПО
					   |	втИсходныеКвалификации.Квалификация,
					   |	втИсходныеКвалификации.ID,
					   |	втИсходныеКвалификации.РемонтыОборудования_ID
					   |";
				
		Запрос.УстановитьПараметр("ИсходныеКвалификации", ИсходныеДанные.Выгрузить());
		Запрос.УстановитьПараметр("ВыбранныеИсполнители", ТаблицаВыбранныеИсполнители.Выгрузить());
		тзВозврата = Запрос.Выполнить().Выгрузить();
		
		НеСвернутыеКвалификации = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый Структура("Свернута", Ложь));
		ТЗ = ТаблицаВыбранныеИсполнители.Выгрузить(НеСвернутыеКвалификации);
		ТЗ.Свернуть("Квалификация");
		
		Для каждого Строка Из ТЗ Цикл 
			НайдИсполнители = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый Структура("Квалификация", Строка.Квалификация));
			НайдИсходные = ИсходныеДанные.НайтиСтроки(Новый Структура("Квалификация", Строка.Квалификация));
			Индекс = 0;
			Пока Индекс < НайдИсполнители.Количество() Цикл 
				НоваяСтрокаТЗ = тзВозврата.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТЗ, НайдИсходные[Индекс]);
				Если НайдИсполнители[Индекс].Выбран = Истина Тогда 
					НоваяСтрокаТЗ.Сотрудник = НайдИсполнители[Индекс].Сотрудник;
				КонецЕсли;
				Индекс = Индекс + 1;
			КонецЦикла;
		КонецЦикла;
		
		Возврат ПоместитьВоВременноеХранилище(тзВозврата, Новый УникальныйИдентификатор);
	КонецЕсли;
КонецФункции 

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	УстановитьФлаги(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	УстановитьФлаги(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Инвертировать(Команда)
	УстановитьФлаги();
КонецПроцедуры   

&НаКлиенте
Процедура УстановитьФлаги(НужноУстановить = Неопределено)
	
	Для каждого Строка Из ТаблицаВыбранныеИсполнители Цикл
		Строка.Выбран = ?(НужноУстановить = Неопределено, НЕ Строка.Выбран, НужноУстановить);				
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура РазвернутьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИсходныеКвалификации.Квалификация КАК Квалификация,
	               |	ИсходныеКвалификации.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ втИсходныеКвалификации
	               |ИЗ
	               |	&ИсходныеКвалификации КАК ИсходныеКвалификации
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВыбранныеИсполнители.Выбран КАК Выбран,
	               |	ВыбранныеИсполнители.Квалификация КАК Квалификация,
	               |	ВыбранныеИсполнители.Сотрудник КАК Сотрудник,
				   |    ВыбранныеИсполнители.Свернута КАК Свернута
				   |ПОМЕСТИТЬ втВыбранныеИсполнители
	               |ИЗ
	               |	&ВыбранныеИсполнители КАК ВыбранныеИсполнители
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втВыбранныеИсполнители.Выбран КАК Выбран,
	               |	втВыбранныеИсполнители.Квалификация КАК Квалификация,
	               |    втВыбранныеИсполнители.Сотрудник КАК Сотрудник,
				   |	ВЫБОР
	               |		КОГДА втВыбранныеИсполнители.Выбран = ИСТИНА
	               |			ТОГДА ЛОЖЬ 
	               |		ИНАЧЕ втВыбранныеИсполнители.Свернута
	               |	КОНЕЦ КАК Свернута
				   |ИЗ
	               |	втВыбранныеИсполнители КАК втВыбранныеИсполнители
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втИсходныеКвалификации КАК втИсходныеКвалификации
	               |		ПО втВыбранныеИсполнители.Квалификация = втИсходныеКвалификации.Квалификация
	               |		И втВыбранныеИсполнители.Свернута 
				   |        И втВыбранныеИсполнители.Выбран";
	
	Запрос.УстановитьПараметр("ИсходныеКвалификации", ИсходныеДанные.Выгрузить());
	Запрос.УстановитьПараметр("ВыбранныеИсполнители", ТаблицаВыбранныеИсполнители.Выгрузить());
	Результат = Запрос.Выполнить().Выгрузить();
	ТаблицаВыбранныеИсполнители.Загрузить(Результат);

КонецПроцедуры

&НаСервере
Процедура СвернутьНаСервере()
	
	ВыбранныеКвалификации = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый Структура("Выбран", Истина));
	Для каждого Строка Из ВыбранныеКвалификации Цикл 
		НайдСтроки = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый Структура("Квалификация", Строка.Квалификация));
		Для каждого Стр Из НайдСтроки Цикл 
			Стр.Выбран = Истина;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.Квалификация КАК Квалификация,
	               |	Таб.Сотрудник КАК Сотрудник,
	               |	Таб.Выбран КАК Выбран
	               |ПОМЕСТИТЬ втТабВыбранные
	               |ИЗ
	               |	&Таб КАК Таб
	               |ГДЕ
	               |	Таб.Выбран = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таб.Квалификация КАК Квалификация,
	               |	Таб.Сотрудник КАК Сотрудник,
	               |	Таб.Выбран КАК Выбран,
				   |    Таб.Свернута КАК Свернута 
	               |ПОМЕСТИТЬ втТаб
	               |ИЗ
	               |	&Таб КАК Таб
	               |ГДЕ
	               |	Таб.Выбран = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втТабВыбранные.Квалификация КАК Квалификация,
	               |	МАКСИМУМ(втТабВыбранные.Сотрудник) КАК Сотрудник,
	               |	МИНИМУМ(втТабВыбранные.Выбран) КАК Выбран,
				   |    ИСТИНА КАК Свернута 
	               |ИЗ
	               |	втТабВыбранные КАК втТабВыбранные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втТабВыбранные.Квалификация
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	втТаб.Квалификация,
	               |	втТаб.Сотрудник,
	               |	втТаб.Выбран,
				   |    втТаб.Свернута КАК Свернута 
	               |ИЗ
	               |	втТаб КАК втТаб";
	
	Запрос.УстановитьПараметр("Таб", ТаблицаВыбранныеИсполнители.Выгрузить());
	Результат = Запрос.Выполнить().Выгрузить();
	ТаблицаВыбранныеИсполнители.Загрузить(Результат);
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьМассивСострудниковПоБригаде(Бригада, Квалификация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрСведенийторо_СоставРемонтныхБригадСрезПоследних.Квалификация КАК Квалификация,
	               |	РегистрСведенийторо_СоставРемонтныхБригадСрезПоследних.Исполнитель КАК Исполнитель,
	               |	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия
	               |ИЗ
	               |	РегистрСведений.торо_СоставРемонтныхБригад.СрезПоследних(&НачалоПериода, РемонтнаяБригада = &РемонтнаяБригада) КАК РегистрСведенийторо_СоставРемонтныхБригадСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних КАК КадроваяИсторияСотрудниковСрезПоследних
	               |		ПО РегистрСведенийторо_СоставРемонтныхБригадСрезПоследних.Исполнитель = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	               |ГДЕ
	               |	РегистрСведенийторо_СоставРемонтныхБригадСрезПоследних.ИсключенИзБригады = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("НачалоПериода", ТекущаяДата());
	Запрос.УстановитьПараметр("РемонтнаяБригада", Бригада);
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСотрудниковПоБригаде = Новый Массив;
	Пока Выборка.Следующий() Цикл 
		Если Выборка.Квалификация = Квалификация Тогда 
			Если ПолучитьФункциональнуюОпцию("торо_ИспользоватьУправлениеПерсоналом") Тогда
				Если ЗначениеЗаполнено(Выборка.ВидСобытия) 
					И Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Прием 
					Или Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Перемещение Тогда
					МассивСотрудниковПоБригаде.Добавить(Выборка.Исполнитель);
				КонецЕсли;
			Иначе
				МассивСотрудниковПоБригаде.Добавить(Выборка.Исполнитель);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивСотрудниковПоБригаде; 
	
КонецФункции

#КонецОбласти