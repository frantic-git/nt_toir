#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МассивВыбранных") Тогда
		Для каждого Элемент Из Параметры.МассивВыбранных Цикл
			НС = СписокВыбораЗначений.Добавить();
			НС.ВыбранноеЗначение = Элемент;
		КонецЦикла; 
	КонецЕсли;
	
	Если Параметры.Свойство("МассивВыбранныхПодразделений") Тогда
		МассивВыбранныхПодразделений.ЗагрузитьЗначения(Параметры.МассивВыбранныхПодразделений);
	КонецЕсли; 
	
	Если Параметры.Свойство("МассивВыбранныхКонтрагентов") Тогда
		МассивВыбранныхКонтрагентов.ЗагрузитьЗначения(Параметры.МассивВыбранныхКонтрагентов);
	КонецЕсли; 
	
	Параметры.Свойство("ТипЗначений", ТипЗначений);
	Параметры.Свойство("ИспользоватьВариантУчетаИерархииЭлементов", ИспользоватьВариантУчетаИерархииЭлементов);
	Параметры.Свойство("ФОИспользоватьСкользящееПланирование", ФОИспользоватьСкользящееПланирование);
	Параметры.Свойство("Заголовок", Заголовок);
	
	Если ТипЗначений.Типы().Количество() > 0 И ТипЗначений.Типы()[0] = Тип("СправочникСсылка.торо_ВидыРемонтов") И Параметры.Свойство("ВидПлана") Тогда
	    ВидыРемонтовПлана(Параметры.ВидПлана, СписокДоступныхПодразделений);
		Элементы.СписокВыбораЗначенийВыбранноеЗначение.СписокВыбора.ЗагрузитьЗначения(СписокДоступныхПодразделений.ВыгрузитьЗначения());
		
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Ссылка", "СписокДоступныхПодразделений");
		НовыйМассив = Новый Массив;
		НовыйМассив.Добавить(НоваяСвязь);
		Элементы.СписокВыбораЗначенийВыбранноеЗначение.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.СписокВыбораЗначенийВыбранноеЗначение.ОграничениеТипа = ТипЗначений;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СписокВыбораЗначенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	НС = СписокВыбораЗначений.Добавить();
	ИндексСтроки = НС.ПолучитьИдентификатор();
	СтруктураПараметр = Новый Структура("ЗакрыватьПриВыборе, Добавление", Истина, Истина);
	
	Если ТипЗначений.Типы().Количество() = 1 Тогда
		ОбработкаВыбораТипа(ТипЗначений.Типы()[0], СтруктураПараметр);
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораТипа", ЭтаФорма, СтруктураПараметр);
		СписокТипов = Новый СписокЗначений;
		СписокТипов.ЗагрузитьЗначения(ТипЗначений.Типы());
		СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещения, НСтр("ru = 'Выбор типа данных'")); 
	КонецЕсли; 	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подбор(Команда)
	СтруктураПараметр = Новый Структура("ЗакрыватьПриВыборе, Добавление", Ложь, Ложь);
	Если ТипЗначений.Типы().Количество() = 1 Тогда
		ОбработкаВыбораТипа(ТипЗначений.Типы()[0], СтруктураПараметр);
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораТипа", ЭтаФорма, СтруктураПараметр);
		СписокТипов = Новый СписокЗначений;
		СписокТипов.ЗагрузитьЗначения(ТипЗначений.Типы());
		СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещения, НСтр("ru = 'Выбор типа данных'")); 
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	МассивВыбранных = Новый Массив;
	Для каждого Строка Из СписокВыбораЗначений Цикл
		Если ЗначениеЗаполнено(Строка.ВыбранноеЗначение) Тогда
			МассивВыбранных.Добавить(Строка.ВыбранноеЗначение);
		КонецЕсли;
	КонецЦикла; 
	ОповеститьОВыборе(МассивВыбранных);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ОбработкаВыбораТипа(Тип, ДопПараметры) Экспорт
	
	Если ТипЗнч(Тип) = Тип("ЭлементСпискаЗначений") Тогда
		ВыбранныйТип = Тип.Значение;
	Иначе
		ВыбранныйТип = Тип;
	КонецЕсли; 
	
	Закрывать = Истина;
	ДопПараметры.Свойство("ЗакрыватьПриВыборе", Закрывать);
	Добавление = ДопПараметры.Добавление;

	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("ЗакрыватьПриВыборе", Закрывать);
	
	Если ВыбранныйТип = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
				
		Если ИспользоватьВариантУчетаИерархииЭлементов И Не Добавление Тогда
			СтруктураВыбора.Вставить("ИспользоватьВариантУчетаИерархииЭлементов", ИспользоватьВариантУчетаИерархииЭлементов);
		КонецЕсли;
		
		Если ФОИспользоватьСкользящееПланирование Тогда
			СтруктураВыбора.Вставить("ФОИспользоватьСкользящееПланирование");
		КонецЕсли;
		
		ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 

		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка");
		КонецЕсли;
		
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.Контрагенты") Тогда
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 
		
		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		КонецЕсли;
		
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.торо_РемонтныеБригады") Тогда 
		
		Если МассивВыбранныхПодразделений.Количество() > 0 Тогда
			СтруктураВыбора.Вставить("Отбор", Новый Структура("Подразделение", МассивВыбранныхПодразделений.ВыгрузитьЗначения()));	
		КонецЕсли; 
		
		ОткрытьФорму("Справочник.торо_РемонтныеБригады.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 
		
		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.торо_РемонтныеБригады.ПустаяСсылка");
		КонецЕсли; 
		
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		Если МассивВыбранныхКонтрагентов.Количество() > 0 Тогда
			СтруктураВыбора.Вставить("Отбор", Новый Структура("Контрагент",МассивВыбранныхКонтрагентов));	
		КонецЕсли; 
		
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 
		
		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
		КонецЕсли; 
		
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		
		Если ИспользоватьВариантУчетаИерархииЭлементов И Не Добавление Тогда
			СтруктураВыбора.Вставить("ИспользоватьВариантУчетаИерархииЭлементов", ИспользоватьВариантУчетаИерархииЭлементов);
		КонецЕсли; 
		
		ОткрытьФорму("Справочник.торо_ОбъектыРемонта.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 
		
		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.торо_ОбъектыРемонта.ПустаяСсылка");
		КонецЕсли; 
		
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.торо_ВидыРемонтов") Тогда
		
		Если СписокДоступныхПодразделений.Количество() > 0 Тогда
		    СтруктураОтбора = Новый Структура("Ссылка", СписокДоступныхПодразделений);
			СтруктураВыбора.Вставить("Отбор", СтруктураОтбора);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.торо_ВидыРемонтов.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 
		
		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.торо_ВидыРемонтов.ПустаяСсылка");
		КонецЕсли;
		
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
		
		Если ИспользоватьВариантУчетаИерархииЭлементов И Не Добавление Тогда
			СтруктураВыбора.Вставить("ИспользоватьВариантУчетаИерархииЭлементов");
		КонецЕсли; 
		
		ОткрытьФорму("Справочник.торо_СписокОбъектовРегламентногоМероприятия.ФормаВыбора", СтруктураВыбора, Элементы.СписокВыбораЗначений); 
		
		Если ЗначениеЗаполнено(ИндексСтроки) Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			Строка.ВыбранноеЗначение = ПредопределенноеЗначение("Справочник.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка");
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбораЗначенийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для каждого Элемент Из ВыбранноеЗначение Цикл
			ДобавитьВыбранноеЗначениеВСписокВыбранных(Элемент);
		КонецЦикла; 
	Иначе
		ДобавитьВыбранноеЗначениеВСписокВыбранных(ВыбранноеЗначение);
	КонецЕсли; 
	
	ИндексСтроки = Неопределено;
	
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьВыбранноеЗначениеВСписокВыбранных(ВыбранноеЗначение)
	
	СтруктураПоиска = Новый Структура("ВыбранноеЗначение", ВыбранноеЗначение);	
	
	Если СписокВыбораЗначений.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда		
		Если НЕ ИндексСтроки = Неопределено Тогда
			Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
			ИндексСтрокиВСпискеВыбораЗначений = СписокВыбораЗначений.Индекс(Строка);
			СписокВыбораЗначений.Удалить(ИндексСтрокиВСпискеВыбораЗначений);
		КонецЕсли;
		ИндексСтроки = Неопределено;
		Возврат;		
	КонецЕсли;
	
	Если НЕ ИндексСтроки = Неопределено Тогда
		Строка = СписокВыбораЗначений.НайтиПоИдентификатору(ИндексСтроки);
		Если Не ЗначениеЗаполнено(Строка.ВыбранноеЗначение) Тогда
			Строка.ВыбранноеЗначение = ВыбранноеЗначение;
		КонецЕсли; 
		ИндексСтроки = Неопределено;
		Возврат;
	КонецЕсли; 
	
	НС = СписокВыбораЗначений.Добавить();
	НС.ВыбранноеЗначение = ВыбранноеЗначение;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВидыРемонтовПлана(ВидПлана, СписокДоступныхПодразделений)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ВидыСкользящихПлановВидыРемонтов.ВидРемонта КАК ВидРемонта
		|ИЗ
		|	Справочник.торо_ВидыСкользящихПланов.ВидыРемонтов КАК торо_ВидыСкользящихПлановВидыРемонтов
		|ГДЕ
		|	торо_ВидыСкользящихПлановВидыРемонтов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ВидПлана);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокДоступныхПодразделений.Добавить(ВыборкаДетальныеЗаписи.ВидРемонта);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти