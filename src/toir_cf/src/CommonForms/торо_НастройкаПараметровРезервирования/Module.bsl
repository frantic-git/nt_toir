#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ГрафикиПриоритетовРезервирования.ТипДиаграммы = ТипДиаграммы.График;  
	ГрафикиПриоритетовРезервирования.ОбластьПостроения.Расположение = РасположениеОбластиПостроенияДиаграммы.УказываетсяРасположение;
	ГрафикиПриоритетовРезервирования.ОбластьПостроения.Верх = 0.02;
	ГрафикиПриоритетовРезервирования.ОбластьПостроения.Низ = 0.98;
	ГрафикиПриоритетовРезервирования.ОбластьПостроения.Лево = 0.01;
	ГрафикиПриоритетовРезервирования.ОбластьПостроения.Право = 0.9;
	
	ГрафикиПриоритетовРезервирования.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.УказываетсяРасположение;
	ГрафикиПриоритетовРезервирования.ОбластьЛегенды.Лево = 0.91;
	ГрафикиПриоритетовРезервирования.ОбластьЛегенды.Право = 1;
	ГрафикиПриоритетовРезервирования.ОбластьЛегенды.Низ = 0.92;
	ГрафикиПриоритетовРезервирования.ОбластьЛегенды.Верх = 0.08;

	КоэффициентУчетаКритичности = Константы.торо_КоэффициентУчетаКритичности.Получить();
	Если КоэффициентУчетаКритичности = 1 Тогда 
		ИспользоватьПараметрыПоУмолчанию = Истина;
		Элементы.КоэффициентУчетаКричтиностиПолосаРегулирования.Доступность = Ложь;
	КонецЕсли;
	КоэффициентУчетаКритичностиПолосаРегулирования = 2*КоэффициентУчетаКритичности - 1; 
	ОбновитьГрафики();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы Тогда
		Если Модифицированность Тогда
			Отказ = Истина;
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма);
			ПоказатьВопрос(Оповещение, НСтр("ru='Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		КонецЕсли;
	Иначе 
		Если Модифицированность Тогда
			Отказ = Истина;
			ТекстПредупреждения = НСтр("ru='При закрытии формы все данные будут утеряны. Продолжить?'");
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КоэффициентУчетаКричтиностиПолосаРегулированияПриИзменении(Элемент)
	КоэффициентУчетаКритичности = КоэффициентУчетаКритичностиПолосаРегулирования / 2 + 0.5;
	ОбновитьГрафики();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПараметрыПоУмолчаниюПриИзменении(Элемент)
	Элементы.КоэффициентУчетаКричтиностиПолосаРегулирования.Доступность = НЕ ИспользоватьПараметрыПоУмолчанию;
	Если ИспользоватьПараметрыПоУмолчанию Тогда 
		КоэффициентУчетаКритичности = 1;
		КоэффициентУчетаКритичностиПолосаРегулирования = 1;
		ОбновитьГрафики();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
	Модифицированность = Ложь;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНаСервере()
	Константы.торо_КоэффициентУчетаКритичности.Установить(КоэффициентУчетаКритичности);
КонецПроцедуры

&НаСервере
Процедура ОбновитьГрафики()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ПриоритетыОбъектовРемонта.Наименование КАК Наименование,
	               |	торо_ПриоритетыОбъектовРемонта.Ссылка КАК Ссылка,
	               |	торо_ПриоритетыОбъектовРемонта.НормированноеЗначение КАК Значение
	               |ИЗ
	               |	Справочник.торо_ПриоритетыОбъектовРемонта КАК торо_ПриоритетыОбъектовРемонта
	               |ГДЕ
	               |	НЕ торо_ПриоритетыОбъектовРемонта.ПометкаУдаления
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_КритичностьДефекта.Наименование,
	               |	торо_КритичностьДефекта.Ссылка,
	               |	торо_КритичностьДефекта.НормированноеЗначение
	               |ИЗ
	               |	Справочник.торо_КритичностьДефекта КАК торо_КритичностьДефекта
	               |ГДЕ
	               |	НЕ торо_КритичностьДефекта.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Значение УБЫВ";
	РезЗапроса = Запрос.Выполнить();
	ГрафикиПриоритетовРезервирования.Очистить();
	ГрафикиПриоритетовРезервирования.КоличествоТочек = 31;
	Если Не РезЗапроса.Пустой() Тогда
		Выборка = РезЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			ТекСерия = ГрафикиПриоритетовРезервирования.Серии.Добавить(СтрШаблон("%1 (%2)", Выборка.Наименование, ТипЗнч(Выборка.Ссылка)));
			ТекСерия.Расшифровка = Выборка.Ссылка;
			Для День = 0 По 30 Цикл
				ЗначениеФункции = Формат(10 * (1 + КоэффициентУчетаКритичности*Выборка.Значение*Выборка.Значение) / (1 + День/7), "ЧЦ=5; ЧДЦ=2");
				Точка = ГрафикиПриоритетовРезервирования.Точки[День];
				Точка.Текст = День;
				ГрафикиПриоритетовРезервирования.УстановитьЗначение(Точка, ТекСерия, ЗначениеФункции);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		СохранитьНаСервере();
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


 