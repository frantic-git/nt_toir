#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Номенклатура = Неопределено;
	Характеристика = Неопределено;
	ДатаДействия = Неопределено;
	
	Параметры.Свойство("Номенклатура", Номенклатура);
	Параметры.Свойство("Характеристика", Характеристика);
	Параметры.Свойство("ДатаДействия", ДатаДействия);
	Параметры.Свойство("ИзДокумента", ИзДокумента);
	Параметры.Свойство("ЗаказНаВП", ЗаказНаВП);
	
	Если ИзДокумента Тогда
		Элементы.ЗаказыДоЗаменыПодразделение.Видимость = Ложь;
		Элементы.ЗаказыДоЗаменыОтветственный.Видимость = Ложь;
		Элементы.ЗаказыДоЗаменыЗаказНаВП.Видимость = Ложь;
		Элементы.РезультатЗаменыЗаказНаВП.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьТаблицы(Номенклатура, Характеристика, ДатаДействия, Параметры);
	
	ИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	Если Не ИспользоватьХарактеристики Тогда
		Элементы.ТаблицаАналоговХарактеристикаНоменклатурыАналог.Видимость = Ложь;
		Элементы.РезультатЗаменыХарактеристикаНоменклатуры.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ИспользоватьХарактеристики Или Не ЗначениеЗаполнено(Характеристика) Тогда
		ШаблонЗаголовка = НСтр("ru = 'Аналоги материала ""%1""'");
		ЭтаФорма.Заголовок = СтрШаблон(ШаблонЗаголовка, Номенклатура);
	Иначе
		ШаблонЗаголовка = НСтр("ru = 'Аналоги материала ""%1, %2""'");
		ЭтаФорма.Заголовок = СтрШаблон(ШаблонЗаголовка, Номенклатура, Характеристика);
	КонецЕсли;
	
	Элементы.РезультатЗамены.ОтборСтрок = Новый ФиксированнаяСтруктура("Удален", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборПараметровЗаменыМатериалаЗаказаНаВП" Тогда
		ОбработатьЗаменуМатериала(Параметр);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Или Не Модифицированность Тогда
		Возврат;
	КонецЕсли;

	Если Модифицированность Тогда
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемПослеВопроса", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Данные не были сохранены. При закрытии формы все изменения будут утеряны. Сохранить?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПредставлениеОбластиДействияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаАналогов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(Неопределено, ТекущиеДанные.ДокументУстановкиАналогов);
	
КонецПроцедуры

&НаКлиенте
Процедура Заменить(Команда)
	
	ТекущиеДанныеАналог = Элементы.ТаблицаАналогов.ТекущиеДанные;
	Если ТекущиеДанныеАналог = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДоступноКЗамене = 0;
	Для каждого ВыделеннаяСтрока Из Элементы.ЗаказыДоЗамены.ВыделенныеСтроки Цикл
		СтрокаТЗ = ЗаказыДоЗамены.НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		Если Не СтрокаТЗ.РазрешениеПрименимо Тогда
			Продолжить;
		КонецЕсли;
		
		ДоступноКЗамене = ДоступноКЗамене + СтрокаТЗ.ДоступноКЗамене;
	КонецЦикла;
	
	Если ДоступноКЗамене = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ДоступноКЗамене", ДоступноКЗамене);
	ПараметрыФормы.Вставить("ЕдиницаИзмерения", ТекущиеДанныеАналог.ЕдиницаИзмеренияАналог);
	ПараметрыФормы.Вставить("КоличествоМатериалаИзДокумента", ТекущиеДанныеАналог.КоличествоИсходная);
	ПараметрыФормы.Вставить("КоличествоАналогаИзДокумента", ТекущиеДанныеАналог.КоличествоАналог);
	ПараметрыФормы.Вставить("НоменклатураАналог", ТекущиеДанныеАналог.НоменклатураАналог);
	
	ОткрытьФорму("Документ.ЗаказНаВнутреннееПотребление.Форма.торо_ФормаВыбораПараметровЗаменыМатериала", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	
	ТекущиеДанныеАналог = Элементы.ТаблицаАналогов.ТекущиеДанные;
	Если ТекущиеДанныеАналог = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ВыделеннаяСтрока Из Элементы.РезультатЗамены.ВыделенныеСтроки Цикл
		СтрокаТЗ = РезультатЗамены.НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		Если СтрокаТЗ.Исходная Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоискаИсходной = Новый Структура("Исходная, ЗаказНаВП", Истина, СтрокаТЗ.ЗаказНаВП);
		НайденныеСтрокиИсходной = РезультатЗамены.НайтиСтроки(СтруктураПоискаИсходной);
		НайденныеСтрокиИсходной[0].Количество = НайденныеСтрокиИсходной[0].Количество + СтрокаТЗ.ЗамененноеКоличество;
		НайденныеСтрокиИсходной[0].Стоимость = НайденныеСтрокиИсходной[0].Количество * НайденныеСтрокиИсходной[0].КоэффициентУпаковки * НайденныеСтрокиИсходной[0].Цена;
		НайденныеСтрокиИсходной[0].Изменен = Истина;
		НайденныеСтрокиИсходной[0].Удален = Ложь;
		
		СтруктураПоиска = Новый Структура("ЗаказНаВП", СтрокаТЗ.ЗаказНаВП);
		НайденныеСтроки = ЗаказыДоЗамены.НайтиСтроки(СтруктураПоиска);
		НайденныеСтроки[0].ДоступноКЗамене = НайденныеСтроки[0].ДоступноКЗамене + СтрокаТЗ.ЗамененноеКоличество;
		
		СтруктураПоискаПрименимостиРазрешений = Новый Структура("ДокументУстановкиАналогов, ЗаказНаВП", ТекущиеДанныеАналог.ДокументУстановкиАналогов, СтрокаТЗ.ЗаказНаВП);
		НайденныеСтрокиПрименимостиРазрешений = ПрименимостьРазрешенийКЗаказамНаВП.НайтиСтроки(СтруктураПоискаПрименимостиРазрешений);
		Если Не НайденныеСтрокиПрименимостиРазрешений.Количество() = 0 Тогда
			НайденныеСтрокиПрименимостиРазрешений[0].ДоступноКЗамене = НайденныеСтрокиПрименимостиРазрешений[0].ДоступноКЗамене + СтрокаТЗ.ЗамененноеКоличество;
		КонецЕсли;
		
		СтрокаТЗ.Количество = 0;
		СтрокаТЗ.ЗамененноеКоличество = 0;
		СтрокаТЗ.Изменен = Истина;
		СтрокаТЗ.Удален = Истина;
		
		Модифицированность = Истина;
	КонецЦикла;
	
	ТекущиеДанные_ЗаказыДоЗамены = Элементы.ЗаказыДоЗамены.ТекущиеДанные;
	Если ТекущиеДанные_ЗаказыДоЗамены = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.РезультатЗамены.ОтборСтрок = Новый ФиксированнаяСтруктура("ЗаказНаВП, Удален", ТекущиеДанные_ЗаказыДоЗамены.ЗаказНаВП, Ложь);
	
	ВычислитьИтогСтоимости_РезультатЗамены();
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	СтруктураВозврата = Новый Структура();
	ПодготовитьДанныеДляСохраненияЗаменыНоменклатуры(СтруктураВозврата);
	
	Оповестить("СохранениеЗаменыНоменклатурыНаАналогиЗаказовНаВП", СтруктураВозврата, ЗаказНаВП);
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаАналогов

&НаКлиенте
Процедура ТаблицаАналоговПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаАналогов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПредставлениеОбластиДействия(ТекущиеДанные);
	
	СтруктураПоискаПрименимости = Новый Структура("ДокументУстановкиАналогов, ЗаказНаВП", ТекущиеДанные.ДокументУстановкиАналогов);
	
	Для каждого СтрокаТЗ Из ЗаказыДоЗамены Цикл
		СтруктураПоискаПрименимости.ЗаказНаВП = СтрокаТЗ.ЗаказНаВП;
		НайденныеСтрокиПрименимости = ПрименимостьРазрешенийКЗаказамНаВП.НайтиСтроки(СтруктураПоискаПрименимости);
		
		СтрокаТЗ.РазрешениеПрименимо = ?(НайденныеСтрокиПрименимости.Количество() = 0, Ложь, Истина);
		Если СтрокаТЗ.РазрешениеПрименимо Тогда
			СтрокаТЗ.ДоступноКЗамене = НайденныеСтрокиПрименимости[0].ДоступноКЗамене;
		Иначе
			СтрокаТЗ.ДоступноКЗамене = 0;
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьДоступностьКомандыЗамены();
	
	Элементы.ОстаткиНаСкладах.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура, ХарактеристикаНоменклатуры", ТекущиеДанные.НоменклатураАналог, ТекущиеДанные.ХарактеристикаНоменклатурыАналог);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАналоговВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле.Имя = "ТаблицаАналоговНоменклатураАналог" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.НоменклатураАналог);
	ИначеЕсли Поле.Имя = "ТаблицаАналоговХарактеристикаНоменклатурыАналог" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ХарактеристикаНоменклатурыАналог);
	ИначеЕсли Поле.Имя = "ТаблицаАналоговЕдиницаИзмеренияАналог" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ЕдиницаИзмеренияАналог);
	ИначеЕсли Поле.Имя = "ТаблицаАналоговЕдиницаИзмеренияИсходная" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ЕдиницаИзмеренияИсходная);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстаткиНаСкладах

&НаКлиенте
Процедура ОстаткиНаСкладахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле.Имя = "ОстаткиНаСкладахСклад" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Склад);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаказыДоЗамены

&НаКлиенте
Процедура ЗаказыДоЗаменыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле.Имя = "ЗаказыДоЗаменыЕдиницаИзмерения" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ЕдиницаИзмерения);
	ИначеЕсли Поле.Имя = "ЗаказыДоЗаменыСклад" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Склад);
	ИначеЕсли Поле.Имя = "ЗаказыДоЗаменыОтветственный" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Ответственный);
	ИначеЕсли Поле.Имя = "ЗаказыДоЗаменыПодразделение" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Подразделение);
	ИначеЕсли Поле.Имя = "ЗаказыДоЗаменыЗаказНаВП" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ЗаказНаВП);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыДоЗаменыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ЗаказыДоЗамены.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.РезультатЗамены.ОтборСтрок = Новый ФиксированнаяСтруктура("ЗаказНаВП, Удален", ТекущиеДанные.ЗаказНаВП, Ложь);
	
	ОбновитьДоступностьКомандыЗамены();
	
	ВычислитьИтогСтоимости_РезультатЗамены();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРезультатЗамены

&НаКлиенте
Процедура РезультатЗаменыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле.Имя = "РезультатЗаменыНоменклатура" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Номенклатура);
	ИначеЕсли Поле.Имя = "РезультатЗаменыХарактеристикаНоменклатуры" Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ХарактеристикаНоменклатуры);
	ИначеЕсли Поле.Имя = "РезультатЗаменыЕдиницаИзмерения" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ЕдиницаИзмерения);
	ИначеЕсли Поле.Имя = "РезультатЗаменыЗаказНаВП" Тогда 
		ПоказатьЗначение(Неопределено, ТекущиеДанные.ЗаказНаВП);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицы(Номенклатура, Характеристика, ДатаДействия, Параметры)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыДоЗамены.Номенклатура КАК Номенклатура,
	               |	ЗаказыДоЗамены.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ЗаказыДоЗамены.КодСтроки КАК КодСтроки,
	               |	ЗаказыДоЗамены.ЗаказНаВП КАК ЗаказНаВП,
	               |	ЗаказыДоЗамены.Склад КАК Склад,
	               |	ЗаказыДоЗамены.Ответственный КАК Ответственный,
	               |	ЗаказыДоЗамены.Подразделение КАК Подразделение,
	               |	ЗаказыДоЗамены.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ЗаказыДоЗамены.Количество КАК Количество,
	               |	ЗаказыДоЗамены.ДоступноКЗамене КАК ДоступноКЗамене
	               |ПОМЕСТИТЬ ВТ_ЗаказыДоЗамены
	               |ИЗ
	               |	&ЗаказыДоЗамены КАК ЗаказыДоЗамены
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РезультатЗамены.Номенклатура КАК Номенклатура,
	               |	РезультатЗамены.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	РезультатЗамены.КодСтрокиНоменклатуры КАК КодСтрокиНоменклатуры,
	               |	РезультатЗамены.КодСтрокиАналога КАК КодСтрокиАналога,
	               |	РезультатЗамены.ЗаказНаВП КАК ЗаказНаВП,
	               |	РезультатЗамены.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	РезультатЗамены.ЗамененноеКоличество КАК ЗамененноеКоличество,
	               |	РезультатЗамены.Количество КАК Количество,
	               |	РезультатЗамены.Исходная КАК Исходная,
	               |	РезультатЗамены.НоменклатураИсходная КАК НоменклатураИсходная,
	               |	РезультатЗамены.ХарактеристикаНоменклатурыИсходная КАК ХарактеристикаНоменклатурыИсходная
	               |ПОМЕСТИТЬ ВТ_РезультатЗамены
	               |ИЗ
	               |	&РезультатЗамены КАК РезультатЗамены
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыДоЗамены.Номенклатура КАК Номенклатура,
	               |	ВТ_ЗаказыДоЗамены.ХарактеристикаНоменклатуры КАК Характеристика,
	               |	ВТ_ЗаказыДоЗамены.ЗаказНаВП КАК ЗаказНаВП,
	               |	ЗаказНаВнутреннееПотребление.ДатаОтгрузки КАК ДатаДействия
	               |ПОМЕСТИТЬ ВТ_ТаблицаЗаказовНаВП
	               |ИЗ
	               |	ВТ_ЗаказыДоЗамены КАК ВТ_ЗаказыДоЗамены
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	               |		ПО ВТ_ЗаказыДоЗамены.ЗаказНаВП = ЗаказНаВнутреннееПотребление.Ссылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ЗаказНаВП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаЗаказовНаВП.Номенклатура КАК Номенклатура,
	               |	ВТ_ТаблицаЗаказовНаВП.Характеристика КАК Характеристика,
	               |	ВТ_ТаблицаЗаказовНаВП.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВЫБОР
	               |		КОГДА торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта ССЫЛКА Справочник.торо_ОбъектыРемонта
	               |			ТОГДА торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта.Направление
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	               |	КОНЕЦ КАК Направление,
	               |	ВЫБОР
	               |		КОГДА торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта ССЫЛКА Справочник.торо_ОбъектыРемонта
	               |			ТОГДА торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта.Организация
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |	КОНЕЦ КАК Организация,
	               |	ВТ_ТаблицаЗаказовНаВП.ДатаДействия КАК ДатаДействия,
	               |	торо_ОбщиеДанныеПоРемонтам.IDРемонта КАК IDРемонта,
	               |	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_ОбщиеДанныеПоРемонтам.ВидРемонта КАК ВидРемонта
	               |ПОМЕСТИТЬ ВТ_ЗаказыПоРемонтам
	               |ИЗ
	               |	ВТ_ТаблицаЗаказовНаВП КАК ВТ_ТаблицаЗаказовНаВП
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	               |			ПО торо_ИнтеграцияДокументов.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	               |		ПО (ВТ_ТаблицаЗаказовНаВП.ЗаказНаВП = (ВЫРАЗИТЬ(торо_ИнтеграцияДокументов.ДокументЕРП КАК Документ.ЗаказНаВнутреннееПотребление)))
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта,
				   |	ЗаказНаВП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыПоРемонтам.IDРемонта КАК IDРемонта,
	               |	торо_ПлановыеИсполнителиРемонтов.Исполнитель КАК Исполнитель
	               |ПОМЕСТИТЬ ВТ_ИсполнителиПоРемонтам
	               |ИЗ
	               |	ВТ_ЗаказыПоРемонтам КАК ВТ_ЗаказыПоРемонтам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеИсполнителиРемонтов КАК торо_ПлановыеИсполнителиРемонтов
	               |		ПО ВТ_ЗаказыПоРемонтам.IDРемонта = торо_ПлановыеИсполнителиРемонтов.IDРемонта
	               |ГДЕ
	               |	торо_ПлановыеИсполнителиРемонтов.Исполнитель ССЫЛКА Справочник.СтруктураПредприятия
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта,
				   |	Исполнитель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаЗаказовНаВП.Номенклатура КАК Номенклатура,
	               |	ВТ_ТаблицаЗаказовНаВП.Характеристика КАК Характеристика,
	               |	ВТ_ТаблицаЗаказовНаВП.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_ТаблицаЗаказовНаВП.ДатаДействия КАК ДатаДействия,
	               |	"""" КАК IDРемонта,
	               |	НЕОПРЕДЕЛЕНО КАК ОбъектРемонта,
	               |	НЕОПРЕДЕЛЕНО КАК ВидРемонта,
	               |	НЕОПРЕДЕЛЕНО КАК Направление,
	               |	НЕОПРЕДЕЛЕНО КАК Организация
	               |ПОМЕСТИТЬ ВТ_ЗаказыНаВП
	               |ИЗ
	               |	ВТ_ТаблицаЗаказовНаВП КАК ВТ_ТаблицаЗаказовНаВП
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыПоРемонтам КАК ВТ_ЗаказыПоРемонтам
	               |		ПО ВТ_ТаблицаЗаказовНаВП.ЗаказНаВП = ВТ_ЗаказыПоРемонтам.ЗаказНаВП
	               |ГДЕ
	               |	ВТ_ЗаказыПоРемонтам.ЗаказНаВП ЕСТЬ NULL
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыПоРемонтам.Номенклатура,
	               |	ВТ_ЗаказыПоРемонтам.Характеристика,
	               |	ВТ_ЗаказыПоРемонтам.ЗаказНаВП,
	               |	ВТ_ЗаказыПоРемонтам.ДатаДействия,
	               |	ВТ_ЗаказыПоРемонтам.IDРемонта,
	               |	ВТ_ЗаказыПоРемонтам.ОбъектРемонта,
	               |	ВТ_ЗаказыПоРемонтам.ВидРемонта,
	               |	ВТ_ЗаказыПоРемонтам.Направление,
	               |	ВТ_ЗаказыПоРемонтам.Организация
	               |ИЗ
	               |	ВТ_ЗаказыПоРемонтам КАК ВТ_ЗаказыПоРемонтам
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
				   |	Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_АналогиНоменклатурыДляРемонтов.Период КАК Период,
	               |	торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения КАК ПериодЗавершения,
	               |	торо_АналогиНоменклатурыДляРемонтов.Материал КАК Материал,
	               |	торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала КАК ХарактеристикаМатериала,
	               |	торо_АналогиНоменклатурыДляРемонтов.ТехКарта КАК ТехКарта,
	               |	торо_АналогиНоменклатурыДляРемонтов.Подразделение КАК Подразделение,
	               |	торо_АналогиНоменклатурыДляРемонтов.Организация КАК Организация,
	               |	торо_АналогиНоменклатурыДляРемонтов.ВидРемонта КАК ВидРемонта,
	               |	торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_АналогиНоменклатурыДляРемонтов.НаправлениеОбъектаРемонта КАК НаправлениеОбъектаРемонта,
	               |	торо_АналогиНоменклатурыДляРемонтов.Аналог КАК Аналог,
	               |	торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаАналога КАК ХарактеристикаАналога,
	               |	торо_АналогиНоменклатурыДляРемонтов.УпаковкаМатериала КАК УпаковкаМатериала,
	               |	торо_АналогиНоменклатурыДляРемонтов.КоличествоМатериала КАК КоличествоМатериала,
	               |	торо_АналогиНоменклатурыДляРемонтов.КоличествоУпаковокМатериала КАК КоличествоУпаковокМатериала,
	               |	торо_АналогиНоменклатурыДляРемонтов.УпаковкаАналога КАК УпаковкаАналога,
	               |	торо_АналогиНоменклатурыДляРемонтов.КоличествоАналога КАК КоличествоАналога,
	               |	торо_АналогиНоменклатурыДляРемонтов.КоличествоУпаковокАналога КАК КоличествоУпаковокАналога,
	               |	торо_АналогиНоменклатурыДляРемонтов.Регистратор.УказаниеПоПрименению КАК УказаниеПоПрименению,
	               |	торо_АналогиНоменклатурыДляРемонтов.Регистратор КАК ДокументУстановкиАналогов,
	               |	торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Значение КАК Значение,
	               |	ВТ_ЗаказыНаВП.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_ЗаказыНаВП.IDРемонта КАК IDРемонта
	               |ПОМЕСТИТЬ ВТ_ТаблицаАналогов
	               |ИЗ
	               |	РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаказыНаВП КАК ВТ_ЗаказыНаВП
	               |		ПО торо_АналогиНоменклатурыДляРемонтов.Материал = ВТ_ЗаказыНаВП.Номенклатура
	               |			И торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала = ВТ_ЗаказыНаВП.Характеристика,
	               |	Константа.торо_ТипЦеныДляРасчетаСебестоимостиРемонта КАК торо_ТипЦеныДляРасчетаСебестоимостиРемонта
	               |ГДЕ
	               |	торо_АналогиНоменклатурыДляРемонтов.Период <= ВТ_ЗаказыНаВП.ДатаДействия
	               |	И ВЫБОР
	               |			КОГДА торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВТ_ЗаказыНаВП.ДатаДействия <= торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения
	               |		КОНЕЦ
	               |	И (торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	               |			ИЛИ торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка)
	               |			ИЛИ торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = НЕОПРЕДЕЛЕНО
	               |			ИЛИ торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = ВТ_ЗаказыНаВП.ОбъектРемонта)
	               |	И (торо_АналогиНоменклатурыДляРемонтов.НаправлениеОбъектаРемонта = ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	               |			ИЛИ торо_АналогиНоменклатурыДляРемонтов.НаправлениеОбъектаРемонта = ВТ_ЗаказыНаВП.Направление)
	               |	И (торо_АналогиНоменклатурыДляРемонтов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |			ИЛИ торо_АналогиНоменклатурыДляРемонтов.Организация = ВТ_ЗаказыНаВП.Организация)
	               |	И (торо_АналогиНоменклатурыДляРемонтов.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |			ИЛИ (ВТ_ЗаказыНаВП.IDРемонта, торо_АналогиНоменклатурыДляРемонтов.Подразделение) В
	               |				(ВЫБРАТЬ
	               |					ВТ_ИсполнителиПоРемонтам.IDРемонта,
	               |					ВТ_ИсполнителиПоРемонтам.Исполнитель
	               |				ИЗ
	               |					ВТ_ИсполнителиПоРемонтам КАК ВТ_ИсполнителиПоРемонтам))
	               |	И (торо_АналогиНоменклатурыДляРемонтов.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	               |			ИЛИ торо_АналогиНоменклатурыДляРемонтов.ВидРемонта = ВТ_ЗаказыНаВП.ВидРемонта)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Аналог,
	               |	ХарактеристикаАналога
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	               |	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
	               |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	               |ПОМЕСТИТЬ ВТ_Цены
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |			,
	               |			(Номенклатура, ВидЦены) В
	               |				(ВЫБРАТЬ
	               |					ВТ_ТаблицаАналогов.Аналог,
				   |					&ТипЦены
	               |				ИЗ
	               |					ВТ_ТаблицаАналогов КАК ВТ_ТаблицаАналогов
	               |			
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |			
	               |				ВЫБРАТЬ
	               |					ВТ_РезультатЗамены.Номенклатура,
				   |					&ТипЦены
	               |				ИЗ
	               |					ВТ_РезультатЗамены КАК ВТ_РезультатЗамены)) КАК ЦеныНоменклатурыСрезПоследних
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Количество,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК ХарактеристикаНоменклатуры
	               |ПОМЕСТИТЬ ВТ_ОстаткиПоСкладам
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			(Номенклатура, Характеристика) В
	               |				(ВЫБРАТЬ
	               |					ВТ_ТаблицаАналогов.Аналог,
	               |					ВТ_ТаблицаАналогов.ХарактеристикаАналога
	               |				ИЗ
	               |					ВТ_ТаблицаАналогов КАК ВТ_ТаблицаАналогов)) КАК ТоварыНаСкладахОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_ТаблицаАналогов.Период КАК ДействуетС,
	               |	ВТ_ТаблицаАналогов.ПериодЗавершения КАК ДействуетПо,
	               |	ВТ_ТаблицаАналогов.ДокументУстановкиАналогов КАК ДокументУстановкиАналогов,
	               |	ВТ_ТаблицаАналогов.ТехКарта КАК ТехКарта,
	               |	ВТ_ТаблицаАналогов.Подразделение КАК Подразделение,
	               |	ВТ_ТаблицаАналогов.Организация КАК Организация,
	               |	ВТ_ТаблицаАналогов.ВидРемонта КАК ВидРемонта,
	               |	ВТ_ТаблицаАналогов.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_ТаблицаАналогов.НаправлениеОбъектаРемонта КАК НаправлениеОбъектаРемонта,
	               |	ВТ_ТаблицаАналогов.Аналог КАК НоменклатураАналог,
				   |	ВТ_ТаблицаАналогов.Материал КАК НоменклатураМатериал,
	               |	ВТ_ТаблицаАналогов.ХарактеристикаАналога КАК ХарактеристикаНоменклатурыАналог,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТаблицаАналогов.УпаковкаМатериала = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ВТ_ТаблицаАналогов.Материал.ЕдиницаИзмерения
	               |		ИНАЧЕ ВТ_ТаблицаАналогов.УпаковкаМатериала
	               |	КОНЕЦ КАК ЕдиницаИзмеренияИсходная,
	               |	ВТ_ТаблицаАналогов.КоличествоУпаковокМатериала КАК КоличествоИсходная,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТаблицаАналогов.УпаковкаАналога = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ВТ_ТаблицаАналогов.Аналог.ЕдиницаИзмерения
	               |		ИНАЧЕ ВТ_ТаблицаАналогов.УпаковкаАналога
	               |	КОНЕЦ КАК ЕдиницаИзмеренияАналог,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТаблицаАналогов.Аналог.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ХарактеристикиИспользуются,
	               |	ВТ_ТаблицаАналогов.КоличествоУпаковокАналога КАК КоличествоАналог,
	               |	ВЫРАЗИТЬ(ВТ_ТаблицаАналогов.УказаниеПоПрименению КАК СТРОКА(500)) КАК УказаниеПоПрименению,
	               |	ВТ_ТаблицаАналогов.Значение КАК Значение,
	               |	ВЫБОР
	               |		КОГДА ВТ_ОстаткиПоСкладам.Номенклатура ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьОстатки,
	               |	ЕСТЬNULL(ВТ_Цены.Цена, 0) КАК Цена
	               |ИЗ
	               |	ВТ_ТаблицаАналогов КАК ВТ_ТаблицаАналогов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	               |		ПО ВТ_ТаблицаАналогов.Аналог = ВТ_Цены.Номенклатура
	               |			И ВТ_ТаблицаАналогов.ХарактеристикаАналога = ВТ_Цены.Характеристика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиПоСкладам КАК ВТ_ОстаткиПоСкладам
	               |		ПО ВТ_ТаблицаАналогов.Аналог = ВТ_ОстаткиПоСкладам.Номенклатура
	               |			И ВТ_ТаблицаАналогов.ХарактеристикаАналога = ВТ_ОстаткиПоСкладам.ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОстаткиПоСкладам.Номенклатура КАК Номенклатура,
	               |	ВТ_ОстаткиПоСкладам.Склад КАК Склад,
	               |	ВТ_ОстаткиПоСкладам.Количество КАК Количество,
	               |	ВТ_ОстаткиПоСкладам.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |ИЗ
	               |	ВТ_ОстаткиПоСкладам КАК ВТ_ОстаткиПоСкладам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаказыНаВП.IDРемонта) КАК КоличествоРемонтов,
	               |	ВТ_ЗаказыНаВП.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_ЗаказыНаВП.Номенклатура КАК Номенклатура,
	               |	ВТ_ЗаказыНаВП.Характеристика КАК ХарактеристикаНоменклатуры
	               |ПОМЕСТИТЬ ВТ_ЗаказыСНесколькимиРемонтами
	               |ИЗ
	               |	ВТ_ЗаказыНаВП КАК ВТ_ЗаказыНаВП
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ЗаказыНаВП.ЗаказНаВП,
	               |	ВТ_ЗаказыНаВП.Номенклатура,
	               |	ВТ_ЗаказыНаВП.Характеристика
	               |
	               |ИМЕЮЩИЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаказыНаВП.IDРемонта) >= 2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыНаВП.IDРемонта КАК IDРемонта,
	               |	ВТ_ЗаказыНаВП.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_ЗаказыНаВП.Номенклатура КАК Номенклатура,
	               |	ВТ_ЗаказыНаВП.Характеристика КАК ХарактеристикаНоменклатуры,
	               |	торо_ОбщиеДанныеПоРемонтам.ЕстьЗаявка КАК ЕстьЗаявка
	               |ПОМЕСТИТЬ ВТ_РемонтыДляПлановойПотребности
	               |ИЗ
	               |	ВТ_ЗаказыНаВП КАК ВТ_ЗаказыНаВП
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаказыСНесколькимиРемонтами КАК ВТ_ЗаказыСНесколькимиРемонтами
	               |		ПО ВТ_ЗаказыНаВП.ЗаказНаВП = ВТ_ЗаказыСНесколькимиРемонтами.ЗаказНаВП
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	               |		ПО ВТ_ЗаказыНаВП.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	               |
	               |ИНДЕКСИРОВАТЬ ПО
				   |	IDРемонта,
	               |	Номенклатура,
	               |	ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID КАК IDРемонта,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура КАК Номенклатура,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СУММА(торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Количество) КАК ДоступноКЗамене
	               |ПОМЕСТИТЬ ВТ_ПлановыеЗатратыРемонтов
	               |ИЗ
	               |	РегистрНакопления.торо_ПлановыеМатериальныеЗатратыРемонтныхРабот КАК торо_ПлановыеМатериальныеЗатратыРемонтныхРабот
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РемонтыДляПлановойПотребности КАК ВТ_РемонтыДляПлановойПотребности
	               |		ПО (ВТ_РемонтыДляПлановойПотребности.IDРемонта = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID)
	               |			И (ВТ_РемонтыДляПлановойПотребности.Номенклатура = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура)
	               |			И (ВТ_РемонтыДляПлановойПотребности.ХарактеристикаНоменклатуры = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_ПроектныеЗатратыНаРемонты.IDРемонта,
	               |	торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.Номенклатура,
	               |	торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.ХарактеристикаНоменклатуры,
	               |	СУММА(торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.Количество)
	               |ИЗ
	               |	ВТ_РемонтыДляПлановойПотребности КАК ВТ_РемонтыДляПлановойПотребности
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты.МатериальныеЗатраты КАК торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
	               |			ПО торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.Ссылка = торо_ПроектныеЗатратыНаРемонты.Ссылка
	               |		ПО (ВТ_РемонтыДляПлановойПотребности.IDРемонта = торо_ПроектныеЗатратыНаРемонты.IDРемонта)
	               |			И ВТ_РемонтыДляПлановойПотребности.Номенклатура = торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.Номенклатура
	               |			И ВТ_РемонтыДляПлановойПотребности.ХарактеристикаНоменклатуры = торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.ХарактеристикаНоменклатуры
	               |ГДЕ
	               |	ВТ_РемонтыДляПлановойПотребности.ЕстьЗаявка = ЛОЖЬ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_ПроектныеЗатратыНаРемонты.IDРемонта,
	               |	торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.Номенклатура,
	               |	торо_ПроектныеЗатратыНаРемонтыМатериальныеЗатраты.ХарактеристикаНоменклатуры
	               |
	               |ИНДЕКСИРОВАТЬ ПО
				   |	IDРемонта,
	               |	Номенклатура,
	               |	ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЫБОР
	               |		КОГДА ВТ_ПлановыеЗатратыРемонтов.ДоступноКЗамене ЕСТЬ NULL
	               |			ТОГДА ВТ_ЗаказыДоЗамены.ДоступноКЗамене
	               |		КОГДА ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ВТ_ПлановыеЗатратыРемонтов.ДоступноКЗамене
	               |		ИНАЧЕ ВТ_ПлановыеЗатратыРемонтов.ДоступноКЗамене * ВЫРАЗИТЬ(ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения КАК Справочник.УпаковкиНоменклатуры).Коэффициент
	               |	КОНЕЦ КАК ДоступноКЗаменеПоРемонту,
	               |	ВТ_ЗаказыДоЗамены.Количество КАК Количество,
	               |	СУММА(ЕСТЬNULL(ВТ_РезультатЗамены.ЗамененноеКоличество, 0)) КАК ЗамененноеКоличество,
	               |	ВТ_ТаблицаАналогов.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_ТаблицаАналогов.ДокументУстановкиАналогов КАК ДокументУстановкиАналогов
	               |ИЗ
	               |	ВТ_ТаблицаАналогов КАК ВТ_ТаблицаАналогов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаказыДоЗамены КАК ВТ_ЗаказыДоЗамены
	               |		ПО ВТ_ТаблицаАналогов.ЗаказНаВП = ВТ_ЗаказыДоЗамены.ЗаказНаВП
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеЗатратыРемонтов КАК ВТ_ПлановыеЗатратыРемонтов
	               |		ПО ВТ_ТаблицаАналогов.IDРемонта = ВТ_ПлановыеЗатратыРемонтов.IDРемонта
	               |			И ВТ_ТаблицаАналогов.Материал = ВТ_ПлановыеЗатратыРемонтов.Номенклатура
	               |			И ВТ_ТаблицаАналогов.ХарактеристикаМатериала = ВТ_ПлановыеЗатратыРемонтов.ХарактеристикаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РезультатЗамены КАК ВТ_РезультатЗамены
	               |		ПО (ВТ_ЗаказыДоЗамены.ЗаказНаВП = ВТ_РезультатЗамены.ЗаказНаВП)
	               |			И (ВТ_ЗаказыДоЗамены.ЗаказНаВП = ВТ_РезультатЗамены.ЗаказНаВП)
	               |			И (НЕ ВТ_РезультатЗамены.Исходная)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА ВТ_ПлановыеЗатратыРемонтов.ДоступноКЗамене ЕСТЬ NULL
	               |			ТОГДА ВТ_ЗаказыДоЗамены.ДоступноКЗамене
	               |		КОГДА ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ВТ_ПлановыеЗатратыРемонтов.ДоступноКЗамене
	               |		ИНАЧЕ ВТ_ПлановыеЗатратыРемонтов.ДоступноКЗамене * ВЫРАЗИТЬ(ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения КАК Справочник.УпаковкиНоменклатуры).Коэффициент
	               |	КОНЕЦ,
	               |	ВТ_ЗаказыДоЗамены.Количество,
	               |	ВТ_РезультатЗамены.ЗамененноеКоличество,
	               |	ВТ_ТаблицаАналогов.ЗаказНаВП,
	               |	ВТ_ТаблицаАналогов.ДокументУстановкиАналогов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыДоЗамены.Номенклатура КАК Номенклатура,
	               |	ВТ_ЗаказыДоЗамены.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ВТ_ЗаказыДоЗамены.КодСтроки КАК КодСтроки,
	               |	ВТ_ЗаказыДоЗамены.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_ЗаказыДоЗамены.Склад КАК Склад,
	               |	ВТ_ЗаказыДоЗамены.Ответственный КАК Ответственный,
	               |	ВТ_ЗаказыДоЗамены.Подразделение КАК Подразделение,
	               |	ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА ВТ_Цены.Цена ЕСТЬ NULL
	               |			ТОГДА 0
	               |		КОГДА ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ВТ_ЗаказыДоЗамены.Количество * ВТ_Цены.Цена
	               |		ИНАЧЕ ВТ_ЗаказыДоЗамены.Количество * ВТ_Цены.Цена * ВЫРАЗИТЬ(ВТ_ЗаказыДоЗамены.ЕдиницаИзмерения КАК Справочник.УпаковкиНоменклатуры).Коэффициент
	               |	КОНЕЦ КАК Стоимость,
	               |	ВТ_ЗаказыДоЗамены.Количество КАК Количество,
	               |	ВТ_ЗаказыДоЗамены.ДоступноКЗамене КАК ДоступноКЗамене
	               |ИЗ
	               |	ВТ_ЗаказыДоЗамены КАК ВТ_ЗаказыДоЗамены
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	               |		ПО ВТ_ЗаказыДоЗамены.Номенклатура = ВТ_Цены.Номенклатура
	               |			И ВТ_ЗаказыДоЗамены.ХарактеристикаНоменклатуры = ВТ_Цены.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РезультатЗамены.Номенклатура КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ВЫРАЗИТЬ(ВТ_РезультатЗамены.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ХарактеристикиИспользуются,
	               |	ВТ_РезультатЗамены.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ВТ_РезультатЗамены.КодСтрокиНоменклатуры КАК КодСтрокиНоменклатуры,
	               |	ВТ_РезультатЗамены.КодСтрокиАналога КАК КодСтрокиАналога,
	               |	ВТ_РезультатЗамены.ЗаказНаВП КАК ЗаказНаВП,
	               |	ВТ_РезультатЗамены.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА ВТ_Цены.Цена ЕСТЬ NULL
	               |			ТОГДА 0
	               |		КОГДА ВТ_РезультатЗамены.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ВТ_РезультатЗамены.Количество * ВТ_Цены.Цена
	               |		ИНАЧЕ ВТ_РезультатЗамены.Количество * ВТ_Цены.Цена * ВЫРАЗИТЬ(ВТ_РезультатЗамены.ЕдиницаИзмерения КАК Справочник.УпаковкиНоменклатуры).Коэффициент
	               |	КОНЕЦ КАК Стоимость,
				   |	ВЫБОР
	               |		КОГДА ВТ_РезультатЗамены.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА 1
	               |		ИНАЧЕ ВЫРАЗИТЬ(ВТ_РезультатЗамены.ЕдиницаИзмерения КАК Справочник.УпаковкиНоменклатуры).Коэффициент
	               |	КОНЕЦ КАК КоэффициентУпаковки,
	               |	ВТ_Цены.Цена КАК Цена,
	               |	ВТ_РезультатЗамены.ЗамененноеКоличество КАК ЗамененноеКоличество,
	               |	ВТ_РезультатЗамены.Количество КАК Количество,
	               |	ВТ_РезультатЗамены.Исходная КАК Исходная,
	               |	ВТ_РезультатЗамены.НоменклатураИсходная КАК НоменклатураИсходная,
	               |	ВТ_РезультатЗамены.ХарактеристикаНоменклатурыИсходная КАК ХарактеристикаНоменклатурыИсходная
				   |ИЗ
	               |	ВТ_РезультатЗамены КАК ВТ_РезультатЗамены
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	               |		ПО ВТ_РезультатЗамены.Номенклатура = ВТ_Цены.Номенклатура
	               |			И ВТ_РезультатЗамены.ХарактеристикаНоменклатуры = ВТ_Цены.Характеристика
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Исходная УБЫВ";
				   
	Если Параметры.Свойство("АдресВХ_ЗаказыДоЗамены") Тогда
		ТаблицаЗаказыДоЗамены = ПолучитьИзВременногоХранилища(Параметры.АдресВХ_ЗаказыДоЗамены);
		Запрос.УстановитьПараметр("ЗаказыДоЗамены", ТаблицаЗаказыДоЗамены);
	КонецЕсли;
	
	Если Параметры.Свойство("АдресВХ_РезультатЗамены") Тогда
		ТаблицаРезультатЗамены = ПолучитьИзВременногоХранилища(Параметры.АдресВХ_РезультатЗамены);
		Запрос.УстановитьПараметр("РезультатЗамены", ТаблицаРезультатЗамены);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипЦены", Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаАналогов = РезультатЗапроса[9].Выбрать();
	Пока ВыборкаАналогов.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаАналогов.Добавить(), ВыборкаАналогов);
	КонецЦикла;
	
	ВыборкаОстатков = РезультатЗапроса[10].Выбрать();
	Пока ВыборкаОстатков.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОстаткиНаСкладах.Добавить(), ВыборкаОстатков);
	КонецЦикла;
	
	ВыборкаПрименимостиРаспоряжений = РезультатЗапроса[14].Выбрать();
	Пока ВыборкаПрименимостиРаспоряжений.Следующий() Цикл
		НоваяСтрокаТЗ = ПрименимостьРазрешенийКЗаказамНаВП.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЗ, ВыборкаПрименимостиРаспоряжений);
		
		НоваяСтрокаТЗ.ДоступноКЗамене = Мин(ВыборкаПрименимостиРаспоряжений.ДоступноКЗаменеПоРемонту, ВыборкаПрименимостиРаспоряжений.Количество) - ВыборкаПрименимостиРаспоряжений.ЗамененноеКоличество;
	КонецЦикла;
	
	ВыборкаЗаказовДоЗамены = РезультатЗапроса[15].Выбрать();
	Пока ВыборкаЗаказовДоЗамены.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗаказыДоЗамены.Добавить(), ВыборкаЗаказовДоЗамены);
	КонецЦикла;
	
	ВыборкаРезультатовЗамены = РезультатЗапроса[16].Выбрать();
	Пока ВыборкаРезультатовЗамены.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(РезультатЗамены.Добавить(), ВыборкаРезультатовЗамены);
	КонецЦикла;
	
	ЗаказыДоЗамены_СтоимостьИтого = ЗаказыДоЗамены.Итог("Стоимость");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеОбластиДействия(ТекущиеДанные)
	
	ПредставлениеОбластиДействия = "";
	ПредставлениеОбластиДействияРем = "";
	ПредставлениеОбластиДействияОР = "";
	
		
	Если ЗначениеЗаполнено(ТекущиеДанные.ДействуетПо) Тогда
		ШаблонПредставления = НСтр("ru = 'С %1 по %2'") + " ";
		ТекстПредставления = СтрШаблон(ШаблонПредставления,
		Формат(ТекущиеДанные.ДействуетС, "ДЛФ=D"),
		Формат(ТекущиеДанные.ДействуетПо, "ДЛФ=D"));
	Иначе
		ШаблонПредставления = НСтр("ru = 'С %1'") + " ";
		ТекстПредставления = СтрШаблон(ШаблонПредставления,
		Формат(ТекущиеДанные.ДействуетС, "ДЛФ=D"));
	КонецЕсли;
	
	// по ремонту
	Если ЗначениеЗаполнено(ТекущиеДанные.ВидРемонта)
		Или ЗначениеЗаполнено(ТекущиеДанные.Подразделение) Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ВидРемонта) Тогда
			ШаблонПредставления = НСтр("ru = 'в рамках ремонтов вида ""%1""'") + " ";
			ПредставлениеОбластиДействияРем = ПредставлениеОбластиДействияРем + СтрШаблон(ШаблонПредставления, ТекущиеДанные.ВидРемонта);
		Иначе
			ПредставлениеОбластиДействияРем = ПредставлениеОбластиДействияРем + " в рамках ремонтов";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Подразделение) Тогда
			ШаблонПредставления = НСтр("ru = ' выполняемых подразделением ""%1""'") + " ";
			ПредставлениеОбластиДействияРем = ПредставлениеОбластиДействияРем + СтрШаблон(ШаблонПредставления, ТекущиеДанные.Подразделение);
		КонецЕсли;
	КонецЕсли;	
	
	
	// по ОР
	Если ЗначениеЗаполнено(ТекущиеДанные.ОбъектРемонта) Тогда
		ШаблонПредставления = НСтр("ru = 'для объекта ремонта ""%1""'") + " ";
		ПредставлениеОбластиДействияОР = СтрШаблон(ШаблонПредставления, ТекущиеДанные.ОбъектРемонта);
	ИначеЕсли 
		ЗначениеЗаполнено(ТекущиеДанные.Организация)
		Или ЗначениеЗаполнено(ТекущиеДанные.НаправлениеОбъектаРемонта) Тогда
		
		ПредставлениеОбластиДействияОР = "для объектов ремонта ";
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Организация) Тогда
			ШаблонПредставления = НСтр("ru = 'принадлежащих ""%1"" '") + " ";
			ПредставлениеОбластиДействияОР = ПредставлениеОбластиДействияОР + СтрШаблон(ШаблонПредставления, ТекущиеДанные.Организация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.НаправлениеОбъектаРемонта) Тогда
			ШаблонПредставления = НСтр("ru = '(направление ""%1"") '") + " ";
			ПредставлениеОбластиДействияОР = ПредставлениеОбластиДействияОР + СтрШаблон(ШаблонПредставления, ТекущиеДанные.НаправлениеОбъектаРемонта);
		КонецЕсли;
	КонецЕсли;

	ПредставлениеОбластиДействия = ПредставлениеОбластиДействияОР + ?(СтрДлина(ПредставлениеОбластиДействияРем) > 0,Символы.ПС,"") + ПредставлениеОбластиДействияРем;
	
	Если СтрДлина(ПредставлениеОбластиДействия) > 0 Тогда
		ПредставлениеОбластиДействия = Лев(ПредставлениеОбластиДействия, СтрДлина(ПредставлениеОбластиДействия) - 1);
	Иначе
		ПредставлениеОбластиДействия = ПредставлениеОбластиДействия + НСтр("ru = 'по предприятию в целом'");
	КонецЕсли;
	
	ПредставлениеОбластиДействия = ТекстПредставления + ПредставлениеОбластиДействия;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаменуМатериала(СтруктураПараметров)
	
	ТекущиеДанные_ЗаказыДоЗамены = Элементы.ЗаказыДоЗамены.ТекущиеДанные;
	Если ТекущиеДанные_ЗаказыДоЗамены = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеАналог = Элементы.ТаблицаАналогов.ТекущиеДанные;
	Если ТекущиеДанныеАналог = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Для каждого ВыделеннаяСтрока Из Элементы.ЗаказыДоЗамены.ВыделенныеСтроки Цикл
		СтрокаТЗ = ЗаказыДоЗамены.НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		ЗаменитьДляТекущейСтроки = ?(СтрокаТЗ.ДоступноКЗамене > СтруктураПараметров.Заменить, СтруктураПараметров.Заменить, СтрокаТЗ.ДоступноКЗамене);
		
		СтрокаТЗ.ДоступноКЗамене = СтрокаТЗ.ДоступноКЗамене - ЗаменитьДляТекущейСтроки;
		
		СтруктураПоиска = Новый Структура("Исходная, ЗаказНаВП", Истина, СтрокаТЗ.ЗаказНаВП);
		НайденныеСтроки = РезультатЗамены.НайтиСтроки(СтруктураПоиска);
		НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество - ЗаменитьДляТекущейСтроки;
		НайденныеСтроки[0].Стоимость = НайденныеСтроки[0].Количество * НайденныеСтроки[0].КоэффициентУпаковки * НайденныеСтроки[0].Цена;
		НайденныеСтроки[0].Изменен = Истина;
		НайденныеСтроки[0].Удален = ?(НайденныеСтроки[0].Количество = 0, Истина, Ложь);

		СтруктураПоиска = Новый Структура("Исходная, ЗаказНаВП, Номенклатура, ХарактеристикаНоменклатуры, ЕдиницаИзмерения", Ложь, СтрокаТЗ.ЗаказНаВП, ТекущиеДанныеАналог.НоменклатураАналог, ТекущиеДанныеАналог.ХарактеристикаНоменклатурыАналог, СтруктураПараметров.ЕдиницаИзмерения);
		НайденныеСтроки = РезультатЗамены.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество + СтруктураПараметров.КоличествоАналога;
			НайденныеСтроки[0].ЕдиницаИзмерения = СтруктураПараметров.ЕдиницаИзмерения;
			
			Если ЗначениеЗаполнено(НайденныеСтроки[0].ЕдиницаИзмерения) Тогда
				НайденныеСтроки[0].КоэффициентУпаковки = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(НайденныеСтроки[0].ЕдиницаИзмерения, "Коэффициент");
			Иначе
				НайденныеСтроки[0].КоэффициентУпаковки = 1;
			КонецЕсли;
			
			НайденныеСтроки[0].Стоимость = НайденныеСтроки[0].Количество * НайденныеСтроки[0].КоэффициентУпаковки * НайденныеСтроки[0].Цена;
			НайденныеСтроки[0].ЗамененноеКоличество = НайденныеСтроки[0].ЗамененноеКоличество + ЗаменитьДляТекущейСтроки;
			НайденныеСтроки[0].Изменен = Истина;
			НайденныеСтроки[0].Удален = Ложь;
		Иначе
			НоваяСтрокаТЗ = РезультатЗамены.Добавить();
			НоваяСтрокаТЗ.Количество = СтруктураПараметров.КоличествоАналога;
			НоваяСтрокаТЗ.ЕдиницаИзмерения = СтруктураПараметров.ЕдиницаИзмерения;
			
			Если ЗначениеЗаполнено(НоваяСтрокаТЗ.ЕдиницаИзмерения) Тогда
				НоваяСтрокаТЗ.КоэффициентУпаковки = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(НоваяСтрокаТЗ.ЕдиницаИзмерения, "Коэффициент");
			Иначе
				НоваяСтрокаТЗ.КоэффициентУпаковки = 1;
			КонецЕсли;
			
			НоваяСтрокаТЗ.Цена = ТекущиеДанныеАналог.Цена;
			НоваяСтрокаТЗ.Стоимость = НоваяСтрокаТЗ.Количество * НоваяСтрокаТЗ.КоэффициентУпаковки * НоваяСтрокаТЗ.Цена;
			НоваяСтрокаТЗ.Номенклатура = ТекущиеДанныеАналог.НоменклатураАналог;
			НоваяСтрокаТЗ.ХарактеристикаНоменклатуры = ТекущиеДанныеАналог.ХарактеристикаНоменклатурыАналог;
			НоваяСтрокаТЗ.ЗаказНаВП = СтрокаТЗ.ЗаказНаВП;
			НоваяСтрокаТЗ.КодСтрокиНоменклатуры = СтрокаТЗ.КодСтроки;
			НоваяСтрокаТЗ.ЗамененноеКоличество = ЗаменитьДляТекущейСтроки;
			НоваяСтрокаТЗ.НоменклатураИсходная = СтрокаТЗ.Номенклатура;
			НоваяСтрокаТЗ.ХарактеристикаНоменклатурыИсходная = СтрокаТЗ.ХарактеристикаНоменклатуры;
			НоваяСтрокаТЗ.Изменен = Истина;
			НоваяСтрокаТЗ.Удален = Ложь;
			НоваяСтрокаТЗ.ХарактеристикиИспользуются = ТекущиеДанныеАналог.ХарактеристикиИспользуются;
		КонецЕсли;
		
		СтруктураПоискаПрименимостиРазрешений = Новый Структура("ДокументУстановкиАналогов, ЗаказНаВП", ТекущиеДанныеАналог.ДокументУстановкиАналогов, СтрокаТЗ.ЗаказНаВП);
		НайденныеСтрокиПрименимостиРазрешений = ПрименимостьРазрешенийКЗаказамНаВП.НайтиСтроки(СтруктураПоискаПрименимостиРазрешений);
		Если Не НайденныеСтрокиПрименимостиРазрешений.Количество() = 0 Тогда
			НайденныеСтрокиПрименимостиРазрешений[0].ДоступноКЗамене = НайденныеСтрокиПрименимостиРазрешений[0].ДоступноКЗамене - ЗаменитьДляТекущейСтроки;
		КонецЕсли;
		
		СтруктураПараметров.Заменить = СтруктураПараметров.Заменить - ЗаменитьДляТекущейСтроки;
		Если СтруктураПараметров.Заменить = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	Элементы.РезультатЗамены.ОтборСтрок = Новый ФиксированнаяСтруктура("ЗаказНаВП, Удален", ТекущиеДанные_ЗаказыДоЗамены.ЗаказНаВП, Ложь);
	
	ВычислитьИтогСтоимости_РезультатЗамены();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
		
		Возврат;
	КонецЕсли;
	
	Сохранить(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеДляСохраненияЗаменыНоменклатуры(СтруктураВозврата)
	
	ТаблицаДанных = РезультатЗамены.Выгрузить();
	
	СтруктураВозврата.Вставить("АдресВХ_ТаблицаДанных", ПоместитьВоВременноеХранилище(ТаблицаДанных));
	СтруктураВозврата.Вставить("ИзДокумента", ИзДокумента);
	
	Если Не ИзДокумента Тогда
		ТаблицаЗаказов = ЗаказыДоЗамены.Выгрузить(, "ЗаказНаВП");
		СтруктураВозврата.Вставить("АдресВХ_ТаблицаЗаказов", ПоместитьВоВременноеХранилище(ТаблицаЗаказов));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьКомандыЗамены()

	ТекущиеДанныеАналогов = Элементы.ТаблицаАналогов.ТекущиеДанные;
	Если ТекущиеДанныеАналогов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоискаПрименимости = Новый Структура("ДокументУстановкиАналогов, ЗаказНаВП", ТекущиеДанныеАналогов.ДокументУстановкиАналогов);
	РазрешениеПрименимоКЗаказам = Ложь;
	
	Для каждого ВыделеннаяСтрока Из Элементы.ЗаказыДоЗамены.ВыделенныеСтроки Цикл
		СтрокаТЗ = ЗаказыДоЗамены.НайтиПоИдентификатору(ВыделеннаяСтрока);
		
		СтруктураПоискаПрименимости.ЗаказНаВП = СтрокаТЗ.ЗаказНаВП;
		НайденныеСтрокиПрименимости = ПрименимостьРазрешенийКЗаказамНаВП.НайтиСтроки(СтруктураПоискаПрименимости);
		
		Если НайденныеСтрокиПрименимости.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		РазрешениеПрименимоКЗаказам = Истина;
		Прервать;
	КонецЦикла;
	
	Элементы.ЗаказыДоЗаменыЗаменить.Доступность = РазрешениеПрименимоКЗаказам;

КонецПроцедуры

&НаКлиенте
Процедура ВычислитьИтогСтоимости_РезультатЗамены()
	
	РезультатЗамены_СтоимостьИтого = 0;
    
    Для Каждого СтрокаТЗ Из РезультатЗамены Цикл
        Если Элементы.РезультатЗамены.ПроверитьСтроку(СтрокаТЗ.ПолучитьИдентификатор()) Тогда
            РезультатЗамены_СтоимостьИтого = РезультатЗамены_СтоимостьИтого + СтрокаТЗ.Стоимость;
        КонецЕсли;  
    КонецЦикла;
	
КонецПроцедуры

#КонецОбласти