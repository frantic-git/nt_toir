
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СтатусыРемонта") Тогда
		ТекСтатусыРемонта = Параметры.СтатусыРемонта;
	Иначе 
		ТекСтатусыРемонта = Новый СписокЗначений;
	КонецЕсли;
	
	СтатусыРемонта.Добавить(Перечисления.торо_СтатусыРемонтов.Зарегистрирован, "Зарегистрирован");
	СтатусыРемонта.Добавить(Перечисления.торо_СтатусыРемонтов.ЗапланированоУстранение, "Запланировано устранение");
	СтатусыРемонта.Добавить(Перечисления.торо_СтатусыРемонтов.ВРаботе, "В работе");
	СтатусыРемонта.Добавить(Перечисления.торо_СтатусыРемонтов.Выполнен, "Выполнен");
	
	Для каждого Статус Из СтатусыРемонта Цикл
		НайдСтатус = ТекСтатусыРемонта.НайтиПоЗначению(Статус.Значение);
		Если НайдСтатус <> Неопределено И НайдСтатус.Пометка Тогда
			Статус.Пометка = Истина;
		Иначе
			Статус.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	Для каждого Статус Из СтатусыРемонта Цикл
		Статус.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	Для каждого Статус Из СтатусыРемонта Цикл
		Статус.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Передать(Команда)
	
	СписокСтатусов = Новый СписокЗначений;
	Для каждого Статус Из СтатусыРемонта Цикл 
		Если Статус.Пометка Тогда
			СписокСтатусов.Добавить(Статус.Значение, Статус.Представление, Статус.Пометка);
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(СписокСтатусов);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

#КонецОбласти
