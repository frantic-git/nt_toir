#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ОткрыватьБезусловно = Параметры.ОткрыватьБезусловно;
	ЗакрыватьПриЗакрытииВладельца = Истина;
	ЗакрыватьПриВыборе = Ложь;
	
	Если Параметры.ОдиночныйВыбор Тогда
		Элементы.СписокОР.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
		ЗакрыватьПриВыборе = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта КАК ОбъектРемонта
	|ПОМЕСТИТЬ ВТ_ОбъектыАктРМ
	|ИЗ
	|	Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия КАК торо_АктОВыполненииРегламентногоМероприятияМероприятия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыходныеДокументы КАК торо_ВыходныеДокументы
	|		ПО (торо_АктОВыполненииРегламентногоМероприятияМероприятия.Ссылка В (&Ссылка))
	|			И торо_АктОВыполненииРегламентногоМероприятияМероприятия.ОбъектРемонта = торо_ВыходныеДокументы.СписокОбъектов
	|			И торо_АктОВыполненииРегламентногоМероприятияМероприятия.ВидРемонтныхРабот = торо_ВыходныеДокументы.ВидМероприятия
	|			И (торо_ВыходныеДокументы.ВыходнойДокумент = &ВыходнойДокумент)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
	|		ПО (торо_АктОВыполненииРегламентногоМероприятияМероприятия.Ссылка В (&Ссылка))
	|			И торо_АктОВыполненииРегламентногоМероприятияМероприятия.ОбъектРемонта = торо_МаршрутыРегламентныхМероприятий.СписокОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.ОбъектРемонта КАК ОбъектРемонта,
	|	ВЫРАЗИТЬ(торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.Описание КАК СТРОКА(300)) КАК Описание,
	|	ВЫРАЗИТЬ(торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.ОписаниеЯзык1 КАК СТРОКА(300)) КАК ОписаниеЯзык1,
	|	ВЫРАЗИТЬ(торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.ОписаниеЯзык2 КАК СТРОКА(300)) КАК ОписаниеЯзык2,
	|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.Исполнитель КАК Исполнитель,
	|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.ТиповойДефект КАК ТиповойДефект
	|ПОМЕСТИТЬ ВТ_Объекты
	|ИЗ
	|	Документ.торо_ВнешнееОснованиеДляРабот.ОбследованноеОборудование КАК торо_ВнешнееОснованиеДляРаботОбследованноеОборудование
	|ГДЕ
	|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
	|ГДЕ
	|	торо_ВыявленныеДефектыСписокДефектов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
	|ГДЕ
	|	торо_ВыявленныеДефектыСписокДефектов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_СостоянияОбъектовРемонтаОбъектыРемонта.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.торо_СостоянияОбъектовРемонта.ОбъектыРемонта КАК торо_СостоянияОбъектовРемонтаОбъектыРемонта
	|ГДЕ
	|	торо_СостоянияОбъектовРемонтаОбъектыРемонта.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_УчетКонтролируемыхПоказателейПоказатели.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.торо_УчетКонтролируемыхПоказателей.Показатели КАК торо_УчетКонтролируемыхПоказателейПоказатели
	|ГДЕ
	|	торо_УчетКонтролируемыхПоказателейПоказатели.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыАктРМ.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТ_ОбъектыАктРМ КАК ВТ_ОбъектыАктРМ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_ИсторияПеремещенияМеждуФМ.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТ_ОбъектыАктРМ КАК ВТ_ОбъектыАктРМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИсторияПеремещенияОборудованияМеждуФМ.СрезПоследних КАК торо_ИсторияПеремещенияМеждуФМ 
	|       ПО ВТ_ОбъектыАктРМ.ОбъектРемонта = торо_ИсторияПеремещенияМеждуФМ.ФункциональноеМесто
	|ГДЕ 
	|   торо_ИсторияПеремещенияМеждуФМ.Событие = Значение(Перечисление.торо_СобытияОборудованияНаФМ.Установка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	торо_ВыявленныеДефекты.ОбъектРемонта,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
	|		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID = торо_ВыявленныеДефекты.ID
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Параметры.ДокументыОснования);
	Запрос.УстановитьПараметр("ВыходнойДокумент", Параметры.ТипВыходногоДок);
	
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("торо_ИспользоватьДокументыПринятияИСписанияОборудования") Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_Объекты.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_Объекты.Описание КАК Описание,
		|	ВТ_Объекты.ОписаниеЯзык1 КАК ОписаниеЯзык1,
		|	ВТ_Объекты.ОписаниеЯзык2 КАК ОписаниеЯзык2,
		|	ВТ_Объекты.Исполнитель КАК Исполнитель,
		|	ВТ_Объекты.ТиповойДефект КАК ТиповойДефект,
		|	ЕСТЬNULL(торо_СтатусыОбъектовРемонтаВУчетеСрезПоследних.СтатусОР, ЗНАЧЕНИЕ(Перечисление.торо_СтатусыОРВУчете.НеПринятоКУчету)) КАК СтатусОР,
		|	ВЫБОР
		|		КОГДА ВТ_Объекты.ОбъектРемонта.ТипОбъекта = Значение(Перечисление.торо_ТипыОбъектовRCM.ФункциональноеМесто) 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоФМ
		|ПОМЕСТИТЬ ВТ_СтатусыОР
		|ИЗ
		|	ВТ_Объекты КАК ВТ_Объекты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыОбъектовРемонтаВУчете.СрезПоследних КАК торо_СтатусыОбъектовРемонтаВУчетеСрезПоследних
		|		ПО ВТ_Объекты.ОбъектРемонта = торо_СтатусыОбъектовРемонтаВУчетеСрезПоследних.ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СтатусыОР.ОбъектРемонта КАК ОР,
		|	ВТ_СтатусыОР.Описание КАК Описание,
		|	ВТ_СтатусыОР.ОписаниеЯзык1 КАК ОписаниеЯзык1,
		|	ВТ_СтатусыОР.ОписаниеЯзык2 КАК ОписаниеЯзык2,
		|	ВТ_СтатусыОР.Исполнитель КАК Исполнитель,
		|	ВТ_СтатусыОР.ТиповойДефект КАК ТиповойДефект,
		|	ВТ_СтатусыОР.ЭтоФМ КАК ЭтоФМ
		|ИЗ
		|	ВТ_СтатусыОР КАК ВТ_СтатусыОР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НастройкиДоступностиОбъектовРемонта КАК торо_НастройкиДоступностиОбъектовРемонта
		|		ПО ВТ_СтатусыОР.СтатусОР = торо_НастройкиДоступностиОбъектовРемонта.СтатусОРВУчете
		|ГДЕ
		|	торо_НастройкиДоступностиОбъектовРемонта.ДоступностьПриПодборе = ИСТИНА";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Объекты.ОбъектРемонта КАК ОР,
		|	ВТ_Объекты.Описание КАК Описание,
		|	ВТ_Объекты.ОписаниеЯзык1 КАК ОписаниеЯзык1,
		|	ВТ_Объекты.ОписаниеЯзык2 КАК ОписаниеЯзык2,
		|	ВТ_Объекты.Исполнитель КАК Исполнитель,
		|	ВТ_Объекты.ТиповойДефект КАК ТиповойДефект,
		|	ВЫБОР
		|		КОГДА ВТ_Объекты.ОбъектРемонта.ТипОбъекта = Значение(Перечисление.торо_ТипыОбъектовRCM.ФункциональноеМесто) 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоФМ
		|ИЗ
		|	ВТ_Объекты КАК ВТ_Объекты";
	КонецЕсли; 
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Если Параметры.Свойство("ТипВыходногоДок") 
	   И (Параметры.ТипВыходногоДок = Перечисления.торо_ВидыВыходныхДокументов.ВыявленныйДефект
	   ИЛИ Параметры.ТипВыходногоДок = Перечисления.торо_ВидыВыходныхДокументов.Предписание) Тогда
		СписокОР.Загрузить(Выборка.Скопировать(Новый Структура("ЭтоФМ", Ложь)));
	Иначе
		СписокОР.Загрузить(Выборка);	
	КонецЕсли; 
	
	Для каждого Строка из СписокОР Цикл
		торо_МультиязычностьСервер.ПереставитьЗначенияРеквизитаСУчетомЯызка(Строка, "Описание");	
	КонецЦикла;
	
	Если Параметры.Свойство("КонтролируемыеПоказатели") Тогда
		ЗапрашиватьКонтролируемыеПоказатели = Истина;
		Элементы.ЗапрашиватьКонтролируемыеПоказатели.Видимость = Истина;
	Иначе
		Элементы.ЗапрашиватьКонтролируемыеПоказатели.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрыНаработки") Тогда
		ЗапрашиватьПоказателиНаработки = Истина;
		Элементы.ГруппаПоНаработке.Видимость = Истина;
	Иначе
		Элементы.ГруппаПоНаработке.Видимость = Ложь;
	КонецЕсли;		

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ОткрыватьБезусловно Тогда
		СписокОРКоличество = СписокОР.Количество();
		
		Если СписокОРКоличество = 0 Тогда
			Отказ = Истина;
		ИначеЕсли СписокОРКоличество = 1 Тогда
			МассивСтрок = Новый Массив();
			МассивСтрок.Добавить(СписокОР[0]);
			ПередатьВДокумент(МассивСтрок);
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = СписокОР.НайтиПоИдентификатору(ВыбраннаяСтрока);
	МассивСтрок = Новый Массив();
	МассивСтрок.Добавить(ТекущаяСтрока);
	ПередатьВДокумент(МассивСтрок);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	МассивСтрок = Новый Массив();
	Для каждого ВыбраннаяСтрока из Элементы.СписокОР.ВыделенныеСтроки Цикл
		ТекущаяСтрока = СписокОР.НайтиПоИдентификатору(ВыбраннаяСтрока);
		МассивСтрок.Добавить(ТекущаяСтрока);
	КонецЦикла;
	ПередатьВДокумент(МассивСтрок);
	
КонецПроцедуры

#КонецОбласти
 
#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ПередатьВДокумент(МассивСтрок)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("МассивСтрок", МассивСтрок);
		
	Если ЗапрашиватьКонтролируемыеПоказатели Тогда
		
		МассивОР = Новый массив;
		Для каждого ВыбраннаяСтрока из МассивСтрок Цикл
			МассивОР.Добавить(ВыбраннаяСтрока.ОР);
		КонецЦикла;
		
		МассивДанныхПоказателей = ПолучитьДанныеИзмеряемыхПоказателей(МассивОР);
		Если МассивДанныхПоказателей.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru='Для выбранных объектов ремонта не заданы контролируемые показатели.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;

		СписокВидовПоказателей = Новый СписокЗначений();
		
		Для каждого СтрокаДанныхПоказателей из МассивДанныхПоказателей Цикл
			Если СписокВидовПоказателей.НайтиПоЗначению(СтрокаДанныхПоказателей.Показатель) = Неопределено Тогда
				СписокВидовПоказателей.Добавить(СтрокаДанныхПоказателей.Показатель,,Истина);
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеПараметры.Вставить("МассивДанныхКонтролируемыхПоказателей", МассивДанныхПоказателей);
		
		Если СписокВидовПоказателей.Количество() > 0 Тогда
			ТекстЗаголовкаОкна = НСтр("ru = 'Выберите контролируемые показатели'");
			Оповещение = Новый ОписаниеОповещения("ПослеВыбораКонролируемыхПоказателей",ЭтотОбъект,ДополнительныеПараметры); 
			СписокВидовПоказателей.ПоказатьОтметкуЭлементов(Оповещение, ТекстЗаголовкаОкна);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПослеВыбораКонролируемыхПоказателей(Новый СписокЗначений, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКонролируемыхПоказателей(Список, ДополнительныеПараметры) Экспорт
	
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
	ДополнительныеПараметры.Вставить("СписокКонтролируемыхПоказателей", Список);
	
	Если ЗапрашиватьПоказателиНаработки Тогда
		МассивОР = Новый Массив;
		Для каждого ВыбраннаяСтрока из МассивСтрок Цикл
			МассивОР.Добавить(ВыбраннаяСтрока.ОР);
		КонецЦикла;
		
		МассивДанныхПоказателей = ПолучитьДанныеПоказателейНаработки(МассивОР);
		
		Если МассивДанныхПоказателей.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru='Для выбранных объектов ремонта не заданы параметры наработки.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;

		СписокВидовПоказателей = Новый СписокЗначений();
		
		Для каждого СтрокаДанныхПоказателей из МассивДанныхПоказателей Цикл
			Если СписокВидовПоказателей.НайтиПоЗначению(СтрокаДанныхПоказателей.Показатель) = Неопределено Тогда
				СписокВидовПоказателей.Добавить(СтрокаДанныхПоказателей.Показатель,,Истина);
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеПараметры.Вставить("МассивДанныхПоказателейНаработки", МассивДанныхПоказателей);
		
		Если СписокВидовПоказателей.Количество() > 0 Тогда
			ТекстЗаголовкаОкна = НСтр("ru = 'Выберите показатели наработки'");
			Оповещение = Новый ОписаниеОповещения("ПослеВыбораПоказателейНаработки",ЭтотОбъект,ДополнительныеПараметры); 
			СписокВидовПоказателей.ПоказатьОтметкуЭлементов(Оповещение, ТекстЗаголовкаОкна);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	ПослеВыбораПоказателейНаработки(Новый СписокЗначений, ДополнительныеПараметры);
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПоказателейНаработки(Список, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Вставить("СписокПоказателейНаработки", Список);
	ПередатьВДокументЗавершение(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьВДокументЗавершение(ДополнительныеПараметры)
	
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
		
	Если ЗапрашиватьКонтролируемыеПоказатели Тогда
		СоответствиеКонтролируемыхПоказателей = ПодготовитьСоответствиеКонтролируемыхПоказателей(ДополнительныеПараметры);
	КонецЕсли;
	
	Если ЗапрашиватьПоказателиНаработки Тогда
		СоответствиеПоказателейНаработки = ПодготовитьСоответствиеПоказателейНаработки(ДополнительныеПараметры);
	КонецЕсли;
	
	МассивВозврата = Новый Массив;
	Для каждого ТекущаяСтрока из МассивСтрок Цикл
		СтруктураВозврата = Новый Структура("ОбъектРемонта, Описание, ОписаниеЯзык1, ОписаниеЯзык2, ПодразделениеИсполнитель, ТиповойДефект");
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ТекущаяСтрока);
		СтруктураВозврата.ОбъектРемонта = ТекущаяСтрока.ОР;
		СтруктураВозврата.ПодразделениеИсполнитель = ТекущаяСтрока.Исполнитель;
		ДобавитьСтруктуру = Истина;
		Если ЗапрашиватьКонтролируемыеПоказатели Тогда
			ДанныеПоказателей = СоответствиеКонтролируемыхПоказателей[СтруктураВозврата.ОбъектРемонта];
			Если ДанныеПоказателей = Неопределено Тогда
				ДанныеПоказателей = Новый Массив;
				ДобавитьСтруктуру = Ложь;
			КонецЕсли;
			СтруктураВозврата.Вставить("КонтролируемыеПоказатели", ДанныеПоказателей);
		КонецЕсли;
		
		Если ЗапрашиватьПоказателиНаработки Тогда
			ДанныеПоказателей = СоответствиеПоказателейНаработки[СтруктураВозврата.ОбъектРемонта];
			Если ДанныеПоказателей = Неопределено Тогда
				ДанныеПоказателей = Новый Массив;
				ДобавитьСтруктуру = Ложь;
			КонецЕсли;
			СтруктураВозврата.Вставить("ПоказателиНаработки", ДанныеПоказателей);
			СтруктураВозврата.Вставить("ПроставлятьПлановуюНаработку", ПроставлятьПлановуюНаработку);
			СтруктураВозврата.Вставить("УчитыватьПростои", УчитыватьПростоиОР);
		КонецЕсли;
		Если ДобавитьСтруктуру Тогда 
			МассивВозврата.Добавить(СтруктураВозврата);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтруктураВозврата из МассивВозврата Цикл
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ПодготовитьСоответствиеКонтролируемыхПоказателей(СтруктураПараметров)
	
	МассивДанныхКонтролируемыхПоказателей = СтруктураПараметров.МассивДанныхКонтролируемыхПоказателей;
	СписокКонтролируемыхПоказателей = СтруктураПараметров.СписокКонтролируемыхПоказателей;
	
	СоответствиеПоказателей = Новый Соответствие();
	
	Если СписокКонтролируемыхПоказателей <> Неопределено Тогда
		Для каждого СтрокаДанныхПоказателей из МассивДанныхКонтролируемыхПоказателей Цикл
			ЗначениеСписка = СписокКонтролируемыхПоказателей.НайтиПоЗначению(СтрокаДанныхПоказателей.Показатель);
			Если ЗначениеСписка.Пометка Тогда
				ЗначениеСоотв = СоответствиеПоказателей[СтрокаДанныхПоказателей.ИсходныйОР];
				Если ЗначениеСоотв = Неопределено Тогда
					ЗначениеСоотв = Новый Массив;
				КонецЕсли;
				ЗначениеСоотв.Добавить(СтрокаДанныхПоказателей);
				СоответствиеПоказателей.Вставить(СтрокаДанныхПоказателей.ИсходныйОР, ЗначениеСоотв);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат СоответствиеПоказателей;
	
КонецФункции

&НаКлиенте
Функция ПодготовитьСоответствиеПоказателейНаработки(СтруктураПараметров)
			
	МассивДанныхПоказателейНаработки = СтруктураПараметров.МассивДанныхПоказателейНаработки;
	СписокПоказателейНаработки = СтруктураПараметров.СписокПоказателейНаработки;

	СоответствиеПоказателей = Новый Соответствие();
	
	Если СписокПоказателейНаработки <> Неопределено Тогда
		Для каждого СтрокаДанныхПоказателей из МассивДанныхПоказателейНаработки Цикл
			ЗначениеСписка = СписокПоказателейНаработки.НайтиПоЗначению(СтрокаДанныхПоказателей.Показатель);
			Если ЗначениеСписка.Пометка Тогда
				ЗначениеСоотв = СоответствиеПоказателей[СтрокаДанныхПоказателей.ОбъектРемонта];
				Если ЗначениеСоотв = Неопределено Тогда
					ЗначениеСоотв = Новый Массив;
				КонецЕсли;
				ЗначениеСоотв.Добавить(СтрокаДанныхПоказателей);
				СоответствиеПоказателей.Вставить(СтрокаДанныхПоказателей.ОбъектРемонта, ЗначениеСоотв);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат СоответствиеПоказателей;
	
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьДанныеИзмеряемыхПоказателей(МассивОР)
	
	МассивДанныхПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(МассивОР,,Истина);
	Возврат МассивДанныхПоказателей;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоказателейНаработки(МассивОР)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.Показатель КАК Показатель
	|ИЗ
	|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних(, ОбъектРемонта В (&МассивОР)) КАК торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних";
	Запрос.УстановитьПараметр("МассивОР", МассивОР);
	Результат = Запрос.Выполнить();
		
	Возврат торо_ОбщегоНазначения.РезультатЗапросаВМассивСтруктур(Результат);
	
КонецФункции

#КонецОбласти
