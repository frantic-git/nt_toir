
#Область СлужебныеПроцедурыИФункции

// См. ТорговыеПредложения.НастройкиПубликации
//
Функция НастройкиПубликации(ТорговоеПредложение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	НастройкиПубликации = ТорговыеПредложения.НастройкиПубликации(ТорговоеПредложение);
	
	Если НастройкиПубликации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоВсемТоварам = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТорговоеПредложение, "ПоВсемТоварам");
	НастройкиПубликации.Вставить("ПоВсемТоварам", ПоВсемТоварам);
	
	Возврат НастройкиПубликации;
	
КонецФункции

Функция СоздатьНоменклатуруПоДаннымКонтрагента(Знач НаборНоменклатурыКонтрагентов, Знач ЗначенияПоУмолчанию) Экспорт
	
	Результат = Новый Массив;
	СозданныеНоменклатуры = Новый Соответствие;
	
	Для Каждого НоменклатураКонтрагента Из НаборНоменклатурыКонтрагентов Цикл
		
		НайденнаяНоменклатура = СозданныеНоменклатуры.Получить(НоменклатураКонтрагента.ИдентификаторНоменклатуры);
		Если НайденнаяНоменклатура <> Неопределено Тогда
			НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы(НайденнаяНоменклатура);
		Иначе
			НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НоваяНоменклатура, ЗначенияПоУмолчанию);
			НоваяНоменклатура.Наименование       = НоменклатураКонтрагента.Наименование;
			НоваяНоменклатура.НаименованиеПолное = НоменклатураКонтрагента.Наименование;
			НоваяНоменклатура.Артикул            = НоменклатураКонтрагента.Артикул;
			Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(НоваяНоменклатура);
			Если ЗначениеЗаполнено(ЗначенияПоУмолчанию.СтавкаНДС) Тогда 
				НоваяНоменклатура.СтавкаНДС = УчетНДСВызовСервера.СтавкаНДСПоЗначениюПеречисления(ЗначенияПоУмолчанию.СтавкаНДС); 
			КонецЕсли;
			НоваяНоменклатура.ДополнительныеСвойства.Вставить("СменаВидаНоменклатурыОтработана");
			
			Если ЗначениеЗаполнено(ЗначенияПоУмолчанию.ЕдиницаИзмерения) Тогда
				НоваяНоменклатура.ЕдиницаИзмерения = ЗначенияПоУмолчанию.ЕдиницаИзмерения;
			ИначеЕсли ЗначениеЗаполнено(НоменклатураКонтрагента.ЕдиницаИзмеренияКод) Тогда
				НоваяНоменклатура.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоКоду(НоменклатураКонтрагента.ЕдиницаИзмеренияКод);
			ИначеЕсли ЗначениеЗаполнено(НоменклатураКонтрагента.ЕдиницаИзмерения) Тогда
				НоваяНоменклатура.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(НоменклатураКонтрагента.ЕдиницаИзмерения, Истина);
			КонецЕсли;
			
			Если НЕ НоваяНоменклатура.ПроверитьЗаполнение() Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяНоменклатура.Записать();
			
			НоменклатураИБ = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы(НоваяНоменклатура.Ссылка);
			
			СозданныеНоменклатуры.Вставить(НоменклатураКонтрагента.ИдентификаторНоменклатуры, НоменклатураИБ.Номенклатура);
			
		КонецЕсли;
		
		СозданныйЭлемент = Новый Структура;
		СозданныйЭлемент.Вставить("НоменклатураКонтрагента", НоменклатураКонтрагента);
		СозданныйЭлемент.Вставить("НоменклатураИБ", НоменклатураИБ);
		Результат.Добавить(СозданныйЭлемент);
		
	КонецЦикла;
	
	// Удалим сообщения, возникшие при проверке заполнения номенклатуры.
	// Остальные сообщения выводим как есть.
	НаборСообщений = ПолучитьСообщенияПользователю(Истина);
	Для Каждого Сообщение Из НаборСообщений Цикл
		Если Сообщение.КлючДанных <> Справочники.Номенклатура.ПустаяСсылка() Тогда
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Обработчик подписки на событие КонтрольНеразделенныхНаборовЗаписейПриЗаписи.
//
Процедура КонтрольНеразделенныхНаборовЗаписейПриЗаписиЭДОПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	// ОбменДанными.Загрузка не требуется.
	// Запись неразделенных данных из разделенного сеанса запрещена.
	КонтрольНеразделенныхДанныхПриЗаписи(Источник);
	
КонецПроцедуры

// Обработчик подписки на событие КонтрольНеразделенныхОбъектовПриЗаписи.
//
Процедура КонтрольНеразделенныхОбъектовПриЗаписиБЭДПриЗаписи(Источник, Отказ) Экспорт
	
	// ОбменДанными.Загрузка не требуется.
	// Запись неразделенных данных из разделенного сеанса запрещена.
	КонтрольНеразделенныхДанныхПриЗаписи(Источник);

КонецПроцедуры

// Вызывается при проверке доступности неразделенных данных для записи.
//
Процедура КонтрольНеразделенныхДанныхПриЗаписи(Знач Источник) 
	
	Если ОбщегоНазначения.РазделениеВключено() И ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		
		ПредставлениеИсключения = НСтр("ru = 'Нарушение прав доступа.'", ОбщегоНазначения.КодОсновногоЯзыка());
		
		ЗаписьЖурналаРегистрации(
			ПредставлениеИсключения,
			УровеньЖурналаРегистрации.Ошибка,
			Источник.Метаданные());
		
		ВызватьИсключение ПредставлениеИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти