////////////////////////////////////////////////////////////////////////////////
// Менеджер защиты: Система лицензирования отраслевых и специализированных решений.
// Переопределение процедур и функций
// Область выполнения: Сервер
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Для переопределения результатов функции УстановкаПараметровСеанса менеджера защиты СЛК.
//
// Параметры:
//  УстановленныеПараметры - Массив имен установленных параметров сеанса.
//  ИменаПараметровСеанса - Массив, Неопределено - в массиве имена параметров сеанса для инициализации.
//
Процедура ПереопределитьПараметрыСеанса(УстановленныеПараметры, Знач ИменаПараметровСеанса) Экспорт
	
	// Параметры сеанса, инициализация которых требует обращения к одним и тем же данным
	// следует инициализировать сразу группой. Для того, чтобы избежать их повторной инициализации,
	// имена уже установленных параметров сеанса сохраняются в массиве УстановленныеПараметры.
	
	Если ИменаПараметровСеанса = Неопределено Тогда
		// Раздел установки параметров сеанса при начале сеанса (ИменаПараметровСеанса = Неопределено)
		// Выполняется установка параметров сеанса, которые можно инициализировать 
		// при начале работы системы.
		Возврат;
	КонецЕсли;
	
	Если ИменаПараметровСеанса.Найти("торо_ПараметрыСерииКОРПИнициализированы") <> Неопределено Тогда
		
		ПараметрыСеанса.торо_ПараметрыСерииКОРПИнициализированы = Ложь;
			
	КонецЕсли;

	Если ИменаПараметровСеанса.Найти("торо_ПараметрыСерииПРОФИнициализированы") <> Неопределено Тогда
		
		ПараметрыСеанса.торо_ПараметрыСерииПРОФИнициализированы = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры // ПереопределитьПараметрыСеанса()

// Переопределение параметров серий ключей защиты, определенных в конфигурации.
// В зависимости от параметра Активные - возвращаются параметры или всех серий или
// доступные по установленным пользователю сеанса ролям.
//
// Параметры:
//  СерииКлючейКонфигурации - Соответствие - Соответствие параметров подключения сериям ключей защиты.
//  Активные - Булево - только доступные по установленным пользователю сеанса ролям.
//
Процедура ПереопределитьСерииКлючейКонфигурации(СерииКлючейКонфигурации, Знач Активные = Истина) Экспорт
	
	// Переопределение серий ключей конфигураци
	
КонецПроцедуры // ПереопределитьСерииКлючейКонфигурации

// Переопределение параметров подключения серии ключей защиты.
// В зависимости от параметра Активные - возвращаются параметры или всех серий или
// доступные по установленным пользователю сеанса ролям.
//
// Параметры:
//	Серия - Строка, Неопределено - Уникальная серия ключей защиты СЛК. Если серия не указана,
//					возвращается пустая структура настроек менеджера серии защиты.
//  ПараметрыПодключения  - Структура - Структура параметров подключения.
//							Соответствует структуре, возвращаемой функцией 
//							слкМенеджерЗащитыСервер.СтруктураПараметровПодключенияСерииКлючейЗащиты().
//
Процедура ПереопределитьПараметрыПодключенияСерииКлючейЗащиты(ПараметрыПодключения, Знач Серия) Экспорт
	
	// Переопределение параметров подключения серии ключей защиты
	
КонецПроцедуры // ПереопределитьПараметрыПодключенияСерииКлючейЗащиты()

// Переопределение минимально необходимой версии компоненты защиты СЛК.
// Вызывается из слкМенеджерЗащиты.ПолучитьМинимальнуюВерсиюКомпонентыЗащиты().
//
// Возвращаемое значение:
//  Строка - минимальная версия компоненты защиты.
//
Функция ПолучитьМинимальнуюВерсиюКомпонентыЗащиты() Экспорт
	
	МинимальнаяВерсия = ""; // Если строка пустая, то используется версия из модуля слкМенеджерЗащиты.
	
	Возврат МинимальнаяВерсия;
	
КонецФункции // ПолучитьМинимальнуюВерсиюКомпонентыЗащиты()

// Переопределение сообщения про устаревшую версию компоненты защиты СЛК.
// Вызывается из слкМенеджерЗащитыСервер.ПроверитьАктуальностьВерсииКомпонентыЗащиты().
//
// Параметры:
//  ТекушаяВерсия - строка - текущая версия компоненты СЛК.
//  НеобходимаяВерсия - строка - минимально необходимая версия компоненты СЛК.
//
// Возвращаемое значение:
//  Строка - текст сообщения для устаревшей версии компоненты СЛК.
//
Функция ПолучитьТекстИсключенияДляУстаревшейКомпонентыСЛК(ТекушаяВерсия, НеобходимаяВерсия) Экспорт
	
	СообщениеИсключения = "";
	
	Возврат СообщениеИсключения;
	
КонецФункции // ПолучитьТекстИсключенияДляУстаревшейКомпонентыСЛК()

#КонецОбласти
