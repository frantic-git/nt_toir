#Область СлужебныйПрограммныйИнтерфейс

// Возвращает версию тех. карты на указанную дату, либо на текущую дату, если ДатаСреза не заполнена.
// Параметры:
//		ИдентификаторТехКарты - СправочникСсылка.торо_ИдентификаторыТехКарт - идентификатор тех. карты.
//		ДатаСреза - Дата - дата, на которую нужно получить версию.
// Возвращаемое значение:
//		СправочникСсылка.торо_ТехКарты - версия тех. карты. Если версии нет, то пустая ссылка.
Функция ПолучитьВерсиюТехКарты(ИдентификаторТехКарты, ДатаСреза = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ВерсииТехКартСрезПоследних.ТехКарта КАК ТехКарта
	|ИЗ
	|	РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(&Период, ИдентификаторТехКарты = &ИдентификаторТехКарты) КАК торо_ВерсииТехКартСрезПоследних";
	
	Запрос.УстановитьПараметр("ИдентификаторТехКарты", ИдентификаторТехКарты);
	Если ЗначениеЗаполнено(ДатаСреза) Тогда
		Запрос.УстановитьПараметр("Период", ДатаСреза);	
	Иначе
		Запрос.УстановитьПараметр("Период", ТекущаяДата());	
	КонецЕсли;
	
    Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ТехКарта;
	КонецЕсли;
	
	// если есть только версии ТК для будущего
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ВерсииТехКартСрезПервых.ТехКарта КАК ТехКарта
	|ИЗ
	|	РегистрСведений.торо_ВерсииТехКарт.СрезПервых( , ИдентификаторТехКарты = &ИдентификаторТехКарты) КАК торо_ВерсииТехКартСрезПервых";
	
	Запрос.УстановитьПараметр("ИдентификаторТехКарты", ИдентификаторТехКарты);
 	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ТехКарта;
	КонецЕсли;
	
	Возврат Справочники.торо_ТехКарты.ПустаяСсылка();
	
КонецФункции

#КонецОбласти
