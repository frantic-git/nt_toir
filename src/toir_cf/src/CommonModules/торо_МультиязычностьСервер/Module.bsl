
#Область ПрограммныйИнтерфейс

// Вызывается из обработчика ПриСозданииНаСервере формы списка/выбора в тех случаях, когда стандартный
//	обработчик БСП не подходит.
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма содержащая мультиязычные реквизиты.
//		СоответствиеСписковДляМультиязычности - Соответствие:
//			* Ключ - Строка - название реквизита формы с динамическим списком.
//			* Значение - Строка, Массив из Строка - Имя метаданных типа справочника, для которого надо выполнить замену
//														в динамическом списке, например, "Справочник.ВидыНоменклатуры".
//
Процедура ПриСозданииНаСервереОбработкаДинамическихСписков(Форма, СоответствиеСписковДляМультиязычности) Экспорт
	
	Если МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого КлючИЗначение из СоответствиеСписковДляМультиязычности Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("Массив") Тогда
			Для каждого ИмяОбъектаМетаданных из КлючИЗначение.Значение Цикл
				МультиязычностьСервер.ИзменениеТекстаЗапросаСпискаДляТекущегоЯзыка(Форма, КлючИЗначение.Ключ, ИмяОбъектаМетаданных);
			КонецЦикла;
		Иначе
			МультиязычностьСервер.ИзменениеТекстаЗапросаСпискаДляТекущегоЯзыка(Форма, КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Нужна для случаев, когда не получается воспользоваться стандартными процедурами
// из модуля "МультиязычностьСервер". Выполняет такую же перестановку реквизитов.
// При повторном вызове - переставляет еще раз (т.е. возвращает к исходному состоянию).
//
// Параметры:
//		Объект - СправочникОбъект, Структура, СтрокаТаблицыЗначений - любой объект,
//			к реквизитам которого можно обратиться через Объект[ИмяРеквизита] 
//			и можно изменять значения этих реквизитов.
//		ИмяРеквизита - Строка - Имя реквизита (без суффиксов), который нужно обработать.
//
Процедура ПереставитьЗначенияРеквизитаСУчетомЯызка(Объект, ИмяРеквизита) Экспорт
	
	Если МультиязычностьСервер.ЭтоОсновнойЯзык() Тогда
		Возврат;
	КонецЕсли;

	СуффиксТекущегоЯзыка = МультиязычностьСервер.СуффиксТекущегоЯзыка();
	ОбменятьЗначенияРеквизитов(Объект, ИмяРеквизита, СуффиксТекущегоЯзыка);
	
КонецПроцедуры

// Аналог процедуры Мультиязычность.ПриСозданииНаСервере для форм элементов справочника, но
// только для табличных частей документов.
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма документа.
//		Ссылка - ДокументСсылка - ссылка на документ.
//		ИмяТабличнойЧасти - Строка - имя табличной части, в которой есть мльтиязычные реквизиты.
//
Процедура ПриСозданииНаСервереОбработкаТабличнойЧасти(Форма, Ссылка, ИмяТабличнойЧасти) Экспорт
	
	Если МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	СписокРеквизитовФормы = Форма.ПолучитьРеквизиты();
	СоздатьПараметрыМультиязычныхРеквизитовТЧ = Истина;
	Для Каждого Реквизит Из СписокРеквизитовФормы Цикл
		Если Реквизит.Имя = "ПараметрыМультиязычныхРеквизитовТЧ" Тогда
			СоздатьПараметрыМультиязычныхРеквизитовТЧ = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если СоздатьПараметрыМультиязычныхРеквизитовТЧ Тогда
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыМультиязычныхРеквизитовТЧ", Новый ОписаниеТипов(),,, Истина));
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		Форма.ПараметрыМультиязычныхРеквизитовТЧ = Новый Структура;
	КонецЕсли;
	
	ЛокализуемыеРеквизитыТЧ = ПолучитьМассивЛокализуемыхРеквизитовТЧ(Ссылка, ИмяТабличнойЧасти);
	
	Для каждого ЛокализуемыйРеквизит из ЛокализуемыеРеквизитыТЧ Цикл
		Элемент = Форма.Элементы.Найти(ИмяТабличнойЧасти + ЛокализуемыйРеквизит);
		Если Элемент <> Неопределено Тогда
			Элемент.КнопкаОткрытия = Истина;
			Элемент.УстановитьДействие("Открытие", "Подключаемый_ОткрытиеЛокализуемогоРеквзитаТЧ");
			СтруктураПараметров = Новый Структура("ИмяТабличнойЧасти, ИмяРеквизита", ИмяТабличнойЧасти, ЛокализуемыйРеквизит);
			Форма.ПараметрыМультиязычныхРеквизитовТЧ.Вставить(Элемент.Имя, СтруктураПараметров);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Аналог процедуры Мультиязычность.ПриЧтенииНаСервере, но только для табличных частей документов.
//
// Параметры:
//		Объект - ДокументОбъект - документ, который нужно обработать.
//		ИмяТабличнойЧасти - Строка - имя табличной части, в которой есть мльтиязычные реквизиты.
//
Процедура ПриЧтенииНаСервереОбработкаТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт
	
	Если МультиязычностьСервер.ЭтоОсновнойЯзык() Тогда
		Возврат;
	КонецЕсли;
		
	ЛокализуемыеРеквизитыТЧ = ПолучитьМассивЛокализуемыхРеквизитовТЧ(Объект.Ссылка, ИмяТабличнойЧасти);
	СуффиксТекущегоЯзыка = МультиязычностьСервер.СуффиксТекущегоЯзыка();
	
	Для каждого СтрокаТЧ из Объект[ИмяТабличнойЧасти] Цикл
		Для каждого ЛокализуемыйРеквизит из ЛокализуемыеРеквизитыТЧ Цикл
			ОбменятьЗначенияРеквизитов(СтрокаТЧ, ЛокализуемыйРеквизит, СуффиксТекущегоЯзыка);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Аналог процедуры Мультиязычность.ПередЗаписьюНаСервере, но только для табличных частей документов.
//
// Параметры:
//		Объект - ДокументОбъект - документ, который нужно обработать.
//		ИмяТабличнойЧасти - Строка - имя табличной части, в которой есть мльтиязычные реквизиты.
//
Процедура ПередЗаписьюНаСервереОбработкаТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт
	
	ОбъектМетаданных = МультиязычностьСервер.ОбъектМетаданных(Объект);
	
	Если МультиязычностьСервер.ЭтоОсновнойЯзык() Тогда
		
		Если ОбщегоНазначения.ЭтоРегистр(ОбъектМетаданных) Или Не Объект.ЭтоНовый() Тогда
			Возврат;
		КонецЕсли;
		
		ЛокализуемыеРеквизитыТЧ = ПолучитьМассивЛокализуемыхРеквизитовТЧ(Объект.Ссылка, ИмяТабличнойЧасти);
		
		Для каждого СтрокаТЧ из Объект[ИмяТабличнойЧасти] Цикл
			Для Каждого ЛокализуемыйРеквизит Из ЛокализуемыеРеквизитыТЧ Цикл
				
				ЗначениеРеквизита = СтрокаТЧ[ЛокализуемыйРеквизит];
				Если ПустаяСтрока(ЗначениеРеквизита) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ПустаяСтрока(СтрокаТЧ[ЛокализуемыйРеквизит + "Язык1"]) Тогда
					СтрокаТЧ[ЛокализуемыйРеквизит + "Язык1"] = ЗначениеРеквизита;
				КонецЕсли;
				
				Если ПустаяСтрока(СтрокаТЧ[ЛокализуемыйРеквизит + "Язык2"]) Тогда
					СтрокаТЧ[ЛокализуемыйРеквизит + "Язык2"] = ЗначениеРеквизита;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	ЛокализуемыеРеквизитыТЧ = ПолучитьМассивЛокализуемыхРеквизитовТЧ(Объект.Ссылка, ИмяТабличнойЧасти);
	СуффиксТекущегоЯзыка = МультиязычностьСервер.СуффиксТекущегоЯзыка();
	
	Для каждого СтрокаТЧ из Объект[ИмяТабличнойЧасти] Цикл
		Для каждого ЛокализуемыйРеквизит из ЛокализуемыеРеквизитыТЧ Цикл
			ОбменятьЗначенияРеквизитов(СтрокаТЧ, ЛокализуемыйРеквизит, СуффиксТекущегоЯзыка);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбменятьЗначенияРеквизитов(Объект, ИмяРеквизита, СуффиксТекущегоЯзыка)
	
	Значение = Объект[ИмяРеквизита];
	
	Объект[ИмяРеквизита] = Объект[ИмяРеквизита + СуффиксТекущегоЯзыка];
	Объект[ИмяРеквизита + СуффиксТекущегоЯзыка] = Значение;
	
	Если ПустаяСтрока(Объект[ИмяРеквизита]) Тогда
		Объект[ИмяРеквизита] = Значение;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМассивЛокализуемыхРеквизитовТЧ(Ссылка, ИмяТабличнойЧасти)
	
	ЛокализуемыеРеквизитыТЧ = Новый Массив;
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") И ИмяТабличнойЧасти = "СписокДефектов" Тогда
		ЛокализуемыеРеквизитыТЧ.Добавить("ДефектОписание");
		ЛокализуемыеРеквизитыТЧ.Добавить("НаправлениеНаУстранение");
		ЛокализуемыеРеквизитыТЧ.Добавить("ПоследствияДефекта");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") И ИмяТабличнойЧасти = "ОбследованноеОборудование" Тогда
		ЛокализуемыеРеквизитыТЧ.Добавить("Описание");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") И ИмяТабличнойЧасти = "РемонтыОборудования" Тогда
		ЛокализуемыеРеквизитыТЧ.Добавить("ОписаниеРемонта");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_АнализКоренныхПричин") И ИмяТабличнойЧасти = "КоренныеПричины" Тогда
		ЛокализуемыеРеквизитыТЧ.Добавить("ТекстБлока");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_АнализКоренныхПричин") И ИмяТабличнойЧасти = "КорректирующиеМероприятия" Тогда
		ЛокализуемыеРеквизитыТЧ.Добавить("Описание");		
	КонецЕсли;
	
	Возврат ЛокализуемыеРеквизитыТЧ;
	
КонецФункции

#КонецОбласти
