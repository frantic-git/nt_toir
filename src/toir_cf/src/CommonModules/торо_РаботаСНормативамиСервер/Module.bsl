
#Область ПрограммныйИнтерфейс

// Процедура записывает все нормативы ОР при программном изменении типового ОР.
// При интерактивном изменении, процедуры записи вызываются из формы ОР поотдельности.
// Процедура должна вызываться ДО изменения реквизита ТиповойОР.
//
// Параметры:
//		ТиповойОРСсылка - СправочникСсылка.торо_ТиповыеОР - ссылка на типовой ОР.
//		ОРСсылка - СправочникСсылка.торо_ОбъектыРемонта - ссылка на объект ремонта.
//		ЗаписыватьНормативныеРемонты - Булево - Записывать нормативные ремонты.
//		ЗаписыватьНормативныеЦепочки - Булево - Записывать нормативные цепочки.
//		ЗаписыватьПредшествующиеРемонты - Булево - Записывать предшествующие ремонты.
//		ЗаписыватьЗамещаемыеРемонты - Булево - Записывать замещаемые ремонты.
//		ЗаписыватьКонтролируемыеПоказатели - Булево - Записывать контролируемые показатели.
//		ЗаписыватьНормыЗапчастей - Булево - Записывать нормы запчастей.
//		
Процедура ЗаписатьНормативыОРПриИзмененииТиповогоОР(ТиповойОРСсылка, ОРСсылка,
	ЗаписыватьНормативныеРемонты 		= Истина,
	ЗаписыватьНормативныеЦепочки 		= Истина,
	ЗаписыватьПредшествующиеРемонты 	= Истина,
	ЗаписыватьЗамещаемыеРемонты 		= Истина,
	ЗаписыватьКонтролируемыеПоказатели  = Истина,
	ЗаписыватьНормыЗапчастей 			= Истина) Экспорт
	
	Если ЗаписыватьНормативныеРемонты Тогда
		ЗаписатьНормативыОРПриИзмененииТиповогоОР_НормативныеРемонты(ТиповойОРСсылка, ОРСсылка);
	КонецЕсли;
	
	Если ЗаписыватьНормативныеЦепочки Тогда
		
		// Записываются при записи Типового ОР. Записывать дополнительно нет необходимости.
				
	КонецЕсли;
	
	Если ЗаписыватьПредшествующиеРемонты Тогда
		ЗаписатьНормативыОРПриИзмененииТиповогоОР_ПредшествующиеРемонты(ТиповойОРСсылка, ОРСсылка);
	КонецЕсли;
		
	Если ЗаписыватьЗамещаемыеРемонты Тогда
		ЗаписатьНормативыОРПриИзмененииТиповогоОР_ЗамещаемыеРемонты(ТиповойОРСсылка, ОРСсылка);
	КонецЕсли;
	
	Если ЗаписыватьНормыЗапчастей Тогда
		ЗаписатьНормативыОРПриИзмененииТиповогоОР_НормыЗапчастей(ТиповойОРСсылка, ОРСсылка);
	КонецЕсли;
	
	Если ЗаписыватьКонтролируемыеПоказатели Тогда
		ЗаписатьНормативыОРПриИзмененииТиповогоОР_КонтролируемыеПоказатели(ТиповойОРСсылка, ОРСсылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает действующее значение рассчитываемого коэффициента ремонтных особенностей.
//
// Параметры:
//		ВозрастОборудования - Число - значение возраста оборудования или наработки для сравнения.
//		Владелец - СправочникСсылка.торо_ВидыКоэффициентовРемонтныхОсобенностей - вид КРО.
//
// Возвращаемое значение:
//		Структура - структура с полями:
//			*ЗначениеКоэффициента - СправочникСсылка.торо_ЗначенияКоэффициентовРемонтныхОсобенностей - ссылка на значение коэффициента.
//			*Коэффициент - Число - числовое значение коэффициента.
//
Функция ПолучитьРассчитываемыйКоэффициентРемонтныхОсобенностей(ВозрастОборудования, Владелец) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ЗначенияКоэффициентовРемонтныхОсобенностей.Ссылка,
	|	торо_ЗначенияКоэффициентовРемонтныхОсобенностей.Коэффициент,
	|	торо_ЗначенияКоэффициентовРемонтныхОсобенностей.ВозрастОборудования КАК ВозрастОборудования
	|ИЗ
	|	Справочник.торо_ЗначенияКоэффициентовРемонтныхОсобенностей КАК торо_ЗначенияКоэффициентовРемонтныхОсобенностей
	|ГДЕ
	|	торо_ЗначенияКоэффициентовРемонтныхОсобенностей.Владелец = &Владелец
	|	И торо_ЗначенияКоэффициентовРемонтныхОсобенностей.ВозрастОборудования >= &ВозрастОборудования
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВозрастОборудования";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("ВозрастОборудования", ВозрастОборудования);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("ЗначениеКоэффициента, Коэффициент", Выборка.Ссылка, Выборка.Коэффициент);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Вычисляет возраст оборудования для коэффициентов ремонтных особенностей.
//
// Параметры:
//		Ссылка - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта.
//		СчитатьВозрастОтДатыИзготовления - Булево - если истина, то возраст считаетсмя от даты выпуска,
//																	иначе - от даты ввода в эксплуатацию.
//
// Возвращаемое значение:
//		Число - возраст оборудования в годах.
//
Функция ВычислитьВремяРаботыОборудованияСУчетомГрафика(Ссылка, СчитатьВозрастОтДатыИзготовления) Экспорт
	
	Перем МинГод;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	МассивГрафиков = Новый Массив;
	МассивГрафиков.Добавить(Ссылка.ПлановыйГрафикРаботы);
	Если СчитатьВозрастОтДатыИзготовления Тогда
		НачГод = Год(Ссылка.ДатаВыпуска);
	Иначе
		НачГод = Год(Ссылка.ДатаВводаВЭксплуатацию);
	КонецЕсли;
	
	КалендарныеГрафики.СоздатьВТРасписанияРаботыНаПериод(МенеджерВТ, МассивГрафиков, НачГод, ТекущаяДата());
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГОД(ВТРасписанияРаботы.ДатаГрафика) КАК ГодРаботы,
	|	СУММА(РАЗНОСТЬДАТ(ВТРасписанияРаботы.ВремяНачала, ВТРасписанияРаботы.ВремяОкончания, СЕКУНДА)) КАК ОсновноеЗначение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТРасписанияРаботы.ДатаГрафика) КАК КоличествоРабочихДней
	|ПОМЕСТИТЬ ВТРасписанияРаботыИзм
	|ИЗ
	|	ВТРасписанияРаботы КАК ВТРасписанияРаботы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТРасписанияРаботы.ГрафикРаботы,
	|	ГОД(ВТРасписанияРаботы.ДатаГрафика)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРасписанияРаботыИзм.ГодРаботы,
	|	ВТРасписанияРаботыИзм.ОсновноеЗначение,
	|	ВТРасписанияРаботыИзм.КоличествоРабочихДней
	|ИЗ
	|	ВТРасписанияРаботыИзм КАК ВТРасписанияРаботыИзм
	|ГДЕ
	|	ВТРасписанияРаботыИзм.ОсновноеЗначение > 0";
	
	
	ТабРезультат = Запрос.Выполнить().Выгрузить();
	
	КолРабДней = 0;
	
	Для каждого СтрокаТаб Из ТабРезультат Цикл
		КолРабДней = КолРабДней + СтрокаТаб.КоличествоРабочихДней;
	КонецЦикла;
	
	Если ТабРезультат.Количество() > 0 Тогда
		МинГод = ТабРезультат[0].ГодРаботы;
	КонецЕсли;
	
	Если МинГод = Неопределено Тогда
		ВозрастОборудования = Год(ТекущаяДата()) - Год(НачГод) + 1;
	Иначе
		ВозрастОборудования = МинГод - НачГод + КолРабДней / 365;
	КонецЕсли;
	
	Возврат ВозрастОборудования;
	
КонецФункции

Функция ПолучитьТаблицуНормативныхРемонтов(ОбъектРемонта, ТолькоДействующие = Истина) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Возврат Новый Массив;
	КонецЕсли;
		
	Если ТипЗнч(ОбъектРемонта) = Тип("СправочникСсылка.торо_ТиповыеОР") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_НормативныеРемонтыОборудования.ВидРемонта КАК ВидРемонта,
		|	торо_НормативныеРемонтыОборудования.Ссылка КАК ТиповойОР,
		|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК НормативныйРемонт,
		|	торо_НормативныеРемонтыОборудования.СпособПланирования КАК СпособПланирования,
		|	торо_НормативныеРемонтыОборудования.ГрафикРемонтныхРабот КАК ГрафикРемонтныхРабот,
		|	торо_НормативныеРемонтыОборудования.СпособВыполнения КАК СпособВыполнения,
		|	торо_НормативныеРемонтыОборудования.НеИспользоватьВПланированииДатуВводаВЭксплуатацию КАК НеИспользоватьВПланированииДатуВводаВЭксплуатацию,
		|	торо_НормативныеРемонтыОборудования.СпособУчетаДатыОтсчета КАК СпособУчетаДатыОтсчета,
		|	торо_НормативныеРемонтыОборудования.НеУчаствуетВПланировании КАК НеУчаствуетВПланировании,
		|	торо_НормативныеРемонтыОборудования.РазрешитьСокращатьМежремонтныйПериодПриПланировании КАК РазрешитьСокращатьМежремонтныйПериодПриПланировании,
		|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРаботыОборудования КАК НеУчитыватьПриПланированииГрафикРаботыОборудования,
		|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРемонтныхРабот КАК НеУчитыватьПриПланированииГрафикРемонтныхРабот,
		|	торо_НормативныеРемонтыОборудования.НеУчитыватьПродолжительность КАК НеУчитыватьПродолжительность,
		|	торо_НормативныеРемонтыОборудования.ИспользоватьКоэффициентыРемонтныхОсобенностей КАК ИспользоватьКоэффициентыРемонтныхОсобенностей,
		|	торо_НормативныеРемонтыОборудования.УчитыватьПростоиОборудования КАК УчитыватьПростоиОборудования,
		|	торо_НормативныеРемонтыОборудования.РассчитыватьНаработкуВПростое КАК РассчитыватьНаработкуВПростое,
		|	торо_НормативныеРемонтыОборудования.ИспользоватьДатыЗамещающихРемонтов КАК ИспользоватьДатыЗамещающихРемонтов,
		|	ЛОЖЬ КАК Удален
		|ИЗ
		|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_НормативныеРемонтыОборудования
		|ГДЕ
		|	торо_НормативныеРемонтыОборудования.Ссылка = &Ссылка
		|	И торо_НормативныеРемонтыОборудования.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)";
		
		Если НЕ ТолькоДействующие Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НормативныеРемонтыОборудования.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)", "");
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектРемонта);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_НормативныеРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_НормативныеРемонтыОборудования.ВидРемонта КАК ВидРемонта,
		|	торо_НормативныеРемонтыОборудования.ТиповойОР КАК ТиповойОР,
		|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК НормативныйРемонт,
		|	торо_НормативныеРемонтыОборудования.СпособПланирования КАК СпособПланирования,
		|	торо_НормативныеРемонтыОборудования.ГрафикРемонтныхРабот КАК ГрафикРемонтныхРабот,
		|	торо_НормативныеРемонтыОборудования.СпособВыполнения КАК СпособВыполнения,
		|	торо_НормативныеРемонтыОборудования.НеИспользоватьВПланированииДатуВводаВЭксплуатацию КАК НеИспользоватьВПланированииДатуВводаВЭксплуатацию,
		|	торо_НормативныеРемонтыОборудования.СпособУчетаДатыОтсчета КАК СпособУчетаДатыОтсчета,
		|	торо_НормативныеРемонтыОборудования.НеУчаствуетВПланировании КАК НеУчаствуетВПланировании,
		|	торо_НормативныеРемонтыОборудования.РазрешитьСокращатьМежремонтныйПериодПриПланировании КАК РазрешитьСокращатьМежремонтныйПериодПриПланировании,
		|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРаботыОборудования КАК НеУчитыватьПриПланированииГрафикРаботыОборудования,
		|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРемонтныхРабот КАК НеУчитыватьПриПланированииГрафикРемонтныхРабот,
		|	торо_НормативныеРемонтыОборудования.НеУчитыватьПродолжительность КАК НеУчитыватьПродолжительность,
		|	торо_НормативныеРемонтыОборудования.ИспользоватьКоэффициентыРемонтныхОсобенностей КАК ИспользоватьКоэффициентыРемонтныхОсобенностей,
		|	торо_НормативныеРемонтыОборудования.УчитыватьПростоиОборудования КАК УчитыватьПростоиОборудования,
		|	ВЫБОР
		|		КОГДА торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Удален,
		|	торо_НормативныеРемонтыОборудования.СтратегияОбслуживания КАК СтратегияОбслуживания,
		|	торо_НормативныеРемонтыОборудования.ИсточникСтратегии КАК ИсточникСтратегии,
		|	торо_НормативныеРемонтыОборудования.РассчитыватьНаработкуВПростое КАК РассчитыватьНаработкуВПростое,
		|	торо_НормативныеРемонтыОборудования.ИспользоватьДатыЗамещающихРемонтов КАК ИспользоватьДатыЗамещающихРемонтов
		|ИЗ
		|	РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудованияУдаленные КАК торо_НормативныеРемонтыОборудованияУдаленные
		|		ПО торо_НормативныеРемонтыОборудования.ОбъектРемонта = торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта
		|			И торо_НормативныеРемонтыОборудования.ВидРемонта = торо_НормативныеРемонтыОборудованияУдаленные.ВидРемонта
		|			И торо_НормативныеРемонтыОборудования.ТиповойОР = торо_НормативныеРемонтыОборудованияУдаленные.ТиповойОР
		|ГДЕ
		|	торо_НормативныеРемонтыОборудования.ОбъектРемонта = &ОбъектРемонта";
		
		Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураВозврата = торо_ОбщегоНазначения.РезультатЗапросаВМассивСтруктур(РезультатЗапроса);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьТаблицуПредшествующихРемонтов(ОбъектРемонта) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектРемонта) = Тип("СправочникСсылка.торо_ТиповыеОР") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ТиповыеОРНормативныеРемонты.ВидРемонта,
		|	торо_ТиповыеОРНормативныеРемонты.Ссылка
		|ПОМЕСТИТЬ ДействующиеВР
		|ИЗ
		|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_ТиповыеОРНормативныеРемонты
		|ГДЕ
		|	торо_ТиповыеОРНормативныеРемонты.Ссылка = &Ссылка
		|	И торо_ТиповыеОРНормативныеРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ТиповыеОРПредшествующиеРемонты.ВидРемонта,
		|	торо_ТиповыеОРПредшествующиеРемонты.ПредшествующийВидРемонта,
		|	торо_ТиповыеОРПредшествующиеРемонты.Ссылка КАК ТиповойОР
		|ИЗ
		|	ДействующиеВР КАК торо_ТиповыеОРНормативныеРемонты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеОР.ПредшествующиеРемонты КАК торо_ТиповыеОРПредшествующиеРемонты
		|		ПО торо_ТиповыеОРНормативныеРемонты.Ссылка = торо_ТиповыеОРПредшествующиеРемонты.Ссылка
		|			И торо_ТиповыеОРНормативныеРемонты.ВидРемонта = торо_ТиповыеОРПредшествующиеРемонты.ВидРемонта
		|			И (торо_ТиповыеОРПредшествующиеРемонты.ПредшествующийВидРемонта В
		|				(ВЫБРАТЬ
		|					ДействующиеВР.ВидРемонта
		|				ИЗ
		|					ДействующиеВР КАК ДействующиеВР))";
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектРемонта);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ПредшествующиеНормативныеРемонтыОборудования.ВидРемонта,
		|	торо_ПредшествующиеНормативныеРемонтыОборудования.ПредшествующийВидРемонта,
		|	торо_ПредшествующиеНормативныеРемонтыОборудования.ТиповойОР
		|ИЗ
		|	РегистрСведений.торо_ПредшествующиеНормативныеРемонтыОборудования КАК торо_ПредшествующиеНормативныеРемонтыОборудования
		|ГДЕ
		|	торо_ПредшествующиеНормативныеРемонтыОборудования.ОбъектРемонта = &ОбъектРемонта";
		
		Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураВозврата = торо_ОбщегоНазначения.РезультатЗапросаВМассивСтруктур(РезультатЗапроса);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьТаблицуЗамещаемыхРемонтов(ОбъектРемонта) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектРемонта) = Тип("СправочникСсылка.торо_ТиповыеОР") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ТиповыеОРНормативныеРемонты.ВидРемонта,
		|	торо_ТиповыеОРНормативныеРемонты.Ссылка
		|ПОМЕСТИТЬ ДействующиеВР
		|ИЗ
		|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_ТиповыеОРНормативныеРемонты
		|ГДЕ
		|	торо_ТиповыеОРНормативныеРемонты.Ссылка = &Ссылка
		|	И торо_ТиповыеОРНормативныеРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ТиповыеОРЗамещаемыеРемонты.Ссылка КАК ТиповойОР,
		|	торо_ТиповыеОРЗамещаемыеРемонты.ВидРемонта,
		|	торо_ТиповыеОРЗамещаемыеРемонты.ЗамещаемыйВидРемонта,
		|	торо_ТиповыеОРЗамещаемыеРемонты.СпособЗамещения,
		|	торо_ТиповыеОРЗамещаемыеРемонты.НачальнаяГраница,
		|	торо_ТиповыеОРЗамещаемыеРемонты.КонечнаяГраница
		|ИЗ
		|	ДействующиеВР КАК торо_ТиповыеОРНормативныеРемонты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеОР.ЗамещаемыеРемонты КАК торо_ТиповыеОРЗамещаемыеРемонты
		|		ПО торо_ТиповыеОРНормативныеРемонты.Ссылка = торо_ТиповыеОРЗамещаемыеРемонты.Ссылка
		|			И торо_ТиповыеОРНормативныеРемонты.ВидРемонта = торо_ТиповыеОРЗамещаемыеРемонты.ВидРемонта
		|			И (торо_ТиповыеОРЗамещаемыеРемонты.ЗамещаемыйВидРемонта В
		|				(ВЫБРАТЬ
		|					ДействующиеВР.ВидРемонта
		|				ИЗ
		|					ДействующиеВР КАК ДействующиеВР))";
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектРемонта);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ВидРемонта,
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ЗамещаемыйВидРемонта,
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ТиповойОР,
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.СпособЗамещения,
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.НачальнаяГраница,
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.КонечнаяГраница
		|ИЗ
		|	РегистрСведений.торо_ПараметрыЗамещенияПланированияРемонтныхРабот КАК торо_ПараметрыЗамещенияПланированияРемонтныхРабот
		|ГДЕ
		|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ОбъектРемонта = &ОбъектРемонта";
		
		Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
		
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	СтруктураВозврата = торо_ОбщегоНазначения.РезультатЗапросаВМассивСтруктур(РезультатЗапроса);
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Процедура выполняет копирование нормативов типового объекта ремонта, которые не хранятся в табличных частях.
//
// Параметры:
//		КопируемыйЭлемент - СправочникСсылка.торо_ТиповыеОР - типовой объект, нормативы которого надо скопировать.
//		НовыйЭлемент - СправочникСсылка.торо_ТиповыеОР - типовой объект, для которого их надо записать.
//
Процедура СкопироватьНормативыТиповогоОР(КопируемыйЭлемент, НовыйЭлемент) Экспорт
	
	СкопироватьНормативыТиповогоОР_КонтролируемыеПоказатели(КопируемыйЭлемент, НовыйЭлемент);
	СкопироватьНормативыТиповогоОР_ПараметрыНаработки(КопируемыйЭлемент, НовыйЭлемент);
	СкопироватьНормативыТиповогоОР_ФиксированныеРемонтныеЦиклы(КопируемыйЭлемент, НовыйЭлемент);
	СкопироватьНормативыТиповогоОР_ОценкиРискМенеджмента(КопируемыйЭлемент, НовыйЭлемент);
	
КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ДобавитьПустуюЗаписьНаличияНормативов(ОбъектРемонта) Экспорт
	
	Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
	Запись.ОбъектРемонта = ОбъектРемонта;
	Запись.Записать();
	
КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ОбновитьСвойствоОР_ЕстьИзмеряемыеПоказатели(ОбъектРемонтаИлиТиповой) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ОбъектРемонтаИлиТиповой) = Тип("СправочникСсылка.торо_ОбъектыРемонта") 
		ИЛИ ТипЗнч(ОбъектРемонтаИлиТиповой) = Тип("Массив") Тогда
		
		ТаблицаПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(ОбъектРемонтаИлиТиповой, Неопределено, Ложь, Ложь, Неопределено, Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка КАК ОбъектРемонта,
		|	ВЫБОР
		|		КОГДА торо_ОбъектыРемонта.Ссылка В (&ОбъектыСПоказателями)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьИзмеряемыеПоказатели
		|ПОМЕСТИТЬ ВТ_ОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.Ссылка В(&Ссылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОР.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ОР.ЕстьИзмеряемыеПоказатели КАК ЕстьИзмеряемыеПоказатели
		|ИЗ
		|	ВТ_ОР КАК ВТ_ОР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
		|		ПО ВТ_ОР.ОбъектРемонта = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
		|ГДЕ
		|	ВТ_ОР.ЕстьИзмеряемыеПоказатели <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьИзмеряемыеПоказатели, ЛОЖЬ)";
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектРемонтаИлиТиповой);
		Запрос.УстановитьПараметр("ОбъектыСПоказателями", ТаблицаПоказателей.ВыгрузитьКолонку("ОбъектРемонта"));
		
	Иначе
		
		Запрос = Новый запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ТиповыеОР.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.торо_ТиповыеОР КАК торо_ТиповыеОР
		|ГДЕ
		|	торо_ТиповыеОР.Ссылка В ИЕРАРХИИ(&ТиповойОР)
		|	И НЕ торо_ТиповыеОР.ЭтоГруппа";
		
		Запрос.УстановитьПараметр("ТиповойОР", ОбъектРемонтаИлиТиповой);
		
		МассивТиповых = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		ТаблицаРодителейТиповых = торо_ОбщегоНазначения.ПолучитьТаблицуРодителейСпискаОбъектов(МассивТиповых, Тип("СправочникСсылка.торо_ТиповыеОР"), Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаРодителей.Объект КАК Объект,
		|	ТаблицаРодителей.Родитель КАК Родитель,
		|	ТаблицаРодителей.Уровень КАК Уровень
		|ПОМЕСТИТЬ ТаблицаРодителейТиповыхОР
		|ИЗ
		|	&ТаблицаРодителей КАК ТаблицаРодителей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка КАК ОбъектРемонта,
		|	ТаблицаРодителейТиповыхОР.Родитель КАК ТиповойОР,
		|	ТаблицаРодителейТиповыхОР.Объект КАК КонечныйТиповой
		|ПОМЕСТИТЬ ТаблицаТиповыхОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРодителейТиповыхОР КАК ТаблицаРодителейТиповыхОР
		|		ПО торо_ОбъектыРемонта.ТиповойОР = ТаблицаРодителейТиповыхОР.Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТиповыхОР.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ВТ_ОР
		|ИЗ
		|	ТаблицаТиповыхОР КАК ТаблицаТиповыхОР
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель КАК Показатель,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален КАК Удален
		|ПОМЕСТИТЬ ПоказателиОРИТиповогоОР
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОР КАК ВТ_ОР
		|		ПО торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта = ВТ_ОР.ОбъектРемонта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТиповыхОР.ОбъектРемонта,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТиповыхОР КАК ТаблицаТиповыхОР
		|		ПО ((ВЫРАЗИТЬ(торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта КАК Справочник.торо_ТиповыеОР)) = ТаблицаТиповыхОР.ТиповойОР)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПриоритетовПолная.ОбъектРемонта КАК ОбъектРемонта,
		|	ТаблицаПриоритетовПолная.Показатель КАК Показатель,
		|	МАКСИМУМ(ТаблицаПриоритетовПолная.Удален) КАК Удален
		|ПОМЕСТИТЬ ВТ_НеудаленныеПоказатели
		|ИЗ
		|	ПоказателиОРИТиповогоОР КАК ТаблицаПриоритетовПолная
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПриоритетовПолная.ОбъектРемонта,
		|	ТаблицаПриоритетовПолная.Показатель
		|
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(ТаблицаПриоритетовПолная.Удален) = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_НеудаленныеПоказатели.ОбъектРемонта КАК ОбъектРемонта,
		|	ИСТИНА КАК ЕстьИзмеряемыеПоказатели
		|ПОМЕСТИТЬ ВТ_ОРСПоказателями
		|ИЗ
		|	ВТ_НеудаленныеПоказатели КАК ВТ_НеудаленныеПоказатели
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОР.ОбъектРемонта КАК ОбъектРемонта,
		|	ЕСТЬNULL(ВТ_ОРСПоказателями.ЕстьИзмеряемыеПоказатели, ЛОЖЬ) КАК ЕстьИзмеряемыеПоказатели
		|ИЗ
		|	ВТ_ОР КАК ВТ_ОР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОРСПоказателями КАК ВТ_ОРСПоказателями
		|		ПО ВТ_ОР.ОбъектРемонта = ВТ_ОРСПоказателями.ОбъектРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
		|		ПО ВТ_ОР.ОбъектРемонта = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
		|ГДЕ
		|	ЕСТЬNULL(ВТ_ОРСПоказателями.ЕстьИзмеряемыеПоказатели, ЛОЖЬ) <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьИзмеряемыеПоказатели, ЛОЖЬ)";
		
		Запрос.УстановитьПараметр("ТиповойОР", ОбъектРемонтаИлиТиповой);
		Запрос.УстановитьПараметр("ТаблицаРодителей", ТаблицаРодителейТиповых);
	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.Прочитать();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.ЕстьИзмеряемыеПоказатели = Выборка.ЕстьИзмеряемыеПоказатели;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ОбновитьСвойствоОР_ЕстьПараметрыНаработки(ОбъектРемонта) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ОР
	|ИЗ
	|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	|ГДЕ
	|	торо_ОбъектыРемонта.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|	ИСТИНА КАК ЕстьПараметрыНаработки
	|ПОМЕСТИТЬ ВТ_ОРСПоказателями
	|ИЗ
	|	ВТ_ОР КАК ВТ_ОР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО ВТ_ОР.Ссылка = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОР.Ссылка КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_ОРСПоказателями.ЕстьПараметрыНаработки, ЛОЖЬ) КАК ЕстьПараметрыНаработки
	|ИЗ
	|	ВТ_ОР КАК ВТ_ОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОРСПоказателями КАК ВТ_ОРСПоказателями
	|		ПО ВТ_ОР.Ссылка = ВТ_ОРСПоказателями.ОбъектРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
	|		ПО ВТ_ОР.Ссылка = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
	|ГДЕ
	|	ЕСТЬNULL(ВТ_ОРСПоказателями.ЕстьПараметрыНаработки, ЛОЖЬ) <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьПараметрыНаработки, ЛОЖЬ)";
	
	Запрос.УстановитьПараметр("Ссылка", ОбъектРемонта);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.Прочитать();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.ЕстьПараметрыНаработки = Выборка.ЕстьПараметрыНаработки;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ОбновитьСвойствоОР_ЕстьНормативныеРемонты(ОбъектРемонтаИлиТиповой) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ТипЗнч(ОбъектРемонтаИлиТиповой) = Тип("СправочникСсылка.торо_ОбъектыРемонта") 
		ИЛИ ТипЗнч(ОбъектРемонтаИлиТиповой) = Тип("Массив") Тогда

		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.Ссылка В(&Ссылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";		
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектРемонтаИлиТиповой);
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.ТиповойОР = &ТиповойОР
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";		
		
		Запрос.УстановитьПараметр("ТиповойОР", ОбъектРемонтаИлиТиповой);
		Запрос.Выполнить();

	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ_ОР.Ссылка КАК ОбъектРемонта,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			КОГДА торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНормативныеРемонты,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			КОГДА торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта ЕСТЬ NULL
	|				ТОГДА НЕ торо_НормативныеРемонтыОборудования.НеУчаствуетВПланировании
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНормативныеРемонтыДоступныеДляПодбора
	|ПОМЕСТИТЬ ВТ_НаличиеНормативов
	|ИЗ
	|	ВТ_ОР КАК ВТ_ОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудованияУдаленные КАК торо_НормативныеРемонтыОборудованияУдаленные
	|			ПО торо_НормативныеРемонтыОборудования.ОбъектРемонта = торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта
	|				И торо_НормативныеРемонтыОборудования.ВидРемонта = торо_НормативныеРемонтыОборудованияУдаленные.ВидРемонта
	|		ПО ВТ_ОР.Ссылка = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОР.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НаличиеНормативов.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_НаличиеНормативов.ЕстьНормативныеРемонты КАК ЕстьНормативныеРемонты,
	|	ВТ_НаличиеНормативов.ЕстьНормативныеРемонтыДоступныеДляПодбора КАК ЕстьНормативныеРемонтыДоступныеДляПодбора
	|ИЗ
	|	ВТ_НаличиеНормативов КАК ВТ_НаличиеНормативов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
	|		ПО ВТ_НаличиеНормативов.ОбъектРемонта = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
	|ГДЕ
	|	(ВТ_НаличиеНормативов.ЕстьНормативныеРемонты <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьНормативныеРемонты, ЛОЖЬ)
	|			ИЛИ ВТ_НаличиеНормативов.ЕстьНормативныеРемонтыДоступныеДляПодбора <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьНормативныеРемонтыДоступныеДляПодбора, ЛОЖЬ))";

	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.Прочитать();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.ЕстьНормативныеРемонты = Выборка.ЕстьНормативныеРемонты;
		Запись.ЕстьНормативныеРемонтыДоступныеДляПодбора = Выборка.ЕстьНормативныеРемонтыДоступныеДляПодбора;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ОбновитьСвойствоОР_ЕстьЦепочкиРемонтов(ОбъектРемонтаИлиТиповой) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ТипЗнч(ОбъектРемонтаИлиТиповой) = Тип("СправочникСсылка.торо_ОбъектыРемонта") 
		ИЛИ ТипЗнч(ОбъектРемонтаИлиТиповой) = Тип("Массив") Тогда

		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.Ссылка В(&Ссылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";		
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектРемонтаИлиТиповой);
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.ТиповойОР = &ТиповойОР
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";		
		
		Запрос.УстановитьПараметр("ТиповойОР", ОбъектРемонтаИлиТиповой);
		Запрос.Выполнить();

	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ_ОР.Ссылка КАК ОбъектРемонта,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_РемонтныеЦиклыОборудования.ВидЦепочки ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьЦепочкиРемонтов
	|ПОМЕСТИТЬ ВТ_НаличиеНормативов
	|ИЗ
	|	ВТ_ОР КАК ВТ_ОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
	|		ПО ВТ_ОР.Ссылка = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОР.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НаличиеНормативов.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_НаличиеНормативов.ЕстьЦепочкиРемонтов КАК ЕстьЦепочкиРемонтов
	|ИЗ
	|	ВТ_НаличиеНормативов КАК ВТ_НаличиеНормативов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
	|		ПО ВТ_НаличиеНормативов.ОбъектРемонта = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
	|ГДЕ
	|	ВТ_НаличиеНормативов.ЕстьЦепочкиРемонтов <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьЦепочкиРемонтов, ЛОЖЬ)";

	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.Прочитать();
		Запись.ОбъектРемонта = Выборка.ОбъектРемонта;
		Запись.ЕстьЦепочкиРемонтов = Выборка.ЕстьЦепочкиРемонтов;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ОбновитьСвойствоСпискаОбъектовРМ_ЕстьНормативныеРемонты(СписокОбъектовРМ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СписокОбъектовРегламентногоМероприятия.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_СписокОР
	|ИЗ
	|	Справочник.торо_СписокОбъектовРегламентногоМероприятия КАК торо_СписокОбъектовРегламентногоМероприятия
	|ГДЕ
	|	торо_СписокОбъектовРегламентногоМероприятия.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокОР.Ссылка КАК СписокОбъектов,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьНормативныеРемонты,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ НЕ торо_РегламентныеМероприятияИСпискиОбъектов.НеУчаствуетВПланировании
	|		КОНЕЦ) КАК ЕстьНормативныеРемонтыДоступныеДляПодбора
	|ПОМЕСТИТЬ ВТ_НаличиеНормативов
	|ИЗ
	|	ВТ_СписокОР КАК ВТ_СписокОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
	|		ПО ВТ_СписокОР.Ссылка = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокОР.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НаличиеНормативов.СписокОбъектов КАК СписокОбъектов,
	|	ВТ_НаличиеНормативов.ЕстьНормативныеРемонты КАК ЕстьНормативныеРемонты,
	|	ВТ_НаличиеНормативов.ЕстьНормативныеРемонтыДоступныеДляПодбора КАК ЕстьНормативныеРемонтыДоступныеДляПодбора
	|ИЗ
	|	ВТ_НаличиеНормативов КАК ВТ_НаличиеНормативов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
	|		ПО ВТ_НаличиеНормативов.СписокОбъектов = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
	|ГДЕ
	|	(ВТ_НаличиеНормативов.ЕстьНормативныеРемонты <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьНормативныеРемонты, ЛОЖЬ)
	|			ИЛИ ВТ_НаличиеНормативов.ЕстьНормативныеРемонтыДоступныеДляПодбора <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьНормативныеРемонтыДоступныеДляПодбора, ЛОЖЬ))";
	
	Запрос.УстановитьПараметр("Ссылка", СписокОбъектовРМ);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
		Запись.ОбъектРемонта = Выборка.СписокОбъектов;
		Запись.Прочитать();
		Запись.ОбъектРемонта = Выборка.СписокОбъектов;
		Запись.ЕстьНормативныеРемонты = Выборка.ЕстьНормативныеРемонты;
		Запись.ЕстьНормативныеРемонтыДоступныеДляПодбора = Выборка.ЕстьНормативныеРемонтыДоступныеДляПодбора;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Обновление регистра торо_НаличиеНормативовОбъектовРемонта.
Процедура ОбновитьНаличиеНормативовОРПриИзмененииТиповогоОР(ОбъектРемонтаИлиМассив) Экспорт
	
	МассивОР = ОбщегоНазначенияУТКлиентСервер.Массив(ОбъектРемонтаИлиМассив);
	ТаблицаПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(МассивОР, Неопределено, Ложь, Ложь, Неопределено, Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ОбъектыРемонта.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА торо_ОбъектыРемонта.Ссылка В (&ОбъектыСПоказателями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьИзмеряемыеПоказатели
	|ПОМЕСТИТЬ ВТ_ОР
	|ИЗ
	|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	|ГДЕ
	|	торо_ОбъектыРемонта.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОР.Ссылка КАК ОбъектРемонта,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			КОГДА торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНормативныеРемонты,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			КОГДА торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта ЕСТЬ NULL
	|				ТОГДА НЕ торо_НормативныеРемонтыОборудования.НеУчаствуетВПланировании
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьНормативныеРемонтыДоступныеДляПодбора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_РемонтныеЦиклыОборудования.ВидЦепочки ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьЦепочкиРемонтов,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_ПараметрыНаработкиОбъектовРемонта.Показатель ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьПараметрыНаработки,
	|	МАКСИМУМ(ВТ_ОР.ЕстьИзмеряемыеПоказатели) КАК ЕстьИзмеряемыеПоказатели
	|ПОМЕСТИТЬ ВТ_НаличиеНормативов
	|ИЗ
	|	ВТ_ОР КАК ВТ_ОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудованияУдаленные КАК торо_НормативныеРемонтыОборудованияУдаленные
	|			ПО торо_НормативныеРемонтыОборудования.ОбъектРемонта = торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта
	|				И торо_НормативныеРемонтыОборудования.ВидРемонта = торо_НормативныеРемонтыОборудованияУдаленные.ВидРемонта
	|		ПО ВТ_ОР.Ссылка = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
	|		ПО ВТ_ОР.Ссылка = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО ВТ_ОР.Ссылка = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОР.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НаличиеНормативов.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_НаличиеНормативов.ЕстьНормативныеРемонты КАК ЕстьНормативныеРемонты,
	|	ВТ_НаличиеНормативов.ЕстьНормативныеРемонтыДоступныеДляПодбора КАК ЕстьНормативныеРемонтыДоступныеДляПодбора,
	|	ВТ_НаличиеНормативов.ЕстьЦепочкиРемонтов КАК ЕстьЦепочкиРемонтов,
	|	ВТ_НаличиеНормативов.ЕстьПараметрыНаработки КАК ЕстьПараметрыНаработки,
	|	ВТ_НаличиеНормативов.ЕстьИзмеряемыеПоказатели КАК ЕстьИзмеряемыеПоказатели
	|ИЗ
	|	ВТ_НаличиеНормативов КАК ВТ_НаличиеНормативов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НаличиеНормативовОбъектовРемонта КАК торо_НаличиеНормативовОбъектовРемонта
	|		ПО ВТ_НаличиеНормативов.ОбъектРемонта = торо_НаличиеНормативовОбъектовРемонта.ОбъектРемонта
	|ГДЕ
	|	(ВТ_НаличиеНормативов.ЕстьНормативныеРемонты <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьНормативныеРемонты, ЛОЖЬ)
	|			ИЛИ ВТ_НаличиеНормативов.ЕстьНормативныеРемонтыДоступныеДляПодбора <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьНормативныеРемонтыДоступныеДляПодбора, ЛОЖЬ)
	|			ИЛИ ВТ_НаличиеНормативов.ЕстьЦепочкиРемонтов <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьЦепочкиРемонтов, ЛОЖЬ)
	|			ИЛИ ВТ_НаличиеНормативов.ЕстьИзмеряемыеПоказатели <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьИзмеряемыеПоказатели, ЛОЖЬ)
	|			ИЛИ ВТ_НаличиеНормативов.ЕстьПараметрыНаработки <> ЕСТЬNULL(торо_НаличиеНормативовОбъектовРемонта.ЕстьПараметрыНаработки, ЛОЖЬ))";		
		
	Запрос.УстановитьПараметр("Ссылка", МассивОР);
	Запрос.УстановитьПараметр("ОбъектыСПоказателями", ТаблицаПоказателей.ВыгрузитьКолонку("ОбъектРемонта"));
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_НаличиеНормативовОбъектовРемонта.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьНормативыОРПриИзмененииТиповогоОР_НормативныеРемонты(ТиповойОРСсылка, ОРСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ОРссылка КАК ОбъектРемонта,
	|	торо_НормативныеРемонтыОборудования.ВидРемонта КАК ВидРемонта,
	|	торо_НормативныеРемонтыОборудования.Ссылка КАК ТиповойОР,
	|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК НормативныйРемонт,
	|	торо_НормативныеРемонтыОборудования.СпособПланирования КАК СпособПланирования,
	|	торо_НормативныеРемонтыОборудования.ГрафикРемонтныхРабот КАК ГрафикРемонтныхРабот,
	|	торо_НормативныеРемонтыОборудования.СпособВыполнения КАК СпособВыполнения,
	|	торо_НормативныеРемонтыОборудования.НеИспользоватьВПланированииДатуВводаВЭксплуатацию КАК НеИспользоватьВПланированииДатуВводаВЭксплуатацию,
	|	торо_НормативныеРемонтыОборудования.СпособУчетаДатыОтсчета КАК СпособУчетаДатыОтсчета,
	|	торо_НормативныеРемонтыОборудования.НеУчаствуетВПланировании КАК НеУчаствуетВПланировании,
	|	торо_НормативныеРемонтыОборудования.РазрешитьСокращатьМежремонтныйПериодПриПланировании КАК РазрешитьСокращатьМежремонтныйПериодПриПланировании,
	|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРаботыОборудования КАК НеУчитыватьПриПланированииГрафикРаботыОборудования,
	|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРемонтныхРабот КАК НеУчитыватьПриПланированииГрафикРемонтныхРабот,
	|	торо_НормативныеРемонтыОборудования.НеУчитыватьПродолжительность КАК НеУчитыватьПродолжительность,
	|	торо_НормативныеРемонтыОборудования.ИспользоватьКоэффициентыРемонтныхОсобенностей КАК ИспользоватьКоэффициентыРемонтныхОсобенностей,
	|	торо_НормативныеРемонтыОборудования.УчитыватьПростоиОборудования КАК УчитыватьПростоиОборудования,
	|	0 КАК Приоритет,
	|	ЗНАЧЕНИЕ(Справочник.торо_СтратегииОбслуживания.ПустаяСсылка) КАК СтратегияОбслуживания,
	|	"""" КАК ИсточникСтратегии,
	|	торо_НормативныеРемонтыОборудования.РассчитыватьНаработкуВПростое КАК РассчитыватьНаработкуВПростое,
	|	торо_НормативныеРемонтыОборудования.ИспользоватьДатыЗамещающихРемонтов КАК ИспользоватьДатыЗамещающихРемонтов
	|ПОМЕСТИТЬ ТабБазПриоритетов
	|ИЗ
	|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_НормативныеРемонтыОборудования
	|ГДЕ
	|	торо_НормативныеРемонтыОборудования.Ссылка = &НовТиповойОР
	|	И торо_НормативныеРемонтыОборудования.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_НормативныеРемонтыОборудования.ОбъектРемонта,
	|	торо_НормативныеРемонтыОборудования.ВидРемонта,
	|	торо_НормативныеРемонтыОборудования.ТиповойОР,
	|	торо_НормативныеРемонтыОборудования.НормативныйРемонт,
	|	торо_НормативныеРемонтыОборудования.СпособПланирования,
	|	торо_НормативныеРемонтыОборудования.ГрафикРемонтныхРабот,
	|	торо_НормативныеРемонтыОборудования.СпособВыполнения,
	|	торо_НормативныеРемонтыОборудования.НеИспользоватьВПланированииДатуВводаВЭксплуатацию,
	|	торо_НормативныеРемонтыОборудования.СпособУчетаДатыОтсчета,
	|	торо_НормативныеРемонтыОборудования.НеУчаствуетВПланировании,
	|	торо_НормативныеРемонтыОборудования.РазрешитьСокращатьМежремонтныйПериодПриПланировании,
	|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРаботыОборудования,
	|	торо_НормативныеРемонтыОборудования.НеУчитыватьПриПланированииГрафикРемонтныхРабот,
	|	торо_НормативныеРемонтыОборудования.НеУчитыватьПродолжительность,
	|	торо_НормативныеРемонтыОборудования.ИспользоватьКоэффициентыРемонтныхОсобенностей,
	|	торо_НормативныеРемонтыОборудования.УчитыватьПростоиОборудования,
	|	1,
	|	торо_НормативныеРемонтыОборудования.СтратегияОбслуживания,
	|	торо_НормативныеРемонтыОборудования.ИсточникСтратегии,
	|	торо_НормативныеРемонтыОборудования.РассчитыватьНаработкуВПростое,
	|	торо_НормативныеРемонтыОборудования.ИспользоватьДатыЗамещающихРемонтов
	|ИЗ
	|	РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	|ГДЕ
	|	торо_НормативныеРемонтыОборудования.ОбъектРемонта = &ОРСсылка
	|	И торо_НормативныеРемонтыОборудования.ТиповойОР = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабБазПриоритетов.ОбъектРемонта КАК ОбъектРемонта,
	|	ТабБазПриоритетов.ВидРемонта КАК ВидРемонта,
	|	МАКСИМУМ(ТабБазПриоритетов.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ТабПриоритетов
	|ИЗ
	|	ТабБазПриоритетов КАК ТабБазПриоритетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабБазПриоритетов.ОбъектРемонта,
	|	ТабБазПриоритетов.ВидРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабБазПриоритетов.ОбъектРемонта КАК ОбъектРемонта,
	|	ТабБазПриоритетов.ВидРемонта КАК ВидРемонта,
	|	ТабБазПриоритетов.ТиповойОР КАК ТиповойОР,
	|	ТабБазПриоритетов.НормативныйРемонт КАК НормативныйРемонт,
	|	ТабБазПриоритетов.СпособПланирования КАК СпособПланирования,
	|	ТабБазПриоритетов.ГрафикРемонтныхРабот КАК ГрафикРемонтныхРабот,
	|	ТабБазПриоритетов.СпособВыполнения КАК СпособВыполнения,
	|	ТабБазПриоритетов.НеИспользоватьВПланированииДатуВводаВЭксплуатацию КАК НеИспользоватьВПланированииДатуВводаВЭксплуатацию,
	|	ТабБазПриоритетов.СпособУчетаДатыОтсчета КАК СпособУчетаДатыОтсчета,
	|	ТабБазПриоритетов.НеУчаствуетВПланировании КАК НеУчаствуетВПланировании,
	|	ТабБазПриоритетов.РазрешитьСокращатьМежремонтныйПериодПриПланировании КАК РазрешитьСокращатьМежремонтныйПериодПриПланировании,
	|	ТабБазПриоритетов.НеУчитыватьПриПланированииГрафикРаботыОборудования КАК НеУчитыватьПриПланированииГрафикРаботыОборудования,
	|	ТабБазПриоритетов.НеУчитыватьПриПланированииГрафикРемонтныхРабот КАК НеУчитыватьПриПланированииГрафикРемонтныхРабот,
	|	ТабБазПриоритетов.НеУчитыватьПродолжительность КАК НеУчитыватьПродолжительность,
	|	ТабБазПриоритетов.ИспользоватьКоэффициентыРемонтныхОсобенностей КАК ИспользоватьКоэффициентыРемонтныхОсобенностей,
	|	ТабБазПриоритетов.УчитыватьПростоиОборудования КАК УчитыватьПростоиОборудования,
	|	ТабБазПриоритетов.ИспользоватьДатыЗамещающихРемонтов КАК ИспользоватьДатыЗамещающихРемонтов,
	|	ВЫБОР
	|		КОГДА ТабПриоритетов.Приоритет ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Приоритет,
	|	ТабБазПриоритетов.СтратегияОбслуживания КАК СтратегияОбслуживания,
	|	ТабБазПриоритетов.ИсточникСтратегии КАК ИсточникСтратегии,
	|	ТабБазПриоритетов.РассчитыватьНаработкуВПростое КАК РассчитыватьНаработкуВПростое
	|ИЗ
	|	ТабБазПриоритетов КАК ТабБазПриоритетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабПриоритетов КАК ТабПриоритетов
	|		ПО ТабБазПриоритетов.ОбъектРемонта = ТабПриоритетов.ОбъектРемонта
	|			И ТабБазПриоритетов.ВидРемонта = ТабПриоритетов.ВидРемонта
	|			И ТабБазПриоритетов.Приоритет = ТабПриоритетов.Приоритет";
	
	Запрос.УстановитьПараметр("НовТиповойОР", ТиповойОРСсылка);
	Запрос.УстановитьПараметр("ОРСсылка",ОРСсылка);
	
	ТаблицаНормативов = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.торо_НормативныеРемонтыОборудования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	НаборЗаписей.Прочитать();
	ТаблицаСтарогоНабора = НаборЗаписей.Выгрузить();
	
	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(ТаблицаСтарогоНабора, ТаблицаНормативов) Тогда
	
		НаборЗаписей.Очистить();
		НаборЗаписей.Загрузить(ТаблицаНормативов);
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НормативныеРемонтыОборудованияУдаленные.ВидРемонта КАК ВидРемонта,
	|	торо_НормативныеРемонтыОборудованияУдаленные.ТиповойОР КАК ТиповойОР
	|ИЗ
	|	РегистрСведений.торо_НормативныеРемонтыОборудованияУдаленные КАК торо_НормативныеРемонтыОборудованияУдаленные
	|ГДЕ
	|	торо_НормативныеРемонтыОборудованияУдаленные.ОбъектРемонта = &ОРСсылка
	|	И торо_НормативныеРемонтыОборудованияУдаленные.ТиповойОР = &НовТиповойОР";
	
	Запрос.УстановитьПараметр("НовТиповойОР", ТиповойОРСсылка);
	Запрос.УстановитьПараметр("ОРСсылка",ОРСсылка);
	ТаблицаНормативовУдаленные = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.торо_НормативныеРемонтыОборудованияУдаленные.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	НаборЗаписей.Прочитать();
	
	ТаблицаСтарогоНабора = НаборЗаписей.Выгрузить();
	
	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(ТаблицаСтарогоНабора, ТаблицаНормативовУдаленные) Тогда
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Загрузить(ТаблицаНормативовУдаленные);
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНормативыОРПриИзмененииТиповогоОР_ПредшествующиеРемонты(ТиповойОРСсылка, ОРСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_НормативныеРемонтыОборудования.ВидРемонта,
	|	торо_НормативныеРемонтыОборудования.Ссылка
	|ПОМЕСТИТЬ ДействующиеВР
	|ИЗ
	|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_НормативныеРемонтыОборудования
	|ГДЕ
	|	торо_НормативныеРемонтыОборудования.Ссылка = &НовТиповойОР
	|	И торо_НормативныеРемонтыОборудования.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ТиповыеОРПредшествующиеРемонты.ВидРемонта,
	|	&ОРСсылка КАК ОбъектРемонта,
	|	торо_ТиповыеОРПредшествующиеРемонты.ПредшествующийВидРемонта,
	|	торо_ТиповыеОРПредшествующиеРемонты.Ссылка КАК ТиповойОР,
	|	0 КАК Приоритет
	|ПОМЕСТИТЬ ТабБазПриоритетов
	|ИЗ
	|	ДействующиеВР КАК торо_ТиповыеОРНормативныеРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеОР.ПредшествующиеРемонты КАК торо_ТиповыеОРПредшествующиеРемонты
	|		ПО торо_ТиповыеОРНормативныеРемонты.Ссылка = торо_ТиповыеОРПредшествующиеРемонты.Ссылка
	|			И торо_ТиповыеОРНормативныеРемонты.ВидРемонта = торо_ТиповыеОРПредшествующиеРемонты.ВидРемонта
	|			И (торо_ТиповыеОРПредшествующиеРемонты.ПредшествующийВидРемонта В
	|				(ВЫБРАТЬ
	|					ДействующиеВР.ВидРемонта
	|				ИЗ
	|					ДействующиеВР КАК ДействующиеВР))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ПредшествующиеНормативныеРемонтыОборудования.ВидРемонта,
	|	торо_ПредшествующиеНормативныеРемонтыОборудования.ОбъектРемонта,
	|	торо_ПредшествующиеНормативныеРемонтыОборудования.ПредшествующийВидРемонта,
	|	торо_ПредшествующиеНормативныеРемонтыОборудования.ТиповойОР,
	|	1
	|ИЗ
	|	РегистрСведений.торо_ПредшествующиеНормативныеРемонтыОборудования КАК торо_ПредшествующиеНормативныеРемонтыОборудования
	|ГДЕ
	|	торо_ПредшествующиеНормативныеРемонтыОборудования.ОбъектРемонта = &ОРСсылка
	|	И торо_ПредшествующиеНормативныеРемонтыОборудования.ТиповойОР = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабБазПриоритетов.ВидРемонта,
	|	ТабБазПриоритетов.ОбъектРемонта,
	|	МАКСИМУМ(ТабБазПриоритетов.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ТабПриоритетов
	|ИЗ
	|	ТабБазПриоритетов КАК ТабБазПриоритетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабБазПриоритетов.ВидРемонта,
	|	ТабБазПриоритетов.ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабБазПриоритетов.ВидРемонта,
	|	ТабБазПриоритетов.ОбъектРемонта,
	|	ТабБазПриоритетов.ПредшествующийВидРемонта,
	|	ТабБазПриоритетов.ТиповойОР,
	|	ВЫБОР
	|		КОГДА ТабПриоритетов.Приоритет ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	ТабБазПриоритетов КАК ТабБазПриоритетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабПриоритетов КАК ТабПриоритетов
	|		ПО ТабБазПриоритетов.ОбъектРемонта = ТабПриоритетов.ОбъектРемонта
	|			И ТабБазПриоритетов.ВидРемонта = ТабПриоритетов.ВидРемонта
	|			И ТабБазПриоритетов.Приоритет = ТабПриоритетов.Приоритет";
	
	Запрос.УстановитьПараметр("НовТиповойОР", ТиповойОРСсылка);
	Запрос.УстановитьПараметр("ОРСсылка",ОРСсылка);
	Запрос.УстановитьПараметр("ТекТиповойОР",ОРСсылка.ТиповойОР);
	
	ТаблицаПредшествующих = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.торо_ПредшествующиеНормативныеРемонтыОборудования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	НаборЗаписей.Загрузить(ТаблицаПредшествующих);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Процедура ЗаписатьНормативыОРПриИзмененииТиповогоОР_ЗамещаемыеРемонты(ТиповойОРСсылка, ОРСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_НормативныеРемонтыОборудования.ВидРемонта КАК ВидРемонта,
	|	торо_НормативныеРемонтыОборудования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДействующиеВР
	|ИЗ
	|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_НормативныеРемонтыОборудования
	|ГДЕ
	|	торо_НормативныеРемонтыОборудования.Ссылка = &НовТиповойОР
	|	И торо_НормативныеРемонтыОборудования.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыНормативныхРемонтовИТехКарт.Действует)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ТиповыеОРЗамещаемыеРемонты.ВидРемонта КАК ВидРемонта,
	|	&ОРСсылка КАК ОбъектРемонта,
	|	торо_ТиповыеОРЗамещаемыеРемонты.ЗамещаемыйВидРемонта КАК ЗамещаемыйВидРемонта,
	|	торо_ТиповыеОРЗамещаемыеРемонты.Ссылка КАК ТиповойОР,
	|	торо_ТиповыеОРЗамещаемыеРемонты.СпособЗамещения КАК СпособЗамещения,
	|	торо_ТиповыеОРЗамещаемыеРемонты.НачальнаяГраница КАК НачальнаяГраница,
	|	торо_ТиповыеОРЗамещаемыеРемонты.КонечнаяГраница КАК КонечнаяГраница,
	|	0 КАК Приоритет
	|ПОМЕСТИТЬ ТабБазПриоритетов
	|ИЗ
	|	Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_ТиповыеОРНормативныеРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеОР.ЗамещаемыеРемонты КАК торо_ТиповыеОРЗамещаемыеРемонты
	|		ПО (торо_ТиповыеОРНормативныеРемонты.Ссылка = &НовТиповойОР)
	|			И торо_ТиповыеОРНормативныеРемонты.Ссылка = торо_ТиповыеОРЗамещаемыеРемонты.Ссылка
	|			И торо_ТиповыеОРНормативныеРемонты.ВидРемонта = торо_ТиповыеОРЗамещаемыеРемонты.ВидРемонта
	|			И (торо_ТиповыеОРЗамещаемыеРемонты.ЗамещаемыйВидРемонта В
	|				(ВЫБРАТЬ
	|					ДействующиеВР.ВидРемонта
	|				ИЗ
	|					ДействующиеВР КАК ДействующиеВР))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ВидРемонта,
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ОбъектРемонта,
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ЗамещаемыйВидРемонта,
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ТиповойОР,
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.СпособЗамещения,
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.НачальнаяГраница,
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.КонечнаяГраница,
	|	1
	|ИЗ
	|	РегистрСведений.торо_ПараметрыЗамещенияПланированияРемонтныхРабот КАК торо_ПараметрыЗамещенияПланированияРемонтныхРабот
	|ГДЕ
	|	торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ОбъектРемонта = &ОРСсылка
	|	И торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ТиповойОР = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабБазПриоритетов.ВидРемонта КАК ВидРемонта,
	|	ТабБазПриоритетов.ОбъектРемонта КАК ОбъектРемонта,
	|	МАКСИМУМ(ТабБазПриоритетов.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ТабПриоритетов
	|ИЗ
	|	ТабБазПриоритетов КАК ТабБазПриоритетов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабБазПриоритетов.ВидРемонта,
	|	ТабБазПриоритетов.ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабБазПриоритетов.ВидРемонта КАК ВидРемонта,
	|	ТабБазПриоритетов.ОбъектРемонта КАК ОбъектРемонта,
	|	ТабБазПриоритетов.ЗамещаемыйВидРемонта КАК ЗамещаемыйВидРемонта,
	|	ТабБазПриоритетов.ТиповойОР КАК ТиповойОР,
	|	ТабБазПриоритетов.СпособЗамещения КАК СпособЗамещения,
	|	ТабБазПриоритетов.НачальнаяГраница КАК НачальнаяГраница,
	|	ТабБазПриоритетов.КонечнаяГраница КАК КонечнаяГраница,
	|	ВЫБОР
	|		КОГДА ТабПриоритетов.Приоритет ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	ТабБазПриоритетов КАК ТабБазПриоритетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабПриоритетов КАК ТабПриоритетов
	|		ПО ТабБазПриоритетов.ОбъектРемонта = ТабПриоритетов.ОбъектРемонта
	|			И ТабБазПриоритетов.ВидРемонта = ТабПриоритетов.ВидРемонта
	|			И ТабБазПриоритетов.Приоритет = ТабПриоритетов.Приоритет";
	
	Запрос.УстановитьПараметр("НовТиповойОР", ТиповойОРСсылка);
	Запрос.УстановитьПараметр("ОРСсылка",ОРСсылка);
	Запрос.УстановитьПараметр("ТекТиповойОР",ОРСсылка.ТиповойОР);
	
	ТаблицаЗамещаемых = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.торо_ПараметрыЗамещенияПланированияРемонтныхРабот.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	НаборЗаписей.Загрузить(ТаблицаЗамещаемых);
	НаборЗаписей.Записать(Истина);

КонецПроцедуры

Процедура ЗаписатьНормативыОРПриИзмененииТиповогоОР_НормыЗапчастей(ТиповойОРСсылка, ОРСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ТиповыеОРЗапчасти.Номенклатура КАК Номенклатура,
	|	торо_ТиповыеОРЗапчасти.Количество КАК Количество,
	|	торо_ТиповыеОРЗапчасти.Характеристика КАК Характеристика,
	|	торо_ТиповыеОРЗапчасти.Качество КАК Качество,
	|	торо_ТиповыеОРЗапчасти.Ссылка КАК ТиповойОР
	|ПОМЕСТИТЬ ВТ_ЗапчастиТОР
	|ИЗ
	|	Справочник.торо_ТиповыеОР.Запчасти КАК торо_ТиповыеОРЗапчасти
	|ГДЕ
	|	торо_ТиповыеОРЗапчасти.Ссылка = &ТОР
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТиповойОР,
	|	Номенклатура,
	|	Характеристика,
	|	Качество,
	|	Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_Запчасти.Номенклатура КАК Номенклатура,
	|	торо_Запчасти.Качество КАК Качество,
	|	торо_Запчасти.Характеристика КАК Характеристика,
	|	торо_Запчасти.Количество КАК Количество,
	|	торо_Запчасти.ТиповойОР КАК ТиповойОР
	|ПОМЕСТИТЬ ВТ_ЗапчастиОР
	|ИЗ
	|	РегистрСведений.торо_Запчасти КАК торо_Запчасти
	|ГДЕ
	|	торо_Запчасти.ОбъектРемонта = &ОбъектРемонта
	|	И торо_Запчасти.ТиповойОР = &ПустойТОР
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТиповойОР,
	|	Номенклатура,
	|	Характеристика,
	|	Качество,
	|	Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ТиповыеОРНормативныеЗатратыПриТОиР.Характеристика КАК Характеристика,
	|	торо_ТиповыеОРНормативныеЗатратыПриТОиР.Номенклатура КАК Номенклатура,
	|	торо_ТиповыеОРНормативныеЗатратыПриТОиР.ВидРемонта КАК ВидРемонта,
	|	торо_ТиповыеОРНормативныеЗатратыПриТОиР.Количество КАК Количество,
	|	торо_ТиповыеОРНормативныеЗатратыПриТОиР.Ссылка КАК ТиповойОР
	|ПОМЕСТИТЬ ВТ_НормЗатратыТОР
	|ИЗ
	|	Справочник.торо_ТиповыеОР.НормативныеЗатратыПриТОиР КАК торо_ТиповыеОРНормативныеЗатратыПриТОиР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеОР.НормативныеРемонты КАК торо_ТиповыеОРНормативныеРемонты
	|		ПО (торо_ТиповыеОРНормативныеЗатратыПриТОиР.Ссылка = &ТОР)
	|			И (торо_ТиповыеОРНормативныеРемонты.Ссылка = &ТОР)
	|			И торо_ТиповыеОРНормативныеЗатратыПриТОиР.ВидРемонта = торо_ТиповыеОРНормативныеРемонты.ВидРемонта
	|			И (торо_ТиповыеОРНормативныеРемонты.Статус = &СтатусДействует)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ВидРемонта,
	|	ТиповойОР,
	|	Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура КАК Номенклатура,
	|	торо_НормыЗапчастейНаОбъектыРемонта.ВидРемонта КАК ВидРемонта,
	|	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика КАК Характеристика,
	|	торо_НормыЗапчастейНаОбъектыРемонта.Количество КАК Количество,
	|	торо_НормыЗапчастейНаОбъектыРемонта.ТиповойОР КАК ТиповойОР
	|ПОМЕСТИТЬ ВТ_НормыОР
	|ИЗ
	|	РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонта КАК торо_НормыЗапчастейНаОбъектыРемонта
	|ГДЕ
	|	торо_НормыЗапчастейНаОбъектыРемонта.ОбъектРемонта = &ОбъектРемонта
	|	И торо_НормыЗапчастейНаОбъектыРемонта.ТиповойОР = &ПустойТОР
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ВидРемонта,
	|	ТиповойОР,
	|	Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ЗапчастиОР.Номенклатура, ВТ_ЗапчастиТОР.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_ЗапчастиОР.Характеристика, ВТ_ЗапчастиТОР.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ВТ_ЗапчастиОР.Качество, ВТ_ЗапчастиТОР.Качество) КАК Качество,
	|	ЕСТЬNULL(ВТ_ЗапчастиОР.Количество, ВТ_ЗапчастиТОР.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_ЗапчастиТОР.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТиповой,
	|	ВЫБОР
	|		КОГДА торо_ЗапчастиУдаленные.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Удален
	|ПОМЕСТИТЬ ВТ_ЗапчастиТОРиОР
	|ИЗ
	|	ВТ_ЗапчастиТОР КАК ВТ_ЗапчастиТОР
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ЗапчастиОР КАК ВТ_ЗапчастиОР
	|		ПО ВТ_ЗапчастиТОР.Номенклатура = ВТ_ЗапчастиОР.Номенклатура
	|			И ВТ_ЗапчастиТОР.Характеристика = ВТ_ЗапчастиОР.Характеристика
	|			И ВТ_ЗапчастиТОР.Качество = ВТ_ЗапчастиОР.Качество
	|			И ВТ_ЗапчастиТОР.Количество = ВТ_ЗапчастиОР.Количество
	|			И ВТ_ЗапчастиТОР.ТиповойОР = ВТ_ЗапчастиОР.ТиповойОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗапчастиУдаленные КАК торо_ЗапчастиУдаленные
	|		ПО (торо_ЗапчастиУдаленные.ОбъектРемонта = &ОбъектРемонта)
	|			И ВТ_ЗапчастиТОР.Номенклатура = торо_ЗапчастиУдаленные.Номенклатура
	|			И ВТ_ЗапчастиТОР.Характеристика = торо_ЗапчастиУдаленные.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ЭтоТиповой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗапчастиТОРиОР.Номенклатура КАК Номенклатура,
	|	ВТ_ЗапчастиТОРиОР.Характеристика КАК Характеристика,
	|	ВТ_ЗапчастиТОРиОР.Качество КАК Качество,
	|	ВТ_ЗапчастиТОРиОР.Количество КАК Количество,
	|	ВТ_ЗапчастиТОРиОР.ЭтоТиповой КАК ЭтоТиповой,
	|	ВТ_ЗапчастиТОРиОР.Удален КАК Удален
	|ПОМЕСТИТЬ ВТ_Запачати_Промежуточная
	|ИЗ
	|	ВТ_ЗапчастиТОРиОР КАК ВТ_ЗапчастиТОРиОР
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ЭтоТиповой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Запачати_Промежуточная.Номенклатура КАК Номенклатура,
	|	ВТ_Запачати_Промежуточная.Характеристика КАК Характеристика,
	|	СУММА(1) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ_Запчасти_Дубли
	|ИЗ
	|	ВТ_Запачати_Промежуточная КАК ВТ_Запачати_Промежуточная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Запачати_Промежуточная.Номенклатура,
	|	ВТ_Запачати_Промежуточная.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Запачати_Промежуточная.Номенклатура КАК Номенклатура,
	|	ВТ_Запачати_Промежуточная.Характеристика КАК Характеристика,
	|	ВТ_Запачати_Промежуточная.Качество КАК Качество,
	|	ВТ_Запачати_Промежуточная.Количество КАК Количество,
	|	ВТ_Запачати_Промежуточная.ЭтоТиповой КАК ЭтоТиповой,
	|	ВЫБОР
	|		КОГДА ВТ_Запчасти_Дубли.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВТ_Запачати_Промежуточная.Удален
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Удален
	|ПОМЕСТИТЬ ВТ_Запчасти_БезВР
	|ИЗ
	|	ВТ_Запачати_Промежуточная КАК ВТ_Запачати_Промежуточная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Запчасти_Дубли КАК ВТ_Запчасти_Дубли
	|		ПО ВТ_Запачати_Промежуточная.Номенклатура = ВТ_Запчасти_Дубли.Номенклатура
	|			И ВТ_Запачати_Промежуточная.Характеристика = ВТ_Запчасти_Дубли.Характеристика
	|			И (ВТ_Запачати_Промежуточная.ЭтоТиповой)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_НормыОР.Номенклатура, ВТ_НормЗатратыТОР.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_НормыОР.ВидРемонта, ВТ_НормЗатратыТОР.ВидРемонта) КАК ВидРемонта,
	|	ЕСТЬNULL(ВТ_НормыОР.Характеристика, ВТ_НормЗатратыТОР.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ВТ_НормыОР.Количество, ВТ_НормЗатратыТОР.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_НормЗатратыТОР.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТиповой,
	|	ВЫБОР
	|		КОГДА торо_НормыЗапчастейНаОбъектыРемонтаУдаленные.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Удален
	|ПОМЕСТИТЬ ВТ_нормЗатратыТОРиОР
	|ИЗ
	|	ВТ_НормЗатратыТОР КАК ВТ_НормЗатратыТОР
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_НормыОР КАК ВТ_НормыОР
	|		ПО ВТ_НормЗатратыТОР.Номенклатура = ВТ_НормыОР.Номенклатура
	|			И ВТ_НормЗатратыТОР.Характеристика = ВТ_НормыОР.Характеристика
	|			И ВТ_НормЗатратыТОР.ВидРемонта = ВТ_НормыОР.ВидРемонта
	|			И ВТ_НормЗатратыТОР.Количество = ВТ_НормыОР.Количество
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонтаУдаленные КАК торо_НормыЗапчастейНаОбъектыРемонтаУдаленные
	|		ПО (торо_НормыЗапчастейНаОбъектыРемонтаУдаленные.ОбъектРемонта = &ОбъектРемонта)
	|			И ВТ_НормЗатратыТОР.Номенклатура = торо_НормыЗапчастейНаОбъектыРемонтаУдаленные.Номенклатура
	|			И ВТ_НормЗатратыТОР.Характеристика = торо_НормыЗапчастейНаОбъектыРемонтаУдаленные.Характеристика
	|			И ВТ_НормЗатратыТОР.ВидРемонта = торо_НормыЗапчастейНаОбъектыРемонтаУдаленные.ВидРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ЭтоТиповой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_нормЗатратыТОРиОР.Номенклатура КАК Номенклатура,
	|	ВТ_нормЗатратыТОРиОР.ВидРемонта КАК ВидРемонта,
	|	ВТ_нормЗатратыТОРиОР.Характеристика КАК Характеристика,
	|	СУММА(1) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ_ДублиВР
	|ИЗ
	|	ВТ_нормЗатратыТОРиОР КАК ВТ_нормЗатратыТОРиОР
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_нормЗатратыТОРиОР.Номенклатура,
	|	ВТ_нормЗатратыТОРиОР.ВидРемонта,
	|	ВТ_нормЗатратыТОРиОР.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_нормЗатратыТОРиОР.Номенклатура КАК Номенклатура,
	|	ВТ_нормЗатратыТОРиОР.ВидРемонта КАК ВидРемонта,
	|	ВТ_нормЗатратыТОРиОР.Характеристика КАК Характеристика,
	|	ВТ_нормЗатратыТОРиОР.Количество КАК Количество,
	|	ВТ_нормЗатратыТОРиОР.ЭтоТиповой КАК ЭтоТиповой,
	|	ВЫБОР
	|		КОГДА ВТ_ДублиВР.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВТ_нормЗатратыТОРиОР.Удален
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Удален
	|ПОМЕСТИТЬ ВТ_ВР_Финальная
	|ИЗ
	|	ВТ_нормЗатратыТОРиОР КАК ВТ_нормЗатратыТОРиОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДублиВР КАК ВТ_ДублиВР
	|		ПО ВТ_нормЗатратыТОРиОР.Номенклатура = ВТ_ДублиВР.Номенклатура
	|			И ВТ_нормЗатратыТОРиОР.ВидРемонта = ВТ_ДублиВР.ВидРемонта
	|			И ВТ_нормЗатратыТОРиОР.Характеристика = ВТ_ДублиВР.Характеристика
	|			И (ВТ_нормЗатратыТОРиОР.ЭтоТиповой)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Номенклатура, ВТ_ВР_Финальная.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Характеристика, ВТ_ВР_Финальная.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Качество, &ПустоеКачество) КАК Качество,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_Запчасти_БезВР.Количество, ВТ_ВР_Финальная.Количество)) КАК Количество,
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.ЭтоТиповой, ЛОЖЬ) КАК ЭтоТиповой,
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Удален, ЛОЖЬ) КАК Удален,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ВР_Финальная.Количество, 0)) КАК КоличествоДляПроверки
	|ИЗ
	|	ВТ_Запчасти_БезВР КАК ВТ_Запчасти_БезВР
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ВР_Финальная КАК ВТ_ВР_Финальная
	|		ПО ВТ_Запчасти_БезВР.Номенклатура = ВТ_ВР_Финальная.Номенклатура
	|			И ВТ_Запчасти_БезВР.Характеристика = ВТ_ВР_Финальная.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Номенклатура, ВТ_ВР_Финальная.Номенклатура),
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Характеристика, ВТ_ВР_Финальная.Характеристика),
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Качество, &ПустоеКачество),
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.ЭтоТиповой, ЛОЖЬ),
	|	ЕСТЬNULL(ВТ_Запчасти_БезВР.Удален, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВР_Финальная.Номенклатура КАК Номенклатура,
	|	ВТ_ВР_Финальная.ВидРемонта КАК ВидРемонта,
	|	ВТ_ВР_Финальная.Характеристика КАК Характеристика,
	|	ВТ_ВР_Финальная.Количество КАК Количество,
	|	ВТ_ВР_Финальная.ЭтоТиповой КАК ЭтоТиповой,
	|	ВТ_ВР_Финальная.Удален КАК Удален
	|ИЗ
	|	ВТ_ВР_Финальная КАК ВТ_ВР_Финальная";
	
	Запрос.УстановитьПараметр("ТОР", ТиповойОРСсылка);
	Запрос.УстановитьПараметр("ОбъектРемонта", ОРСсылка);
	Запрос.УстановитьПараметр("ПустойТОР", Справочники.торо_ТиповыеОР.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатусДействует", Перечисления.торо_СтатусыНормативныхРемонтовИТехКарт.Действует);
	Запрос.УстановитьПараметр("ПустоеКачество", Перечисления.ГрадацииКачества.ПустаяСсылка());
	
	Результат = Запрос.ВыполнитьПакет();
	
	СтруктураНормативовЗапчастей = Новый Структура;
	СтруктураНормативовЗапчастей.Вставить("Запчасти", Результат[11].Выбрать());
	СтруктураНормативовЗапчастей.Вставить("НормативныеЗатраты", Результат[12].Выбрать());
	
	МасОшибок = Новый Массив;
	Отказ = Ложь;

	// Запись запчастей
	НаборЗаписей = РегистрыСведений.торо_Запчасти.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	НаборЗаписей.Прочитать();
	
	НаборЗаписейУдаленные = РегистрыСведений.торо_ЗапчастиУдаленные.СоздатьНаборЗаписей();
	НаборЗаписейУдаленные.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	НаборЗаписейУдаленные.Прочитать();
	
	ТаблицаСтарогоНабора = НаборЗаписей.Выгрузить();
	ТаблицаСтарогоНабораУдаленные = НаборЗаписейУдаленные.Выгрузить();
	ТаблицаЗапчастей = ТаблицаСтарогоНабора.СкопироватьКолонки();
	ТаблицаЗапчастейУдаленных = ТаблицаСтарогоНабораУдаленные.СкопироватьКолонки();
	
	ВыборкаЗапчасти = СтруктураНормативовЗапчастей.Запчасти;
	Пока ВыборкаЗапчасти.Следующий() Цикл
				
		нс = ТаблицаЗапчастей.Добавить();
		ЗаполнитьЗначенияСвойств(нс, ВыборкаЗапчасти);
		нс.ОбъектРемонта = ОРСсылка;
		нс.Приоритет = Истина;
		
		Если ВыборкаЗапчасти.ЭтоТиповой Тогда
			нс.ТиповойОР = ТиповойОРСсылка;
		КонецЕсли;
		
		Если ВыборкаЗапчасти.Удален Тогда
			нс.Приоритет = Ложь;
			нс.ТиповойОР = ТиповойОРСсылка;
			
			нсу = ТаблицаЗапчастейУдаленных.Добавить();
			ЗаполнитьЗначенияСвойств(нсу, ВыборкаЗапчасти);
			нсу.ОбъектРемонта = ОРСсылка;
			нсу.ТиповойОР = ТиповойОРСсылка;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого текОшибка из масОшибок Цикл
		ОбщегоНазначения.СообщитьПользователю(текОшибка,,,, Отказ);
	КонецЦикла;
	
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(ТаблицаСтарогоНабора, ТаблицаЗапчастей) Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Загрузить(ТаблицаЗапчастей);
		НаборЗаписей.Записать();
	КонецЕсли;

	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(ТаблицаСтарогоНабораУдаленные, ТаблицаЗапчастейУдаленных) Тогда
		НаборЗаписейУдаленные.Очистить();
		НаборЗаписейУдаленные.Загрузить(ТаблицаЗапчастейУдаленных);
		НаборЗаписейУдаленные.Записать();
	КонецЕсли;
	
	// Запись норм запчастей по видам ремонта.
	ВыборкаНормы = СтруктураНормативовЗапчастей.НормативныеЗатраты;
	
	НаборЗаписей = РегистрыСведений.торо_НормыЗапчастейНаОбъектыРемонта.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	
	НаборЗаписейУдаленные = РегистрыСведений.торо_НормыЗапчастейНаОбъектыРемонтаУдаленные.СоздатьНаборЗаписей();
	НаборЗаписейУдаленные.Отбор.ОбъектРемонта.Установить(ОРСсылка);
	
	Пока ВыборкаНормы.Следующий() Цикл
		
		нс = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(нс, ВыборкаНормы);
		нс.ОбъектРемонта = ОРСсылка;
		нс.Приоритет = Истина;
		
		Если ВыборкаНормы.ЭтоТиповой Тогда
			нс.ТиповойОР = ТиповойОРСсылка;
		КонецЕсли;
		
		Если ВыборкаНормы.Удален Тогда
			нс.Приоритет = Ложь;
			нс.ТиповойОР = ТиповойОРСсылка;
			
			нсу = НаборЗаписейУдаленные.Добавить();
			ЗаполнитьЗначенияСвойств(нсу, ВыборкаНормы);
			нсу.ОбъектРемонта = ОРСсылка;
			нсу.ТиповойОР = ТиповойОРСсылка;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();			
	НаборЗаписейУдаленные.Записать();
	
КонецПроцедуры

Процедура ЗаписатьНормативыОРПриИзмененииТиповогоОР_КонтролируемыеПоказатели(ТиповойОРСсылка, ОРСсылка)
	
	// Удалим неиспользуемые показатели, оставшиеся от прошлого типового.
	Если НЕ ЗначениеЗаполнено(ТиповойОРСсылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
		|ГДЕ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта = &ОРСсылка
		|	И торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален";
		Запрос.УстановитьПараметр("ОРСсылка",ОРСсылка);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				МенеджерЗаписи = РегистрыСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.ОбъектРемонта = ОРСсылка;
				МенеджерЗаписи.Показатель = Выборка.Показатель;
				МенеджерЗаписи.Прочитать();
				МенеджерЗаписи.Удалить();
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкопироватьНормативыТиповогоОР_КонтролируемыеПоказатели(КопируемыйЭлемент, НовыйЭлемент)
	
	// Измеряемые показатели
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель КАК Показатель,
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМинимум КАК ДопустимыйМинимум,
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМаксимум КАК ДопустимыйМаксимум,
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМинимум КАК КритическийМинимум,
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМаксимум КАК КритическийМаксимум,
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ЗначенияКонтролируемыхПоказателейИзОР КАК ЗначенияКонтролируемыхПоказателейИзОР,
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ТочкаЗамера КАК ТочкаЗамера
	|ИЗ
	|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
	|ГДЕ
	|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта = &КопируемыйЭлемент";
	
	Запрос.УстановитьПараметр("КопируемыйЭлемент", КопируемыйЭлемент);
	
	НаборЗаписей = РегистрыСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(НовыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.ОбъектРемонта = НовыйЭлемент;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	// Параметры оповещения по контролируемым показателям
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ПараметрыОповещенияОСостоянииОборудования.Показатель КАК Показатель,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.ID КАК ID,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.ПараметрыВводаДефекта КАК ПараметрыВводаДефекта,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.СобытиеВозникновенияОповещения КАК СобытиеВозникновенияОповещения,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.ВидСравнения КАК ВидСравнения,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.Значение КАК Значение,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения КАК ВариантЗначения,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.Значение1 КАК Значение1,
	|	торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1 КАК ВариантЗначения1
	|ИЗ
	|	РегистрСведений.торо_ПараметрыОповещенияОСостоянииОборудования КАК торо_ПараметрыОповещенияОСостоянииОборудования
	|ГДЕ
	|	торо_ПараметрыОповещенияОСостоянииОборудования.ТиповойОР = &КопируемыйЭлемент";
	
	Запрос.УстановитьПараметр("КопируемыйЭлемент", КопируемыйЭлемент);
	
	НаборЗаписей = РегистрыСведений.торо_ПараметрыОповещенияОСостоянииОборудования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТиповойОР.Установить(НовыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.ТиповойОР = НовыйЭлемент;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура СкопироватьНормативыТиповогоОР_ПараметрыНаработки(КопируемыйЭлемент, НовыйЭлемент)
	
	// Параметры наработки
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_МаксимальныеЗначенияНаработкиОР.Показатель КАК Показатель,
	|	торо_МаксимальныеЗначенияНаработкиОР.МаксимальноеЗначение КАК МаксимальноеЗначение,
	|	торо_МаксимальныеЗначенияНаработкиОР.НазначенныйРесурс КАК НазначенныйРесурс,
	|	торо_МаксимальныеЗначенияНаработкиОР.Удален КАК Удален
	|ИЗ
	|	РегистрСведений.торо_МаксимальныеЗначенияНаработкиОР КАК торо_МаксимальныеЗначенияНаработкиОР
	|ГДЕ
	|	торо_МаксимальныеЗначенияНаработкиОР.ОбъектРемонта = &КопируемыйЭлемент";
	
	Запрос.УстановитьПараметр("КопируемыйЭлемент", КопируемыйЭлемент);
	
	НаборЗаписей = РегистрыСведений.торо_МаксимальныеЗначенияНаработкиОР.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(НовыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.ОбъектРемонта = НовыйЭлемент;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	// Максимальные значения параметров наработки
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период КАК Период,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель КАК Показатель,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ПлановаяНаработка КАК ПлановаяНаработка,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ПериодПлановойНаработки КАК ПериодПлановойНаработки,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ПродолжительностьПериодаПлановойНаработки КАК ПродолжительностьПериодаПлановойНаработки,
	|	торо_ПараметрыНаработкиОбъектовРемонта.КоэффициентИспользованияОборудования КАК КоэффициентИспользованияОборудования,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Основной КАК Основной
	|ИЗ
	|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = &КопируемыйЭлемент";
	
	Запрос.УстановитьПараметр("КопируемыйЭлемент", КопируемыйЭлемент);
	
	НаборЗаписей = РегистрыСведений.торо_ПараметрыНаработкиОбъектовРемонта.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектРемонта.Установить(НовыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.ОбъектРемонта = НовыйЭлемент;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура СкопироватьНормативыТиповогоОР_ФиксированныеРемонтныеЦиклы(КопируемыйЭлемент, НовыйЭлемент)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_РемонтныеЦиклыОборудования.ВидЦепочки КАК ВидЦепочки,
	|	торо_РемонтныеЦиклыОборудования.НеУчитыватьПростоиОборудования КАК НеУчитыватьПростоиОборудования
	|ИЗ
	|	РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
	|ГДЕ
	|	торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов = &КопируемыйЭлемент";
	
	Запрос.УстановитьПараметр("КопируемыйЭлемент", КопируемыйЭлемент);
	
	НаборЗаписей = РегистрыСведений.торо_РемонтныеЦиклыОборудования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ГруппаОбъектовРемонтов.Установить(НовыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.ГруппаОбъектовРемонтов = НовыйЭлемент;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура СкопироватьНормативыТиповогоОР_ОценкиРискМенеджмента(КопируемыйЭлемент, НовыйЭлемент)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_РМРемонтов.Период КАК Период,
	|	торо_РМРемонтов.ВидРемонта КАК ВидРемонта,
	|	торо_РМРемонтов.Сезон КАК Сезон,
	|	торо_РМРемонтов.ВероятностьВыходаИзСтроя КАК ВероятностьВыходаИзСтроя,
	|	торо_РМРемонтов.Ущерб КАК Ущерб
	|ИЗ
	|	РегистрСведений.торо_РМРемонтов КАК торо_РМРемонтов
	|ГДЕ
	|	торо_РМРемонтов.ГруппаОбъектовРемонтов = &КопируемыйЭлемент";
	
	Запрос.УстановитьПараметр("КопируемыйЭлемент", КопируемыйЭлемент);
	
	НаборЗаписей = РегистрыСведений.торо_РМРемонтов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ГруппаОбъектовРемонтов.Установить(НовыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.ГруппаОбъектовРемонтов = НовыйЭлемент;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

