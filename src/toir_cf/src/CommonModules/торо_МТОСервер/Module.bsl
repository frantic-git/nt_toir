#Область ПрограммныйИнтерфейс

#Область Создание_и_актуализация_заказов_на_внутреннее_потребление_по_потребностям

// Процедура - Актуализация заказов на внутреннее потребление с учетом потребностей.
//
Процедура АктуализироватьЗаказыНаВнутреннееПотреблениеПоПотребности() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	Если ПолучитьФункциональнуюОпцию("торо_РасширенныйРежимМТО") = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_СтатусыЗаказовПоРемонтам.IDРемонта КАК IDРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ТехКарта КАК ТехКарта,
	               |	торо_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление КАК Заказ,
	               |	торо_СтатусыЗаказовПоРемонтам.Статус КАК Статус,
	               |	торо_СтатусыЗаказовПоРемонтам.ДатаРемонта КАК ДатаРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ВидРемонта КАК ВидРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник,
	               |	ЕСТЬNULL(ЗаказыНаВнутреннееПотребление.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказНаВнутреннееПотребление.ПустаяСсылка)) КАК ПомеченныйНаУдалениеЗаказ
	               |ИЗ
	               |	РегистрСведений.торо_СтатусыЗаказовПоРемонтам КАК торо_СтатусыЗаказовПоРемонтам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ЗаказыНаВнутреннееПотребление
	               |		ПО торо_СтатусыЗаказовПоРемонтам.IDРемонта = ЗаказыНаВнутреннееПотребление.торо_IDРемонта
	               |			И торо_СтатусыЗаказовПоРемонтам.ДокументИсточник = ЗаказыНаВнутреннееПотребление.ДокументОснование
	               |ГДЕ
	               |	торо_СтатусыЗаказовПоРемонтам.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КОбновлению)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_СтатусыЗаказовПоРемонтам.IDРемонта КАК IDРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ТехКарта КАК ТехКарта,
	               |	торо_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	               |	торо_СтатусыЗаказовПоРемонтам.Статус КАК Статус,
	               |	торо_СтатусыЗаказовПоРемонтам.ДатаРемонта КАК ДатаРемонта,
	               |	торо_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник,
	               |	торо_СтатусыЗаказовПоРемонтам.ВидРемонта КАК ВидРемонта
	               |ИЗ
	               |	РегистрСведений.торо_СтатусыЗаказовПоРемонтам КАК торо_СтатусыЗаказовПоРемонтам
	               |ГДЕ
	               |	торо_СтатусыЗаказовПоРемонтам.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КУдалению)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Заказ = ?(ЗначениеЗаполнено(Выборка.Заказ), Выборка.Заказ, Выборка.ПомеченныйНаУдалениеЗаказ);		

		ДокЗаказа = ОбновитьЗаказНаВнутреннееПотреблениеПоПотребностям(Выборка.ДокументИсточник, Заказ, Выборка.IDРемонта);
		
		НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.IDРемонта.Установить(Выборка.IDРемонта);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			
			Если ДокЗаказа <> Неопределено Тогда
				Запись.ЗаказНаВнутреннееПотребление = ДокЗаказа.Ссылка;
				Запись.ТехКарта = ДокЗаказа.торо_ТехКарта;
			КонецЕсли; 
			
			Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.Актуален;
			
		КонецЦикла;
		
		НаборЗаписей.Записать();	
		
	КонецЦикла; 
	
	Выборка = РезультатЗапроса[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.IDРемонта.Установить(Выборка.IDРемонта);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			Если ЗначениеЗаполнено(Запись.ЗаказНаВнутреннееПотребление) Тогда
				ДокЗаказа = Запись.ЗаказНаВнутреннееПотребление.ПолучитьОбъект();
				ДокЗаказа.ПометкаУдаления = Истина;  
				ДокЗаказа.ДополнительныеСвойства.Вставить("УстановкаПометкиУдаленияОбработана", Истина);
				ДокЗаказа.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.Актуален; 
				Запись.ЗаказНаВнутреннееПотребление = Документы.ЗаказНаВнутреннееПотребление.ПустаяСсылка();
			Иначе
				Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.НеТребуется;
			КонецЕсли; 
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
	КонецЦикла; 
	
КонецПроцедуры

// Процедура - Добавление/изменение ремонтов в регистре статусов заказа на ремонт.
//
// Параметры:
//  Ссылка		  - Ссылка - ссылка на документ/ОР/ТК, из-за которого может потребоваться пересчитать МТО ремонта,
//  Статус		  - ПеречислениеСсылка.торо_СтатусыЗаказовПоРемонтам - статус заказа,
//  Распроведение - Булево - флаг распроведения.
//
Процедура ПоместитьРемонтыВРегистрДляПроверкиАктуальности(Ссылка, Статус = Неопределено, Распроведение = Ложь) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Если ПолучитьФункциональнуюОпцию("торо_РасширенныйРежимМТО") = Ложь Тогда
		Возврат;
	КонецЕсли; 
	
	Если Ссылка = Неопределено Тогда
		// Выполняется удаление объекта.
		Возврат;
	КонецЕсли;
	
	Если Статус = Неопределено Тогда
	    Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
	КонецЕсли; 
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
				
		НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ТехКарта.Установить(Ссылка);
		НаборЗаписей.Прочитать();
		
		Для каждого Строка Из НаборЗаписей Цикл
			Строка.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
		КонецЦикла;
		
		НаборЗаписей.Записать();
				
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.торо_ОбъектыРемонта")
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
		
		НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(Ссылка);
		НаборЗаписей.Прочитать();
		
		Для каждого Строка Из НаборЗаписей Цикл
			Строка.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
		КонецЦикла;
		
		НаборЗаписей.Записать();		
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.торо_ТиповыеОР") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
			|ГДЕ
			|	торо_ОбъектыРемонта.ТиповойОР = &ТиповойОР";

		Запрос.УстановитьПараметр("ТиповойОР", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектРемонта.Установить(ВыборкаДетальныеЗаписи.Ссылка);
			НаборЗаписей.Прочитать();
			
			Для каждого Строка Из НаборЗаписей Цикл
				Строка.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
			КонецЦикла;
			
			НаборЗаписей.Записать();
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.торо_ЦепочкиРемонта") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов КАК ГруппаОбъектовРемонтов
			|ПОМЕСТИТЬ ВТ_ИзмененныеОРиТОР
			|ИЗ
			|	РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
			|ГДЕ
			|	торо_РемонтныеЦиклыОборудования.ВидЦепочки = &ВидЦепочки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ОбъектыРемонта.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ВТ_ОРсИзмененнымТиповым
			|ИЗ
			|	ВТ_ИзмененныеОРиТОР КАК ВТ_ИзмененныеОРиТОР
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
			|		ПО ВТ_ИзмененныеОРиТОР.ГруппаОбъектовРемонтов = торо_ОбъектыРемонта.ТиповойОР
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ИзмененныеОРиТОР.ГруппаОбъектовРемонтов КАК ОбъектРемонта
			|ИЗ
			|	ВТ_ИзмененныеОРиТОР КАК ВТ_ИзмененныеОРиТОР
			|ГДЕ
			|	ВТ_ИзмененныеОРиТОР.ГруппаОбъектовРемонтов ССЫЛКА Справочник.торо_ОбъектыРемонта
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ВТ_ОРсИзмененнымТиповым.Ссылка
			|ИЗ
			|	ВТ_ОРсИзмененнымТиповым КАК ВТ_ОРсИзмененнымТиповым";
		
		Запрос.УстановитьПараметр("ВидЦепочки", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектРемонта.Установить(ВыборкаДетальныеЗаписи.ОбъектРемонта);
			НаборЗаписей.Прочитать();
			
			Для каждого Строка Из НаборЗаписей Цикл
				Строка.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
			КонецЦикла;
			
			НаборЗаписей.Записать();		
		КонецЦикла;
				
	ИначеЕсли (ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ПланГрафикРемонта")
		ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР")) Тогда
		
		АктуализироватьСтатусыЗаказовПоРемонтамПоППРИлиГрафикуРМ(Ссылка, Распроведение);
		
	Иначе // документ, изменяющий записи
		
		Запрос = ЗапросИзмененныхДокументомРемонтов(Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.IDРемонта.Установить(Выборка.IDРемонта);
			НаборЗаписей.Прочитать();			
			Для каждого Запись Из НаборЗаписей Цикл
				Если Выборка.Отменен = Ложь И Выборка.Замещен = Ложь Тогда
					Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
					Запись.ДатаРемонта = Выборка.ДатаРемонта;
				Иначе
					Если Распроведение Тогда
						Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
					ИначеЕсли Выборка.Отменен = Ложь Тогда
						Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
					Иначе
						Запись.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КУдалению;
					КонецЕсли; 
					
				КонецЕсли; 
			КонецЦикла; 
			НаборЗаписей.Записать();
		КонецЦикла; 
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Функция - Обновляет заказ по изменившимся данным ремонта.
//
// Параметры:
//	 ДокСсылка - ДокументСсылка - ППР или График РМ, являющийся началом цепочки,
//	 Заказ     - ДокументСсылка.ЗаказНаВнутреннееПотребление - уже имеющийся заказ, 
//	 ИДРемонта - Строка - ID ремонта.
//
// Возвращаемое значение:
//		ДокументОбъект.ЗаказНаВнутреннееПотребление - созданный/измененный заказ.
Функция ОбновитьЗаказНаВнутреннееПотреблениеПоПотребностям(ДокСсылка, Заказ, ИДРемонта = Неопределено)
	
	// для каждого ремонта из ссылки -- свой заказ по матзатратам и запчастям
	Запрос = ЗапросНаПолучениеАктуальныхЗатрат(ДокСсылка, ИДРемонта, Заказ);

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаРемонт = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если Заказ = Документы.ЗаказНаВнутреннееПотребление.ПустаяСсылка() Тогда
		НайденныйДокумент = Документы.ЗаказНаВнутреннееПотребление.НайтиПоРеквизиту("торо_IDРемонта", ИДРемонта);
		Если ЗначениеЗаполнено(НайденныйДокумент) Тогда
			ДокументЗаказа = НайденныйДокумент.ПолучитьОбъект();
		Иначе	
			ДокументЗаказа = Документы.ЗаказНаВнутреннееПотребление.СоздатьДокумент();	
		КонецЕсли; 		
	Иначе
		ДокументЗаказа = Заказ.ПолучитьОбъект(); 
		ДокументЗаказа.ДополнительныеСвойства.Вставить("УстановкаПометкиУдаленияОбработана", Истина);
	КонецЕсли;
	
	ДокументЗаказа.Товары.Очистить();
	
	Пока ВыборкаРемонт.Следующий() Цикл
		 
		ДокументЗаказа.торо_СозданПоПотребности = Истина;
		ЗаполнитьЗначенияСвойств(ДокументЗаказа, ВыборкаРемонт);
		
		СтрокаКомментария = СтрШаблон(НСтр("ru='%1 %2 %3 %4'"),
							ВыборкаРемонт.ДокументОснование, ВыборкаРемонт.торо_ОбъектРемонта, ВыборкаРемонт.торо_ВидРемонта, Формат(ВыборкаРемонт.ДатаОтгрузки, НСтр("ru = 'ДФ=dd.MM.yyyy'")));
		ДокументЗаказа.Комментарий = СтрокаКомментария;
		ДокументЗаказа.ПометкаУдаления = Ложь;
 
		// В статусе утверждения "Утвержден" редактировать можно только дату отгрузки (если изменилась дата ремонта),
		// склад отгрузки, комментарий документа (редактирование состава (добавление/удаление/изменение) и
		// количества номенклатуры в документе запрещено).
		Если ДокументЗаказа.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.Утвержден Тогда
			Прервать;
		КонецЕсли;
		
		ВыборкаМатериал = ВыборкаРемонт.Выбрать();
		
		Пока ВыборкаМатериал.Следующий() Цикл
			Если ВыборкаМатериал.Количество <> 0 Тогда
				СтрокаМатериала = ДокументЗаказа.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаМатериала, ВыборкаМатериал);
				
				//СтрокаМатериала.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияСтрокЗаказовНаВП.НаУтверждении;
			КонецЕсли; 
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ДокументЗаказа.Дата) Тогда
			ДокументЗаказа.Дата = ТекущаяДата();		
		КонецЕсли; 
		
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ДокументЗаказа.торо_СтатусУтверждения) Тогда
		ДокументЗаказа.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.НаУтверждении;
	КонецЕсли;
	
	Попытка
		Если ДокументЗаказа.Товары.Количество() = 0 и (ЗначениеЗаполнено(НайденныйДокумент) или ЗначениеЗаполнено(Заказ)) Тогда
			ДокументЗаказа.Проведен = Ложь;
			ДокументЗаказа.Записать(РежимЗаписиДокумента.Запись);
		ИначеЕсли ДокументЗаказа.Товары.Количество() <> 0  Тогда	
			ДокументЗаказа.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	Исключение	
	КонецПопытки;
	
	Возврат ДокументЗаказа;
КонецФункции

// Процедура - отмечает необходимость актуализации заказов на внутреннее потребление в РС "торо_СтатусыЗаказовПоРемонтам"
// при изменении склада в объекте ремонта или подразделении.
//
// Параметры:
//  Источник - Ссылка - ссылка на "Объект ремонта" или "Структуру предприятия", где изменен склад.
//
Процедура ОтметитьНеобходимостьАктуализацииЗаказовНаВнутреннееПотреблениеПриИзмененииСклада(Источник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_СтатусыЗаказовПоРемонтам.IDРемонта КАК IDРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ТехКарта КАК ТехКарта,
	|	торо_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	торо_СтатусыЗаказовПоРемонтам.Статус КАК Статус,
	|	торо_СтатусыЗаказовПоРемонтам.ДатаРемонта КАК ДатаРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ВидРемонта КАК ВидРемонта,
	|	ЕСТЬNULL(торо_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад
	|ПОМЕСТИТЬ ВТ_СтатусыЗаказовПоРемонтам
	|ИЗ
	|	РегистрСведений.торо_СтатусыЗаказовПоРемонтам КАК торо_СтатусыЗаказовПоРемонтам
	|ГДЕ
	|	&УсловныйОтбор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник
	|ПОМЕСТИТЬ ВТ_ИмеютсяРемонтыВРаботе
	|ИЗ
	|	ВТ_СтатусыЗаказовПоРемонтам КАК ВТ_СтатусыЗаказовПоРемонтам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО ВТ_СтатусыЗаказовПоРемонтам.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Отменен)
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Завершен)
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Замещен)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	ДокументИсточник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СтатусыЗаказовПоРемонтам.IDРемонта КАК IDРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ТехКарта КАК ТехКарта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник,
	|	ВТ_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ВТ_СтатусыЗаказовПоРемонтам.Статус КАК Статус,
	|	ВТ_СтатусыЗаказовПоРемонтам.ДатаРемонта КАК ДатаРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ВидРемонта КАК ВидРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.Склад КАК Склад,
	|	ВТ_СтатусыЗаказовПоРемонтам.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		И ВТ_СтатусыЗаказовПоРемонтам.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.Актуален) КАК ПометитьКАтуализации
	|ИЗ
	|	ВТ_СтатусыЗаказовПоРемонтам КАК ВТ_СтатусыЗаказовПоРемонтам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИмеютсяРемонтыВРаботе КАК ВТ_ИмеютсяРемонтыВРаботе
	|		ПО ВТ_СтатусыЗаказовПоРемонтам.ОбъектРемонта = ВТ_ИмеютсяРемонтыВРаботе.ОбъектРемонта
	|			И ВТ_СтатусыЗаказовПоРемонтам.ДокументИсточник = ВТ_ИмеютсяРемонтыВРаботе.ДокументИсточник
	|ИТОГИ
	|	МАКСИМУМ(ПометитьКАтуализации)
	|ПО
	|	ОбъектРемонта,
	|	ДокументИсточник";
	
	Если ТипЗнч(Источник) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловныйОтбор", "торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта = &ОбъектРемонта");
		Запрос.УстановитьПараметр("ОбъектРемонта", Источник);
		
	ИначеЕсли ТипЗнч(Источник) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловныйОтбор", 
			"ВЫРАЗИТЬ(торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК Справочник.торо_ОбъектыРемонта).Подразделение = &Подразделение
			| ИЛИ ВЫРАЗИТЬ(торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК Справочник.торо_ОбъектыРемонта).ПодразделениеИсполнитель = &Подразделение");
		Запрос.УстановитьПараметр("Подразделение", Источник);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбъектРемонта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаОбъектРемонта.Следующий() Цикл
		
		ВыборкаДокументИсточник = ВыборкаОбъектРемонта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокументИсточник.Следующий() Цикл
			
			Если Не ВыборкаДокументИсточник.ПометитьКАтуализации Тогда
				Продолжить;
			КонецЕсли;	
			
			НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументИсточник.Установить(ВыборкаДокументИсточник.ДокументИсточник);
			НаборЗаписей.Отбор.ОбъектРемонта.Установить(ВыборкаДокументИсточник.ОбъектРемонта);
			
			Выборка = ВыборкаДокументИсточник.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				НоваяСтрока = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если Выборка.ПометитьКАтуализации Тогда
					НоваяСтрока.Статус = Перечисления.торо_СтатусыЗаказовПоРемонтам.КОбновлению;
				КонецЕсли;
			КонецЦикла;
			
			НаборЗаписей.Записать(Истина);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры	

// Процедура - добавляет записи о запланированных ремонтах в РС "торо_СтатусыЗаказовПоРемонтам", при установки
// константы "торо_РасширенныйРежимМТО"для дальнейшего создания заказов на внутренние потребления.
//
Процедура АктуализироватьСтатусыЗаказовНаРемонтПриУстановкеРасширенногоРежимаМТО() Экспорт
		
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Константы.торо_РасширенныйРежимМТО.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки КАК ДокументИсточник,
	|	торо_ОбщиеДанныеПоРемонтам.IDРемонта КАК ID,
	|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаРемонта,
	|	торо_ОбщиеДанныеПоРемонтам.ВидРемонта КАК ВидРемонта
	|ПОМЕСТИТЬ ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам
	|ИЗ
	|	РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО торо_АктуальныеПлановыеДатыРемонтов.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|			И (торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки ССЫЛКА Документ.торо_ПланГрафикРемонта
	|				ИЛИ торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки ССЫЛКА Документ.торо_ГрафикРегламентныхМероприятийТОиР)
	|			И (торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала > &ДатаПереходаМТО)
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Отменен)
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Завершен)
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Замещен)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(торо_СтатусыЗаказовПоРемонтам.ДокументИсточник, ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ДокументИсточник) КАК ДокументИсточник,
	|	ЕСТЬNULL(торо_СтатусыЗаказовПоРемонтам.IDРемонта, ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ID) КАК IDРемонта,
	|	ЕСТЬNULL(торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта, ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ОбъектРемонта) КАК ОбъектРемонта,
	|	ЕСТЬNULL(торо_СтатусыЗаказовПоРемонтам.ТехКарта, ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)) КАК ТехКарта,
	|	ЕСТЬNULL(торо_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление, ЗНАЧЕНИЕ(Документ.ЗаказНаВнутреннееПотребление.ПустаяСсылка)) КАК ЗаказНаВнутреннееПотребление,
	|	ЕСТЬNULL(ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ДатаРемонта, торо_СтатусыЗаказовПоРемонтам.ДатаРемонта) КАК ДатаРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ВидРемонта КАК ВидРемонта,
	|	ВЫБОР
	|		КОГДА ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ID ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.НеТребуется)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КОбновлению)
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ID ЕСТЬ NULL
	|				И торо_СтатусыЗаказовПоРемонтам.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.НеТребуется)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.торо_СтатусыЗаказовПоРемонтам КАК торо_СтатусыЗаказовПоРемонтам
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам КАК ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам
	|		ПО торо_СтатусыЗаказовПоРемонтам.IDРемонта = ВТ_АктуальныеЗаписиСтатусыЗаказовПоРемонтам.ID
	|ИТОГИ
	|	МАКСИМУМ(ЕстьИзменения)
	|ПО
	|	ДокументИсточник";
	
	Запрос.УстановитьПараметр("ДатаПереходаМТО", Константы.торо_ДатаПереходаМТО.Получить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИсточник = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИсточник.Следующий() Цикл
		
		Если Не ВыборкаИсточник.ЕстьИзменения Тогда
			Продолжить;
		КонецЕсли;	
		
		НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументИсточник.Установить(ВыборкаИсточник.ДокументИсточник);
		
		Выборка = ВыборкаИсточник.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
	КонецЦикла;

КонецПроцедуры	

#КонецОбласти

#Область Проведение_по_регистру_интеграции_документов

// Процедура - Проведение по регистру ИнтеграцияДокументов.
//
// Параметры:
//  Документ		 - ДокументСсылка.ЗаказНаВнутреннееПотребление - ссылка на заказ на внутренннее потребление.
//
Процедура ПроведениеПоРегиструИнтеграции(Документ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ИнтеграцияДокументов.ID КАК ID,
		|	торо_ИнтеграцияДокументов.ДокументТОИР КАК ДокументТОИР
		|ИЗ
		|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
		|ГДЕ
		|	торо_ИнтеграцияДокументов.ID = &IDРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_СтатусыЗаказовПоРемонтам.IDРемонта КАК IDРемонта,
		|	торо_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник
		|ИЗ
		|	РегистрСведений.торо_СтатусыЗаказовПоРемонтам КАК торо_СтатусыЗаказовПоРемонтам
		|ГДЕ
		|	торо_СтатусыЗаказовПоРемонтам.IDРемонта = &IDРемонта";
	
	Запрос.УстановитьПараметр("IDРемонта", Документ.торо_IDРемонта);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатЗапроса[0].Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Запись = РегистрыСведений.торо_ИнтеграцияДокументов.СоздатьМенеджерЗаписи();
		Запись.ID = Документ.торо_IDРемонта;
		Запись.ДокументЕРП = Документ.Ссылка;
		Запись.ДокументТОИР = ВыборкаДетальныеЗаписи.ДокументИсточник;
		Запись.Записать();	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура АктуализироватьСтатусыЗаказовПоРемонтамПоППРИлиГрафикуРМ(Источник, ОтменаПроведения)
		
	РеквизитыИсточника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник, "ВидОперации, ДокументОснование");
	ЭтоКорректировка = РеквизитыИсточника.ВидОперации = Перечисления.торо_ВидыОперацийПланаГрафикаППР.Корректировка;

	ДокументыИсточники = Новый Массив;
	ДокументыИсточники.Добавить(Источник);
	
	ВидОперацииИсточника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ВидОперации"); 
	Если ЭтоКорректировка Тогда
		
		Корректируемый = РеквизитыИсточника.ДокументОснование;
		ДокументыИсточники.Добавить(Корректируемый);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_СоответствиеКорректировокДокументамППР.Корректировка КАК Корректировка
		|ИЗ
		|	РегистрСведений.торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР
		|ГДЕ
		|	торо_СоответствиеКорректировокДокументамППР.Корректируемый = &Корректируемый
		|	И (торо_СоответствиеКорректировокДокументамППР.Корректировка ССЫЛКА Документ.торо_ПланГрафикРемонта
		|			ИЛИ торо_СоответствиеКорректировокДокументамППР.Корректировка ССЫЛКА Документ.торо_ГрафикРегламентныхМероприятийТОиР)
		|	И НЕ торо_СоответствиеКорректировокДокументамППР.Корректировка = &Источник";
		
		Запрос.УстановитьПараметр("Корректируемый", Корректируемый);
		Запрос.УстановитьПараметр("Источник", Источник);

		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументыИсточники.Добавить(Выборка.Корректировка);
		КонецЦикла;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	&ПолеУпорядочивания КАК ДатаДокумента,
	|	Таблица.Ссылка КАК ДокументИсточник,
	|	Таблица.ID КАК IDРемонта,
	|	&ИмяПоляОбъектРемонта КАК ОбъектРемонта,
	|	Таблица.ДатаНач КАК ДатаРемонта,
	|	Таблица.ВидРемонтныхРабот КАК ВидРемонта,
	|	Таблица.Замещен КАК Замещен,
	|	Таблица.Отменен КАК Отменен
	|ПОМЕСТИТЬ ВТ_ТаблицыДокументов
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&ДокументыИсточники)
	|	И ВЫБОР
	|			КОГДА &ОтменаПроведения
	|				ТОГДА НЕ Таблица.Ссылка = &Источник
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта,
	|	ДатаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицыДокументов.IDРемонта КАК IDРемонта,
	|	МАКСИМУМ(ВТ_ТаблицыДокументов.ДатаДокумента) КАК ДатаАктуальногоДокумента
	|ПОМЕСТИТЬ ВТ_ПриоритетРемонтов
	|ИЗ
	|	ВТ_ТаблицыДокументов КАК ВТ_ТаблицыДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицыДокументов.IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаРемонта
	|ПОМЕСТИТЬ ВТ_АктуальныеДатыРемонтов
	|ИЗ
	|	РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтменаПроведения
	|				ТОГДА НЕ торо_АктуальныеПлановыеДатыРемонтов.ДокументОснование = &Источник
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И торо_АктуальныеПлановыеДатыРемонтов.IDРемонта В
	|			(ВЫБРАТЬ
	|				ВТ_ПриоритетРемонтов.IDРемонта
	|			ИЗ
	|				ВТ_ПриоритетРемонтов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ОтмененныеРемонтыСрезПоследних.ID КАК ID
	|ПОМЕСТИТЬ ВТ_ОтмененныеРемонты
	|ИЗ
	|	РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних(
	|			,
	|			ВЫБОР
	|					КОГДА &ОтменаПроведения
	|						ТОГДА НЕ Регистратор = &Источник
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|				И ID В
	|					(ВЫБРАТЬ
	|						ВТ_ПриоритетРемонтов.IDРемонта
	|					ИЗ
	|						ВТ_ПриоритетРемонтов)) КАК торо_ОтмененныеРемонтыСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицыДокументов.ДокументИсточник КАК ДокументИсточник,
	|	ВТ_ТаблицыДокументов.IDРемонта КАК IDРемонта,
	|	ВТ_ТаблицыДокументов.ОбъектРемонта КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_АктуальныеДатыРемонтов.ДатаРемонта, ВТ_ТаблицыДокументов.ДатаРемонта) КАК ДатаРемонта,
	|	ВТ_ТаблицыДокументов.ВидРемонта КАК ВидРемонта
	|ПОМЕСТИТЬ ВТ_АктуальныеДанные
	|ИЗ
	|	ВТ_ТаблицыДокументов КАК ВТ_ТаблицыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПриоритетРемонтов КАК ВТ_ПриоритетРемонтов
	|		ПО ВТ_ТаблицыДокументов.IDРемонта = ВТ_ПриоритетРемонтов.IDРемонта
	|			И ВТ_ТаблицыДокументов.ДатаДокумента = ВТ_ПриоритетРемонтов.ДатаАктуальногоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АктуальныеДатыРемонтов КАК ВТ_АктуальныеДатыРемонтов
	|		ПО ВТ_ТаблицыДокументов.IDРемонта = ВТ_АктуальныеДатыРемонтов.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтмененныеРемонты КАК ВТ_ОтмененныеРемонты
	|		ПО ВТ_ТаблицыДокументов.IDРемонта = ВТ_ОтмененныеРемонты.ID
	|ГДЕ
	|	ВТ_ОтмененныеРемонты.ID ЕСТЬ NULL
	|	И НЕ ВТ_ТаблицыДокументов.Замещен
	|	И НЕ ВТ_ТаблицыДокументов.Отменен
	|	И ЕСТЬNULL(ВТ_АктуальныеДатыРемонтов.ДатаРемонта, ВТ_ТаблицыДокументов.ДатаРемонта) >= &ДатаПереходаМТО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_СтатусыЗаказовПоРемонтам.IDРемонта КАК IDРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ТехКарта КАК ТехКарта,
	|	торо_СтатусыЗаказовПоРемонтам.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	торо_СтатусыЗаказовПоРемонтам.ДатаРемонта КАК ДатаРемонта,
	|	ЕСТЬNULL(ВТ_АктуальныеДанные.ДатаРемонта, торо_СтатусыЗаказовПоРемонтам.ДатаРемонта) КАК НоваяДатаРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.ВидРемонта КАК ВидРемонта,
	|	торо_СтатусыЗаказовПоРемонтам.Статус КАК Статус,
	|	ВЫБОР
	|		КОГДА ВТ_АктуальныеДанные.IDРемонта ЕСТЬ NULL
	|				И торо_СтатусыЗаказовПоРемонтам.ДатаРемонта < &ДатаПереходаМТО
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.НеТребуется)
	|		КОГДА ВТ_АктуальныеДанные.IDРемонта ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КУдалению)
	|		КОГДА НЕ торо_СтатусыЗаказовПоРемонтам.ДатаРемонта = ВТ_АктуальныеДанные.ДатаРемонта
	|				ИЛИ торо_СтатусыЗаказовПоРемонтам.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КУдалению)
	|				ИЛИ торо_СтатусыЗаказовПоРемонтам.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.НеТребуется)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КОбновлению)
	|		ИНАЧЕ торо_СтатусыЗаказовПоРемонтам.Статус
	|	КОНЕЦ КАК НовыйСтатус
	|ПОМЕСТИТЬ ВТ_СтатусыЗаказовПоРемонтам
	|ИЗ
	|	РегистрСведений.торо_СтатусыЗаказовПоРемонтам КАК торо_СтатусыЗаказовПоРемонтам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АктуальныеДанные КАК ВТ_АктуальныеДанные
	|		ПО торо_СтатусыЗаказовПоРемонтам.IDРемонта = ВТ_АктуальныеДанные.IDРемонта
	|ГДЕ
	|	торо_СтатусыЗаказовПоРемонтам.ДокументИсточник В(&ДокументыИсточники)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АктуальныеДанные.ДокументИсточник КАК ДокументИсточник,
	|	ВТ_АктуальныеДанные.IDРемонта КАК IDРемонта,
	|	ВТ_АктуальныеДанные.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_АктуальныеДанные.ДатаРемонта КАК ДатаРемонта,
	|	ВТ_АктуальныеДанные.ВидРемонта КАК ВидРемонта,
	|	ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка) КАК ТехКарта,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаВнутреннееПотребление.ПустаяСсылка) КАК ЗаказНаВнутреннееПотребление,
	|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыЗаказовПоРемонтам.КОбновлению) КАК Статус,
	|	ИСТИНА КАК ЕстьИзменения
	|ИЗ
	|	ВТ_АктуальныеДанные КАК ВТ_АктуальныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусыЗаказовПоРемонтам КАК ВТ_СтатусыЗаказовПоРемонтам
	|		ПО ВТ_АктуальныеДанные.IDРемонта = ВТ_СтатусыЗаказовПоРемонтам.IDРемонта
	|ГДЕ
	|	ВТ_СтатусыЗаказовПоРемонтам.IDРемонта ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СтатусыЗаказовПоРемонтам.ДокументИсточник,
	|	ВТ_СтатусыЗаказовПоРемонтам.IDРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ОбъектРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.НоваяДатаРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ВидРемонта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ТехКарта,
	|	ВТ_СтатусыЗаказовПоРемонтам.ЗаказНаВнутреннееПотребление,
	|	ВТ_СтатусыЗаказовПоРемонтам.НовыйСтатус,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СтатусыЗаказовПоРемонтам.НовыйСтатус = ВТ_СтатусыЗаказовПоРемонтам.Статус
	|				ИЛИ НЕ ВТ_СтатусыЗаказовПоРемонтам.НоваяДатаРемонта = ВТ_СтатусыЗаказовПоРемонтам.ДатаРемонта
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ВТ_СтатусыЗаказовПоРемонтам КАК ВТ_СтатусыЗаказовПоРемонтам
	|ИТОГИ
	|	МАКСИМУМ(ЕстьИзменения)
	|ПО
	|	ДокументИсточник,
	|	ОбъектРемонта";
	
	Если ТипЗнч(Источник) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПолеУпорядочивания", "ВЫРАЗИТЬ (Таблица.Ссылка КАК Документ.торо_ПланГрафикРемонта).Дата");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяПоляОбъектРемонта", "Таблица.ОбъектРемонтныхРабот");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Таблица", "Документ.торо_ПланГрафикРемонта.ПланРемонтов");
						
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда 
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПолеУпорядочивания", "ВЫРАЗИТЬ (Таблица.Ссылка КАК Документ.торо_ГрафикРегламентныхМероприятийТОиР).Дата");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяПоляОбъектРемонта", "Таблица.СписокОбъектовРемонта");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Таблица", "Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПланРемонтов");
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("ДокументыИсточники", ДокументыИсточники);
	Запрос.УстановитьПараметр("ДатаПереходаМТО", Константы.торо_ДатаПереходаМТО.Получить());
	Запрос.УстановитьПараметр("ОтменаПроведения", ОтменаПроведения);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИсточник = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИсточник.Следующий() Цикл
		
		Если НЕ ВыборкаИсточник.ЕстьИзменения Тогда
			Продолжить;
		КонецЕсли;	
		
		ВыборкаОбъектРемонта = ВыборкаИсточник.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОбъектРемонта.Следующий() Цикл
			
			Если Не ВыборкаОбъектРемонта.ЕстьИзменения Тогда
				Продолжить;
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.торо_СтатусыЗаказовПоРемонтам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументИсточник.Установить(ВыборкаОбъектРемонта.ДокументИсточник);
			НаборЗаписей.Отбор.ОбъектРемонта.Установить(ВыборкаОбъектРемонта.ОбъектРемонта);
			
			Выборка = ВыборкаОбъектРемонта.Выбрать();
			Пока Выборка.Следующий() Цикл   
				
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);	
			КонецЦикла;
			
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры	

Функция ЗапросНаПолучениеАктуальныхЗатрат(ДокСсылка, ИДРемонта = Неопределено, Заказ = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокСсылка);
		
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка КАК Ссылка,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ID КАК ID,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.СписокОбъектовРемонта.ИндивидуальноеОбслуживаниеОР КАК ИндивидуальноеОбслуживаниеОР,
			|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Исполнитель КАК Подразделение,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Склад КАК Склад,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка.Ответственный КАК Ответственный,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка.Организация КАК Организация
			|ПОМЕСТИТЬ ВТ_СписокОбъектовОР
			|ИЗ
			|	Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПланРемонтов КАК торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
			|		ПО торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
			|ГДЕ
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка = &Ссылка
			|	И торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ID = &ID
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СписокОбъектовРемонта,
			|	ВидРемонтныхРабот
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_СписокОбъектовОР.Ссылка КАК Ссылка,
			|	ВТ_СписокОбъектовОР.ID КАК ID,
			|	ВТ_СписокОбъектовОР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
			|	ВТ_СписокОбъектовОР.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
			|	ВТ_СписокОбъектовОР.ИндивидуальноеОбслуживаниеОР КАК ИндивидуальноеОбслуживаниеОР,
			|	ВТ_СписокОбъектовОР.ДатаНачала КАК ДатаНачала,
			|	ВТ_СписокОбъектовОР.Подразделение КАК Подразделение,
			|	ВТ_СписокОбъектовОР.Склад КАК Склад,
			|	ВТ_СписокОбъектовОР.Ответственный КАК Ответственный,
			|	ВТ_СписокОбъектовОР.Организация КАК Организация,
			|	торо_ПлановыеМероприятияСрезПоследних.Регистратор КАК Регистратор
			|ПОМЕСТИТЬ ВТ_ПоследнийРегистратор
			|ИЗ
			|	ВТ_СписокОбъектовОР КАК ВТ_СписокОбъектовОР
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеМероприятия.СрезПоследних КАК торо_ПлановыеМероприятияСрезПоследних
			|		ПО ВТ_СписокОбъектовОР.ID = торо_ПлановыеМероприятияСрезПоследних.ID
			|			И ВТ_СписокОбъектовОР.ВидРемонтныхРабот = торо_ПлановыеМероприятияСрезПоследних.ВидМероприятия
			|			И ВТ_СписокОбъектовОР.СписокОбъектовРемонта = торо_ПлановыеМероприятияСрезПоследних.СписокОбъектов
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка,
			|	ID
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ПоследнийРегистратор.Ссылка КАК Ссылка,
			|	ВТ_ПоследнийРегистратор.ID КАК ID,
			|	ВТ_ПоследнийРегистратор.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
			|	ВТ_ПоследнийРегистратор.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
			|	ВТ_ПоследнийРегистратор.ИндивидуальноеОбслуживаниеОР КАК ИндивидуальноеОбслуживаниеОР,
			|	ВТ_ПоследнийРегистратор.ДатаНачала КАК ДатаНачала,
			|	ВТ_ПоследнийРегистратор.Ответственный КАК Ответственный,
			|	ВТ_ПоследнийРегистратор.Организация КАК Организация,
			|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Склад КАК Склад,
			|	ВЫБОР
			|		КОГДА торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Исполнитель ССЫЛКА Справочник.СтруктураПредприятия
			|			ТОГДА торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Исполнитель
			|		ИНАЧЕ торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка.Подразделение
			|	КОНЕЦ КАК Подразделение
			|ПОМЕСТИТЬ ВТ_ДанныеИзПоследнейКорректировки
			|ИЗ
			|	ВТ_ПоследнийРегистратор КАК ВТ_ПоследнийРегистратор
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПланРемонтов КАК торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов
			|		ПО ВТ_ПоследнийРегистратор.Регистратор = торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка
			|			И ВТ_ПоследнийРегистратор.ID = торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ID
			|			И ВТ_ПоследнийРегистратор.СписокОбъектовРемонта = торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.СписокОбъектовРемонта
			|			И ВТ_ПоследнийРегистратор.ВидРемонтныхРабот = торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ВидРемонтныхРабот
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ID,
			|	СписокОбъектовРемонта,
			|	ВидРемонтныхРабот
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеИзПоследнейКорректировки.Ссылка КАК Ссылка,
			|	ВТ_ДанныеИзПоследнейКорректировки.ID КАК ID,
			|	ВТ_ДанныеИзПоследнейКорректировки.ВидРемонтныхРабот КАК ВидРемонта,
			|	торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт КАК НормативныйРемонт,
			|	ВТ_ДанныеИзПоследнейКорректировки.СписокОбъектовРемонта КАК ОбъектРемонта,
			|	ВТ_ДанныеИзПоследнейКорректировки.Подразделение КАК Подразделение,
			|	ВТ_ДанныеИзПоследнейКорректировки.Склад КАК Склад,
			|	ВТ_ДанныеИзПоследнейКорректировки.Ответственный КАК Ответственный,
			|	ВТ_ДанныеИзПоследнейКорректировки.Организация КАК Организация,
			|	ЛОЖЬ КАК ЭтоЦепочка,
			|	ВТ_ДанныеИзПоследнейКорректировки.ДатаНачала КАК ДатаНачала,
			|	"""" КАК СкладОбеспеченияМТР,
			|	"""" КАК СкладПодразделения
			|ПОМЕСТИТЬ ВТ_Нормативы
			|ИЗ
			|	ВТ_ДанныеИзПоследнейКорректировки КАК ВТ_ДанныеИзПоследнейКорректировки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
			|		ПО ВТ_ДанныеИзПоследнейКорректировки.СписокОбъектовРемонта = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
			|			И ВТ_ДанныеИзПоследнейКорректировки.ВидРемонтныхРабот = торо_РегламентныеМероприятияИСпискиОбъектов.ВидМероприятия
			|ГДЕ
			|	ВТ_ДанныеИзПоследнейКорректировки.ИндивидуальноеОбслуживаниеОР = ЛОЖЬ
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ID
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	"""" КАК ID,
			|	"""" КАК ВидРемонта,
			|	"""" КАК ОбъектРемонта,
			|	"""" КАК ТиповойОР,
			|	"""" КАК ДатаНачала,
			|	"""" КАК Подразделение,
			|	"""" КАК Склад,
			|	"""" КАК Ответственный,
			|	"""" КАК Организация,
			|	"""" КАК Ссылка,
			|	"""" КАК Номенклатура,
			|	"""" КАК ХарактеристикаНоменклатуры,
			|	0 КАК Количество
			|ПОМЕСТИТЬ ВТ_ЗатратыИзСметы
			|ГДЕ
			|	ЛОЖЬ";
		
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда	
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ПланГрафикРемонтаПланРемонтов.ID КАК ID,
		|	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот КАК ВидРемонта,
		|	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонта,
		|	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот.ТиповойОР КАК ТиповойОР,
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка КАК Ссылка,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
		|	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель КАК Подразделение,
		|	торо_ПланГрафикРемонтаПланРемонтов.Склад КАК Склад,
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка.Ответственный КАК Ответственный,
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_ОбъектыИВидыРемонта
		|ИЗ
		|	Документ.торо_ПланГрафикРемонта.ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО торо_ПланГрафикРемонтаПланРемонтов.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|ГДЕ
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка = &Ссылка
		|	И торо_ПланГрафикРемонтаПланРемонтов.ID = &ID
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID,
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОбъектыИВидыРемонта.ID КАК ID,
		|	ВТ_ОбъектыИВидыРемонта.ВидРемонта КАК ВидРемонта,
		|	ВТ_ОбъектыИВидыРемонта.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ОбъектыИВидыРемонта.ТиповойОР КАК ТиповойОР,
		|	ВТ_ОбъектыИВидыРемонта.Ссылка КАК Ссылка,
		|	ВТ_ОбъектыИВидыРемонта.ДатаНачала КАК ДатаНачала,
		|	ВТ_ОбъектыИВидыРемонта.Подразделение КАК Подразделение,
		|	ВТ_ОбъектыИВидыРемонта.Склад КАК Склад,
		|	ВТ_ОбъектыИВидыРемонта.Ответственный КАК Ответственный,
		|	ВТ_ОбъектыИВидыРемонта.Организация КАК Организация,
		|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_ПоследняяКорректировка
		|ИЗ
		|	ВТ_ОбъектыИВидыРемонта КАК ВТ_ОбъектыИВидыРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
		|				,
		|				ID В
		|						(ВЫБРАТЬ
		|							ВТ_ОбъектыИВидыРемонта.ID
		|						ИЗ
		|							ВТ_ОбъектыИВидыРемонта КАК ВТ_ОбъектыИВидыРемонта)
		|					И Регистратор ССЫЛКА Документ.торо_ПланГрафикРемонта) КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
		|		ПО ВТ_ОбъектыИВидыРемонта.ID = торо_ПлановыеРемонтныеРаботыСрезПоследних.ID
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор,
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ЭтоЦепочка КАК ЭтоЦепочка,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта КАК ВидРемонта,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт КАК НормативныйРемонт
		|ПОМЕСТИТЬ ВТ_ЦепочкиДокумента
		|ИЗ
		|	Документ.торо_ПланГрафикРемонта.ОбъектыРемонта КАК торо_ПланГрафикРемонтаОбъектыРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
		|		ПО торо_ПланГрафикРемонтаОбъектыРемонта.ВидРемонтныхРабот = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
		|ГДЕ
		|	торо_ПланГрафикРемонтаОбъектыРемонта.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонтныхРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЦепочкиДокумента.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ВТ_ЦепочкиДокумента.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_ЦепочкиДокумента.ЭтоЦепочка КАК ЭтоЦепочка,
		|	ВТ_ЦепочкиДокумента.ВидРемонта КАК ВидРемонта,
		|	ВТ_ЦепочкиДокумента.НормативныйРемонт КАК НормативныйРемонт,
		|	торо_РемонтныеЦиклыОборудования.ВидЦепочки КАК ВидЦепочки
		|ПОМЕСТИТЬ ВТ_ЦепочкиОбъектов
		|ИЗ
		|	ВТ_ЦепочкиДокумента КАК ВТ_ЦепочкиДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
		|		ПО (ВТ_ЦепочкиДокумента.ОбъектРемонтныхРабот = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов
		|				ИЛИ ВТ_ЦепочкиДокумента.ОбъектРемонтныхРабот.ТиповойОР = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЦепочкиОбъектов.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ВТ_ЦепочкиОбъектов.ЭтоЦепочка КАК ЭтоЦепочка,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта КАК ВидРемонта,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт КАК НормативныйРемонт
		|ПОМЕСТИТЬ ВТ_НормативыЦепочек
		|ИЗ
		|	ВТ_ЦепочкиОбъектов КАК ВТ_ЦепочкиОбъектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
		|		ПО ВТ_ЦепочкиОбъектов.ВидРемонта = торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта
		|			И ВТ_ЦепочкиОбъектов.ВидЦепочки = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоследняяКорректировка.ID КАК ID,
		|	ВТ_ПоследняяКорректировка.ВидРемонта КАК ВидРемонта,
		|	ВТ_ПоследняяКорректировка.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ПоследняяКорректировка.ТиповойОР КАК ТиповойОР,
		|	ВТ_ПоследняяКорректировка.Ссылка КАК Ссылка,
		|	ВТ_ПоследняяКорректировка.ДатаНачала КАК ДатаНачала,
		|	ВТ_ПоследняяКорректировка.Ответственный КАК Ответственный,
		|	ВТ_ПоследняяКорректировка.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА НЕ торо_ПланГрафикРемонтаПланРемонтов.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА торо_ПланГрафикРемонтаПланРемонтов.Склад 
		|		КОГДА НЕ торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот.СкладОбеспеченияМТР = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) 
		|       	ТОГДА торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот.СкладОбеспеченияМТР
		|       КОГДА НЕ торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот.ПодразделениеИсполнитель.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот.ПодразделениеИсполнитель.Склад
		|		ИНАЧЕ торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот.Подразделение.Склад 
		|	КОНЕЦ КАК Склад,	
		|	ВЫБОР
		|		КОГДА торо_ПланГрафикРемонтаПланРемонтов.Исполнитель ССЫЛКА Справочник.СтруктураПредприятия
		|			ТОГДА торо_ПланГрафикРемонтаПланРемонтов.Исполнитель
		|		ИНАЧЕ торо_ПланГрафикРемонтаПланРемонтов.Ссылка.Подразделение
		|	КОНЕЦ КАК Подразделение
		|ПОМЕСТИТЬ ВТ_ДанныеИзПоследнейКорректировки
		|ИЗ
		|	ВТ_ПоследняяКорректировка КАК ВТ_ПоследняяКорректировка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПланГрафикРемонта.ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
		|		ПО ВТ_ПоследняяКорректировка.Регистратор = торо_ПланГрафикРемонтаПланРемонтов.Ссылка
		|			И ВТ_ПоследняяКорректировка.ID = торо_ПланГрафикРемонтаПланРемонтов.ID
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID,
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеИзПоследнейКорректировки.ID КАК ID,
		|	ВТ_ДанныеИзПоследнейКорректировки.ВидРемонта КАК ВидРемонта,
		|	ВТ_ДанныеИзПоследнейКорректировки.Ссылка КАК Ссылка,
		|	ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта КАК ОбъектРемонта,
		|	ЕСТЬNULL(торо_НормативныеРемонтыОборудования.НормативныйРемонт, ВТ_НормативыЦепочек.НормативныйРемонт) КАК НормативныйРемонт,
		|	ВЫБОР
		|		КОГДА торо_НормативныеРемонтыОборудования.ТиповойОР = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Приоритет,
		|	ВТ_ДанныеИзПоследнейКорректировки.ДатаНачала КАК ДатаНачала,
		|	ВТ_ДанныеИзПоследнейКорректировки.Подразделение КАК Подразделение,
		|	ВТ_ДанныеИзПоследнейКорректировки.Склад КАК Склад,
		|	ВТ_ДанныеИзПоследнейКорректировки.Ответственный КАК Ответственный,
		|	ВТ_ДанныеИзПоследнейКорректировки.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_ВсеНормативы
		|ИЗ
		|	ВТ_ДанныеИзПоследнейКорректировки КАК ВТ_ДанныеИзПоследнейКорректировки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|		ПО ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		|			И ВТ_ДанныеИзПоследнейКорректировки.ВидРемонта = торо_НормативныеРемонтыОборудования.ВидРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормативыЦепочек КАК ВТ_НормативыЦепочек
		|		ПО ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта = ВТ_НормативыЦепочек.ОбъектРемонтныхРабот
		|			И (ВТ_НормативыЦепочек.ВидРемонта = ВТ_ДанныеИзПоследнейКорректировки.ВидРемонта)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID,
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеНормативы.ID КАК ID,
		|	ВТ_ВсеНормативы.ВидРемонта КАК ВидРемонта,
		|	ВТ_ВсеНормативы.Ссылка КАК Ссылка,
		|	ВТ_ВсеНормативы.ОбъектРемонта КАК ОбъектРемонта,
		|	МАКСИМУМ(ВТ_ВсеНормативы.Приоритет) КАК Приоритет
		|ПОМЕСТИТЬ ВТ_МаксимумПриоритетов
		|ИЗ
		|	ВТ_ВсеНормативы КАК ВТ_ВсеНормативы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеНормативы.ID,
		|	ВТ_ВсеНормативы.ВидРемонта,
		|	ВТ_ВсеНормативы.Ссылка,
		|	ВТ_ВсеНормативы.ОбъектРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID,
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта КАК IDРемонта,
		|	торо_ЗаявкиПоРемонтамСрезПоследних.ДокументЗаявка КАК ДокументЗаявка
		|ПОМЕСТИТЬ ВТ_НеотмененныеЗаявки
		|ИЗ
		|	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
		|			,
		|			IDРемонта В
		|				(ВЫБРАТЬ
		|					ВТ_ДанныеИзПоследнейКорректировки.ID
		|				ИЗ
		|					ВТ_ДанныеИзПоследнейКорректировки КАК ВТ_ДанныеИзПоследнейКорректировки)) КАК торо_ЗаявкиПоРемонтамСрезПоследних
		|ГДЕ
		|	НЕ торо_ЗаявкиПоРемонтамСрезПоследних.Отменен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ДанныеИзПоследнейКорректировки.ID КАК ID,
		|	ВТ_ДанныеИзПоследнейКорректировки.ВидРемонта КАК ВидРемонта,
		|	ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ДанныеИзПоследнейКорректировки.ТиповойОР КАК ТиповойОР,
		|	ВТ_ДанныеИзПоследнейКорректировки.Ссылка КАК Ссылка,
		|	ВТ_ДанныеИзПоследнейКорректировки.ДатаНачала КАК ДатаНачала,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВТ_ДанныеИзПоследнейКорректировки.Подразделение ССЫЛКА Справочник.СтруктураПредприятия
		|				ТОГДА ЕСТЬNULL(торо_ИсполнителиВЗаявкахПоРемонтам.Исполнитель, ВТ_ДанныеИзПоследнейКорректировки.Подразделение)
		|			ИНАЧЕ торо_ИсполнителиВЗаявкахПоРемонтам.Исполнитель
		|		КОНЕЦ) КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ВТ_ДанныеИзПоследнейКорректировки.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта.СкладОбеспеченияМТР = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|						ТОГДА ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта.Подразделение.Склад
		|					ИНАЧЕ ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта.СкладОбеспеченияМТР
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ДанныеИзПоследнейКорректировки.Склад
		|	КОНЕЦ КАК Склад,
		|	ВТ_ДанныеИзПоследнейКорректировки.Ответственный КАК Ответственный,
		|	ВТ_ДанныеИзПоследнейКорректировки.Организация КАК Организация,
		|	ВТ_НеотмененныеЗаявки.ДокументЗаявка КАК Заявка
		|ПОМЕСТИТЬ ВТ_ИсполнителиИзСметы
		|ИЗ
		|	ВТ_ДанныеИзПоследнейКорректировки КАК ВТ_ДанныеИзПоследнейКорректировки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НеотмененныеЗаявки КАК ВТ_НеотмененныеЗаявки
		|		ПО ВТ_ДанныеИзПоследнейКорректировки.ID = ВТ_НеотмененныеЗаявки.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИсполнителиВЗаявкахПоРемонтам КАК торо_ИсполнителиВЗаявкахПоРемонтам
		|		ПО (ВТ_НеотмененныеЗаявки.ДокументЗаявка = торо_ИсполнителиВЗаявкахПоРемонтам.ДокументЗаявка)
		|			И ВТ_ДанныеИзПоследнейКорректировки.ID = торо_ИсполнителиВЗаявкахПоРемонтам.IDРемонта
		|			И (торо_ИсполнителиВЗаявкахПоРемонтам.Исполнитель ССЫЛКА Справочник.СтруктураПредприятия)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеИзПоследнейКорректировки.ID,
		|	ВТ_ДанныеИзПоследнейКорректировки.ВидРемонта,
		|	ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта,
		|	ВТ_ДанныеИзПоследнейКорректировки.ТиповойОР,
		|	ВТ_ДанныеИзПоследнейКорректировки.Ссылка,
		|	ВТ_ДанныеИзПоследнейКорректировки.ДатаНачала,
		|	ВЫБОР
		|		КОГДА ВТ_ДанныеИзПоследнейКорректировки.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта.СкладОбеспеченияМТР = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|						ТОГДА ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта.Подразделение.Склад
		|					ИНАЧЕ ВТ_ДанныеИзПоследнейКорректировки.ОбъектРемонта.СкладОбеспеченияМТР
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ДанныеИзПоследнейКорректировки.Склад
		|	КОНЕЦ,
		|	ВТ_ДанныеИзПоследнейКорректировки.Ответственный,
		|	ВТ_ДанныеИзПоследнейКорректировки.Организация,
		|	ВТ_НеотмененныеЗаявки.ДокументЗаявка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиИзСметы.ID КАК ID,
		|	ВТ_ИсполнителиИзСметы.ВидРемонта КАК ВидРемонта,
		|	ВТ_ИсполнителиИзСметы.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ИсполнителиИзСметы.ТиповойОР КАК ТиповойОР,
		|	ВТ_ИсполнителиИзСметы.Подразделение КАК Подразделение,
		|	ВТ_ИсполнителиИзСметы.Склад КАК Склад,
		|	ВТ_ИсполнителиИзСметы.Ответственный КАК Ответственный,
		|	ВТ_ИсполнителиИзСметы.Организация КАК Организация,
		|	ВТ_ИсполнителиИзСметы.Ссылка КАК Ссылка,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура КАК Номенклатура,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Количество КАК Количество,
		|	ВТ_ИсполнителиИзСметы.ДатаНачала КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_МатериалыИзСметы
		|ИЗ
		|	ВТ_ИсполнителиИзСметы КАК ВТ_ИсполнителиИзСметы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ПлановыеМатериальныеЗатратыРемонтныхРабот КАК торо_ПлановыеМатериальныеЗатратыРемонтныхРабот
		|		ПО ВТ_ИсполнителиИзСметы.ID = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID
		|			И ВТ_ИсполнителиИзСметы.Заявка = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиИзСметы.ID КАК ID,
		|	ВТ_ИсполнителиИзСметы.ВидРемонта КАК ВидРемонта,
		|	ВТ_ИсполнителиИзСметы.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ИсполнителиИзСметы.ТиповойОР КАК ТиповойОР,
		|	ВТ_ИсполнителиИзСметы.Ссылка КАК Ссылка,
		|	ВТ_ИсполнителиИзСметы.ДатаНачала КАК ДатаНачала,
		|	ВТ_ИсполнителиИзСметы.Подразделение КАК Подразделение,
		|	ВТ_ИсполнителиИзСметы.Склад КАК Склад,
		|	ВТ_ИсполнителиИзСметы.Ответственный КАК Ответственный,
		|	ВТ_ИсполнителиИзСметы.Организация КАК Организация,
		|	ВТ_ИсполнителиИзСметы.Заявка КАК Заявка,
		|	торо_ПлановыеЗатратыЗапчастей.Номенклатура КАК Номенклатура,
		|	торо_ПлановыеЗатратыЗапчастей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	торо_ПлановыеЗатратыЗапчастей.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ЗапчастиИзСметы
		|ИЗ
		|	ВТ_ИсполнителиИзСметы КАК ВТ_ИсполнителиИзСметы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ПлановыеЗатратыЗапчастей КАК торо_ПлановыеЗатратыЗапчастей
		|		ПО ВТ_ИсполнителиИзСметы.ID = торо_ПлановыеЗатратыЗапчастей.РемонтыОборудования_ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МатериалыИзСметы.ID КАК ID,
		|	ВТ_МатериалыИзСметы.ВидРемонта КАК ВидРемонта,
		|	ВТ_МатериалыИзСметы.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_МатериалыИзСметы.ТиповойОР КАК ТиповойОР,
		|	ВТ_МатериалыИзСметы.ДатаНачала КАК ДатаНачала,
		|	ВТ_МатериалыИзСметы.Подразделение КАК Подразделение,
		|	ВТ_МатериалыИзСметы.Склад КАК Склад,
		|	ВТ_МатериалыИзСметы.Ответственный КАК Ответственный,
		|	ВТ_МатериалыИзСметы.Организация КАК Организация,
		|	ВТ_МатериалыИзСметы.Ссылка КАК Ссылка,
		|	ВТ_МатериалыИзСметы.Номенклатура КАК Номенклатура,
		|	ВТ_МатериалыИзСметы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_МатериалыИзСметы.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ЗатратыИзСметы
		|ИЗ
		|	ВТ_МатериалыИзСметы КАК ВТ_МатериалыИзСметы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗапчастиИзСметы.ID,
		|	ВТ_ЗапчастиИзСметы.ВидРемонта,
		|	ВТ_ЗапчастиИзСметы.ОбъектРемонта,
		|	ВТ_ЗапчастиИзСметы.ТиповойОР,
		|	ВТ_ЗапчастиИзСметы.ДатаНачала,
		|	ВТ_ЗапчастиИзСметы.Подразделение,
		|	ВТ_ЗапчастиИзСметы.Склад,
		|	ВТ_ЗапчастиИзСметы.Ответственный,
		|	ВТ_ЗапчастиИзСметы.Организация,
		|	ВТ_ЗапчастиИзСметы.Ссылка,
		|	ВТ_ЗапчастиИзСметы.Номенклатура,
		|	ВТ_ЗапчастиИзСметы.ХарактеристикаНоменклатуры,
		|	ВТ_ЗапчастиИзСметы.Количество
		|ИЗ
		|	ВТ_ЗапчастиИзСметы КАК ВТ_ЗапчастиИзСметы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МаксимумПриоритетов.ID КАК ID,
		|	ВТ_МаксимумПриоритетов.ВидРемонта КАК ВидРемонта,
		|	ВТ_МаксимумПриоритетов.Ссылка КАК Ссылка,
		|	ВТ_МаксимумПриоритетов.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ВсеНормативы.НормативныйРемонт КАК НормативныйРемонт,
		|	ВТ_ВсеНормативы.ДатаНачала КАК ДатаНачала,
		|	ВТ_ВсеНормативы.Подразделение КАК Подразделение,
		|	ВТ_ВсеНормативы.Склад КАК Склад,
		|	ВТ_ВсеНормативы.Ответственный КАК Ответственный,
		|	ВТ_ВсеНормативы.Организация КАК Организация,
		|	ВТ_ВсеНормативы.ОбъектРемонта.СкладОбеспеченияМТР КАК СкладОбеспеченияМТР,
		|	ВТ_ВсеНормативы.ОбъектРемонта.Подразделение.Склад КАК СкладПодразделения
		|ПОМЕСТИТЬ ВТ_Нормативы
		|ИЗ
		|	ВТ_МаксимумПриоритетов КАК ВТ_МаксимумПриоритетов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеНормативы КАК ВТ_ВсеНормативы
		|		ПО ВТ_МаксимумПриоритетов.ID = ВТ_ВсеНормативы.ID
		|			И ВТ_МаксимумПриоритетов.ВидРемонта = ВТ_ВсеНормативы.ВидРемонта
		|			И ВТ_МаксимумПриоритетов.ОбъектРемонта = ВТ_ВсеНормативы.ОбъектРемонта
		|			И ВТ_МаксимумПриоритетов.Приоритет = ВТ_ВсеНормативы.Приоритет
		|			И ВТ_МаксимумПриоритетов.Ссылка = ВТ_ВсеНормативы.Ссылка
		|ГДЕ
		|	НЕ ВТ_ВсеНормативы.ID В
		|				(ВЫБРАТЬ
		|					ВТ_НеотмененныеЗаявки.IDРемонта КАК IDРемонта
		|				ИЗ
		|					ВТ_НеотмененныеЗаявки КАК ВТ_НеотмененныеЗаявки)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID";
		
	КонецЕсли; 
	
	Если ИДРемонта = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "|	И торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ID = &ID", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "|	И торо_ПланГрафикРемонтаПланРемонтов.ID = &ID", "");
	Иначе
		Запрос.УстановитьПараметр("ID", ИДРемонта);
	КонецЕсли; 
	
	Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		| " + 
		"ВЫБРАТЬ
		|	ВТ_Нормативы.ID КАК ID,
		|	ВТ_Нормативы.ВидРемонта КАК ВидРемонта,
		|	ВТ_Нормативы.Ссылка КАК Ссылка,
		|	ВТ_Нормативы.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_Нормативы.НормативныйРемонт КАК НормативныйРемонт,
		|	ВТ_Нормативы.ДатаНачала КАК ДатаНачала,
		|	ВТ_Нормативы.Организация КАК Организация,
		|	ВТ_Нормативы.Подразделение КАК Подразделение,
		|	ВТ_Нормативы.Склад КАК Склад,
		|	ВТ_Нормативы.Ответственный КАК Ответственный,
		|	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта,
		|	торо_ВерсииТехКарт.Период КАК Период
		|ПОМЕСТИТЬ ВТ_ВсеВерсииТК
		|ИЗ
		|	ВТ_Нормативы КАК ВТ_Нормативы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		|		ПО ВТ_Нормативы.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
		|ГДЕ
		|	торо_ВерсииТехКарт.Период <= ВТ_Нормативы.ДатаНачала
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеВерсииТК.ID КАК ID,
		|	ВТ_ВсеВерсииТК.НормативныйРемонт КАК НормативныйРемонт,
		|	МАКСИМУМ(ВТ_ВсеВерсииТК.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_МаксимумПериодовТК
		|ИЗ
		|	ВТ_ВсеВерсииТК КАК ВТ_ВсеВерсииТК
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеВерсииТК.ID,
		|	ВТ_ВсеВерсииТК.НормативныйРемонт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеВерсииТК.ID КАК ID,
		|	ВТ_ВсеВерсииТК.ВидРемонта КАК ВидРемонта,
		|	ВТ_ВсеВерсииТК.Ссылка КАК Ссылка,
		|	ВТ_ВсеВерсииТК.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ВсеВерсииТК.НормативныйРемонт КАК НормативныйРемонт,
		|	ВТ_ВсеВерсииТК.ДатаНачала КАК ДатаНачала,
		|	ВТ_ВсеВерсииТК.ТехКарта КАК ТехКарта,
		|	ВТ_ВсеВерсииТК.Период КАК Период,
		|	ВТ_ВсеВерсииТК.Организация КАК Организация,
		|	ВТ_ВсеВерсииТК.Подразделение КАК Подразделение,
		|	ВТ_ВсеВерсииТК.Склад КАК Склад,
		|	ВТ_ВсеВерсииТК.Ответственный КАК Ответственный
		|ПОМЕСТИТЬ ВТ_ВерсияТК
		|ИЗ
		|	ВТ_МаксимумПериодовТК КАК ВТ_МаксимумПериодовТК
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеВерсииТК КАК ВТ_ВсеВерсииТК
		|		ПО ВТ_МаксимумПериодовТК.Период = ВТ_ВсеВерсииТК.Период
		|			И ВТ_МаксимумПериодовТК.ID = ВТ_ВсеВерсииТК.ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВерсияТК.ID КАК ID,
		|	ВТ_ВерсияТК.ВидРемонта КАК ВидРемонта,
		|	ВТ_ВерсияТК.Ссылка КАК Ссылка,
		|	ВТ_ВерсияТК.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ВерсияТК.НормативныйРемонт КАК НормативныйРемонт,
		|	ВТ_ВерсияТК.ДатаНачала КАК ДатаНачала,
		|	торо_СоставИерархическихТехКартРемонтов.Состав КАК ТехКарта,
		|	торо_СоставИерархическихТехКартРемонтов.Количество КАК Количество,
		|	ВТ_ВерсияТК.Организация КАК Организация,
		|	ВТ_ВерсияТК.Подразделение КАК Подразделение,
		|	ВТ_ВерсияТК.Склад КАК Склад,
		|	ВТ_ВерсияТК.Ответственный КАК Ответственный
		|ПОМЕСТИТЬ ВТ_БазаТК
		|ИЗ
		|	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СоставИерархическихТехКартРемонтов КАК торо_СоставИерархическихТехКартРемонтов
		|		ПО ВТ_ВерсияТК.ТехКарта = торо_СоставИерархическихТехКартРемонтов.ТехКарта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ВерсияТК.ID,
		|	ВТ_ВерсияТК.ВидРемонта,
		|	ВТ_ВерсияТК.Ссылка,
		|	ВТ_ВерсияТК.ОбъектРемонта,
		|	ВТ_ВерсияТК.НормативныйРемонт,
		|	ВТ_ВерсияТК.ДатаНачала,
		|	ВТ_ВерсияТК.ТехКарта,
		|	1,
		|	ВТ_ВерсияТК.Организация,
		|	ВТ_ВерсияТК.Подразделение,
		|	ВТ_ВерсияТК.Склад,
		|	ВТ_ВерсияТК.Ответственный
		|ИЗ
		|	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТехКарта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_БазаТК.ID КАК ID,
		|	ВТ_БазаТК.ВидРемонта КАК ВидРемонта,
		|	ВТ_БазаТК.Ссылка КАК Ссылка,
		|	ВТ_БазаТК.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_БазаТК.НормативныйРемонт КАК НормативныйРемонт,
		|	ВТ_БазаТК.ДатаНачала КАК ДатаНачала,
		|	торо_ТехКартыМатериальныеЗатраты.Номенклатура КАК Номенклатура,
		|	торо_ТехКартыМатериальныеЗатраты.Характеристика КАК Характеристика,
		|	торо_ТехКартыМатериальныеЗатраты.Количество * ВТ_БазаТК.Количество КАК Количество,
		|	ВТ_БазаТК.Организация КАК Организация,
		|	ВТ_БазаТК.Подразделение КАК Подразделение,
		|	ВТ_БазаТК.Склад КАК Склад,
		|	ВТ_БазаТК.Ответственный КАК Ответственный
		|ПОМЕСТИТЬ ВТ_МатЗатраты
		|ИЗ
		|	ВТ_БазаТК КАК ВТ_БазаТК
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_ТехКартыМатериальныеЗатраты
		|		ПО ВТ_БазаТК.ТехКарта = торо_ТехКартыМатериальныеЗатраты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Нормативы.ID КАК ID,
		|	ВТ_Нормативы.ВидРемонта КАК ВидРемонта,
		|	ВТ_Нормативы.Ссылка КАК Ссылка,
		|	ВТ_Нормативы.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_Нормативы.НормативныйРемонт КАК НормативныйРемонт,
		|	ВТ_Нормативы.ДатаНачала КАК ДатаНачала,
		|	ВТ_Нормативы.Организация КАК Организация,
		|	ВТ_Нормативы.Подразделение КАК Подразделение,
		|	ВТ_Нормативы.Склад КАК Склад,
		|	ВТ_Нормативы.Ответственный КАК Ответственный,
		|	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура КАК Номенклатура,
		|	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика КАК Характеристика,
		|	торо_НормыЗапчастейНаОбъектыРемонта.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_Запчасти
		|ИЗ
		|	ВТ_Нормативы КАК ВТ_Нормативы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонта КАК торо_НормыЗапчастейНаОбъектыРемонта
		|		ПО ВТ_Нормативы.ВидРемонта = торо_НормыЗапчастейНаОбъектыРемонта.ВидРемонта
		|			И ВТ_Нормативы.ОбъектРемонта = торо_НормыЗапчастейНаОбъектыРемонта.ОбъектРемонта
		|ГДЕ
		|	торо_НормыЗапчастейНаОбъектыРемонта.Приоритет = ИСТИНА
		|	И торо_НормыЗапчастейНаОбъектыРемонта.ОбъектРемонта.ВестиУчетСерийныхЗапчастей = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МатЗатраты.ID КАК торо_IDРемонта,
		|	ВТ_МатЗатраты.ВидРемонта КАК торо_ВидРемонта,
		|	ВТ_МатЗатраты.Ссылка КАК ДокументОснование,
		|	ВТ_МатЗатраты.ОбъектРемонта КАК торо_ОбъектРемонта,
		|	ВТ_МатЗатраты.НормативныйРемонт КАК торо_ТехКарта,
		|	ВТ_МатЗатраты.ДатаНачала КАК ДатаОтгрузки,
		|	ВТ_МатЗатраты.Номенклатура КАК Номенклатура,
		|	ВТ_МатЗатраты.Характеристика КАК Характеристика,
		|	ЕСТЬNULL(ВТ_МатЗатраты.Количество, 0) КАК Количество,
		|	ВТ_МатЗатраты.Организация КАК Организация,
		|	ВТ_МатЗатраты.Подразделение КАК Подразделение,
		|	ВТ_МатЗатраты.Склад КАК Склад,
		|	ВТ_МатЗатраты.Ответственный КАК Ответственный,
		|	ВТ_МатЗатраты.Количество КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ВТ_ДляГруппировки
		|ИЗ
		|	ВТ_МатЗатраты КАК ВТ_МатЗатраты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Запчасти.ID,
		|	ВТ_Запчасти.ВидРемонта,
		|	ВТ_Запчасти.Ссылка,
		|	ВТ_Запчасти.ОбъектРемонта,
		|	ВТ_Запчасти.НормативныйРемонт,
		|	ВТ_Запчасти.ДатаНачала,
		|	ВТ_Запчасти.Номенклатура,
		|	ВТ_Запчасти.Характеристика,
		|	ЕСТЬNULL(ВТ_Запчасти.Количество, 0),
		|	ВТ_Запчасти.Организация,
		|	ВТ_Запчасти.Подразделение,
		|	ВТ_Запчасти.Склад,
		|	ВТ_Запчасти.Ответственный,
		|	ВТ_Запчасти.Количество
		|ИЗ
		|	ВТ_Запчасти КАК ВТ_Запчасти
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗатратыИзСметы.ID,
		|	ВТ_ЗатратыИзСметы.ВидРемонта,
		|	ВТ_ЗатратыИзСметы.Ссылка,
		|	ВТ_ЗатратыИзСметы.ОбъектРемонта,
		|	"""",
		|	ВТ_ЗатратыИзСметы.ДатаНачала,
		|	ВТ_ЗатратыИзСметы.Номенклатура,
		|	ВТ_ЗатратыИзСметы.ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(ВТ_ЗатратыИзСметы.Количество, 0),
		|	ВТ_ЗатратыИзСметы.Организация,
		|	ВТ_ЗатратыИзСметы.Подразделение,
		|	ВТ_ЗатратыИзСметы.Склад,
		|	ВТ_ЗатратыИзСметы.Ответственный,
		|	ВТ_ЗатратыИзСметы.Количество
		|ИЗ
		|	ВТ_ЗатратыИзСметы КАК ВТ_ЗатратыИзСметы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДляГруппировки.торо_IDРемонта КАК торо_IDРемонта,
		|	ВТ_ДляГруппировки.торо_ВидРемонта КАК торо_ВидРемонта,
		|	ВТ_ДляГруппировки.ДокументОснование КАК ДокументОснование,
		|	ВТ_ДляГруппировки.торо_ОбъектРемонта КАК торо_ОбъектРемонта,
		|	ВТ_ДляГруппировки.торо_ТехКарта КАК торо_ТехКарта,
		|	ВТ_ДляГруппировки.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ВТ_ДляГруппировки.Номенклатура КАК Номенклатура,
		|	ВТ_ДляГруппировки.Характеристика КАК Характеристика,
		|	СУММА(ВТ_ДляГруппировки.Количество) КАК Количество,
		|	ВТ_ДляГруппировки.Организация КАК Организация,
		|	ВТ_ДляГруппировки.Подразделение КАК Подразделение,
		|	ВТ_ДляГруппировки.Склад КАК Склад,
		|	ВТ_ДляГруппировки.Ответственный КАК Ответственный,
		|	СУММА(ВТ_ДляГруппировки.КоличествоУпаковок) КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ВТ_ИтоговыеДанные
		|ИЗ
		|	ВТ_ДляГруппировки КАК ВТ_ДляГруппировки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДляГруппировки.торо_IDРемонта,
		|	ВТ_ДляГруппировки.торо_ВидРемонта,
		|	ВТ_ДляГруппировки.ДокументОснование,
		|	ВТ_ДляГруппировки.торо_ОбъектРемонта,
		|	ВТ_ДляГруппировки.торо_ТехКарта,
		|	ВТ_ДляГруппировки.ДатаОтгрузки,
		|	ВТ_ДляГруппировки.Номенклатура,
		|	ВТ_ДляГруппировки.Характеристика,
		|	ВТ_ДляГруппировки.Организация,
		|	ВТ_ДляГруппировки.Подразделение,
		|	ВТ_ДляГруппировки.Склад,
		|	ВТ_ДляГруппировки.Ответственный
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	торо_IDРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИтоговыеДанные.торо_IDРемонта КАК торо_IDРемонта,
		|	ВТ_ИтоговыеДанные.торо_ВидРемонта КАК торо_ВидРемонта,
		|	ВТ_ИтоговыеДанные.ДокументОснование КАК ДокументОснование,
		|	ВТ_ИтоговыеДанные.торо_ОбъектРемонта КАК торо_ОбъектРемонта,
		|	ВТ_ИтоговыеДанные.торо_ТехКарта КАК торо_ТехКарта,
		|	ВТ_ИтоговыеДанные.ДатаОтгрузки КАК ДатаОтгрузки,
		|	ВТ_ИтоговыеДанные.Номенклатура КАК Номенклатура,
		|	ВТ_ИтоговыеДанные.Характеристика КАК Характеристика,
		|	ВТ_ИтоговыеДанные.Количество КАК Количество,
		|	ВТ_ИтоговыеДанные.Организация КАК Организация,
		|	ВТ_ИтоговыеДанные.Подразделение КАК Подразделение,
		|	ВТ_ИтоговыеДанные.Склад КАК Склад,
		|	ВТ_ИтоговыеДанные.Ответственный КАК Ответственный,
		|	ВТ_ИтоговыеДанные.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ЕСТЬNULL(ЗаказНаВнутреннееПотреблениеТовары.КодСтроки, 0) КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА ЗаказНаВнутреннееПотреблениеТовары.торо_СтатусУтверждения ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияСтрокЗаказовНаВП.НаУтверждении)
		|		КОГДА ВТ_ИтоговыеДанные.Количество = ЗаказНаВнутреннееПотреблениеТовары.Количество
		|			ТОГДА ЗаказНаВнутреннееПотреблениеТовары.торо_СтатусУтверждения
		|		КОГДА ЗаказНаВнутреннееПотреблениеТовары.торо_СтатусУтверждения = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияСтрокЗаказовНаВП.ЕстьЗамечания)
		|			ТОГДА ЗаказНаВнутреннееПотреблениеТовары.торо_СтатусУтверждения = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияСтрокЗаказовНаВП.ЗамечанияИсправлены)
		|		ИНАЧЕ ЗаказНаВнутреннееПотреблениеТовары.торо_СтатусУтверждения
		|	КОНЕЦ КАК торо_СтатусУтверждения
		|ИЗ
		|	ВТ_ИтоговыеДанные КАК ВТ_ИтоговыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ЗаказНаВнутреннееПотреблениеТовары
		|		ПО ВТ_ИтоговыеДанные.Номенклатура = ЗаказНаВнутреннееПотреблениеТовары.Номенклатура
		|			И ВТ_ИтоговыеДанные.Характеристика = ЗаказНаВнутреннееПотреблениеТовары.Характеристика
		|			И ВТ_ИтоговыеДанные.торо_IDРемонта = ЗаказНаВнутреннееПотреблениеТовары.Ссылка.торо_IDРемонта
		|			И (ЗаказНаВнутреннееПотреблениеТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка))
		|ИТОГИ
		|	МАКСИМУМ(торо_ВидРемонта),
		|	МАКСИМУМ(ДокументОснование),
		|	МАКСИМУМ(торо_ОбъектРемонта),
		|	МАКСИМУМ(торо_ТехКарта),
		|	МАКСИМУМ(ДатаОтгрузки),
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Подразделение),
		|	МАКСИМУМ(Склад),
		|	МАКСИМУМ(Ответственный)
		|ПО
		|	торо_IDРемонта";
	
	Возврат Запрос;

КонецФункции

Функция ЗапросИзмененныхДокументомРемонтов(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ПланРаботПодразделения") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.ID КАК IDРемонта,
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.ДатаНачала КАК ДатаРемонта,
		|	ЛОЖЬ КАК Отменен,
		|	ЛОЖЬ КАК Замещен
		|ИЗ
		|	Документ.торо_ПланРаботПодразделения.СписокРемонтовПлана КАК торо_ПланРаботПодразделенияСписокРемонтовПлана,
		|	Константа.торо_ДатаПереходаМТО КАК торо_ДатаПереходаМТО
		|ГДЕ
		|	торо_ПланРаботПодразделенияСписокРемонтовПлана.Ссылка = &Ссылка
		|	И торо_ПланРаботПодразделенияСписокРемонтовПлана.ДатаНачала >= торо_ДатаПереходаМТО.Значение";
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ОстановочныеРемонтыСвязанныеРемонты.ID КАК IDРемонта,
		|	торо_ОстановочныеРемонтыСвязанныеРемонты.ДатаНачалаРемонта КАК ДатаРемонта,
		|	ЛОЖЬ КАК Отменен,
		|	ЛОЖЬ КАК Замещен
		|ИЗ
		|	Документ.торо_ОстановочныеРемонты.СвязанныеРемонты КАК торо_ОстановочныеРемонтыСвязанныеРемонты,
		|	Константа.торо_ДатаПереходаМТО КАК торо_ДатаПереходаМТО
		|ГДЕ
		|	торо_ОстановочныеРемонтыСвязанныеРемонты.Ссылка = &Ссылка
		|	И торо_ОстановочныеРемонтыСвязанныеРемонты.ДатаНачалаРемонта >= торо_ДатаПереходаМТО.Значение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_ОстановочныеРемонты.IDОсновногоРемонта,
		|	торо_ОстановочныеРемонты.ДатаНачалаРемонта,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.торо_ОстановочныеРемонты КАК торо_ОстановочныеРемонты,
		|	Константа.торо_ДатаПереходаМТО КАК торо_ДатаПереходаМТО
		|ГДЕ
		|	торо_ОстановочныеРемонты.Ссылка = &Ссылка
		|	И торо_ОстановочныеРемонты.ДатаНачалаРемонта >= торо_ДатаПереходаМТО.Значение";
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ЗаявкаНаРемонтРемонтыОборудования.ID КАК IDРемонта,
		|	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала КАК ДатаРемонта,
		|	ЛОЖЬ КАК Отменен,
		|	ЛОЖЬ КАК Замещен
		|ИЗ
		|	Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования,
		|	Константа.торо_ДатаПереходаМТО КАК торо_ДатаПереходаМТО
		|ГДЕ
		|	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка = &Ссылка
		|	И торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала >= торо_ДатаПереходаМТО.Значение";
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.торо_ЗакрытиеЗаявокИРемонтов") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.ИДРемонта КАК IDРемонта,
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.Ссылка.Дата КАК ДатаРемонта,
		|	ЛОЖЬ КАК Отменен,
		|	ЛОЖЬ КАК Замещен
		|ИЗ
		|	Документ.торо_ЗакрытиеЗаявокИРемонтов.ЗакрываемыеЗаявки КАК торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки
		|ГДЕ
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеЗаявки.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.ID,
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.ДатаНачала,
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.Отменен,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.торо_ЗакрытиеЗаявокИРемонтов.ЗакрываемыеРемонты КАК торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты,
		|	Константа.торо_ДатаПереходаМТО КАК торо_ДатаПереходаМТО
		|ГДЕ
		|	торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.Ссылка = &Ссылка
		|	И торо_ЗакрытиеЗаявокИРемонтовЗакрываемыеРемонты.ДатаНачала >= торо_ДатаПереходаМТО.Значение";
	КонецЕсли;
	
	Возврат Запрос;
КонецФункции 
 
Функция ПодготовитьВременнуюТаблицуДляПроверкиАналогов(ДокументОбъект, МассивИДОпераций = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ID КАК ID,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ МатериалыИУслуги
	|ИЗ
	|	&Материалы КАК Таблица
	|ГДЕ
	|	&БлокОтбора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID,
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ID КАК ID,
	|	Таблица.РемонтнаяРабота КАК РемонтнаяРабота,
	|	Таблица.Родитель_ID КАК Родитель_ID,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ РемРаботы
	|ИЗ
	|	&РемРаботы КАК Таблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Таблица.РемонтыОборудования_ID,
	|	Таблица.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.Исполнитель КАК Справочник.СтруктураПредприятия) КАК Исполнитель,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ Исполнители
	|ИЗ
	|	&Исполнители КАК Таблица
	|ГДЕ
	|	Таблица.Исполнитель ССЫЛКА Справочник.СтруктураПредприятия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Таблица.РемонтыОборудования_ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Ремонты.ОбъектРемонта КАК Справочник.торо_ОбъектыРемонта) КАК ОбъектРемонта,
	|	Ремонты.ID КАК РемонтыОборудования_ID,
	|	Ремонты.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	Ремонты.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ Ремонты
	|ИЗ
	|	&Ремонты КАК Ремонты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыИУслуги.Номенклатура КАК Номенклатура,
	|	МатериалыИУслуги.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(РемРаботыТехКарты.РемонтнаяРабота, ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)) КАК ТехКарта,
	|	ЕСТЬNULL(Исполнители.Исполнитель, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	Ремонты.ОбъектРемонта.Организация КАК Организация,
	|	Ремонты.ВидРемонтныхРабот КАК ВидРемонта,
	|	Ремонты.ОбъектРемонта КАК ОбъектРемонта,
	|	Ремонты.ОбъектРемонта.Направление КАК НаправлениеОбъектаРемонта,
	|	Ремонты.ДатаНачала КАК ДатаРемонта,
	|	МатериалыИУслуги.ID КАК ID,
	|	МатериалыИУслуги.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	МатериалыИУслуги КАК МатериалыИУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РемРаботы КАК РемРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РемРаботы КАК РемРаботыТехКарты
	|				ЛЕВОЕ СОЕДИНЕНИЕ Исполнители КАК Исполнители
	|				ПО РемРаботыТехКарты.РемонтыОборудования_ID = Исполнители.РемонтыОборудования_ID
	|			ПО РемРаботы.РемонтыОборудования_ID = РемРаботыТехКарты.РемонтыОборудования_ID
	|				И РемРаботы.Родитель_ID = РемРаботыТехКарты.ID
	|				И (РемРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации)
	|				И (РемРаботыТехКарты.РемонтнаяРабота ССЫЛКА Справочник.торо_ИдентификаторыТехКарт)
	|		ПО МатериалыИУслуги.РемонтыОборудования_ID = РемРаботы.РемонтыОборудования_ID
	|			И МатериалыИУслуги.ID = РемРаботы.ID
	|		ЛЕВОЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
	|		ПО МатериалыИУслуги.РемонтыОборудования_ID = Ремонты.РемонтыОборудования_ID
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID,
	|	ID";
	
	Запрос.УстановитьПараметр("Исполнители", ДокументОбъект.ИсполнителиПоРемонтам.Выгрузить());
	Запрос.УстановитьПараметр("Материалы", ДокументОбъект.МатериальныеЗатраты.Выгрузить());
	Запрос.УстановитьПараметр("РемРаботы", ДокументОбъект.РемонтныеРаботы.Выгрузить());
	Запрос.УстановитьПараметр("Ремонты", ДокументОбъект.РемонтыОборудования.Выгрузить());
	Запрос.УстановитьПараметр("МассивID", МассивИДОпераций);
	
	Если ТипЗнч(МассивИДОпераций) = Тип("Строка") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&БлокОтбора","Таблица.ID = &МассивID");
	ИначеЕсли ТипЗнч(МассивИДОпераций) = Тип("Массив") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&БлокОтбора","Таблица.ID В (&МассивID)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&БлокОтбора","ИСТИНА");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ПодготовитьВременнуюТаблицуДляПроверкиАналоговРегламентыхМероприятий(ДокументОбъект, МассивИДОпераций = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ID КАК ID,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ МатериалыИУслуги
	|ИЗ
	|	&Материалы КАК Таблица
	|ГДЕ
	|	&БлокОтбора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID,
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.ID КАК ID,
	|	Таблица.РемонтнаяРабота КАК РемонтнаяРабота,
	|	Таблица.Родитель_ID КАК Родитель_ID,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ РемРаботы
	|ИЗ
	|	&РемРаботы КАК Таблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID,
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Ремонты.ОбъектРемонта КАК Справочник.торо_СписокОбъектовРегламентногоМероприятия) КАК ОбъектРемонта,
	|	Ремонты.ID КАК РемонтыОборудования_ID,
	|	Ремонты.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	Ремонты.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ Ремонты
	|ИЗ
	|	&Ремонты КАК Ремонты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыИУслуги.Номенклатура КАК Номенклатура,
	|	МатериалыИУслуги.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(РемРаботыТехКарты.РемонтнаяРабота, ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)) КАК ТехКарта,
	|	Ремонты.ОбъектРемонта.ПодразделениеИсполнитель КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка) КАК НаправлениеОбъектаРемонта,
	|	Ремонты.ВидРемонтныхРабот КАК ВидРемонта,
	|	Ремонты.ОбъектРемонта КАК ОбъектРемонта,
	|	Ремонты.ДатаНачала КАК ДатаРемонта,
	|	МатериалыИУслуги.ID КАК ID,
	|	МатериалыИУслуги.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	МатериалыИУслуги КАК МатериалыИУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РемРаботы КАК РемРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РемРаботы КАК РемРаботыТехКарты
	|			ПО РемРаботы.РемонтыОборудования_ID = РемРаботыТехКарты.РемонтыОборудования_ID
	|				И РемРаботы.Родитель_ID = РемРаботыТехКарты.ID
	|				И (РемРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации)
	|				И (РемРаботыТехКарты.РемонтнаяРабота ССЫЛКА Справочник.торо_ИдентификаторыТехКарт)
	|		ПО МатериалыИУслуги.РемонтыОборудования_ID = РемРаботы.РемонтыОборудования_ID
	|			И МатериалыИУслуги.ID = РемРаботы.ID
	|		ЛЕВОЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
	|		ПО МатериалыИУслуги.РемонтыОборудования_ID = Ремонты.РемонтыОборудования_ID
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтыОборудования_ID,
	|	ID";
	
	Запрос.УстановитьПараметр("Материалы", ДокументОбъект.МатериальныеЗатраты.Выгрузить());
	Запрос.УстановитьПараметр("РемРаботы", ДокументОбъект.РемонтныеРаботы.Выгрузить());
	Запрос.УстановитьПараметр("Ремонты", ДокументОбъект.Мероприятия.Выгрузить());
	Запрос.УстановитьПараметр("МассивID", МассивИДОпераций);
	Запрос.УстановитьПараметр("ИспользоватьУправлениеПерсоналом",ПолучитьФункциональнуюОпцию("торо_ИспользоватьУправлениеПерсоналом"));
	
	Если ТипЗнч(МассивИДОпераций) = Тип("Строка") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&БлокОтбора","Таблица.ID = &МассивID");
	ИначеЕсли ТипЗнч(МассивИДОпераций) = Тип("Массив") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&БлокОтбора","Таблица.ID В (&МассивID)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&БлокОтбора","ИСТИНА");
	КонецЕсли;
	
	Запрос.Выполнить();

	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции
	
Функция ВернутьЗаписиСАналогами(МенеджерТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаНоменклатуры.ID КАК ID,
	|	ТаблицаНоменклатуры.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_АналогиНоменклатурыДляРемонтов.Регистратор ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьАналоги
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	|		ПО ТаблицаНоменклатуры.Номенклатура = торо_АналогиНоменклатурыДляРемонтов.Материал
	|			И ТаблицаНоменклатуры.ХарактеристикаНоменклатуры = торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала
	|			И ТаблицаНоменклатуры.ДатаРемонта >= торо_АналогиНоменклатурыДляРемонтов.Период
	|			И (ВЫБОР
	|				КОГДА торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаНоменклатуры.ДатаРемонта <= торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения
	|			КОНЕЦ)
	|			И (торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				ИЛИ торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка)
	|				ИЛИ торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ТаблицаНоменклатуры.ОбъектРемонта, ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)) = торо_АналогиНоменклатурыДляРемонтов.ОбъектРемонта)
	|			И (торо_АналогиНоменклатурыДляРемонтов.ТехКарта = ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
	|				ИЛИ ЕСТЬNULL(ТаблицаНоменклатуры.ТехКарта, ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)) = торо_АналогиНоменклатурыДляРемонтов.ТехКарта)
	|			И (торо_АналогиНоменклатурыДляРемонтов.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				ИЛИ торо_АналогиНоменклатурыДляРемонтов.Подразделение = ТаблицаНоменклатуры.Подразделение)
	|			И (торо_АналогиНоменклатурыДляРемонтов.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				ИЛИ торо_АналогиНоменклатурыДляРемонтов.ВидРемонта = ТаблицаНоменклатуры.ВидРемонта)
	|			И (торо_АналогиНоменклатурыДляРемонтов.НаправлениеОбъектаРемонта = ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				ИЛИ торо_АналогиНоменклатурыДляРемонтов.НаправлениеОбъектаРемонта = ТаблицаНоменклатуры.НаправлениеОбъектаРемонта)
	|			И (торо_АналогиНоменклатурыДляРемонтов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ИЛИ торо_АналогиНоменклатурыДляРемонтов.Организация = ТаблицаНоменклатуры.Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.Номенклатура,
	|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры,
	|	ТаблицаНоменклатуры.ID,
	|	ТаблицаНоменклатуры.РемонтыОборудования_ID
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_АналогиНоменклатурыДляРемонтов.Регистратор ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) = ИСТИНА";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Возврат Выборка;
	
КонецФункции
	
Процедура РассчитатьКрайнийСрок(МенеджерТаблиц, ИмяВТСДанными) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	МИНИМУМ(ВТ_Данные.ДатаОтгрузки) КАК ДатаНачала,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ВТ_Данные.СпособОбеспеченияПотребностей = ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка)
	               |				ТОГДА 0
	               |			ИНАЧЕ ВТ_Данные.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа
	               |		КОНЕЦ) * 86400 КАК СрокИсполненияЗаказа,
	               |	МАКСИМУМ(ВТ_Данные.ДатаОтгрузки) КАК ДатаОкончания
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Данные", ИмяВТСДанными);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДатаНачала = ТекущаяДата();
	ДатаОкончания = ТекущаяДата();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДат = РезультатЗапроса.Выбрать();
		ВыборкаДат.Следующий();
		
		Если ЗначениеЗаполнено(ВыборкаДат.ДатаНачала) Тогда
			// Вычитаем еще месяц, т.к. максимально возможного срока исполнения может не хватаить: если это 10-е числа
			// января, срок - 3 дня, то крайний срок заказа - конец декабря, но т.к. ВТ календаря не расчитана, то и дата
			// не рассчитается.
			ДатаНачала = НачалоГода(ВыборкаДат.ДатаНачала - ВыборкаДат.СрокИсполненияЗаказа) - 31 * 86400;
			ДатаОкончания = ВыборкаДат.ДатаОкончания;
		КонецЕсли;
	КонецЕсли;
	
	Графики = Новый Массив();
	Графики.Добавить(Константы.торо_ГрафикРемонтныхРабот.Получить());
	
	КалендарныеГрафики.СоздатьВТРасписанияРаботыНаПериод(Запрос.МенеджерВременныхТаблиц, Графики, ДатаНачала, ДатаОкончания);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВТ_Данные.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей,
	               |	ВТ_Данные.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа + 1 КАК Смещение,
	               |	ДОБАВИТЬКДАТЕ(ВТ_Данные.ДатаОтгрузки, ДЕНЬ, -1) КАК ДатаОтгрузки,
	               |	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	               |ПОМЕСТИТЬ ВТ_ИсходныеДаты
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |ГДЕ
	               |	НЕ ВТ_Данные.СпособОбеспеченияПотребностей ЕСТЬ NULL
	               |	И ВТ_Данные.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НомерСтроки,
	               |	Смещение,
	               |	ДатаОтгрузки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ИсходныеДаты.НомерСтроки КАК НомерСтроки,
	               |	ВТ_ИсходныеДаты.Смещение КАК Смещение,
	               |	ВТРасписанияРаботы.ДатаГрафика КАК ДатаГрафика
	               |ИЗ
	               |	ВТРасписанияРаботы КАК ВТРасписанияРаботы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИсходныеДаты КАК ВТ_ИсходныеДаты
	               |		ПО ВТРасписанияРаботы.ДатаГрафика <= ВТ_ИсходныеДаты.ДатаОтгрузки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаГрафика УБЫВ
	               |ИТОГИ ПО
	               |	НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Данные", ИмяВТСДанными);
	
	РезультатЗапроса = Запрос.Выполнить();                                                                                                 
	
	КрайниеДатыЗаказов = Новый ТаблицаЗначений;
	КрайниеДатыЗаказов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 0)));
	КрайниеДатыЗаказов.Колонки.Добавить("ДатаГрафика", Новый ОписаниеТипов("Дата"));

	ВыборкаНомерСтроки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	Пока ВыборкаНомерСтроки.Следующий() Цикл
		
		СчетчикСмещения = 1;
		
		Выборка = ВыборкаНомерСтроки.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если СчетчикСмещения = Выборка.Смещение Тогда
				НоваяСтрока = КрайниеДатыЗаказов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				Прервать;
			КонецЕсли;
			
			СчетчикСмещения = СчетчикСмещения + 1;
		КонецЦикла;	                 
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("КрайниеДатыЗаказов", КрайниеДатыЗаказов);

	Запрос.Текст = "ВЫБРАТЬ
	               |	КрайниеДатыЗаказов.НомерСтроки КАК НомерСтроки,
	               |	КрайниеДатыЗаказов.ДатаГрафика КАК ДатаГрафика
	               |ПОМЕСТИТЬ ВТ_КрайниеДатыЗаказовПредварительно
	               |ИЗ
	               |	&КрайниеДатыЗаказов КАК КрайниеДатыЗаказов
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НомерСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВТ_ИсходныеДаты.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей,
	               |	ДОБАВИТЬКДАТЕ(ВТ_ИсходныеДаты.ДатаОтгрузки, ДЕНЬ, 1) КАК ДатаОтгрузки,
	               |	ЕСТЬNULL(ВТ_КрайниеДатыЗаказовПредварительно.ДатаГрафика, ВТ_ИсходныеДаты.ДатаОтгрузки) КАК ДатаПоКалендарю
	               |ПОМЕСТИТЬ ВТ_КрайниеДатыЗаказов
	               |ИЗ
	               |	ВТ_ИсходныеДаты КАК ВТ_ИсходныеДаты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КрайниеДатыЗаказовПредварительно КАК ВТ_КрайниеДатыЗаказовПредварительно
	               |		ПО ВТ_ИсходныеДаты.НомерСтроки = ВТ_КрайниеДатыЗаказовПредварительно.НомерСтроки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СпособОбеспеченияПотребностей,
	               |	ДатаОтгрузки";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти