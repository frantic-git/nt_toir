
#Область СлужебныйПрограммныйИнтерфейс

#Область ПодпискиНаСобытия

Процедура торо_ОбновитьПлановыеДатыПриПроведенииОбработчик(Источник) Экспорт
	
	ОбновитьПлановыеДатыПриПроведении(Источник, Истина);
	
КонецПроцедуры

Процедура торо_ОбновитьПлановыеДатыПриОтменеПроведенияОбработчик(Источник) Экспорт
	
	СтруктураДанныхРемонтов = ПолучитьМассивIDРемонтов(Источник);
	Если СтруктураДанныхРемонтов = Неопределено Тогда
		Возврат;
	КонецЕсли;;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивID = СтруктураДанныхРемонтов.МассивID;
	УстановитьУправляемыеБлокировкиНаРегистрАктуальныхДат(СтруктураДанныхРемонтов.ТаблицаРемонтов);

	// Вторым параметром передаем пустой массив, а не реальный массив ИД ремонтов,
	// так как при отмене проведения нужно удалить все записи.
	УдалитьПлановыеДатыРемонтовПоДокументуНачалаЦепочки(Источник.Ссылка);
	ТекущиеЗаписиРегистра = ПолучитьАктуальныеДатыРемонтов(МассивID);
	
	Для каждого НаборЗаписей из Источник.Движения Цикл
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записывать = Истина;
		КонецЕсли;
	КонецЦикла;
	Источник.Движения.Записать();
	
	ПолучитьИдентификаторыУдаленныхРемонтовИзДокументаОснования(МассивID, Источник.Ссылка);
	ОбновитьАктуальныеПлановыеДатыРемонтов(МассивID, Источник.Ссылка, ТекущиеЗаписиРегистра);
	
	ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриОтменеПроведенияДокумента(Источник, СтруктураДанныхРемонтов);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбновитьПлановыеДатыПриПроведении(Источник, ЗаписыватьДвижения) Экспорт
	
	СтруктураДанныхРемонтов = ПолучитьМассивIDРемонтов(Источник);
	Если СтруктураДанныхРемонтов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивID = СтруктураДанныхРемонтов.МассивID;
	УстановитьУправляемыеБлокировкиНаРегистрАктуальныхДат(СтруктураДанныхРемонтов.ТаблицаРемонтов);

	ТекущиеЗаписиРегистра = ПолучитьАктуальныеДатыРемонтов(МассивID);
	
	Если ЗаписыватьДвижения Тогда
		Источник.Движения.Записать();
	КонецЕсли;

	ПолучитьИдентификаторыУдаленныхРемонтовИзДокументаОснования(МассивID, Источник.Ссылка);
	ОбновитьАктуальныеПлановыеДатыРемонтов(МассивID, Источник.Ссылка, ТекущиеЗаписиРегистра);
	
	ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриПроведенииДокументаПлановыхДат(Источник, СтруктураДанныхРемонтов);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

// Получает записи регистра торо_АктуальныеПлановыеДатыРемонтов.
//
// Параметры:
//		МассивID - Массив - массив идентификаторов ремонтов.
//
// Возвращаемое значение:
//		ТаблицаЗначений - таблица, состав колонок повторяет структуру регистра.
//								Таблица проиндексирована по IDРемонта.
//
Функция ПолучитьАктуальныеДатыРемонтов(МассивID) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания КАК ДатаОкончания,
	|	торо_АктуальныеПлановыеДатыРемонтов.КрайняяДатаЗавершения КАК КрайняяДатаЗавершения,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДокументОснование КАК ДокументОснование,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки
	|ИЗ
	|	РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|ГДЕ
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта В(&МассивID)";
	
	Запрос.УстановитьПараметр("МассивID", МассивID);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Индексы.Добавить("IDРемонта");
	
	Возврат Результат;
	
КонецФункции

// Обработка регламентного задания, формирующего документы "торо_ПроектныеЗатратыНаРемонты".
Процедура торо_РасчетПроектныхЗатратНаРемонты() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	ОбработатьСтатусРасчетаПроектныхЗатратКУдалению();
	ОбработатьСтатусРасчетаПроектныхЗатратКОбновлению();
	
КонецПроцедуры

Процедура ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриПроведенииНарядаАкта(Источник) Экспорт

	СтруктураДанныхРемонтов = ПолучитьМассивIDРемонтов(Источник);
	Если СтруктураДанныхРемонтов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивID = СтруктураДанныхРемонтов.МассивID;
	УстановитьУправляемыеБлокировкиНаРегистрСтатусовРасчетаПроектныхЗатрат(СтруктураДанныхРемонтов.ТаблицаРемонтов);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	Запрос.УстановитьПараметр("МассивID", МассивID);
	Запрос.УстановитьПараметр("ИсключаемыеСтатусы", Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВЫБОР
	|		КОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован)
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В(&МассивID)
	|	И НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (&ИсключаемыеСтатусы)";	
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриОтменеПроведенияНарядаАкта(Источник) Экспорт
	
	СтруктураДанныхРемонтов = ПолучитьМассивIDРемонтов(Источник);
	Если СтруктураДанныхРемонтов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриОтменеПроведенияДокумента(Источник, СтруктураДанныхРемонтов);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПометитьКОбновлениюПроектныеЗатратыНаРемонтыПриЗаписиТехКарты(ВерсияТехКарты) Экспорт
	
	Если ВерсияТехКарты = Неопределено Тогда
		// Выполняется удаление объекта.
		Возврат;
	КонецЕсли;

	// Нужно отметить как изменившиеся текущую ТК и тех. карты, в которые она входит как вложенная.
	// Для внешних оснований тех. карта в регистр не пишется, проверяем по табличной части рем. работ.
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_СоставИерархическихТехКартРемонтов.ТехКарта КАК ТехКарта
	|ПОМЕСТИТЬ ВТ_ИзмененныеВерсии
	|ИЗ
	|	РегистрСведений.торо_СоставИерархическихТехКартРемонтов КАК торо_СоставИерархическихТехКартРемонтов
	|ГДЕ
	|	торо_СоставИерархическихТехКартРемонтов.Состав = &ВерсияТехКарты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ВерсияТехКарты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТехКарта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_ВерсииТехКарт.ИдентификаторТехКарты КАК ИдентификаторТехКарты
	|ПОМЕСТИТЬ ВТ_ИзмененныеТК
	|ИЗ
	|	ВТ_ИзмененныеВерсии КАК ВТ_ИзмененныеВерсии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	|		ПО ВТ_ИзмененныеВерсии.ТехКарта = торо_ВерсииТехКарт.ТехКарта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторТехКарты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
	|ПОМЕСТИТЬ ВТ_ВнешниеОснованияДляПроверки
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален)
	|	И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВнешнееОснованиеДляРабот)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументИсточник,
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИзмененныеТК КАК ВТ_ИзмененныеТК
	|		ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта = ВТ_ИзмененныеТК.ИдентификаторТехКарты
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВнешниеОснованияДляПроверки.IDРемонта,
	|	ВТ_ВнешниеОснованияДляПроверки.ОбъектРемонта,
	|	ВТ_ВнешниеОснованияДляПроверки.ДокументИсточник,
	|	ВТ_ВнешниеОснованияДляПроверки.ДокументЗатрат,
	|	ВТ_ВнешниеОснованияДляПроверки.ВидДокументаИсточника,
	|	ВТ_ВнешниеОснованияДляПроверки.ТехКарта,
	|	ВТ_ВнешниеОснованияДляПроверки.ТиповойДефект,
	|	ВТ_ВнешниеОснованияДляПроверки.ДатаСрезаТехКарты
	|ИЗ
	|	ВТ_ВнешниеОснованияДляПроверки КАК ВТ_ВнешниеОснованияДляПроверки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВнешнееОснованиеДляРабот.РемонтныеРаботы КАК торо_ВнешнееОснованиеДляРаботРемонтныеРаботы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИзмененныеТК КАК ВТ_ИзмененныеТК
	|			ПО торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.РемонтнаяРабота = ВТ_ИзмененныеТК.ИдентификаторТехКарты
	|		ПО ВТ_ВнешниеОснованияДляПроверки.ДокументИсточник = торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Ссылка
	|			И ВТ_ВнешниеОснованияДляПроверки.IDРемонта = торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Предписание_ID";
	
	Запрос.УстановитьПараметр("ВерсияТехКарты", ВерсияТехКарты);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПометитьКОбновлениюПроектныеЗатратыНаРемонтыПриЗаписиЦепочкиРемонтов(ЦепочкаРемонтов) Экспорт

	Если НЕ ЗначениеЗаполнено(ЦепочкаРемонтов) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВЫБОР
	|		КОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
	|			ТОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению)
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|			ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|		ПО торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов = торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта
	|			И (торо_РемонтныеЦиклыОборудования.ВидЦепочки = &ВидЦепочки)
	|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (&ПроверяемыеСтатусы))
	|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника В (&ВидДокументаИсточника))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
	|		ПО торо_РемонтныеЦиклыОборудования.ВидЦепочки = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка,
	|	Константа.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов КАК торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				ТОГДА торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Значение
	|			ИНАЧЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|		КОНЕЦ = торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта
	|	И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта <> торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт";
	
	Запрос.УстановитьПараметр("ВидЦепочки", ЦепочкаРемонтов);
	
	ВидыДокументовИсточников = Новый Массив;
	ВидыДокументовИсточников.Добавить(Перечисления.торо_ВидыДокументовНачалаЦепочкиРемонтов.ПланГрафикППР);
	Запрос.УстановитьПараметр("ВидДокументаИсточника", ВидыДокументовИсточников);
	
	ПроверяемыеСтатусы = Новый Массив;
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать);
	Запрос.УстановитьПараметр("ПроверяемыеСтатусы", ПроверяемыеСтатусы);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПометитьКОбновлениюПроектныеЗатратыНаРемонтыПриОбновленииЗапчастейОР(ОбъектРемонта) Экспорт

	Если НЕ ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта = &ОбъектРемонта
	|	И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален)";
	
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению;
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПометитьКОбновлениюПроектныеЗатратыНаРемонтыПриОбновленииНормативовОР(ОбъектРемонтаИлиТОР) Экспорт

	Если НЕ ЗначениеЗаполнено(ОбъектРемонтаИлиТОР) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВЫБОР
	|		КОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
	|			ТОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению)
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Значение
	|		ИНАЧЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|	КОНЕЦ КАК ВидРемонта
	|ПОМЕСТИТЬ ВТ_ДанныеДляПроверки
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта,
	|	Константа.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов КАК торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта = &Ссылка
	|	И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В(&ПроверяемыеСтатусы)
	|	И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника В(&ВидДокументаИсточника)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	ВидРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляПроверки.IDРемонта КАК IDРемонта,
	|	ВТ_ДанныеДляПроверки.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ДанныеДляПроверки.ДокументИсточник КАК ДокументИсточник,
	|	ВТ_ДанныеДляПроверки.ДокументЗатрат КАК ДокументЗатрат,
	|	ВТ_ДанныеДляПроверки.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК ТехКарта,
	|	ВТ_ДанныеДляПроверки.ТиповойДефект КАК ТиповойДефект,
	|	ВТ_ДанныеДляПроверки.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВТ_ДанныеДляПроверки.Статус КАК Статус
	|ИЗ
	|	ВТ_ДанныеДляПроверки КАК ВТ_ДанныеДляПроверки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	|		ПО ВТ_ДанныеДляПроверки.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	|			И ВТ_ДанныеДляПроверки.ВидРемонта = торо_НормативныеРемонтыОборудования.ВидРемонта
	|			И (торо_НормативныеРемонтыОборудования.Приоритет)
	|ГДЕ
	|	ВТ_ДанныеДляПроверки.ТехКарта <> торо_НормативныеРемонтыОборудования.НормативныйРемонт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляПроверки.IDРемонта,
	|	ВТ_ДанныеДляПроверки.ОбъектРемонта,
	|	ВТ_ДанныеДляПроверки.ДокументИсточник,
	|	ВТ_ДанныеДляПроверки.ДокументЗатрат,
	|	ВТ_ДанныеДляПроверки.ВидДокументаИсточника,
	|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт,
	|	ВТ_ДанныеДляПроверки.ТиповойДефект,
	|	ВТ_ДанныеДляПроверки.ДатаСрезаТехКарты,
	|	ВТ_ДанныеДляПроверки.Статус
	|ИЗ
	|	ВТ_ДанныеДляПроверки КАК ВТ_ДанныеДляПроверки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
	|			ПО торо_РемонтныеЦиклыОборудования.ВидЦепочки = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
	|		ПО ВТ_ДанныеДляПроверки.ОбъектРемонта = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов
	|ГДЕ
	|	ВТ_ДанныеДляПроверки.ВидРемонта = торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта
	|	И ВТ_ДанныеДляПроверки.ТехКарта <> торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт";
		
	Если ТипЗнч(ОбъектРемонтаИлиТОР) = Тип("СправочникСсылка.торо_ТиповыеОР") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта = &Ссылка",
			"торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта.ТиповойОР = &Ссылка");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", ОбъектРемонтаИлиТОР);
	
	ВидыДокументовИсточников = Новый Массив;
	ВидыДокументовИсточников.Добавить(Перечисления.торо_ВидыДокументовНачалаЦепочкиРемонтов.ПланГрафикППР);
	ВидыДокументовИсточников.Добавить(Перечисления.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект);
	Запрос.УстановитьПараметр("ВидДокументаИсточника", ВидыДокументовИсточников);
	
	ПроверяемыеСтатусы = Новый Массив;
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать);
	Запрос.УстановитьПараметр("ПроверяемыеСтатусы", ПроверяемыеСтатусы);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПометитьКОбновлениюПроектныеЗатратыНаРемонтыПриОбновленииНормативовСпискаОР(СписокОР) Экспорт

	Если НЕ ЗначениеЗаполнено(СписокОР) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВЫБОР
	|		КОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
	|			ТОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению)
	|	КОНЕЦ КАК Статус,
	|	торо_ОбщиеДанныеПоРемонтам.ВидРемонта КАК ВидРемонта
	|ПОМЕСТИТЬ ВТ_ДанныеДляПроверки
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта = &Ссылка
	|	И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В(&ПроверяемыеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	ВидРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляПроверки.IDРемонта КАК IDРемонта,
	|	ВТ_ДанныеДляПроверки.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ДанныеДляПроверки.ДокументИсточник КАК ДокументИсточник,
	|	ВТ_ДанныеДляПроверки.ДокументЗатрат КАК ДокументЗатрат,
	|	ВТ_ДанныеДляПроверки.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт КАК ТехКарта,
	|	ВТ_ДанныеДляПроверки.ТиповойДефект КАК ТиповойДефект,
	|	ВТ_ДанныеДляПроверки.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВТ_ДанныеДляПроверки.Статус КАК Статус
	|ИЗ
	|	ВТ_ДанныеДляПроверки КАК ВТ_ДанныеДляПроверки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
	|		ПО ВТ_ДанныеДляПроверки.ОбъектРемонта = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
	|			И ВТ_ДанныеДляПроверки.ВидРемонта = торо_РегламентныеМероприятияИСпискиОбъектов.ВидМероприятия
	|ГДЕ
	|	ВТ_ДанныеДляПроверки.ТехКарта <> торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт";
	
	Запрос.УстановитьПараметр("Ссылка", СписокОР);
	
	ПроверяемыеСтатусы = Новый Массив;
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать);
	Запрос.УстановитьПараметр("ПроверяемыеСтатусы", ПроверяемыеСтатусы);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПометитьКОбновлениюПроектныеЗатратыНаРемонтыПриИзмененииПараметровДляВД(ТиповойДефект = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	ВЫБОР
	|		КОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
	|			ТОГДА торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению)
	|	КОНЕЦ КАК Статус,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Значение
	|		ИНАЧЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|	КОНЕЦ КАК ВидРемонта
	|ПОМЕСТИТЬ ВТ_ДанныеДляПроверки
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект = &ТиповойДефект)
	|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (&ПроверяемыеСтатусы))
	|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект))
	|			И торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта,
	|	Константа.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов КАК торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	ВидРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляПроверки.IDРемонта КАК IDРемонта,
	|	ВТ_ДанныеДляПроверки.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ДанныеДляПроверки.ДокументИсточник КАК ДокументИсточник,
	|	ВТ_ДанныеДляПроверки.ДокументЗатрат КАК ДокументЗатрат,
	|	ВТ_ДанныеДляПроверки.Статус КАК Статус,
	|	ВТ_ДанныеДляПроверки.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	ВЫБОР
	|		КОГДА НЕ торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
	|			ТОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт
	|		КОГДА ВТ_ДанныеДляПроверки.ТиповойДефект.ТехнологическаяКарта <> ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
	|			ТОГДА ВТ_ДанныеДляПроверки.ТиповойДефект.ТехнологическаяКарта
	|		ИНАЧЕ торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов.Значение
	|	КОНЕЦ КАК ТехКарта,
	|	ВТ_ДанныеДляПроверки.ТиповойДефект КАК ТиповойДефект,
	|	ВТ_ДанныеДляПроверки.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
	|ИЗ
	|	ВТ_ДанныеДляПроверки КАК ВТ_ДанныеДляПроверки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	|		ПО ВТ_ДанныеДляПроверки.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	|			И ВТ_ДанныеДляПроверки.ВидРемонта = торо_НормативныеРемонтыОборудования.ВидРемонта
	|			И (торо_НормативныеРемонтыОборудования.Приоритет),
	|	Константа.торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов КАК торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
	|				ТОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт
	|			КОГДА ВТ_ДанныеДляПроверки.ТиповойДефект.ТехнологическаяКарта <> ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
	|				ТОГДА ВТ_ДанныеДляПроверки.ТиповойДефект.ТехнологическаяКарта
	|			ИНАЧЕ торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов.Значение
	|		КОНЕЦ <> ВТ_ДанныеДляПроверки.ТехКарта";
	
	ПроверяемыеСтатусы = Новый Массив;
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению);
	ПроверяемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать);
	Запрос.УстановитьПараметр("ПроверяемыеСтатусы", ПроверяемыеСтатусы);
	
	Если ТиповойДефект = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект = &ТиповойДефект)", "");
	Иначе
		Запрос.УстановитьПараметр("ТиповойДефект", ТиповойДефект);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать(Истина);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьМассивIDРемонтов(Источник) Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	МассивID = Новый Массив;
	ТаблицаРемонтов = Новый ТаблицаЗначений;
	ТаблицаРемонтов.Колонки.Добавить("ID", Новый ОписаниеТипов("Строка"));
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
			ОбъектИсточник = Источник.ПолучитьОбъект();
		Иначе
			ОбъектИсточник = Источник;
		КонецЕсли; 
		
		ТаблицаРемонтов = ОбъектИсточник.ПолучитьТаблицуРемонтовСОсновным();
		МассивID = ТаблицаРемонтов.ВыгрузитьКолонку("ID");
		
	ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ЗакрытиеЗаявокИРемонтов") Тогда
		
		МассивID = Источник.ЗакрываемыеРемонты.ВыгрузитьКолонку("ID");
		МассивIDПоЗаявкам = Источник.ЗакрываемыеЗаявки.ВыгрузитьКолонку("ИДРемонта"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивID, МассивIDПоЗаявкам, Истина);
		
		Для каждого ИДремонта из МассивID Цикл
			НоваяСтрока = ТаблицаРемонтов.Добавить();
			НоваяСтрока.ID = ИДремонта;
		КонецЦикла;
				
	Иначе
		
		ИмяТЧРемонтов = торо_Ремонты.ПолучитьИмяТЧРемонтов(Источник.Ссылка);
		Если ИмяТЧРемонтов = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		МассивID = Источник[ИмяТЧРемонтов].ВыгрузитьКолонку("ID");
		
		Для каждого ИДремонта из МассивID Цикл
			НоваяСтрока = ТаблицаРемонтов.Добавить();
			НоваяСтрока.ID = ИДремонта;
		КонецЦикла;
		
	КонецЕсли;

	СтруктураВозврата.Вставить("МассивID", МассивID);
	СтруктураВозврата.Вставить("ТаблицаРемонтов", ТаблицаРемонтов);
	
	Возврат СтруктураВозврата;	
	
КонецФункции

Процедура УстановитьУправляемыеБлокировкиНаРегистрАктуальныхДат(ТаблицаРемонтов)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов");
	ЭлементБлокировки.ИсточникДанных = ТаблицаРемонтов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("IDРемонта", "ID");
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура УстановитьУправляемыеБлокировкиНаРегистрСтатусовРасчетаПроектныхЗатрат(ТаблицаРемонтов)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты");
	ЭлементБлокировки.ИсточникДанных = ТаблицаРемонтов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("IDРемонта", "ID");
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура УдалитьПлановыеДатыРемонтовПоДокументуНачалаЦепочки(Документ)
	
	Если ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ВыявленныеДефекты")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ПланГрафикРемонта")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.торо_АктуальныеПлановыеДатыРемонтов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументНачалаЦепочки.Установить(Документ);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Процедура ПолучитьИдентификаторыУдаленныхРемонтовИзДокументаОснования(МассивИД, Документ)
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.торо_ВыявленныеДефекты")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.торо_ПланГрафикРемонта")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		Возврат;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта
	|ИЗ
	|	РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|ГДЕ
	|	торо_АктуальныеПлановыеДатыРемонтов.ДокументОснование = &ДокументОснование
	| И торо_АктуальныеПлановыеДатыРемонтов.IDРемонта НЕ В (&МассивIDРемонтовИзДокумента)";
	
	Запрос.УстановитьПараметр("ДокументОснование", Документ);
	Запрос.УстановитьПараметр("МассивIDРемонтовИзДокумента", МассивИД);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивИД.Добавить(Выборка.IDРемонта);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбновитьАктуальныеПлановыеДатыРемонтов(МассивID, ИсточникСсылка, ТекущиеЗаписиРегистра)
	
	ВыборкаВД = Неопределено;
	ВыборкаППР = Неопределено;
	ВыборкаРМ = Неопределено;
	
	Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот")
		ИЛИ ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
		
		ВыборкаВД = ВычислитьАктуальныеПлановыеДатыРемонтовПоВОиВД(МассивID);
		
	ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		
		ВыборкаППР = ВычислитьАктуальныеПлановыеДатыРемонтовПоППР(МассивID);
		
	ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		
		ВыборкаРМ = ВычислитьАктуальныеПлановыеДатыРемонтовПоГрафикамРМ(МассивID);
		
	ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт")
		ИЛИ ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") 
		ИЛИ ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.торо_ЗакрытиеЗаявокИРемонтов") Тогда
		
		ВыборкаВД = ВычислитьАктуальныеПлановыеДатыРемонтовПоВОиВД(МассивID);
		ВыборкаППР = ВычислитьАктуальныеПлановыеДатыРемонтовПоППР(МассивID);
		
	Иначе // Скользящий план работ.
		
		ВыборкаВД = ВычислитьАктуальныеПлановыеДатыРемонтовПоВОиВД(МассивID);
		ВыборкаППР = ВычислитьАктуальныеПлановыеДатыРемонтовПоППР(МассивID);
		ВыборкаРМ = ВычислитьАктуальныеПлановыеДатыРемонтовПоГрафикамРМ(МассивID);
		
	КонецЕсли;

	Если ВыборкаВД <> Неопределено Тогда
		ЗаписатьИзмененныеПлановыеДатыРемонтов(ВыборкаВД, ТекущиеЗаписиРегистра, ИсточникСсылка);
	КонецЕсли;
	
	Если ВыборкаППР <> Неопределено Тогда
		ЗаписатьИзмененныеПлановыеДатыРемонтов(ВыборкаППР, ТекущиеЗаписиРегистра, ИсточникСсылка);
	КонецЕсли;
	
	Если ВыборкаРМ <> Неопределено Тогда
		ЗаписатьИзмененныеПлановыеДатыРемонтов(ВыборкаРМ, ТекущиеЗаписиРегистра, ИсточникСсылка);
	КонецЕсли;
	
КонецПроцедуры

Функция ВычислитьАктуальныеПлановыеДатыРемонтовПоВОиВД(МассивID)
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ВнешниеОснованияДляРабот.Регистратор КАК ДокументНачалаЦепочки,
	|	торо_ВнешниеОснованияДляРабот.ID КАК IDРемонта,
	|	торо_ВнешниеОснованияДляРабот.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ВнешниеОснованияДляРабот.ПлановаяДатаРемонта КАК ДатаНачала,
	|	торо_ВнешниеОснованияДляРабот.ПлановаяДатаРемонта КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ВнешниеОснования
	|ИЗ
	|	РегистрСведений.торо_ВнешниеОснованияДляРабот КАК торо_ВнешниеОснованияДляРабот
	|ГДЕ
	|	торо_ВнешниеОснованияДляРабот.Регистратор ССЫЛКА Документ.торо_ВнешнееОснованиеДляРабот
	|	И торо_ВнешниеОснованияДляРабот.ID В(&МассивID)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ВыявленныеДефекты.Регистратор КАК ДокументНачалаЦепочки,
	|	торо_ВыявленныеДефекты.ID КАК IDРемонта,
	|	торо_ВыявленныеДефекты.ОтказавшийЭлемент КАК ОбъектРемонта,
	|	ВЫБОР
	|		КОГДА торо_ВыявленныеДефекты.ДатаНачалаРемонта = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА торо_ВыявленныеДефекты.Период
	|		ИНАЧЕ торо_ВыявленныеДефекты.ДатаНачалаРемонта
	|	КОНЕЦ КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА торо_ВыявленныеДефекты.ДатаОкончанияРемонта = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА торо_ВыявленныеДефекты.Период
	|		ИНАЧЕ торо_ВыявленныеДефекты.ДатаОкончанияРемонта
	|	КОНЕЦ КАК ДатаОкончания,
	|	торо_ВыявленныеДефекты.КрайняяДопустимаяДатаЗавершенияРемонта КАК КрайняяДатаЗавершения
	|ПОМЕСТИТЬ ВТ_Дефекты
	|ИЗ
	|	РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
	|ГДЕ
	|	торо_ВыявленныеДефекты.ID В(&МассивID)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВнешниеОснования.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВнешнееОснованиеДляРабот) КАК ВидДокументаНачалаЦепочки,
	|	ВТ_ВнешниеОснования.IDРемонта КАК IDРемонта,
	|	ВТ_ВнешниеОснования.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ВнешниеОснования.ДатаНачала КАК ДатаНачала,
	|	ВТ_ВнешниеОснования.ДатаОкончания КАК ДатаОкончания,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КрайняяДатаЗавершения,
	|	ЕСТЬNULL(ВТ_Дефекты.ДокументНачалаЦепочки, ВТ_ВнешниеОснования.ДокументНачалаЦепочки) КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ДатыИсходные
	|ИЗ
	|	ВТ_ВнешниеОснования КАК ВТ_ВнешниеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Дефекты КАК ВТ_Дефекты
	|		ПО ВТ_ВнешниеОснования.IDРемонта = ВТ_Дефекты.IDРемонта
	|ГДЕ
	|	ВТ_Дефекты.IDРемонта ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Дефекты.ДокументНачалаЦепочки,
	|	ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект),
	|	ВТ_Дефекты.IDРемонта,
	|	ВТ_Дефекты.ОбъектРемонта,
	|	ВТ_Дефекты.ДатаНачала,
	|	ВТ_Дефекты.ДатаОкончания,
	|	ВТ_Дефекты.КрайняяДатаЗавершения,
	|	ВТ_Дефекты.ДокументНачалаЦепочки
	|ИЗ
	|	ВТ_Дефекты КАК ВТ_Дефекты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта";
	
	Запрос.УстановитьПараметр("МассивID", МассивID);
	Запрос.Выполнить();
	
	СоздатьВременныеТаблицыПоПриоритетнымДокументамПлана(МенеджерВТ);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ_ДатыИсходные.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	ВТ_ДатыИсходные.ВидДокументаНачалаЦепочки КАК ВидДокументаНачалаЦепочки,
	|	ВТ_ДатыИсходные.IDРемонта КАК IDРемонта,
	|	ВТ_ДатыИсходные.ОбъектРемонта КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_ОстановочныеРемонты.ДатаНачала, ЕСТЬNULL(ВТ_СкользящиеПланы.ДатаНачала, ЕСТЬNULL(ВТ_Заявки.ДатаНачала, ВТ_ДатыИсходные.ДатаНачала))) КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_ОстановочныеРемонты.ДатаОкончания, ЕСТЬNULL(ВТ_СкользящиеПланы.ДатаОкончания, ЕСТЬNULL(ВТ_Заявки.ДатаОкончания, ВТ_ДатыИсходные.ДатаОкончания))) КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_СкользящиеПланы.КрайняяДатаЗавершения, ЕСТЬNULL(ВТ_Заявки.КрайняяДатаЗавершения, ВТ_ДатыИсходные.КрайняяДатаЗавершения)) КАК КрайняяДатаЗавершения,
	|	ЕСТЬNULL(ВТ_ОстановочныеРемонты.ДокументОснование, ЕСТЬNULL(ВТ_СкользящиеПланы.ДокументОснование, ЕСТЬNULL(ВТ_Заявки.ДокументОснование, ВТ_ДатыИсходные.ДокументОснование))) КАК ДокументОснование
	|ИЗ
	|	ВТ_ДатыИсходные КАК ВТ_ДатыИсходные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_Заявки.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстановочныеРемонты КАК ВТ_ОстановочныеРемонты
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_ОстановочныеРемонты.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкользящиеПланы КАК ВТ_СкользящиеПланы
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_СкользящиеПланы.IDРемонта
	|ИТОГИ ПО
	|	ДокументНачалаЦепочки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Возврат Выборка;
	
КонецФункции

Функция ВычислитьАктуальныеПлановыеДатыРемонтовПоППР(МассивID)
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ПлановыеРемонтныеРаботыСрезПервых.Регистратор КАК ДокументНачалаЦепочки,
	|	торо_ПлановыеРемонтныеРаботыСрезПервых.ID КАК IDРемонта,
	|	торо_ПлановыеРемонтныеРаботыСрезПервых.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	торо_ПлановыеРемонтныеРаботыСрезПервых.ДатаНачалаРемонтныхРабот КАК ДатаНачала,
	|	торо_ПлановыеРемонтныеРаботыСрезПервых.ДатаОкончанияРемонтныхРабот КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ГрафикСрезПервых
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПервых(
	|			,
	|			ID В (&МассивID)) КАК торо_ПлановыеРемонтныеРаботыСрезПервых
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК ДокументОснование,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID КАК IDРемонта,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот КАК ДатаНачала,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаОкончанияРемонтныхРабот КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ГрафикСрезПоследних
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	|			,
	|			ID В (&МассивID)
	|					И Регистратор ССЫЛКА Документ.торо_ПланГрафикРемонта
	|				ИЛИ Регистратор ССЫЛКА Документ.торо_ЗакрытиеЗаявокИРемонтов) КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ГрафикСрезПервых.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	ВТ_ГрафикСрезПервых.IDРемонта КАК IDРемонта,
	|	ВТ_ГрафикСрезПервых.ОбъектРемонта КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_ГрафикСрезПоследних.ДатаНачала, ВТ_ГрафикСрезПервых.ДатаНачала) КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_ГрафикСрезПоследних.ДатаОкончания, ВТ_ГрафикСрезПервых.ДатаОкончания) КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_ГрафикСрезПоследних.ДокументОснование, ВТ_ГрафикСрезПервых.ДокументНачалаЦепочки) КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ДатыИсходные
	|ИЗ
	|	ВТ_ГрафикСрезПервых КАК ВТ_ГрафикСрезПервых
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрафикСрезПоследних КАК ВТ_ГрафикСрезПоследних
	|		ПО ВТ_ГрафикСрезПервых.IDРемонта = ВТ_ГрафикСрезПоследних.IDРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта";
	
	Запрос.УстановитьПараметр("МассивID", МассивID);
	Запрос.Выполнить();
	
	СоздатьВременныеТаблицыПоПриоритетнымДокументамПлана(МенеджерВТ);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ_ДатыИсходные.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ПланГрафикППР) КАК ВидДокументаНачалаЦепочки,
	|	ВТ_ДатыИсходные.IDРемонта КАК IDРемонта,
	|	ВТ_ДатыИсходные.ОбъектРемонта КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_ОстановочныеРемонты.ДатаНачала, ЕСТЬNULL(ВТ_СкользящиеПланы.ДатаНачала, ЕСТЬNULL(ВТ_Заявки.ДатаНачала, ВТ_ДатыИсходные.ДатаНачала))) КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_ОстановочныеРемонты.ДатаОкончания, ЕСТЬNULL(ВТ_СкользящиеПланы.ДатаОкончания, ЕСТЬNULL(ВТ_Заявки.ДатаОкончания, ВТ_ДатыИсходные.ДатаОкончания))) КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_СкользящиеПланы.КрайняяДатаЗавершения, ЕСТЬNULL(ВТ_Заявки.КрайняяДатаЗавершения, ДАТАВРЕМЯ(1, 1, 1))) КАК КрайняяДатаЗавершения,
	|	ЕСТЬNULL(ВТ_ОстановочныеРемонты.ДокументОснование, ЕСТЬNULL(ВТ_СкользящиеПланы.ДокументОснование, ЕСТЬNULL(ВТ_Заявки.ДокументОснование, ВТ_ДатыИсходные.ДокументОснование))) КАК ДокументОснование
	|ИЗ
	|	ВТ_ДатыИсходные КАК ВТ_ДатыИсходные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_Заявки.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстановочныеРемонты КАК ВТ_ОстановочныеРемонты
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_ОстановочныеРемонты.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкользящиеПланы КАК ВТ_СкользящиеПланы
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_СкользящиеПланы.IDРемонта
	|ИТОГИ ПО
	|	ДокументНачалаЦепочки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Возврат Выборка;
	
КонецФункции

Функция ВычислитьАктуальныеПлановыеДатыРемонтовПоГрафикамРМ(МассивID)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ПлановыеМероприятияСрезПервых.Регистратор КАК ДокументНачалаЦепочки,
	|	торо_ПлановыеМероприятияСрезПервых.ID КАК IDРемонта,
	|	торо_ПлановыеМероприятияСрезПервых.СписокОбъектов КАК СписокОбъектов,
	|	торо_ПлановыеМероприятияСрезПервых.ДатаНачала КАК ДатаНачала,
	|	торо_ПлановыеМероприятияСрезПервых.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ГрафикСрезПервых
	|ИЗ
	|	РегистрСведений.торо_ПлановыеМероприятия.СрезПервых(, ID В (&МассивID)) КАК торо_ПлановыеМероприятияСрезПервых
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПлановыеМероприятияСрезПоследних.Регистратор КАК ДокументОснование,
	|	торо_ПлановыеМероприятияСрезПоследних.ID КАК IDРемонта,
	|	торо_ПлановыеМероприятияСрезПоследних.СписокОбъектов КАК СписокОбъектов,
	|	торо_ПлановыеМероприятияСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	торо_ПлановыеМероприятияСрезПоследних.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ГрафикСрезПоследних
	|ИЗ
	|	РегистрСведений.торо_ПлановыеМероприятия.СрезПоследних(, ID В (&МассивID)) КАК торо_ПлановыеМероприятияСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ГрафикСрезПервых.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	ВТ_ГрафикСрезПервых.IDРемонта КАК IDРемонта,
	|	ВТ_ГрафикСрезПервых.СписокОбъектов КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_ГрафикСрезПоследних.ДатаНачала, ВТ_ГрафикСрезПервых.ДатаНачала) КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_ГрафикСрезПоследних.ДатаОкончания, ВТ_ГрафикСрезПервых.ДатаОкончания) КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_ГрафикСрезПоследних.ДокументОснование, ВТ_ГрафикСрезПервых.ДокументНачалаЦепочки) КАК ДокументОснование,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КрайняяДатаЗавершения
	|ПОМЕСТИТЬ ВТ_ДатыИсходные
	|ИЗ
	|	ВТ_ГрафикСрезПервых КАК ВТ_ГрафикСрезПервых
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрафикСрезПоследних КАК ВТ_ГрафикСрезПоследних
	|		ПО ВТ_ГрафикСрезПервых.IDРемонта = ВТ_ГрафикСрезПоследних.IDРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_СкользящийПланРаботСрезПоследних.Регистратор КАК ДокументОснование,
	|	торо_СкользящийПланРаботСрезПоследних.ID_Ремонта КАК IDРемонта,
	|	торо_СкользящийПланРаботСрезПоследних.ДатаНачалаРемонта КАК ДатаНачала,
	|	торо_СкользящийПланРаботСрезПоследних.ДатаОкончанияРемонта КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_СкользящиеПланы
	|ИЗ
	|	РегистрСведений.торо_СкользящийПланРегламентныхМероприятий.СрезПоследних(
	|			,
	|			ID_Ремонта В
	|				(ВЫБРАТЬ
	|					ВТ_ДатыИсходные.IDРемонта КАК IDРемонта
	|				ИЗ
	|					ВТ_ДатыИсходные КАК ВТ_ДатыИсходные)) КАК торо_СкользящийПланРаботСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДатыИсходные.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ГрафикРегламентныхМероприятий) КАК ВидДокументаНачалаЦепочки,
	|	ВТ_ДатыИсходные.IDРемонта КАК IDРемонта,
	|	ВТ_ДатыИсходные.ОбъектРемонта КАК ОбъектРемонта,
	|	ЕСТЬNULL(ВТ_СкользящиеПланы.ДатаНачала, ВТ_ДатыИсходные.ДатаНачала) КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_СкользящиеПланы.ДатаОкончания, ВТ_ДатыИсходные.ДатаОкончания) КАК ДатаОкончания,
	|	ЕСТЬNULL(ВТ_СкользящиеПланы.ДокументОснование, ВТ_ДатыИсходные.ДокументОснование) КАК ДокументОснование,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК КрайняяДатаЗавершения
	|ИЗ
	|	ВТ_ДатыИсходные КАК ВТ_ДатыИсходные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкользящиеПланы КАК ВТ_СкользящиеПланы
	|		ПО ВТ_ДатыИсходные.IDРемонта = ВТ_СкользящиеПланы.IDРемонта
	|ИТОГИ ПО
	|	ДокументНачалаЦепочки";
	
	Запрос.УстановитьПараметр("МассивID", МассивID);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Возврат Выборка;

КонецФункции

// Принимает на вход менеджер временных таблиц, в котором должна уже быть создана 
// временная таблица ВТ_ДатыИсходные с колонкой IDРемонта для выполнения отбора.
// Добавляет временные таблицы ВТ_Заявки, ВТ_ОстановочныеРемонты, ВТ_СкользящиеПланы.
Процедура СоздатьВременныеТаблицыПоПриоритетнымДокументамПлана(МенеджерВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ЗаявкиПоРемонтамСрезПоследних.Регистратор КАК ДокументОснование,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта КАК IDРемонта,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.ДатаОкончания КАК ДатаОкончания,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.КрайняяДопустимаяДатаЗавершения КАК КрайняяДатаЗавершения
	|ПОМЕСТИТЬ ВТ_Заявки
	|ИЗ
	|	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
	|			,
	|			IDРемонта В
	|				(ВЫБРАТЬ
	|					ВТ_ДатыИсходные.IDРемонта КАК IDРемонта
	|				ИЗ
	|					ВТ_ДатыИсходные КАК ВТ_ДатыИсходные)) КАК торо_ЗаявкиПоРемонтамСрезПоследних
	|ГДЕ
	|	НЕ торо_ЗаявкиПоРемонтамСрезПоследних.Отменен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ОстановочныеРемонтыСрезПоследних.Регистратор КАК ДокументОснование,
	|	торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого КАК IDРемонта,
	|	торо_ОстановочныеРемонтыСрезПоследних.ДатаНачалаРемонта КАК ДатаНачала,
	|	торо_ОстановочныеРемонтыСрезПоследних.ДатаОкончанияРемонта КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ОстановочныеРемонты
	|ИЗ
	|	РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(
	|			,
	|			IDЗависимого В
	|				(ВЫБРАТЬ
	|					ВТ_ДатыИсходные.IDРемонта КАК IDРемонта
	|				ИЗ
	|					ВТ_ДатыИсходные КАК ВТ_ДатыИсходные)) КАК торо_ОстановочныеРемонтыСрезПоследних
	|ГДЕ
	|	торо_ОстановочныеРемонтыСрезПоследних.Отвязан = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_СкользящийПланРаботСрезПоследних.Регистратор КАК ДокументОснование,
	|	торо_СкользящийПланРаботСрезПоследних.ID_Ремонта КАК IDРемонта,
	|	торо_СкользящийПланРаботСрезПоследних.ДатаНачалаРемонта КАК ДатаНачала,
	|	торо_СкользящийПланРаботСрезПоследних.ДатаОкончанияРемонта КАК ДатаОкончания,
	|	торо_СкользящийПланРаботСрезПоследних.КрайняяДатаЗавершения КАК КрайняяДатаЗавершения
	|ПОМЕСТИТЬ ВТ_СкользящиеПланы
	|ИЗ
	|	РегистрСведений.торо_СкользящийПланРабот.СрезПоследних(
	|			,
	|			ID_Ремонта В
	|				(ВЫБРАТЬ
	|					ВТ_ДатыИсходные.IDРемонта КАК IDРемонта
	|				ИЗ
	|					ВТ_ДатыИсходные КАК ВТ_ДатыИсходные)) КАК торо_СкользящийПланРаботСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьИзмененныеПлановыеДатыРемонтов(ВыборкаПоДокументам, ТекущиеЗаписиРегистра, Документ)
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		ВыборкаДеталей = ВыборкаПоДокументам.Выбрать();
		
		// Оптимизация для документов ППР и Графиков РМ. Записываем одним набором все записи 
		// по этому документу источнику. Так значительно быстрее, чем записывать по 1 строке.
		Если ВыборкаПоДокументам.ДокументНачалаЦепочки = Документ Тогда
			НаборЗаписей = РегистрыСведений.торо_АктуальныеПлановыеДатыРемонтов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументНачалаЦепочки.Установить(Документ);
			
			Пока ВыборкаДеталей.Следующий() Цикл
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ВыборкаДеталей);
			КонецЦикла;
			
			НаборЗаписей.Записать(Истина);
			
		Иначе
			Пока ВыборкаДеталей.Следующий() Цикл
				НужноЗаписать = Истина;
				ТекущаяЗапись = ТекущиеЗаписиРегистра.Найти(ВыборкаДеталей.IDРемонта, "IDРемонта");
				
				Если ТекущаяЗапись <> Неопределено 
					И ТекущаяЗапись.ДатаНачала = ВыборкаДеталей.ДатаНачала
					И ТекущаяЗапись.ДатаОкончания = ВыборкаДеталей.ДатаОкончания
					И ТекущаяЗапись.КрайняяДатаЗавершения = ВыборкаДеталей.КрайняяДатаЗавершения
					И ТекущаяЗапись.ДокументОснование = ВыборкаДеталей.ДокументОснование
					И ТекущаяЗапись.ДокументНачалаЦепочки = ВыборкаДеталей.ДокументНачалаЦепочки Тогда
					НужноЗаписать = Ложь;
				КонецЕсли;
				
				Если НужноЗаписать Тогда	
					Запись = РегистрыСведений.торо_АктуальныеПлановыеДатыРемонтов.СоздатьМенеджерЗаписи();
					ЗаполнитьЗначенияСвойств(Запись, ВыборкаДеталей);
					Запись.Записать(Истина);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Работа с регистром торо_СтатусыРасчетаПроектныхЗатратНаРемонты. 

// Выполняет записи в регистр торо_СтатусыРасчетаПроектныхЗатратНаРемонты при проведении 
// документов.
//
// Параметры:
//		Источник - ДокументОбъект - документ начала цепочки, либо документ, изменяющий плановые даты ремонта.
//
Процедура ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриПроведенииДокументаПлановыхДат(Источник, СтруктураДанныхРемонтов) 
	
	МассивID = СтруктураДанныхРемонтов.МассивID;
	УстановитьУправляемыеБлокировкиНаРегистрСтатусовРасчетаПроектныхЗатрат(СтруктураДанныхРемонтов.ТаблицаРемонтов);
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") 
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") 
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") 
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		
		ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриПроведенииДокументаНачалаЦепочки(Источник, СтруктураДанныхРемонтов);
		
		Возврат;
	КонецЕсли;
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивID", МассивID);
	
	ИсключаемыеСтатусы = Новый Массив;
	ИсключаемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован);
	ИсключаемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать);
	Запрос.УстановитьПараметр("ИсключаемыеСтатусы", ИсключаемыеСтатусы);
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		
		Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован;

		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В(&МассивID)
		|	И НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (&ИсключаемыеСтатусы)";	
		
	Иначе // Любой документ плановых дат, не являющийся документом начала цепочки или заявкой.
		
		Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В (&МассивID))
		|			И (НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (&ИсключаемыеСтатусы))
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты <> торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Статус = Статус;
		Запись.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриПроведенииДокументаНачалаЦепочки(Источник, СтруктураДанныхРемонтов) 

	МассивID = СтруктураДанныхРемонтов.МассивID;
	ТекущиеЗаписиРегистра = ПолучитьТекущиеЗаписиРегистраРасчетаПроектныхЗатрат(МассивID);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	Запрос.УстановитьПараметр("МассивID", МассивID);
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ПланГрафикРемонтаПланРемонтов.ID КАК ID,
		|	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	Документ.торо_ПланГрафикРемонта.ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
		|ГДЕ
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ЭтоЦепочка КАК ЭтоЦепочка,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта КАК ВидРемонта,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт КАК НормативныйРемонт
		|ПОМЕСТИТЬ ВТ_ЦепочкиДокумента
		|ИЗ
		|	Документ.торо_ПланГрафикРемонта.ОбъектыРемонта КАК торо_ПланГрафикРемонтаОбъектыРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
		|		ПО торо_ПланГрафикРемонтаОбъектыРемонта.ВидРемонтныхРабот = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
		|ГДЕ
		|	торо_ПланГрафикРемонтаОбъектыРемонта.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонтныхРабот,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументИсточник,
		|	торо_АктуальныеПлановыеДатыРемонтов.ВидДокументаНачалаЦепочки КАК ВидДокументаИсточника,
		|	торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты,
		|	ВТ_ТаблицаДокумента.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат, ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)
		|			ТОГДА торо_ПроектныеЗатратыНаРемонты.Ссылка
		|		ИНАЧЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат
		|	КОНЕЦ КАК ДокументЗатрат
		|ПОМЕСТИТЬ ВТ_ДанныеПоРемонтам
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО ВТ_ТаблицаДокумента.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта,
		|	ВидРемонтныхРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта КАК IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник КАК ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат КАК ДокументЗатрат,
		|	ЕСТЬNULL(торо_НормативныеРемонтыОборудования.НормативныйРемонт, ВТ_ЦепочкиДокумента.НормативныйРемонт) КАК ТехКарта,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению) КАК Статус,
		|	ЗНАЧЕНИЕ(Справочник.торо_ТиповыеДефектыОборудования.ПустаяСсылка) КАК ТиповойДефект
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		|			И ВТ_ДанныеПоРемонтам.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидРемонта
		|			И (торо_НормативныеРемонтыОборудования.Приоритет)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦепочкиДокумента КАК ВТ_ЦепочкиДокумента
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = ВТ_ЦепочкиДокумента.ОбъектРемонтныхРабот
		|			И ВТ_ДанныеПоРемонтам.ВидРемонтныхРабот = ВТ_ЦепочкиДокумента.ВидРемонта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты,
		|	NULL,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению),
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник = &Ссылка
		|	И НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В (&МассивID)
		|ИТОГИ ПО
		|	ДокументИсточник";
				
	ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ID КАК ID,
		|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.СписокОбъектовРемонта КАК СписокОбъектовРемонта,
		|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПланРемонтов КАК торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов
		|ГДЕ
		|	торо_ГрафикРегламентныхМероприятийТОиРПланРемонтов.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументИсточник,
		|	торо_АктуальныеПлановыеДатыРемонтов.ВидДокументаНачалаЦепочки КАК ВидДокументаИсточника,
		|	торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты,
		|	ВТ_ТаблицаДокумента.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат, ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)
		|			ТОГДА торо_ПроектныеЗатратыНаРемонты.Ссылка
		|		ИНАЧЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат
		|	КОНЕЦ КАК ДокументЗатрат
		|ПОМЕСТИТЬ ВТ_ДанныеПоРемонтам
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО ВТ_ТаблицаДокумента.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта,
		|	ВидРемонтныхРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта КАК IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник КАК ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат КАК ДокументЗатрат,
		|	торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт КАК ТехКарта,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению) КАК Статус,
		|	ЗНАЧЕНИЕ(Справочник.торо_ТиповыеДефектыОборудования.ПустаяСсылка) КАК ТиповойДефект
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
		|			И ВТ_ДанныеПоРемонтам.ВидРемонтныхРабот = торо_РегламентныеМероприятияИСпискиОбъектов.ВидМероприятия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты,
		|	NULL,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению),
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник = &Ссылка
		|	И НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В (&МассивID)
		|ИТОГИ ПО
		|	ДокументИсточник";
		
	ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.ID КАК ID,
		|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	Документ.торо_ВнешнееОснованиеДляРабот.ОбследованноеОборудование КАК торо_ВнешнееОснованиеДляРаботОбследованноеОборудование
		|ГДЕ
		|	торо_ВнешнееОснованиеДляРаботОбследованноеОборудование.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументИсточник,
		|	торо_АктуальныеПлановыеДатыРемонтов.ВидДокументаНачалаЦепочки КАК ВидДокументаИсточника,
		|	торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат, ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)
		|			ТОГДА торо_ПроектныеЗатратыНаРемонты.Ссылка
		|		ИНАЧЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат
		|	КОНЕЦ КАК ДокументЗатрат,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению) КАК Статус,
		|	ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка) КАК ТехКарта,
		|	ЗНАЧЕНИЕ(Справочник.торо_ТиповыеДефектыОборудования.ПустаяСсылка) КАК ТиповойДефект
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО ВТ_ТаблицаДокумента.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению),
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник = &Ссылка
		|	И НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В (&МассивID)
		|ИТОГИ ПО
		|	ДокументИсточник";
		
	ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ВыявленныеДефектыСписокДефектов.ID КАК ID,
		|	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент КАК ОтказавшийЭлемент,
		|	торо_ВыявленныеДефектыСписокДефектов.ТиповойДефект КАК ТиповойДефект
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		|ГДЕ
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументИсточник,
		|	торо_АктуальныеПлановыеДатыРемонтов.ВидДокументаНачалаЦепочки КАК ВидДокументаИсточника,
		|	торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ТаблицаДокумента.ТиповойДефект КАК ТиповойДефект,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат, ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.торо_ПроектныеЗатратыНаРемонты.ПустаяСсылка)
		|			ТОГДА торо_ПроектныеЗатратыНаРемонты.Ссылка
		|		ИНАЧЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат
		|	КОНЕЦ КАК ДокументЗатрат
		|ПОМЕСТИТЬ ВТ_ДанныеПоРемонтам
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО ВТ_ТаблицаДокумента.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
		|		ПО ВТ_ТаблицаДокумента.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта КАК IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник КАК ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ТиповойДефект КАК ТиповойДефект,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат КАК ДокументЗатрат,
		|	ВЫБОР
		|		КОГДА НЕ торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
		|			ТОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт
		|		КОГДА ВТ_ДанныеПоРемонтам.ТиповойДефект <> ЗНАЧЕНИЕ(Справочник.торо_ТиповыеДефектыОборудования.ПустаяСсылка)
		|				И ВТ_ДанныеПоРемонтам.ТиповойДефект.ТехнологическаяКарта <> ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
		|			ТОГДА ВТ_ДанныеПоРемонтам.ТиповойДефект.ТехнологическаяКарта
		|		ИНАЧЕ торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов.Значение
		|	КОНЕЦ КАК ТехКарта,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению) КАК Статус
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		|			И (торо_НормативныеРемонтыОборудования.ВидРемонта = &ВидРемонтаВД)
		|			И (торо_НормативныеРемонтыОборудования.Приоритет),
		|	Константа.торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов КАК торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта,
		|	ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению)
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник = &Ссылка
		|	И НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В (&МассивID)
		|ИТОГИ ПО
		|	ДокументИсточник";
		
		Запрос.УстановитьПараметр("ВидРемонтаВД", Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить());
		
	КонецЕсли;
	
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		ВыборкаДеталей = ВыборкаПоДокументам.Выбрать();
		
		// Оптимизация для документов ППР и Графиков РМ. Записываем одним набором все записи 
		// по этому документу источнику. Так значительно быстрее, чем записывать по 1 строке.
		Если ВыборкаПоДокументам.ДокументИсточник = Источник.Ссылка Тогда
			НаборЗаписей = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументИсточник.Установить(Источник.Ссылка);
			
			Пока ВыборкаДеталей.Следующий() Цикл
				Запись = НаборЗаписей.Добавить();
				ТекущаяЗапись = ТекущиеЗаписиРегистра.Найти(ВыборкаДеталей.IDРемонта, "IDРемонта");
				
				Если ВыборкаДеталей.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению 
					ИЛИ ТекущаяЗапись = Неопределено Тогда
					
					ЗаполнитьЗначенияСвойств(Запись, ВыборкаДеталей);
				
				ИначеЕсли НЕ (ТекущаяЗапись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован
								ИЛИ ТекущаяЗапись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
							И (ТекущаяЗапись.ДатаСрезаТехКарты <> ВыборкаДеталей.ДатаСрезаТехКарты
								ИЛИ ТекущаяЗапись.ТехКарта <> ВыборкаДеталей.ТехКарта
								ИЛИ ТекущаяЗапись.ТиповойДефект <> ВыборкаДеталей.ТиповойДефект) Тогда

					ЗаполнитьЗначенияСвойств(Запись, ВыборкаДеталей);
					
				Иначе
					ЗаполнитьЗначенияСвойств(Запись, ТекущаяЗапись);
				КонецЕсли
			КонецЦикла;
			
			НаборЗаписей.Записать(Истина);
			
		Иначе
			Пока ВыборкаДеталей.Следующий() Цикл
				ТекущаяЗапись = ТекущиеЗаписиРегистра.Найти(ВыборкаДеталей.IDРемонта, "IDРемонта");
				НужноЗаписать = Ложь;
				
				Если ТекущаяЗапись = Неопределено Тогда
					НужноЗаписать = Истина;
				ИначеЕсли НЕ (ТекущаяЗапись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован
								ИЛИ ТекущаяЗапись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать)
							И (ТекущаяЗапись.ДатаСрезаТехКарты <> ВыборкаДеталей.ДатаСрезаТехКарты
								ИЛИ ТекущаяЗапись.ТехКарта <> ВыборкаДеталей.ТехКарта
								ИЛИ ТекущаяЗапись.ТиповойДефект <> ВыборкаДеталей.ТиповойДефект) Тогда
								
					НужноЗаписать = Истина;
				КонецЕсли;
				
				Если НужноЗаписать Тогда
					Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
					ЗаполнитьЗначенияСвойств(Запись, ВыборкаДеталей);
					Запись.Записать(Истина);
				КонецЕсли;

			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьРемонтыВРегистрРасчетаПроектныхЗатратПриОтменеПроведенияДокумента(Источник, СтруктураДанныхРемонтов)
	
	МассивID = СтруктураДанныхРемонтов.МассивID;
	УстановитьУправляемыеБлокировкиНаРегистрСтатусовРасчетаПроектныхЗатрат(СтруктураДанныхРемонтов.ТаблицаРемонтов);
	ПометитьКУдалениюСтатусыРасчетаПроектныхЗатратПоДокументуНачалаЦепочки(Источник.Ссылка);

	Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивID", МассивID);
	
	Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт")
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот")
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие")
		ИЛИ ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		// Если была заявка, наряд, акт, то эти ремонты были в статусе "Зафиксирован".
		// Отбираем ремонты, с которых надо снять статус "Зафиксирован".
		// Проверяем наличие других заявок/нарядов/актов по соответствующим регистрам,  
		// т.к. регистр общих данных по ремонту в этот момент еще не обновлен.
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника
		|ПОМЕСТИТЬ ТекущиеДанныеРегистра
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В(&МассивID)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	IDРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТекущиеДанныеРегистра.IDРемонта КАК IDРемонта,
		|	ТекущиеДанныеРегистра.ОбъектРемонта КАК ОбъектРемонта,
		|	ТекущиеДанныеРегистра.ДокументИсточник КАК ДокументИсточник,
		|	ТекущиеДанныеРегистра.ДокументЗатрат КАК ДокументЗатрат,
		|	ТекущиеДанныеРегистра.ВидДокументаИсточника КАК ВидДокументаИсточника
		|ПОМЕСТИТЬ ВТ_РемонтыБезЗаявокНарядовАктов
		|ИЗ
		|	ТекущиеДанныеРегистра КАК ТекущиеДанныеРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗаявкиПоРемонтам КАК торо_ЗаявкиПоРемонтам
		|		ПО ТекущиеДанныеРегистра.IDРемонта = торо_ЗаявкиПоРемонтам.IDРемонта
		|			И (торо_ЗаявкиПоРемонтам.ДокументЗаявка <> &Ссылка)
		|			И (НЕ торо_ЗаявкиПоРемонтам.Отменен)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НарядыПоРемонтам КАК торо_НарядыПоРемонтам
		|		ПО ТекущиеДанныеРегистра.IDРемонта = торо_НарядыПоРемонтам.IDРемонта
		|			И (торо_НарядыПоРемонтам.ДокументНаряд <> &Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктыПоРемонтам КАК торо_АктыПоРемонтам
		|		ПО ТекущиеДанныеРегистра.IDРемонта = торо_АктыПоРемонтам.IDРемонта
		|			И (торо_АктыПоРемонтам.ДокументАкт <> &Ссылка)
		|ГДЕ
		|	торо_ЗаявкиПоРемонтам.ДокументЗаявка ЕСТЬ NULL
		|	И торо_НарядыПоРемонтам.ДокументНаряд ЕСТЬ NULL
		|	И торо_АктыПоРемонтам.ДокументАкт ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	IDРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РемонтыБезЗаявок.IDРемонта КАК IDРемонта,
		|	ВТ_РемонтыБезЗаявок.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_РемонтыБезЗаявок.ДокументИсточник КАК ДокументИсточник,
		|	ВТ_РемонтыБезЗаявок.ДокументЗатрат КАК ДокументЗатрат,
		|	ВТ_РемонтыБезЗаявок.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты,
		|	торо_ОбщиеДанныеПоРемонтам.ВидРемонта КАК ВидРемонта,
		|	ЕСТЬNULL(торо_ВыявленныеДефекты.ТиповойДефект, ЗНАЧЕНИЕ(СПРАВОЧНИк.торо_ТиповыеДефектыОборудования.ПустаяСсылка)) КАК ТиповойДефект
		|ПОМЕСТИТЬ ВТ_ДанныеПоРемонтам
		|ИЗ
		|	ВТ_РемонтыБезЗаявокНарядовАктов КАК ВТ_РемонтыБезЗаявок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
		|		ПО ВТ_РемонтыБезЗаявок.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО ВТ_РемонтыБезЗаявок.IDРемонта = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
		|		ПО ВТ_РемонтыБезЗаявок.IDРемонта = торо_ВыявленныеДефекты.ID
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ВидРемонтныхРабот КАК Цепочка,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта КАК ВидРемонта,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт КАК НормативныйРемонт
		|ПОМЕСТИТЬ ВТ_ЦепочкиППР
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПланГрафикРемонта.ОбъектыРемонта КАК торо_ПланГрафикРемонтаОбъектыРемонта
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
		|			ПО торо_ПланГрафикРемонтаОбъектыРемонта.ВидРемонтныхРабот = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
		|		ПО ВТ_ДанныеПоРемонтам.ДокументИсточник = торо_ПланГрафикРемонтаОбъектыРемонта.Ссылка
		|			И ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_ПланГрафикРемонтаОбъектыРемонта.ОбъектРемонтныхРабот
		|ГДЕ
		|	ВТ_ДанныеПоРемонтам.ВидРемонта = торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта КАК IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник КАК ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат КАК ДокументЗатрат,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ТиповойДефект КАК ТиповойДефект,
		|	ВЫБОР
		|		КОГДА НЕ торо_НормативныеРемонтыОборудования.НормативныйРемонт ЕСТЬ NULL
		|			ТОГДА торо_НормативныеРемонтыОборудования.НормативныйРемонт
		|		КОГДА ВТ_ДанныеПоРемонтам.ТиповойДефект <> ЗНАЧЕНИЕ(Справочник.торо_ТиповыеДефектыОборудования.ПустаяСсылка)
		|				И ВТ_ДанныеПоРемонтам.ТиповойДефект.ТехнологическаяКарта <> ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
		|			ТОГДА ВТ_ДанныеПоРемонтам.ТиповойДефект.ТехнологическаяКарта
		|		ИНАЧЕ торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов.Значение
		|	КОНЕЦ КАК ТехКарта
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		|			И (торо_НормативныеРемонтыОборудования.ВидРемонта = &ВидРемонтаВД)
		|			И (торо_НормативныеРемонтыОборудования.Приоритет),
		|	Константа.торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов КАК торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов
		|ГДЕ
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ТиповойДефект,
		|	NULL
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|ГДЕ
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВнешнееОснованиеДляРабот)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ТиповойДефект,
		|	ЕСТЬNULL(торо_НормативныеРемонтыОборудования.НормативныйРемонт, ВТ_ЦепочкиППР.НормативныйРемонт)
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		|			И ВТ_ДанныеПоРемонтам.ВидРемонта = торо_НормативныеРемонтыОборудования.ВидРемонта
		|			И (торо_НормативныеРемонтыОборудования.Приоритет)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦепочкиППР КАК ВТ_ЦепочкиППР
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = ВТ_ЦепочкиППР.ОбъектРемонта
		|			И ВТ_ДанныеПоРемонтам.ВидРемонта = ВТ_ЦепочкиППР.ВидРемонта
		|ГДЕ
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ПланГрафикППР)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоРемонтам.IDРемонта,
		|	ВТ_ДанныеПоРемонтам.ОбъектРемонта,
		|	ВТ_ДанныеПоРемонтам.ДокументИсточник,
		|	ВТ_ДанныеПоРемонтам.ДокументЗатрат,
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника,
		|	ВТ_ДанныеПоРемонтам.ДатаСрезаТехКарты,
		|	ВТ_ДанныеПоРемонтам.ТиповойДефект,
		|	торо_РегламентныеМероприятияИСпискиОбъектов.НормативныйРемонт
		|ИЗ
		|	ВТ_ДанныеПоРемонтам КАК ВТ_ДанныеПоРемонтам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
		|		ПО ВТ_ДанныеПоРемонтам.ОбъектРемонта = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
		|			И ВТ_ДанныеПоРемонтам.ВидРемонта = торо_РегламентныеМероприятияИСпискиОбъектов.ВидМероприятия
		|ГДЕ
		|	ВТ_ДанныеПоРемонтам.ВидДокументаИсточника = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ГрафикРегламентныхМероприятий)";
		
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("ВидРемонтаВД", Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить());
	
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
		|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаСрезаТехКарты
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
		|		ПО торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
		|			И (торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В (&МассивID))
		|			И (НЕ торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (&ИсключаемыеСтатусы))
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты <> торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала";
		
		ИсключаемыеСтатусы = Новый Массив;
		ИсключаемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован);
		ИсключаемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать);
		ИсключаемыеСтатусы.Добавить(Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению);
		Запрос.УстановитьПараметр("ИсключаемыеСтатусы", ИсключаемыеСтатусы);
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Статус = Статус;
		Запись.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекущиеЗаписиРегистраРасчетаПроектныхЗатрат(МассивID)
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус КАК Статус,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта В(&МассивID)";
	
	Запрос.УстановитьПараметр("МассивID", МассивID);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Индексы.Добавить("IDРемонта");
	
	Возврат Результат;
	
КонецФункции

Процедура ПометитьКУдалениюСтатусыРасчетаПроектныхЗатратПоДокументуНачалаЦепочки(Документ)
	
	Если ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ВыявленныеДефекты")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ПланГрафикРемонта")
		И ТипЗнч(Документ) <> Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументИсточник.Установить(Документ);
	НаборЗаписей.Прочитать();
	
	Для каждого Запись из НаборЗаписей Цикл
		Запись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению;
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Процедура ОбработатьСтатусРасчетаПроектныхЗатратКУдалению()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат
	|ИЗ
	|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
	|ГДЕ
	|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КУдалению)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты");
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("IDРемонта", "IDРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Попытка
		
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ДокументЗатрат) Тогда
				ДокументОбъект = Выборка.ДокументЗатрат.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Удалить();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		ОписаниеОшибки = ОписаниеОшибки();
		ТекстОшибки = НСтр("ru='Не удалось пометить на удаление документы проектных затрат на ремонты по причине: '") + ОписаниеОшибки;
		ЗаписьЖурналаРегистрации("РасчетПроектныхЗатратНаРемонты", УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработатьСтатусРасчетаПроектныхЗатратКОбновлению()
	
	// Транзакции ограничены по размеру, чтобы минимизировать риск попадания на
	// слишком долгое ожидание на блокировке у пользователей.
	
	// Выходим из цикла, когда все данные обработаны или при первой ошибке.
	Пока Истина Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.IDРемонта КАК IDРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументИсточник КАК ДокументИсточник,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДокументЗатрат КАК ДокументЗатрат,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус КАК Статус,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ВидДокументаИсточника КАК ВидДокументаИсточника,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТехКарта КАК ТехКарта,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ТиповойДефект КАК ТиповойДефект,
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.ДатаСрезаТехКарты КАК ДатаСрезаТехКарты
		|ИЗ
		|	РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты КАК торо_СтатусыРасчетаПроектныхЗатратНаРемонты
		|ГДЕ
		|	торо_СтатусыРасчетаПроектныхЗатратНаРемонты.Статус В (ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.КОбновлению), ЗНАЧЕНИЕ(Перечисление.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать))";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("IDРемонта", "IDРемонта");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Попытка
			
			Пока Выборка.Следующий() Цикл
				ДокументЗатрат = торо_ЗаполнениеДокументов20.ЗаполнитьДокументПроектныеЗатратыНаРемонты(Выборка.ДокументЗатрат, Выборка); 
				
				Если НЕ ЗначениеЗаполнено(ДокументЗатрат) Тогда
					Продолжить;
				КонецЕсли;
				
				Запись = РегистрыСведений.торо_СтатусыРасчетаПроектныхЗатратНаРемонты.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				Если НЕ ЗначениеЗаполнено(Выборка.ДокументЗатрат) Тогда
					Запись.ДокументЗатрат = ДокументЗатрат;
				КонецЕсли;
				
				Если Выборка.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.ОбновитьИЗафиксировать Тогда
					Запись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Зафиксирован;	
				Иначе
					Запись.Статус = Перечисления.торо_СтатусыДокументовПроектныхЗатратНаРемонты.Актуален;
				КонецЕсли;
				
				Запись.Записать(Истина);
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			Если ТранзакцияАктивна() Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			
			ОписаниеОшибки = ОписаниеОшибки();
			ТекстОшибки = НСтр("ru='Не удалось актуализировать документы проектных затрат на ремонты по причине: '") + ОписаниеОшибки;
			ЗаписьЖурналаРегистрации("РасчетПроектныхЗатратНаРемонты", УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти