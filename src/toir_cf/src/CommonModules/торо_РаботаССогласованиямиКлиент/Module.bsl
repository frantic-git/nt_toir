
#Область ПрограммныйИнтерфейс

// Изменяет статус согласования документа.
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура УстановитьСтатус(Форма) Экспорт
	
	Объект = Форма.Объект; 
	
	Если Объект.Ссылка.Пустая() ИЛИ Форма.Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьВопрос_ЗаписатьДокумент", ЭтотОбъект, Новый Структура("Форма", Форма)), НСтр("ru = 'Перед выполнением процедуры согласования необходимо записать документ! Записать?'"), РежимДиалогаВопрос.ДаНет, 60); 
	Иначе
		Если Форма.Объект.ПометкаУдаления Тогда
			ПоказатьПредупреждение(Неопределено, НСтр("ru='Документ помечен на удаление! Согласование помеченных на удаление документов запрещено!'"));
			Возврат;	
		КонецЕсли;
		
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		Если Не ПроверитьНаличиеПользователя(Форма.ДеревоСогласования.ПолучитьЭлементы(), ТекущийПользователь) Тогда
			ТекстСообщения = НСтр("ru='Текущий пользователь не является ни согласующим, ни замещающим на данном этапе выбранного способа согласования!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Иначе
			СписокСледующихСтатусов = торо_РаботаССогласованиями.ПолучитьСписокСледующихСтатусовДокумента(Объект.СпособСогласования, Форма.СтатусДокументаРегистр);
			ПоказатьВопрос(Новый ОписаниеОповещения("ВыбратьСтатус", ЭтотОбъект, Новый Структура("СписокСледующихСтатусов, ТекущийПользователь, Форма", СписокСледующихСтатусов, ТекущийПользователь, Форма)), НСтр("ru = 'Утвердить статус?'"), РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик "НачалоВыбора" для реквизита "СпособСогласования".
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма согласуемого документа.
//		Элемент - ПолеФормы - элемент, для которого вызывается обработчик.
//		ДанныеВыбора - СписокЗначениц - список значений для выбора.
//		СтандартнаяОбработка - Булево - флаг стандартной обработки события.
//
Процедура СпособСогласованияНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если Форма.СогласующиеРегистр.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ТекстВопроса = НСтр("ru = 'Данные по установленным статусам документа будут очищены! Продолжить?'");
		
		ДополнительныеПараметры = Новый Структура("Элемент, Форма", Элемент, Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("СпособСогласованияНачалоВыбораЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;

КонецПроцедуры

// Обработчик "ПриИзменении" для реквизита "СпособСогласования".
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма согласуемого документа.
//		Элемент - ПолеФормы - элемент, для которого вызывается обработчик.
//
Процедура СпособСогласованияПриИзменении(Форма, Элемент) Экспорт
	
	торо_РаботаССогласованиямиКлиентСервер.ОчиститьИсториюСтатусов(Форма);
	Форма["СтатусДокументаРегистр"] = Неопределено;
	
	СпособСогласования = Форма.Объект.СпособСогласования;
	
	Если ЗначениеЗаполнено(СпособСогласования) Тогда
		Форма["СтатусДокументаРегистр"] = торо_РаботаССогласованиями.ПолучитьНачальныйСтатус(СпособСогласования);
		торо_РаботаССогласованиямиКлиентСервер.ДобавитьСтрокуВИсториюСтатусов(Форма, Форма["СтатусДокументаРегистр"]);
	КонецЕсли;
		
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбновитьДеревоСогласующих", Форма);
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, Неопределено);
	
	торо_РаботаССогласованиямиКлиентСервер.УстановитьВидимостьСогласованиеИУтверждение(Форма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СпособСогласованияНачалоВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Форма = ДополнительныеПараметры.Форма;
		
		Форма.СогласующиеРегистр.Очистить();
		
		ОткрытьФорму("Справочник.торо_СпособыСогласованияДокументов.ФормаВыбора",,ДополнительныеПараметры.Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВопрос_ЗаписатьДокумент(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Попытка
			Форма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
		Исключение
			ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(НСтр("ru = 'Исключение'"), "Предупреждение", ОписаниеОшибки());
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки; 
		
		ТекущийПользователь = ПользователиКлиент.ТекущийПользователь();
		Если Не ПроверитьНаличиеПользователя(Форма.ДеревоСогласования.ПолучитьЭлементы(), ТекущийПользователь) Тогда
			ТекстСообщения = НСтр("ru='Текущий пользователь не является ни согласующим, ни замещающим на данном этапе выбранного способа согласования!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Иначе
			СписокСледующихСтатусов = торо_РаботаССогласованиями.ПолучитьСписокСледующихСтатусовДокумента(Объект.СпособСогласования, Форма.СтатусДокументаРегистр);
			ПоказатьВопрос(Новый ОписаниеОповещения("ВыбратьСтатус", ЭтотОбъект, Новый Структура("СписокСледующихСтатусов, ТекущийПользователь, Форма", СписокСледующихСтатусов, ТекущийПользователь, Форма)), НСтр("ru = 'Утвердить статус?'"), РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьСтатус(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;
	
	СписокСледующихСтатусов = ДополнительныеПараметры.СписокСледующихСтатусов;
	Форма = ДополнительныеПараметры.Форма;

	Если СписокСледующихСтатусов.Количество() > 0 Тогда
		ВыделенныйСтатус = Неопределено;
		ДеревоСогласования =  Форма.Элементы.ДеревоСогласования;
		ТекущиеДанныеДерева = ДеревоСогласования.ТекущиеДанные;
		Если ТекущиеДанныеДерева <> Неопределено Тогда
			ВыделенныйСтатус = ТекущиеДанныеДерева.СтатусДокумента;
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьСтатусЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыФормы = Новый Структура("СписокСледующихСтатусов, ВыделенныйСтатус, СпособСогласования", СписокСледующихСтатусов, ВыделенныйСтатус, Форма.ПараметрыСпособаСогласованияПоУмолчанию.СпособСогласования);
		ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораСтатусаСогласования", ПараметрыФормы, Форма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьСтатусЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	ВыбранныйСтатус = ВыбранныйЭлемент.ВыбранныйСтатус;

	ДанныеСтатуса = торо_РаботаССогласованиями.ПолучитьДанныеПоСтатусуДокумента(Объект.СпособСогласования, ВыбранныйСтатус);
	Если (ДанныеСтатуса.ЗапретитьРедактирование ИЛИ ДанныеСтатуса.ПроводитьДокумент) И НЕ Форма.ПроверитьЗаполнение() Тогда
		ТекстСообщения = "";
		Если ДанныеСтатуса.ЗапретитьРедактирование Тогда
			ТекстСообщения = НСтр("ru='При проверке заполнения документа найдены ошибки. Переход в статус с запретом редактирования невозможен.'");
		Иначе
			ТекстСообщения = НСтр("ru='При проверке заполнения документа найдены ошибки. Переход в статус с разрешением проведения невозможен.'");
		КонецЕсли;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Статусы = Форма.ДеревоСогласования.ПолучитьЭлементы();
	ВыбранныйСтатусДерево = Неопределено;
	Для Каждого Значение Из Статусы Цикл
		Если Значение.СтатусДокумента = ВыбранныйСтатус Тогда
			ВыбранныйСтатусДерево = Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ВыбранныйСтатусДерево = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Согласующие = НайтиЗаместителейВДереве(ВыбранныйСтатусДерево.ПолучитьЭлементы());
	Если Согласующие.Количество() = 1 Тогда
		Данные = Новый Структура;
		Данные.Вставить("МассивСогласующих", Согласующие);
		Данные.Вставить("Статус", ВыбранныйЭлемент);
		УтвердитьСтатус(Данные, ДополнительныеПараметры);
	ИначеЕсли Согласующие.Количество() > 1 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьЗамещаемогоЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыФормы = Новый Структура("Согласующие, Статус", Согласующие, ВыбранныйЭлемент);
		ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораЗамещаемого", ПараметрыФормы, Форма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ТекстСообщения = НСтр("ru='Текущий пользователь не является ни согласующим, ни замещающим для выбранного статуса!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьЗамещаемогоЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УтвердитьСтатус(ВыбранныйЭлемент, ДополнительныеПараметры);
КонецПроцедуры

Процедура ПроставитьГалочкиЗаТекущегоПользователя(ВыбранныйЭлемент, ДополнительныеПараметры) 
	
	Форма = ДополнительныеПараметры.Форма;
	
	ВыбранныйСтатус = ВыбранныйЭлемент.Статус.ВыбранныйСтатус;
	КомментарийКСтатусу = ВыбранныйЭлемент.Статус.Комментарий;
	ТекущийПользователь = ДополнительныеПараметры.ТекущийПользователь;
	
	МассивСтрокДереваСогласования = Новый Массив;			
	ЗаполнитьМассивИзДерева(МассивСтрокДереваСогласования, 	Форма.ДеревоСогласования.ПолучитьЭлементы());
	
	Согласующие = Новый Массив;
	Замещаемые = Новый Массив;
	
	// Идентификация выбранных пользователей
	Для каждого Строка Из МассивСтрокДереваСогласования Цикл
		Для Каждого Значение Из ВыбранныйЭлемент.МассивСогласующих Цикл
			Если Строка.Согласующий = Значение
				И Строка.Согласующий = ТекущийПользователь
				И Строка.Замещающий = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
				И Строка.Согласовано = Ложь
				Тогда
				Согласующие.Добавить(Строка);
			ИначеЕсли Строка.Согласующий = Значение
				И Строка.Замещающий = ТекущийПользователь
				И Строка.Согласовано = Ложь
				Тогда
				Замещаемые.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; 
	
	// Обработка согласующих и замещающих
	Попытка
		Для Каждого Значение Из Замещаемые Цикл
			Значение.ПолучитьРодителя().Согласовано = (Значение.СтатусДокумента = ВыбранныйСтатус);
			Значение.Согласовано = (Значение.СтатусДокумента = ВыбранныйСтатус);
			Если Значение.СтатусДокумента = ВыбранныйСтатус Тогда
				торо_РаботаССогласованиямиКлиентСервер.ДобавитьСтрокуВИсториюСтатусов(Форма, ВыбранныйСтатус, Значение.Согласующий, КомментарийКСтатусу);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Значение ИЗ Согласующие Цикл
			Согласовано = (Значение.СтатусДокумента = ВыбранныйСтатус);
			Для Каждого СтрокаДЗП из Значение.ПолучитьЭлементы() Цикл
				СтрокаДЗП.Согласовано = Согласовано;
			КонецЦикла;
			Значение.Согласовано = Согласовано;
			Если Согласовано Тогда
				торо_РаботаССогласованиямиКлиентСервер.ДобавитьСтрокуВИсториюСтатусов(Форма, ВыбранныйСтатус, ТекущийПользователь, КомментарийКСтатусу);
	  		КонецЕсли; 
		КонецЦикла;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
	КонецПопытки;

КонецПроцедуры

Процедура ЗаполнитьМассивИзДерева(Массив, ЭлементыДерева)
	
	Для каждого Элемент Из ЭлементыДерева Цикл
		Массив.Добавить(Элемент);
		Если Элемент.ПолучитьЭлементы().Количество() > 0 Тогда
			ЗаполнитьМассивИзДерева(Массив, Элемент.ПолучитьЭлементы());
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

// Открывает форму для посмотра и редактирования комментария к статусу.
Процедура ОткрытьЗаписьИсторииСтатусов(Форма, ДанныеСтроки) Экспорт
	
	СтруктураКлюча = Новый Структура("СогласуемыйДокумент, Пользователь, ЗаКого, Период");
	ЗаполнитьЗначенияСвойств(СтруктураКлюча, ДанныеСтроки);
	
	Если НЕ ЗначениеЗаполнено(СтруктураКлюча.СогласуемыйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	НачальныйСтатус = торо_РаботаССогласованиями.ПолучитьНачальныйСтатус(Форма.Объект.СпособСогласования);
	Если ДанныеСтроки.СтатусДокумента = НачальныйСтатус Тогда
		Возврат;
	КонецЕсли;
		
	КлючЗаписи = торо_РаботаССогласованиями.ПолучитьКлючЗаписиИсторииСтатусовДокументов(СтруктураКлюча);
	ПараметрыФормы = Новый Структура("Ключ", КлючЗаписи);
	
	ДопПараметры = Новый Структура("Форма, СтруктураКлюча", Форма, СтруктураКлюча);
	Оповещение = Новый ОписаниеОповещения("ПослеРедактированияКомментарияКСтатусу", ЭтотОбъект, ДопПараметры); 
	
	ОткрытьФорму("РегистрСведений.торо_ИсторияСтатусовСогласованияДокументов.ФормаЗаписи", ПараметрыФормы, Форма,,,,Оповещение);
	
КонецПроцедуры

Процедура ПослеРедактированияКомментарияКСтатусу(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	СтруктураКлюча = ДополнительныеПараметры.СтруктураКлюча;
	
	ТекущаяСтрока = Неопределено;
	Для каждого Строка из Форма.ИсторияСтатусовРегистр Цикл
		Если Строка.Период = СтруктураКлюча.Период
			И Строка.Пользователь = СтруктураКлюча.Пользователь
			И Строка.ЗаКого = СтруктураКлюча.ЗаКого Тогда
			ТекущаяСтрока = Строка;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Форма.Элементы.ИсторияСтатусов.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		ТекущаяСтрока.Комментарий = торо_РаботаССогласованиями.ПолучитьКомментарийКСтатусуСогласования(СтруктураКлюча);
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиЗаместителейВДереве(ДеревоСогласования)
	
	МассивПользователей = Новый Массив;
	Пользователь =  ПользователиКлиент.ТекущийПользователь();
	
	Для Каждого Согласующий Из ДеревоСогласования Цикл
		Если Согласующий.Согласующий = Пользователь И Не Согласующий.Согласовано Тогда
			МассивПользователей.Добавить(Согласующий.Согласующий);
		КонецЕсли;
		Замещающие = Согласующий.ПолучитьЭлементы();
		Для Каждого Замещающий Из Замещающие Цикл
			Если Замещающий.Замещающий = Пользователь И Не Замещающий.Согласовано Тогда
				МассивПользователей.Добавить(Согласующий.Согласующий);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивПользователей;
	
КонецФункции

Функция ПроверитьНаличиеПользователя(Дерево, Пользователь)
	
	Для Каждого Статус Из Дерево Цикл
		Для Каждого Согласующий Из Статус.ПолучитьЭлементы() Цикл
			
			Если Согласующий.Согласующий = Пользователь Тогда
				Возврат Истина;
			КонецЕсли;
			
			Для Каждого Замещающий Из Согласующий.ПолучитьЭлементы() Цикл
				Если Замещающий.Замещающий = Пользователь Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура УтвердитьСтатус(Данные, ДополнительныеПараметры)
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	ПроставитьГалочкиЗаТекущегоПользователя(Данные, ДополнительныеПараметры);
	торо_РаботаССогласованиямиКлиентСервер.ЗаписатьДеревоСогласования(Форма);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Документ", Объект.Ссылка);
	ПараметрыОповещения.Вставить("ВыбранныйСтатус", Данные.Статус.ВыбранныйСтатус);
		
	Оповестить("УтверждениеСтатусаСогласования", ПараметрыОповещения);
	
КонецПроцедуры

#КонецОбласти
