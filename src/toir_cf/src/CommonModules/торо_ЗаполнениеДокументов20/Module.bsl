#Область ПрограммныйИнтерфейс
// Процедура - Заполнение на основании
//
// Параметры:
//  Основание		 - ДокументСсылка, Соответствие - документ-основание или соответствие из РМТС. 
//  ЭтотОбъект		 - ДокументОбъект - заполняемый документ
//  ЭтоРегламентный	 - Булево - принадлежит ли документ цепочке регламентных
//
Процедура ЗаполнениеНаОсновании(Основание, ЭтотОбъект, ЭтоРегламентный) Экспорт
	
	Отказ = Ложь;
	
	Если ТипЗнч(Основание) <> Тип("Соответствие") Тогда
		
		торо_ЗаполнениеДокументов.ПроверитьВозможностьВводаНаОсновании(Основание, Отказ, Ложь);
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
	
		ЗаполнитьШапкуДокумента(Основание, ЭтотОбъект);	
		
		Если Основание <> Неопределено И НЕ ТипЗнч(Основание) = Тип("Структура") Тогда
			
			ИмяТЧ = торо_Ремонты.ПолучитьИмяТЧРемонтов(Основание);
			Если ЭтоРегламентный Тогда
				Неотмененный = торо_ЗаполнениеДокументов.ВернутьIDНеотмененногоРемонтаВРегламентныхМероприятиях(Основание, Основание[ИмяТЧ]);
			Иначе
				Неотмененный = торо_ЗаполнениеДокументов.ВернутьIDНеотмененногоРемонта(Основание, Основание[ИмяТЧ]);
			КонецЕсли;
			
			Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.торо_АнализКоренныхПричин") Тогда
				Неотмененный = ВернутьIDНеПроанализированногоРемонта(Основание);
			КонецЕсли;
			
			Если ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.торо_АктПриемкиОборудования") Тогда
				Неотмененный = ВернутьIDНеобработанногоРемонтаДляАктаПриемки(Основание, Основание[ИмяТЧ]);
			КонецЕсли;
			
			Если ИмяТЧ <> Неопределено И Неотмененный <> ""  Тогда
				СоответствиеИДДокументам = Новый Соответствие;
				СоответствиеИДДокументам.Вставить(Неотмененный, Основание);   
				ЗаполнитьДокументНаОсновании(СоответствиеИДДокументам, ЭтотОбъект);
			Иначе
				ЗаполнитьДокументыОснования(Основание, ЭтотОбъект);			
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		ЗаполнитьШапкуДокумента(Основание, ЭтотОбъект);	
		ЗаполнитьДокументНаОсновании(Основание, ЭтотОбъект);
	КонецЕсли;	
	
КонецПроцедуры

// Формирует строковое представление списка объектов ремонта
// для записи в реквизит ОбъектыРемонтаСтрокой.
//
// Параметры:
//		МассивОР - Массив - массив неповторяюихся ссылок на объекты ремонта/списки регл. мероприятий.
//
// Возвращаемое значение:
//		Строка - представления объектов через запятую.
//
Функция СформироватьСтрокуОбъектовРемонта(МассивОР) Экспорт
	
	Шаблон = "%1%2%3";
	СтрокаОР = "";
	Разделитель = "";
	
	Для Каждого ОбъектРемонта Из МассивОР Цикл
		СтрокаОР = СтрШаблон(Шаблон, СтрокаОР, Разделитель, Строка(ОбъектРемонта)); 
		Разделитель = ", ";
	КонецЦикла;
	
	Возврат СтрокаОР;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет документ на основании другого.
// Параметры:
//  Основание - ДокументСсылка или Соответствие - документ-основание.
//  ДокументОбъект - ДокументОбъект или ДанныеФормыСтруктура(для формы подбора) - заполняемый документ.
//  ПараметрыПодбора - Структура - уточнения при заполнении из формы подбора: 
//								*Владелец - ДокументСсылка - ссылка на документ, если он уже записан.
//
Процедура ЗаполнитьДокументНаОсновании(Основание, ДокументОбъект, ПараметрыПодбора = Неопределено) Экспорт
	
	ТипЗначенияДокумента = ТипЗнч(ДокументОбъект.Ссылка);
	
	Если ТипЗначенияДокумента = Тип("ДокументСсылка.торо_АктПриемкиОборудования") И ПараметрыПодбора = Неопределено Тогда
		ЗаполнитьАктПриемкиОборудования(Основание, ДокументОбъект);
	ИначеЕсли ТипЗначенияДокумента = Тип("ДокументСсылка.торо_АнализКоренныхПричин") И ПараметрыПодбора = Неопределено Тогда
		ЗаполнитьАнализКоренныхПричин(Основание, ДокументОбъект);
	ИначеЕсли ТипЗначенияДокумента = Тип("ДокументСсылка.торо_ОстановочныеРемонты") И ПараметрыПодбора = Неопределено Тогда
		ЗаполнитьОстановочныйРемонт(Основание, ДокументОбъект);
	// заполнение формы подбора
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДанныеФормыСтруктура") Тогда
		ВсеID = ПолучитьВсеID(Основание);
		ЗаполнитьРемонтыОборудования(ВсеID, ДокументОбъект, ПараметрыПодбора);
		Если ПараметрыПодбора.Свойство("Владелец") Тогда
		    ЗаполнитьРемонтныеРаботы(ВсеID, ДокументОбъект, ПараметрыПодбора.Владелец);
		Иначе
			ЗаполнитьРемонтныеРаботы(ВсеID, ДокументОбъект);
		КонецЕсли; 	
	// на основании 1 ремонта или из РМТС
	Иначе
		ЗаполнитьДокументыОснования(Основание, ДокументОбъект);
		ЗаполнитьРемонтыОборудования(Основание, ДокументОбъект);
		ЗаполнитьРемонтныеРаботы(Основание, ДокументОбъект);
		ЗаполнитьВнешниеОснования(Основание, ДокументОбъект);

		ЗаполнитьЗатратыПоОснованию(ДокументОбъект, Основание);
		
		Если ТипЗначенияДокумента = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия")
			ИЛИ ТипЗначенияДокумента = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
			
			ЗаполнитьСписокОбъектов(ДокументОбъект);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДокументыОснования(Основание, ДокументОбъект) Экспорт
	
	Если ТипЗнч(Основание) = Тип("Соответствие") Тогда
		Для каждого Элемент Из Основание Цикл
			Найденное = ДокументОбъект.ДокументыОснования.Найти(Элемент.Значение, "ДокументОснование");
			Если Найденное = Неопределено Тогда
				НоваяСтрока = ДокументОбъект.ДокументыОснования.Добавить();	
				НоваяСтрока.ДокументОснование = Элемент.Значение;				
			КонецЕсли; 
		КонецЦикла; 	
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.торо_АнализКоренныхПричин") ИЛИ 
		ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.торо_ВнешнееОснованиеДляРабот") Тогда
		ДокументОбъект.ДокументОснование = Основание;
	Иначе
		НоваяСтрока = ДокументОбъект.ДокументыОснования.Добавить();	
		НоваяСтрока.ДокументОснование = Основание;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьШапкуДокумента(Основание, ДокументОбъект) Экспорт
	
	ДокОснование = Неопределено;
	
	Если ТипЗнч(Основание) = Тип("Соответствие") Тогда
		Для каждого ДокОснование Из Основание Цикл
			ДокументОбъект.Организация = ДокОснование.Значение.Организация;
			ДокументОбъект.Подразделение = ДокОснование.Значение.Подразделение;	
			Прервать;
		КонецЦикла; 
	ИначеЕсли Основание <> Неопределено И НЕ ТипЗнч(Основание) = Тип("Структура") Тогда 
		ДокументОбъект.Организация = Основание.Организация;
		ДокументОбъект.Подразделение = Основание.Подразделение;
		ДокОснование = Основание;
	КонецЕсли;
	
	Если (ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктПриемкиОборудования") 
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АнализКоренныхПричин")
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия"))
		И (ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") 
		ИЛИ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот")
		ИЛИ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие")) Тогда
		ДокументОбъект.Комиссия = ДокОснование.Комиссия;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АнализКоренныхПричин") Тогда
	
		ДокументОбъект.Статус = Перечисления.торо_СтатусыДокументовАнализаПричин.Зарегистрирован;
	
	КонецЕсли; 
	
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ДокументОбъект);
	
КонецПроцедуры

Процедура ДополнитьЗапросПроцентами(Запрос, ТипДокумента, Владелец = Неопределено) Экспорт
	
	Запрос.Текст = Запрос.Текст + "
		 |;
		 |////////////////////////////////////////////////////////////////////////////////
		 |" + "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	ТаблицаРемонтовОборудования.РемонтыОборудования_ID КАК ID
		      |ПОМЕСТИТЬ ВТ_РемонтыОборудованияID
		      |ИЗ
		      |	ВТ_ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	ID
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	торо_ПроцентВыполненныхРабот.IDРемонта КАК IDРемонта,
		      |	торо_ПроцентВыполненныхРабот.IDОперации КАК IDОперации,
		      |	торо_ПроцентВыполненныхРабот.Операция КАК Операция,
		      |	торо_ПроцентВыполненныхРабот.IDРодителя КАК IDРодителя,
		      |	МАКСИМУМ(торо_ПроцентВыполненныхРабот.Процент) КАК Процент
		      |ПОМЕСТИТЬ ВТ_ПроцентыПлан
		      |ИЗ
		      |	РегистрНакопления.торо_ПроцентВыполненныхРабот КАК торо_ПроцентВыполненныхРабот
		      |ГДЕ
		      |	торо_ПроцентВыполненныхРабот.ВидДокумента В(&МассивДокументовПлана)
		      |	И торо_ПроцентВыполненныхРабот.IDРемонта В
		      |			(ВЫБРАТЬ
		      |				РО.ID
		      |			ИЗ
		      |				ВТ_РемонтыОборудованияID КАК РО)
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	торо_ПроцентВыполненныхРабот.IDРемонта,
		      |	торо_ПроцентВыполненныхРабот.IDОперации,
		      |	торо_ПроцентВыполненныхРабот.Операция,
		      |	торо_ПроцентВыполненныхРабот.IDРодителя
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	IDРемонта,
		      |	IDОперации,
		      |	IDРодителя,
		      |	Операция
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	торо_ПроцентВыполненныхРабот.IDРемонта КАК IDРемонта,
		      |	торо_ПроцентВыполненныхРабот.IDОперации КАК IDОперации,
		      |	торо_ПроцентВыполненныхРабот.Операция КАК Операция,
		      |	торо_ПроцентВыполненныхРабот.IDРодителя КАК IDРодителя,
		      |	СУММА(торо_ПроцентВыполненныхРабот.Процент) КАК Процент
		      |ПОМЕСТИТЬ ВТ_ПроцентыФакт
		      |ИЗ
		      |	РегистрНакопления.торо_ПроцентВыполненныхРабот КАК торо_ПроцентВыполненныхРабот
		      |ГДЕ
		      |	торо_ПроцентВыполненныхРабот.ВидДокумента В(&МассивДокументовФакта)
		      |	И торо_ПроцентВыполненныхРабот.IDРемонта В
		      |			(ВЫБРАТЬ
		      |				РО.ID
		      |			ИЗ
		      |				ВТ_РемонтыОборудованияID КАК РО)
		      |	И торо_ПроцентВыполненныхРабот.Регистратор <> &Ссылка
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	торо_ПроцентВыполненныхРабот.IDРемонта,
		      |	торо_ПроцентВыполненныхРабот.IDОперации,
		      |	торо_ПроцентВыполненныхРабот.Операция,
		      |	торо_ПроцентВыполненныхРабот.IDРодителя
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	IDРемонта,
		      |	IDОперации,
		      |	Операция,
		      |	IDРодителя
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	торо_ПроцентВыполненныхРабот.IDРемонта КАК IDРемонта,
		      |	торо_ПроцентВыполненныхРабот.IDОперации КАК IDОперации,
		      |	торо_ПроцентВыполненныхРабот.Операция КАК Операция,
		      |	торо_ПроцентВыполненныхРабот.IDРодителя КАК IDРодителя,
		      |	торо_ПроцентВыполненныхРабот.Процент КАК Процент
		      |ПОМЕСТИТЬ ВТ_ЗакрытыеСметы
		      |ИЗ
		      |	РегистрНакопления.торо_ПроцентВыполненныхРабот КАК торо_ПроцентВыполненныхРабот
		      |ГДЕ
		      |	торо_ПроцентВыполненныхРабот.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.торо_ВидДокумента.ЗакрытиеЗаявокИРемонтов)
		      |	И торо_ПроцентВыполненныхРабот.IDРемонта В
		      |			(ВЫБРАТЬ
		      |				РО.ID
		      |			ИЗ
		      |				ВТ_РемонтыОборудованияID КАК РО)
		      |	И торо_ПроцентВыполненныхРабот.Регистратор <> &Ссылка
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	IDРемонта,
		      |	IDОперации,
		      |	IDРодителя,
		      |	Операция
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	ЕСТЬNULL(ВТ_ПроцентыФакт.IDРемонта, ВТ_ПроцентыПлан.IDРемонта) КАК IDРемонта,
		      |	ЕСТЬNULL(ВТ_ПроцентыФакт.IDОперации, ВТ_ПроцентыПлан.IDОперации) КАК IDОперации,
		      |	ЕСТЬNULL(ВТ_ПроцентыФакт.Операция, ВТ_ПроцентыПлан.Операция) КАК Операция,
		      |	ЕСТЬNULL(ВТ_ПроцентыФакт.IDРодителя, ВТ_ПроцентыПлан.IDРодителя) КАК IDРодителя,
		      |	ЕСТЬNULL(ВТ_ПроцентыФакт.Процент, 0) + ЕСТЬNULL(ВТ_ПроцентыПлан.Процент, 0) КАК Процент
		      |ПОМЕСТИТЬ ВТ_Проценты
		      |ИЗ
		      |	ВТ_ПроцентыФакт КАК ВТ_ПроцентыФакт
		      |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПроцентыПлан КАК ВТ_ПроцентыПлан
		      |		ПО ВТ_ПроцентыФакт.IDРемонта = ВТ_ПроцентыПлан.IDРемонта
		      |			И ВТ_ПроцентыФакт.IDОперации = ВТ_ПроцентыПлан.IDОперации
		      |			И ВТ_ПроцентыФакт.Операция = ВТ_ПроцентыПлан.Операция
		      |			И ВТ_ПроцентыФакт.IDРодителя = ВТ_ПроцентыПлан.IDРодителя
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	IDРемонта,
		      |	IDОперации,
		      |	Операция,
		      |	IDРодителя
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	ВТ_Проценты.IDРемонта КАК IDРемонта,
		      |	ВТ_Проценты.IDОперации КАК IDОперации,
		      |	ВТ_Проценты.Операция КАК Операция,
		      |	ВТ_Проценты.IDРодителя КАК IDРодителя,
		      |	ВТ_Проценты.Процент + ЕСТЬNULL(ВТ_ЗакрытыеСметы.Процент, 0) КАК Процент
		      |ПОМЕСТИТЬ ВТ_ПроцентыСЗакрытиями
		      |ИЗ
		      |	ВТ_Проценты КАК ВТ_Проценты
		      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗакрытыеСметы КАК ВТ_ЗакрытыеСметы
		      |		ПО (ВТ_Проценты.IDРемонта = ВТ_ЗакрытыеСметы.IDРемонта
		      |					И ВТ_Проценты.IDОперации = ВТ_ЗакрытыеСметы.IDОперации
		      |					И ВТ_Проценты.IDРодителя = ВТ_ЗакрытыеСметы.IDРодителя
		      |					И ВТ_Проценты.Операция = ВТ_ЗакрытыеСметы.Операция
		      |				ИЛИ &УчитыватьЗакрытыеСметы)
		      |ГДЕ
		      |	ВТ_ЗакрытыеСметы.IDРемонта ЕСТЬ NULL
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	IDРемонта,
		      |	IDОперации,
		      |	Операция
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		      |	ТаблицаРемонтныхРабот.ID КАК ID,
			  |	ТаблицаРемонтныхРабот.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации,
		      |	ТаблицаРемонтныхРабот.РемонтнаяРабота КАК РемонтнаяРабота,
		      |	ТаблицаРемонтныхРабот.Родитель_ID КАК Родитель_ID,
		      |	ТаблицаРемонтныхРабот.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		      |	ТаблицаРемонтныхРабот.Количество КАК Количество,
		      |	ТаблицаРемонтныхРабот.Картинка КАК Картинка,
		      |	ТаблицаРемонтныхРабот.Исполнитель КАК Исполнитель,
		      |	ТаблицаРемонтныхРабот.ДоговорБригада КАК ДоговорБригада,
		      |	ЕСТЬNULL(РодителиТехОпераций.РемонтнаяРабота, ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)) КАК ТехКартаРемонта,
		      |	ТаблицаРемонтныхРабот.НомерСтроки КАК НомерСтроки
		      |ПОМЕСТИТЬ ВТ_РемонтныеРаботы
		      |ИЗ
		      |	ВТ_ТаблицаРемонтовОборудования КАК ТаблицаРемонтныхРабот
		      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРемонтовОборудования КАК РодителиТехОпераций
		      |		ПО ТаблицаРемонтныхРабот.Родитель_ID = РодителиТехОпераций.ID
		      |			И ТаблицаРемонтныхРабот.РемонтыОборудования_ID = РодителиТехОпераций.РемонтыОборудования_ID
		      |			И (ВЫРАЗИТЬ(РодителиТехОпераций.РемонтнаяРабота КАК Справочник.торо_ИдентификаторыТехКарт) ССЫЛКА Справочник.торо_ИдентификаторыТехКарт)
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	ID,
		      |	РемонтнаяРабота,
		      |	РемонтыОборудования_ID
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		      |	ВТ_РемонтныеРаботы.ID КАК ID,
			  |	ВТ_РемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации,
		      |	ВТ_РемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		      |	ВТ_РемонтныеРаботы.Родитель_ID КАК Родитель_ID,
		      |	ВТ_РемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		      |	ВТ_РемонтныеРаботы.ТехКартаРемонта КАК ТехКартаРемонта,
		      |	ВТ_РемонтныеРаботы.Картинка КАК Картинка,
		      |	ВТ_РемонтныеРаботы.Количество КАК Количество,
		      |	ВТ_РемонтныеРаботы.Исполнитель КАК Исполнитель,
		      |	ВТ_РемонтныеРаботы.ДоговорБригада КАК ДоговорБригада,
		      |	ВЫБОР
		      |		КОГДА ВТ_Проценты.Процент ЕСТЬ NULL
		      |			ТОГДА 100
		      |		ИНАЧЕ ВЫБОР
		      |				КОГДА ВТ_РемонтныеРаботы.Количество = 0
		      |					ТОГДА 0
		      |				ИНАЧЕ ВТ_Проценты.Процент / ВТ_РемонтныеРаботы.Количество
		      |			КОНЕЦ
		      |	КОНЕЦ КАК ПроцентВыполненияРабот,
		      |	ВЫБОР
		      |		КОГДА ВТ_Проценты.Процент ЕСТЬ NULL
		      |				И ТИПЗНАЧЕНИЯ(ВТ_РемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ТехнологическиеОперации)
		      |			ТОГДА ИСТИНА
		      |		ИНАЧЕ ЛОЖЬ
		      |	КОНЕЦ КАК НоваяОперация,
		      |	ВТ_РемонтныеРаботы.НомерСтроки КАК НомерСтроки,
			  |	ВТ_РемонтныеРаботы.НомерСтроки КАК НомерСтрокиВТК
		      |ИЗ
		      |	ВТ_РемонтныеРаботы КАК ВТ_РемонтныеРаботы
		      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроцентыСЗакрытиями КАК ВТ_Проценты
		      |		ПО ВТ_РемонтныеРаботы.РемонтыОборудования_ID = ВТ_Проценты.IDРемонта
		      |			И ВТ_РемонтныеРаботы.РемонтнаяРабота = ВТ_Проценты.Операция
		      |			И ВТ_РемонтныеРаботы.ID = ВТ_Проценты.IDОперации
		      |ГДЕ
		      |	(ВТ_Проценты.Процент ЕСТЬ NULL
		      |			ИЛИ ВТ_Проценты.Процент > 0)
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	НомерСтроки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_РемонтыОборудованияID
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_ПроцентыПлан
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_ПроцентыФакт
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_ПроцентыСЗакрытиями
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_Проценты
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_РемонтныеРаботы
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_ТаблицаРемонтовОборудования
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТ_ЗакрытыеСметы";
	
	МассивДокументовПлана = Новый Массив;
	МассивДокументовФакта = Новый Массив;
	Запрос.УстановитьПараметр("УчитыватьЗакрытыеСметы", Ложь);
	Если ТипДокумента = Перечисления.торо_ВидДокумента.ЗаявкаНаРемонт Тогда
		МассивДокументовПлана.Добавить(Перечисления.торо_ВидДокумента.ЗаявкаНаРемонт);
		МассивДокументовФакта.Добавить(Перечисления.торо_ВидДокумента.ЗакрытиеЗаявокИРемонтов);
		МассивДокументовФакта.Добавить(Перечисления.торо_ВидДокумента.АктОВыполненииЭтапаРабот);
	ИначеЕсли ТипДокумента = Перечисления.торо_ВидДокумента.ПлановыеЗатраты Тогда
		МассивДокументовПлана.Добавить(Перечисления.торо_ВидДокумента.ПлановыеЗатраты);
		МассивДокументовПлана.Добавить(Перечисления.торо_ВидДокумента.ЗаявкаНаРемонт);
		МассивДокументовФакта.Добавить(Перечисления.торо_ВидДокумента.АктОВыполненииЭтапаРабот);
		МассивДокументовФакта.Добавить(Перечисления.торо_ВидДокумента.АктОВыполненииРегламентногоМероприятия);
		Запрос.УстановитьПараметр("УчитыватьЗакрытыеСметы", Истина);
	ИначеЕсли ТипДокумента = Перечисления.торо_ВидДокумента.НарядНаВыполнениеРемонтныхРабот Тогда
		МассивДокументовПлана.Добавить(Перечисления.торо_ВидДокумента.НарядНаВыполнениеРемонтныхРабот);
		МассивДокументовФакта.Добавить(Перечисления.торо_ВидДокумента.АктОВыполненииЭтапаРабот);
	ИначеЕсли ТипДокумента = Перечисления.торо_ВидДокумента.НарядНаВыполнениеРегламентногоМероприятия Тогда
		МассивДокументовПлана.Добавить(Перечисления.торо_ВидДокумента.НарядНаВыполнениеРегламентногоМероприятия);
		МассивДокументовФакта.Добавить(Перечисления.торо_ВидДокумента.АктОВыполненииРегламентногоМероприятия);
	КонецЕсли;
	
	Если ТипДокумента <> Перечисления.торо_ВидДокумента.НарядНаВыполнениеРемонтныхРабот И ТипДокумента <> Перечисления.торо_ВидДокумента.ЗаявкаНаРемонт Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_РемонтныеРаботы.Исполнитель КАК Исполнитель,", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_РемонтныеРаботы.ДоговорБригада КАК ДоговорБригада,", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаРемонтныхРабот.Исполнитель КАК Исполнитель,", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаРемонтныхРабот.ДоговорБригада КАК ДоговорБригада,", "");
	КонецЕсли;
	
	Если Владелец = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "	И торо_ПроцентВыполненныхРабот.Регистратор <> &Ссылка", "");
	Иначе
		Запрос.УстановитьПараметр("Ссылка", Владелец);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("МассивДокументовПлана", МассивДокументовПлана);
	Запрос.УстановитьПараметр("МассивДокументовФакта", МассивДокументовФакта);
	
КонецПроцедуры

Процедура ЗаполнитьЗатратыПоРемонтам(ДокументОбъект, Основания) Экспорт
	ЗаполнитьЗатратыПоОснованию(ДокументОбъект, Основания);
КонецПроцедуры

Функция ЗаполнитьДокументПроектныеЗатратыНаРемонты(СсылкаНаДокумент, ДанныеДляЗаполнения) Экспорт
	
	Если ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		
		ДокументОбъект = СсылкаНаДокумент.ПолучитьОбъект();
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.ПометкаУдаления = Ложь;
		КонецЕсли;
		
		ДокументОбъект.РемонтныеРаботы.Очистить();
		ДокументОбъект.МатериальныеЗатраты.Очистить();
		ДокументОбъект.ТрудовыеЗатраты.Очистить();
		ДокументОбъект.ИнструментыИТехника.Очистить();
		ДокументОбъект.Запчасти.Очистить();
		
	Иначе
		ДокументОбъект = Документы.торо_ПроектныеЗатратыНаРемонты.СоздатьДокумент();
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.IDРемонта = ДанныеДляЗаполнения.IDРемонта;
		ДокументОбъект.ДокументИсточник = ДанныеДляЗаполнения.ДокументИсточник;
		ДокументОбъект.ОбъектРемонта = ДанныеДляЗаполнения.ОбъектРемонта;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеДляЗаполнения.ДокументИсточник) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		// Для этого случая операции берем из табличной части ВО, а не из регистра.
		
		ЗаполнитьДокументПроектныхЗатратПоВнешнемуОснованию(ДокументОбъект, ДанныеДляЗаполнения.ДокументИсточник, ДанныеДляЗаполнения.ДатаСрезаТехКарты);
		
	Иначе // Нужна тех. карта лежит в регистре. 
		
		СтрокаТехКарты = ДокументОбъект.РемонтныеРаботы.Добавить();
		СтрокаТехКарты.РемонтнаяРабота = ДанныеДляЗаполнения.ТехКарта;
		СтрокаТехКарты.ID = Новый УникальныйИдентификатор;
		СтрокаТехКарты.Количество = 1;
		
		ЗаполнитьДокументПроектныхЗатратПоТехКарте(ДокументОбъект, ДанныеДляЗаполнения.ТехКарта, ДанныеДляЗаполнения.ДатаСрезаТехКарты, СтрокаТехКарты.ID);
		
	КонецЕсли;
	
	ЗаполнитьЗапчастиВДокументеПроектныхЗатрат(ДокументОбъект);
	
	ДокументОбъект.Записать();
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРемонтыОборудования(Основание, ДокументОбъект, Параметры = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_ТабДокументовОснований.Ключ КАК ID,
	|	ВТ_ТабДокументовОснований.Значение КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ТабДокументовОснований
	|ИЗ
	|	&ТаблицаДокументовОснований КАК ВТ_ТабДокументовОснований
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК ID,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания КАК ДатаОкончания,
	|	торо_АктуальныеПлановыеДатыРемонтов.КрайняяДатаЗавершения КАК КрайняяДатаЗавершения,
	|	ВТ_ТабДокументовОснований.Ссылка КАК Ссылка,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	ВЫБОР
	|		КОГДА НЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидДокументаНачалаЦепочки = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект)
	|			ТОГДА &ВидРемонтаНаОснованииВыявленныхДефектов
	|		ИНАЧЕ &ВидРемонтаНаОснованииВнешнихОснований
	|	КОНЕЦ КАК ВидРемонтныхРабот,
	|	торо_ОбщиеДанныеПоРемонтам.Завершен КАК Завершен
	|ПОМЕСТИТЬ ТаблицаПлановыхДат
	|ИЗ
	|	ВТ_ТабДокументовОснований КАК ВТ_ТабДокументовОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|		ПО ВТ_ТабДокументовОснований.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО ВТ_ТабДокументовОснований.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|ГДЕ
	|	НЕ торо_ОбщиеДанныеПоРемонтам.Отменен
	|	И НЕ торо_ОбщиеДанныеПоРемонтам.Замещен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ЗаявкиПоРемонтам.IDРемонта КАК IDРемонта
	|ПОМЕСТИТЬ ВТ_ЗаявкиПоРемонту
	|ИЗ
	|	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
	|			,
	|			IDРемонта В
	|				(ВЫБРАТЬ
	|					ВТ_ТабДокументовОснований.ID
	|				ИЗ
	|					ВТ_ТабДокументовОснований КАК ВТ_ТабДокументовОснований)) КАК торо_ЗаявкиПоРемонтам
	|ГДЕ
	|	НЕ торо_ЗаявкиПоРемонтам.Отменен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ЗаявкиПоРемонтам.IDРемонта КАК IDРемонта
	|ПОМЕСТИТЬ ВТ_ОтмененнаяЗаявкаОснование
	|ИЗ
	|	РегистрСведений.торо_ЗаявкиПоРемонтам КАК торо_ЗаявкиПоРемонтам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабДокументовОснований КАК ВТ_ТабДокументовОснований
	|		ПО торо_ЗаявкиПоРемонтам.ДокументЗаявка = ВТ_ТабДокументовОснований.Ссылка
	|			И торо_ЗаявкиПоРемонтам.IDРемонта = ВТ_ТабДокументовОснований.ID
	|ГДЕ
	|	торо_ЗаявкиПоРемонтам.Отменен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПлановыхДат.ID КАК ID,
	|	ТаблицаПлановыхДат.Ссылка КАК ДокументИсточник,
	|	ТаблицаПлановыхДат.Ссылка КАК ДокументОснование,
	|	ТаблицаПлановыхДат.ОбъектРемонта КАК ОбъектРемонта,
	|	ТаблицаПлановыхДат.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	ЕСТЬNULL(торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала, ТаблицаПлановыхДат.ДатаНачала) КАК ДатаНачала,
	|	ЕСТЬNULL(торо_СвернутыеФактическиеДатыРемонтов.ДатаОкончания, ТаблицаПлановыхДат.ДатаОкончания) КАК ДатаОкончания,
	|	ТаблицаПлановыхДат.КрайняяДатаЗавершения КАК КрайняяДопустимаяДатаЗавершенияРемонта,
	|	торо_ГарантийностьРемонтов.Гарантийный КАК ГарантийныйРемонт,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение, ЕСТЬNULL(торо_ВнешниеОснования.Описание, """")) КАК СТРОКА(1000)) КАК ОписаниеРемонта,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранениеЯзык1, ЕСТЬNULL(торо_ВнешниеОснования.ОписаниеЯзык1, """")) КАК СТРОКА(1000)) КАК ОписаниеРемонтаЯзык1,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранениеЯзык2, ЕСТЬNULL(торо_ВнешниеОснования.ОписаниеЯзык2, """")) КАК СТРОКА(1000)) КАК ОписаниеРемонтаЯзык2,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.Высота, ЕСТЬNULL(торо_ВнешниеОснования.Высота, 0)) КАК ЧИСЛО(20, 2)) КАК Высота,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.Долгота, ЕСТЬNULL(торо_ВнешниеОснования.Долгота, 0)) КАК ЧИСЛО(20, 14)) КАК Долгота,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.Широта, ЕСТЬNULL(торо_ВнешниеОснования.Широта, 0)) КАК ЧИСЛО(20, 14)) КАК Широта,
	|	торо_ВыявленныеДефектыСписокДефектов.КритичностьДефекта КАК КритичностьДефекта,
	|	ТаблицаПлановыхДат.Завершен КАК Завершен,
	|	торо_ОстановочныеРемонты.IDОсновного КАК IDОсновного
	|ИЗ
	|	ТаблицаПлановыхДат КАК ТаблицаПлановыхДат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СвернутыеФактическиеДатыРемонтов КАК торо_СвернутыеФактическиеДатыРемонтов
	|		ПО ТаблицаПлановыхДат.ID = торо_СвернутыеФактическиеДатыРемонтов.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефектыСписокДефектов
	|		ПО ТаблицаПлановыхДат.ID = торо_ВыявленныеДефектыСписокДефектов.ID
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВнешниеОснованияДляРабот КАК торо_ВнешниеОснования
	|		ПО ТаблицаПлановыхДат.ID = торо_ВнешниеОснования.ID
	|			И ТаблицаПлановыхДат.Ссылка = торо_ВнешниеОснования.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОстановочныеРемонты КАК торо_ОстановочныеРемонты
	|		ПО ТаблицаПлановыхДат.ID = торо_ОстановочныеРемонты.IDЗависимого
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаявкиПоРемонту КАК ВТ_ЗаявкиПоРемонту
	|		ПО ТаблицаПлановыхДат.ID = ВТ_ЗаявкиПоРемонту.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтмененнаяЗаявкаОснование КАК ВТ_ОтмененнаяЗаявкаОснование
	|		ПО ТаблицаПлановыхДат.ID = ВТ_ОтмененнаяЗаявкаОснование.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ГарантийностьРемонтов.СрезПоследних КАК торо_ГарантийностьРемонтов
	|		ПО ТаблицаПлановыхДат.ID = торо_ГарантийностьРемонтов.IDРемонта
	|ГДЕ
	|	ВТ_ОтмененнаяЗаявкаОснование.IDРемонта ЕСТЬ NULL
	|	И (&ВводНесколькихЗаявокПоРемонту
	|			ИЛИ ВТ_ЗаявкиПоРемонту.IDРемонта ЕСТЬ NULL)
	|	И (НЕ &ОтборПоОрганизацииИПодразделению
	|			ИЛИ ТаблицаПлановыхДат.ОбъектРемонта.Организация = &Организация
	|				И ТаблицаПлановыхДат.ОбъектРемонта.Подразделение = &Подразделение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачала,
	|	ОбъектРемонта";
	
	#КонецОбласти
	
	Если Параметры <> Неопределено И Параметры.Свойство("ОрганизацияДляОтбора") И Параметры.Свойство("ПодразделениеДляОтбора") Тогда
		Запрос.УстановитьПараметр("ОтборПоОрганизацииИПодразделению", Истина);
		Запрос.УстановитьПараметр("Организация", Параметры.ОрганизацияДляОтбора);
		Запрос.УстановитьПараметр("Подразделение", Параметры.ПодразделениеДляОтбора);
	Иначе	
		Запрос.УстановитьПараметр("ОтборПоОрганизацииИПодразделению", Ложь);
		Запрос.УстановитьПараметр("Организация", Неопределено);
		Запрос.УстановитьПараметр("Подразделение", Неопределено);
	КонецЕсли; 
	
	ВводНесколькихЗаявокПоРемонту = Константы.торо_РазрешитьВводНесколькихСметПоРемонту.Получить();
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") И Не ВводНесколькихЗаявокПоРемонту Тогда
		Запрос.УстановитьПараметр("ВводНесколькихЗаявокПоРемонту", Ложь);
	Иначе
		Запрос.УстановитьПараметр("ВводНесколькихЗаявокПоРемонту", Истина);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаДокументовОснований", ПолучитьТаблицуДокументовОснований(Основание));	
	Запрос.УстановитьПараметр("ВидРемонтаНаОснованииВыявленныхДефектов", Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить());
	Запрос.УстановитьПараметр("ВидРемонтаНаОснованииВнешнихОснований", Константы.торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований.Получить());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	ИмяТЧРемонтов = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДокументОбъект.Ссылка);
	
	Попытка
		ТаблицаРемонтов = ДокументОбъект[ИмяТЧРемонтов];
	Исключение
		// Сюда может попасть из обработки подбора ремонтов. Запись в ЖР не требуется.
		ТаблицаРемонтов = ДокументОбъект["РемонтыОборудования"];
	КонецПопытки;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРемонтов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.торо_АктОВыполненииЭтапаРабот") Тогда
			НоваяСтрока.ИДДефекта = Выборка.ID;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРемонтныеРаботы(Основание, ДокументОбъект, Владелец = Неопределено)	
	
	ИмяТЧРемонтов = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДокументОбъект.Ссылка);
	
	Попытка
		ТаблицаРемонтов = ДокументОбъект[ИмяТЧРемонтов];
	Исключение
		// Сюда может попасть из обработки подбора ремонтов. Запись в ЖР не требуется.
		ТаблицаРемонтов = ДокументОбъект["РемонтыОборудования"];
	КонецПопытки;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТабОснований = ПолучитьТаблицуДокументовОснований(Основание);
	Запрос.УстановитьПараметр("ТаблицаДокументовОснований", ТабОснований);
	Запрос.УстановитьПараметр("Ремонты", ТаблицаРемонтов.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДокументовОснований.Ключ КАК ID,
	|	ТаблицаДокументовОснований.Значение КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаДокументовОснований
	|ИЗ
	|	&ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ремонты.ID КАК ID,
	|	Ремонты.ОбъектРемонта КАК ОбъектРемонта,
	|	Ремонты.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	Ремонты.ДокументИсточник КАК ДокументИсточник,
	|	Ремонты.ДатаНачала КАК ДатаНачала,
	|	Ремонты.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ Ремонты
	|ИЗ
	|	&Ремонты КАК Ремонты";
	
	РезультатВыполненияЗапроса = Запрос.Выполнить();
	
	ТабОснованийКопия = ТабОснований.Скопировать();
	ТабОснованийКопия.Свернуть("Значение");
	МассивОснований = ТабОснованийКопия.ВыгрузитьКолонку("Значение");
	
	Для каждого Элемент Из МассивОснований Цикл
		
		ТипЗначенияДокументаОснования = ТипЗнч(Элемент);
		
		Дата = ДокументОбъект.Дата;
		Если ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
			Дата = ТекущаяДата();
		КонецЕсли;
		
		ПолучитьТекстЗапросаРемонтныхРаботПоОснованию(Запрос, ТипЗначенияДокументаОснования, Владелец, Дата);
		
		Если ТаблицаРемонтов.Количество() > 0 Тогда
			
			НайдСтр = ТабОснований.НайтиСтроки(Новый Структура("Значение", Элемент));
			МассивID = ТабОснований.Скопировать(НайдСтр, "Ключ");
			Запрос.УстановитьПараметр("МассивID", МассивID);
			
			Если ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
				ТаблицаРемонтыхРабот = РезультатВыполненияЗапроса.Выгрузить();
			Иначе
				ТаблицаРемонтыхРабот = Запрос.Выполнить().Выгрузить();
			КонецЕсли;
			
			// Устанавливаем ID с учетом подчиненности для нормативных ремонтов. 
			// Намеренно заполняем все поля вне зависимости их наличия в приемнике.
			Если ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ПланГрафикРемонта")
				ИЛИ ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ВыявленныеДефекты") 
				ИЛИ ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
				
				Если ТипЗначенияДокументаОснования <> Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
					ТаблицаРемонтыхРабот = ПолучитьIDТК(ТаблицаРемонтыхРабот);
				Иначе 
					ТаблицаРемонтыхРабот.Колонки.Добавить("ID");
				КонецЕсли;
				
				ОписаниеТипаСтроки = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36));
				
				ТаблицаРемонтыхРабот.Колонки.Добавить("Родитель_ID", ОписаниеТипаСтроки);
				ТаблицаРемонтыхРабот.Колонки.Добавить("ПроцентВыполненияРабот", Новый ОписаниеТипов("Число"));
				ТаблицаРемонтыхРабот.Колонки.Добавить("НоваяОперация", Новый ОписаниеТипов("Булево"));
				ТаблицаРемонтыхРабот.ЗаполнитьЗначения(100, "ПроцентВыполненияРабот");
				
				ЗаполнитьИДРемонтныхРабот(ТаблицаРемонтыхРабот, ТипЗначенияДокументаОснования);
							
				Если ТипЗначенияДокументаОснования <> Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ТаблицаРемонтыхРабот.ID КАК ID,
					|	ТаблицаРемонтыхРабот.РемонтнаяРабота КАК РемонтнаяРабота,
					|	ТаблицаРемонтыхРабот.Родитель_ID КАК Родитель_ID,
					|	ТаблицаРемонтыхРабот.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
					|	ТаблицаРемонтыхРабот.Количество КАК Количество,
					|	ТаблицаРемонтыхРабот.НомерСтроки КАК НомерСтроки,
					|	ТаблицаРемонтыхРабот.Картинка КАК Картинка,
					|	ТаблицаРемонтыхРабот.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
					|ПОМЕСТИТЬ ВТ_ТаблицаРемонтовОборудования
					|ИЗ
					|	&ТаблицаРемонтыхРабот КАК ТаблицаРемонтыхРабот";
					
					ДополнитьЗапросПроцентами(Запрос, Перечисления.торо_ВидДокумента.ПлановыеЗатраты, Владелец);
					Запрос.УстановитьПараметр("ТаблицаРемонтыхРабот", ТаблицаРемонтыхРабот);
					
					ТаблицаРемонтыхРабот = Запрос.Выполнить().Выгрузить();
					
				КонецЕсли; 
				
			КонецЕсли; 
			
			Для каждого СтрокаРемРабот Из ТаблицаРемонтыхРабот Цикл
				НоваяРемонтнаяРабота = ДокументОбъект.РемонтныеРаботы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяРемонтнаяРабота, СтрокаРемРабот);
			КонецЦикла;			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИДРемонтныхРабот(ТаблицаРемонтыхРабот, ТипЗначенияДокументаОснования)
	
	Если НЕ ЗначениеЗаполнено(ТаблицаРемонтыхРабот) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипЗначенияДокументаОснования) Тогда
		Возврат;
	КонецЕсли;	
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	КвалификаторыСтроки = Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная);
	
	ТаблицаРемонтыхРабот.Колонки.Добавить("УстановленныйИД", Новый ОписаниеТипов(МассивТипов, , КвалификаторыСтроки));
	
	ТаблицаРемонтыхРабот.Индексы.Добавить("РемонтыОборудования_ID, УстановленныйИД, Ссылка");
	ТаблицаРемонтыхРабот.Индексы.Добавить("Родитель_IDЧисло, РемонтыОборудования_ID");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ПроцентВыполненныхРабот.IDРемонта КАК РемонтыОборудования_ID,
		|	торо_ПроцентВыполненныхРабот.IDОперации КАК ID,
		|	торо_ПроцентВыполненныхРабот.Операция КАК РемонтнаяРабота,
		|	торо_ПроцентВыполненныхРабот.IDРодителя КАК Родитель_ID
		|ИЗ
		|	РегистрНакопления.торо_ПроцентВыполненныхРабот КАК торо_ПроцентВыполненныхРабот
		|ГДЕ
		|	торо_ПроцентВыполненныхРабот.IDРемонта В(&РемонтыОборудования_ID)
		|	И торо_ПроцентВыполненныхРабот.ВидДокумента = &ВидДокумента";
	
	Запрос.УстановитьПараметр("РемонтыОборудования_ID", ТаблицаРемонтыхРабот.ВыгрузитьКолонку("РемонтыОборудования_ID"));
	Запрос.УстановитьПараметр("ВидДокумента", Перечисления.торо_ВидДокумента.ПлановыеЗатраты);
	
	ТаблицаРаботИзАкта = Запрос.Выполнить().Выгрузить();
	ТаблицаРаботИзАкта.Индексы.Добавить("РемонтыОборудования_ID");

	Для каждого СтрокаРемРабот Из ТаблицаРемонтыхРабот Цикл
		
		СтруктураОтбораИзАкта = Новый Структура("РемонтыОборудования_ID, РемонтнаяРабота", СтрокаРемРабот.РемонтыОборудования_ID, СтрокаРемРабот.РемонтнаяРабота);
		НайденныеСтрокиИзАкта = ТаблицаРаботИзАкта.НайтиСтроки(СтруктураОтбораИзАкта);
		
		Если ЗначениеЗаполнено(СтрокаРемРабот.IDСтрока) Тогда
			Идентификатор = СтрокаРемРабот.IDСтрока;
		ИначеЕсли ЗначениеЗаполнено(СтрокаРемРабот.ID) Тогда
			Идентификатор = СтрокаРемРабот.ID;
		Иначе
			Идентификатор = Строка(Новый УникальныйИдентификатор());
		КонецЕсли;		
		
		Если (ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ПланГрафикРемонта")
			ИЛИ ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР"))
			И НайденныеСтрокиИзАкта.Количество() <> 0 Тогда
			
			// находим id родителя
			СтруктураОтбораРодителя = Новый Структура("РемонтыОборудования_ID, IDЧисло", 
			СтрокаРемРабот.РемонтыОборудования_ID, СтрокаРемРабот.Родитель_IDЧисло);					
			НайденныеСтроки = ТаблицаРемонтыхРабот.НайтиСтроки(СтруктураОтбораРодителя);
			Для каждого СтрокаТК Из НайденныеСтроки Цикл
				СтрокаРемРабот.Родитель_ID = СтрокаТК.ID;
			КонецЦикла;			
			
			// Для ТК и ТО разный алгоритм
			Если СтрокаРемРабот.Картинка = 1 Тогда
				// по ремонту, родителю и ТО находим варианты id ТО из акта
				СтруктураОтбораИзАкта = Новый Структура("РемонтыОборудования_ID, Родитель_ID, РемонтнаяРабота", 
					СтрокаРемРабот.РемонтыОборудования_ID, СтрокаРемРабот.Родитель_ID, СтрокаРемРабот.РемонтнаяРабота);
				НайденныеСтрокиИзАкта = ТаблицаРаботИзАкта.НайтиСтроки(СтруктураОтбораИзАкта);
				Если НайденныеСтрокиИзАкта.Количество() <> 0 Тогда
					// следим, чтобы не было дублей в установленном id
					Для каждого СтрокаИзАкта Из НайденныеСтрокиИзАкта Цикл
						СтруктураОтбора = Новый Структура("УстановленныйИД", СтрокаИзАкта.ID);
						НайденныеСтроки2 = ТаблицаРемонтыхРабот.НайтиСтроки(СтруктураОтбора);
						Если СтрокаИзАкта.ID <> Идентификатор и НайденныеСтроки2.Количество() = 0 Тогда
							Идентификатор = СтрокаИзАкта.ID;
						КонецЕсли; 
					КонецЦикла;
				КонецЕсли; 
			КонецЕсли; 			
		Иначе
			Если ТипЗнч(СтрокаРемРабот.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации")
				И ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
				СтрокаРемРабот.НоваяОперация = Истина;
				Идентификатор = Строка(Новый УникальныйИдентификатор());
			КонецЕсли; 
		
			// Установленные идентификаторы должны различаться,
			// дубли появляются при добавлении двух вложенных одинаковых ТК.
			СтруктураОтбора = Новый Структура("РемонтыОборудования_ID, УстановленныйИД, Ссылка", СтрокаРемРабот.РемонтыОборудования_ID, Идентификатор, СтрокаРемРабот.Ссылка); 
			НайденныеСтроки = ТаблицаРемонтыхРабот.НайтиСтроки(СтруктураОтбора);			
			Если НайденныеСтроки.Количество() <> 0 Тогда
				Идентификатор = Строка(Новый УникальныйИдентификатор());
			КонецЕсли; 		
			Если СтрокаРемРабот.IDЧисло <> 0 И СтрокаРемРабот.IDЧисло <> "" Тогда
				
				ПараметрыОтбора = Новый Структура("Родитель_IDЧисло, РемонтыОборудования_ID", СтрокаРемРабот.IDЧисло, СтрокаРемРабот.РемонтыОборудования_ID); 
				НайденныеСтроки = ТаблицаРемонтыхРабот.НайтиСтроки(ПараметрыОтбора);
				Для каждого ПодчиненнаяСтрока Из НайденныеСтроки Цикл
					ПодчиненнаяСтрока.Родитель_ID = Идентификатор; 
					ПодчиненнаяСтрока.Количество = ПодчиненнаяСтрока.Количество * СтрокаРемРабот.Количество; 
				КонецЦикла; 
				
			КонецЕсли;
			
		КонецЕсли; 

		СтрокаРемРабот.ID = Идентификатор;
		СтрокаРемРабот.УстановленныйИД = Идентификатор;
	КонецЦикла; 

КонецПроцедуры

Процедура ПолучитьТекстЗапросаРемонтныхРаботПоОснованию(Запрос, ТипЗначенияДокументаОснования, Владелец, Дата)
	
	// ВНИМАНИЕ! При добавлении временной таблицы -- удаляйте её: запрос составляется в цикле и при вызове из РМТС
	// для нескольких ремонтов могут быть падения в табло.
	
	Если ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		#Область Запрос_ВО
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		               |	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		               |	торо_ОперацииВнешнихОснованийДляРабот.РемонтнаяРабота КАК РемонтнаяРабота,
		               |	торо_ОперацииВнешнихОснованийДляРабот.ID КАК ID,
		               |	торо_ОперацииВнешнихОснованийДляРабот.Родитель_ID КАК Родитель_ID,
		               |	торо_ОперацииВнешнихОснованийДляРабот.Количество КАК Количество,
		               |	2 КАК Картинка,
		               |	"""" КАК Исполнитель,
		               |	"""" КАК ДоговорБригада,					   
		               |	торо_ОперацииВнешнихОснованийДляРабот.НомерСтроки КАК НомерСтроки,
					   |	торо_ОперацииВнешнихОснованийДляРабот.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		               |ПОМЕСТИТЬ ВТ_ТаблицаРемонтовОборудования
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОперацииВнешнихОснованийДляРабот КАК торо_ОперацииВнешнихОснованийДляРабот
		               |		ПО ТаблицаДокументовОснований.ID = торо_ОперацииВнешнихОснованийДляРабот.Предписание_ID
		               |			И (ТИПЗНАЧЕНИЯ(ТаблицаДокументовОснований.Ссылка) = ТИП(Документ.торо_ВнешнееОснованиеДляРабот))
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
		               |	ID";		
		#КонецОбласти
		ДополнитьЗапросПроцентами(Запрос, Перечисления.торо_ВидДокумента.ЗаявкаНаРемонт, Владелец);
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		#Область Запрос_Заявка
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		               |	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID КАК ID,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество КАК Количество,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Исполнитель КАК Исполнитель,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ДоговорБригада КАК ДоговорБригада,
		               |	ВЫБОР
		               |		КОГДА ТИПЗНАЧЕНИЯ(торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ТехнологическиеОперации)
		               |			ТОГДА 2
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Картинка,
		               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.НомерСтроки КАК НомерСтроки,
					   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		               |ПОМЕСТИТЬ ВТ_ТаблицаРемонтовОборудования
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
		               |		ПО ТаблицаДокументовОснований.ID = торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID
		               |			И ТаблицаДокументовОснований.Ссылка = торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
		               |	РемонтнаяРабота";
		
		#КонецОбласти
		ДополнитьЗапросПроцентами(Запрос, Перечисления.торо_ВидДокумента.ЗаявкаНаРемонт, Владелец);  		
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
		#Область Запрос_Наряд
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		               |	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID КАК ID,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Количество КАК Количество,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Исполнитель КАК Исполнитель,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ДоговорБригада КАК ДоговорБригада,
		               |	ВЫБОР
		               |		КОГДА ТИПЗНАЧЕНИЯ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ТехнологическиеОперации)
		               |			ТОГДА 2
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Картинка,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.НомерСтроки КАК НомерСтроки,
					   |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		               |ПОМЕСТИТЬ ВТ_ТаблицаРемонтовОборудования
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
		               |		ПО ТаблицаДокументовОснований.ID = торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID
		               |			И ТаблицаДокументовОснований.Ссылка = торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
		               |	РемонтнаяРабота";
		
		#КонецОбласти
		ДополнитьЗапросПроцентами(Запрос, Перечисления.торо_ВидДокумента.НарядНаВыполнениеРемонтныхРабот, Владелец);  
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		#Область Запрос_ППР
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		|	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК РемонтнаяРабота,
		|	"""" КАК ID,
		|	"""" КАК Родитель_ID,
		|	1 КАК Количество,
		|	0 КАК Картинка,
		|	ВЫБОР
		|		КОГДА торо_НормативныеРемонтыОборудования.ТиповойОР = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ТиповойОР,
		|	Ремонты.ДатаНачала КАК ДатаНачала,
		|	торо_НормативныеРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_НормативныеРемонтыОборудования.ВидРемонта КАК ВидРемонта
		|ПОМЕСТИТЬ ВТ_ВсеНормативыБезID
		|ИЗ
		|	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		|			ПО (ТИПЗНАЧЕНИЯ(Ремонты.ДокументИсточник) = ТИП(Документ.торо_ПланГрафикРемонта))
		|				И Ремонты.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		|				И Ремонты.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидРемонта
		|		ПО ТаблицаДокументовОснований.ID = Ремонты.ID
		|			И ТаблицаДокументовОснований.Ссылка = Ремонты.ДокументИсточник
		|ГДЕ 
		|  ТаблицаДокументовОснований.ID В (&МассивID)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РемонтыОборудования_ID,
		|	РемонтнаяРабота
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ВсеНормативыБезID.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	ВТ_ВсеНормативыБезID.Ссылка КАК Ссылка,
		|	ВТ_ВсеНормативыБезID.РемонтнаяРабота КАК РемонтнаяРабота,
		|	ЕСТЬNULL(торо_ПлановыеЗатратыТехКарты.ТехКарта_ID, ВТ_ВсеНормативыБезID.ID) КАК ID,
		|	ВТ_ВсеНормативыБезID.Родитель_ID КАК Родитель_ID,
		|	ВТ_ВсеНормативыБезID.Количество КАК Количество,
		|	ВТ_ВсеНормативыБезID.Картинка КАК Картинка,
		|	ВТ_ВсеНормативыБезID.ТиповойОР КАК ТиповойОР,
		|	ВТ_ВсеНормативыБезID.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ВсеНормативыБезID.ВидРемонта КАК ВидРемонта,
		|	ВТ_ВсеНормативыБезID.ДатаНачала КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_ВсеНормативы
		|ИЗ
		|	ВТ_ВсеНормативыБезID КАК ВТ_ВсеНормативыБезID
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ПлановыеЗатраты.ТехКарты КАК торо_ПлановыеЗатратыТехКарты
		|		ПО ВТ_ВсеНормативыБезID.РемонтыОборудования_ID = торо_ПлановыеЗатратыТехКарты.Ссылка.РемонтыОборудования_ID
		|			И ВТ_ВсеНормативыБезID.РемонтнаяРабота = торо_ПлановыеЗатратыТехКарты.ТехКарта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РемонтыОборудования_ID,
		|	ТиповойОР,
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ВсеНормативы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	МАКСИМУМ(ВТ_ВсеНормативы.ТиповойОР) КАК ТиповойОР,
		|	ВТ_ВсеНормативы.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ВсеНормативы.ВидРемонта КАК ВидРемонта
		|ПОМЕСТИТЬ ВТ_Максимумы
		|ИЗ
		|	ВТ_ВсеНормативы КАК ВТ_ВсеНормативы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеНормативы.РемонтыОборудования_ID,
		|	ВТ_ВсеНормативы.ОбъектРемонта,
		|	ВТ_ВсеНормативы.ВидРемонта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РемонтыОборудования_ID,
		|	ТиповойОР,
		|	ОбъектРемонта,
		|	ВидРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ВТ_ВсеНормативы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		|	ВТ_ВсеНормативы.Ссылка КАК Ссылка,
		|	ВТ_ВсеНормативы.РемонтнаяРабота КАК РемонтнаяРабота,
		|	ВТ_ВсеНормативы.ID КАК ID,
		|	ВТ_ВсеНормативы.Родитель_ID КАК Родитель_ID,
		|	ВТ_ВсеНормативы.Количество КАК Количество,
		|	ВТ_ВсеНормативы.Картинка КАК Картинка,
		|	ВТ_ВсеНормативы.ДатаНачала КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_НормативыРемонта
		|ИЗ
		|	ВТ_ВсеНормативы КАК ВТ_ВсеНормативы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Максимумы КАК ВТ_Максимумы
		|		ПО ВТ_ВсеНормативы.РемонтыОборудования_ID = ВТ_Максимумы.РемонтыОборудования_ID
		|			И ВТ_ВсеНормативы.ТиповойОР = ВТ_Максимумы.ТиповойОР
		|			И ВТ_ВсеНормативы.ОбъектРемонта = ВТ_Максимумы.ОбъектРемонта
		|			И ВТ_ВсеНормативы.ВидРемонта = ВТ_Максимумы.ВидРемонта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокументовОснований.ID,
		|	ТаблицаДокументовОснований.Ссылка,
		|	торо_ЦепочкиРемонтаПоследовательностьРемонтов.НормативныйРемонт,
		|	"""",
		|	"""",
		|	1,
		|	0,
		|	Ремонты.ДатаНачала
		|ИЗ
		|	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтныеЦиклыОборудования КАК торо_РемонтныеЦиклыОборудования
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ЦепочкиРемонта.ПоследовательностьРемонтов КАК торо_ЦепочкиРемонтаПоследовательностьРемонтов
		|				ПО торо_РемонтныеЦиклыОборудования.ВидЦепочки = торо_ЦепочкиРемонтаПоследовательностьРемонтов.Ссылка
		|			ПО (Ремонты.ОбъектРемонта = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов
		|					ИЛИ Ремонты.ОбъектРемонта.ТиповойОР = торо_РемонтныеЦиклыОборудования.ГруппаОбъектовРемонтов)
		|				И (Ремонты.ВидРемонтныхРабот = торо_ЦепочкиРемонтаПоследовательностьРемонтов.ВидРемонта)
		|		ПО ТаблицаДокументовОснований.ID = Ремонты.ID
		|			И ТаблицаДокументовОснований.Ссылка = Ремонты.ДокументИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ВсеНормативыБезID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ВсеНормативы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Максимумы";
		#КонецОбласти
		ДополнитьЗапросРемонтнымиРаботамиИзНормативов(Запрос);
		Запрос.УстановитьПараметр("Период", Дата);
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
		#Область Запрос_ВД
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаДокументовОснований.ID КАК ID,
		               |	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		               |	ТиповыеДефекты.ТехнологическаяКарта КАК ТехнологическаяКарта
		               |ПОМЕСТИТЬ ТехКартыИзТиповыхДефектов
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты.СписокДефектов КАК Дефекты
		               |		ПО ТаблицаДокументовОснований.Ссылка = Дефекты.Ссылка
		               |			И ТаблицаДокументовОснований.ID = Дефекты.ID
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеДефектыОборудования КАК ТиповыеДефекты
		               |		ПО (Дефекты.ТиповойДефект = ТиповыеДефекты.Ссылка)
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |	И ТиповыеДефекты.ТехнологическаяКарта <> ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
					   |
					   |ИНДЕКСИРОВАТЬ ПО
		               |	ID,
					   |	Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		               |	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		               |	&торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов КАК РемонтнаяРабота,
		               |	"""" КАК Родитель_ID,
		               |	1 КАК Количество,
		               |	0 КАК Картинка,
		               |	ВЫБОР
		               |		КОГДА Ремонты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		               |			ТОГДА &Период
		               |		ИНАЧЕ Ремонты.ДатаНачала
		               |	КОНЕЦ КАК ДатаНачала,
		               |	0 КАК Приоритет
		               |ПОМЕСТИТЬ ВТ_ВсеНормативы
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
		               |		ПО ТаблицаДокументовОснований.ID = Ремонты.ID
		               |			И ТаблицаДокументовОснований.Ссылка = Ремонты.ДокументИсточник
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |	И НЕ &торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов = ЗНАЧЕНИЕ(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаДокументовОснований.ID,
		               |	ТаблицаДокументовОснований.Ссылка,
		               |	торо_НормативныеРемонтыОборудования.НормативныйРемонт,
		               |	"""",
		               |	1,
		               |	0,
		               |	ВЫБОР
		               |		КОГДА Ремонты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		               |			ТОГДА &Период
		               |		ИНАЧЕ Ремонты.ДатаНачала
		               |	КОНЕЦ,
		               |	ВЫБОР
		               |		КОГДА торо_НормативныеРемонтыОборудования.ТиповойОР = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
		               |			ТОГДА 2
		               |		ИНАЧЕ 1
		               |	КОНЕЦ
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
		               |			ПО (ТИПЗНАЧЕНИЯ(Ремонты.ДокументИсточник) = ТИП(Документ.торо_ВыявленныеДефекты))
		               |				И Ремонты.ОбъектРемонта = торо_НормативныеРемонтыОборудования.ОбъектРемонта
		               |				И Ремонты.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидРемонта
		               |		ПО ТаблицаДокументовОснований.ID = Ремонты.ID
		               |			И ТаблицаДокументовОснований.Ссылка = Ремонты.ДокументИсточник
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ТехКартыИзТиповыхДефектов.ID,
		               |	ТехКартыИзТиповыхДефектов.Ссылка,
		               |	ТехКартыИзТиповыхДефектов.ТехнологическаяКарта,
		               |	"""",
		               |	1,
		               |	0,
		               |	ВЫБОР
		               |		КОГДА Ремонты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		               |			ТОГДА &Период
		               |		ИНАЧЕ Ремонты.ДатаНачала
		               |	КОНЕЦ,
		               |	3
		               |ИЗ
		               |	ТехКартыИзТиповыхДефектов КАК ТехКартыИзТиповыхДефектов
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
		               |		ПО ТехКартыИзТиповыхДефектов.ID = Ремонты.ID
		               |			И ТехКартыИзТиповыхДефектов.Ссылка = Ремонты.ДокументИсточник
					   |
					   |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтнаяРабота
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ВТ_ВсеНормативы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		               |	ВТ_ВсеНормативы.Ссылка КАК Ссылка,
		               |	ВТ_ВсеНормативы.РемонтнаяРабота КАК РемонтнаяРабота,
		               |	ВТ_ВсеНормативы.Родитель_ID КАК Родитель_ID,
		               |	ВТ_ВсеНормативы.Количество КАК Количество,
		               |	ВТ_ВсеНормативы.Картинка КАК Картинка,
		               |	ВТ_ВсеНормативы.ДатаНачала КАК ДатаНачала,
		               |	ВТ_ВсеНормативы.Приоритет КАК Приоритет,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ВсеНормативы1.РемонтнаяРабота) КАК ID
		               |ПОМЕСТИТЬ ВТ_НормативыСНумерацией
		               |ИЗ
		               |	ВТ_ВсеНормативы КАК ВТ_ВсеНормативы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеНормативы КАК ВТ_ВсеНормативы1
		               |		ПО ВТ_ВсеНормативы.РемонтнаяРабота > ВТ_ВсеНормативы1.РемонтнаяРабота
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_ВсеНормативы.РемонтнаяРабота,
		               |	ВТ_ВсеНормативы.ДатаНачала,
		               |	ВТ_ВсеНормативы.РемонтыОборудования_ID,
		               |	ВТ_ВсеНормативы.Родитель_ID,
		               |	ВТ_ВсеНормативы.Ссылка,
		               |	ВТ_ВсеНормативы.Количество,
		               |	ВТ_ВсеНормативы.Картинка,
		               |	ВТ_ВсеНормативы.Приоритет
					   |
					   |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
					   |	Ссылка,
		               |	Приоритет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ВТ_НормативыСНумерацией.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		               |	ВТ_НормативыСНумерацией.Ссылка КАК Ссылка,
		               |	МАКСИМУМ(ВТ_НормативыСНумерацией.Приоритет) КАК Приоритет
		               |ПОМЕСТИТЬ ВТ_МаксимумПриоритетов
		               |ИЗ
		               |	ВТ_НормативыСНумерацией КАК ВТ_НормативыСНумерацией
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_НормативыСНумерацией.РемонтыОборудования_ID,
		               |	ВТ_НормативыСНумерацией.Ссылка
					   |
					   |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
					   |	Ссылка,
		               |	Приоритет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ВТ_НормативыСНумерацией.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		               |	ВТ_НормативыСНумерацией.Ссылка КАК Ссылка,
		               |	ВТ_НормативыСНумерацией.РемонтнаяРабота КАК РемонтнаяРабота,
		               |	(ВЫРАЗИТЬ(ВТ_НормативыСНумерацией.ID КАК ЧИСЛО(15, 0))) + 500 КАК ID,
		               |	ВТ_НормативыСНумерацией.Родитель_ID КАК Родитель_ID,
		               |	ВТ_НормативыСНумерацией.Количество КАК Количество,
		               |	ВТ_НормативыСНумерацией.Картинка КАК Картинка,
		               |	ВТ_НормативыСНумерацией.ДатаНачала КАК ДатаНачала
		               |ПОМЕСТИТЬ ВТ_НормативыРемонта
		               |ИЗ
		               |	ВТ_НормативыСНумерацией КАК ВТ_НормативыСНумерацией
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МаксимумПриоритетов КАК ВТ_МаксимумПриоритетов
		               |		ПО ВТ_НормативыСНумерацией.РемонтыОборудования_ID = ВТ_МаксимумПриоритетов.РемонтыОборудования_ID
		               |			И ВТ_НормативыСНумерацией.Ссылка = ВТ_МаксимумПриоритетов.Ссылка
		               |			И ВТ_НормативыСНумерацией.Приоритет = ВТ_МаксимумПриоритетов.Приоритет
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
		               |	РемонтнаяРабота
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ТехКартыИзТиповыхДефектов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_ВсеНормативы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_НормативыСНумерацией
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_МаксимумПриоритетов";
		#КонецОбласти
		ДополнитьЗапросРемонтнымиРаботамиИзНормативов(Запрос);
		Запрос.УстановитьПараметр("Период", Дата);
		Запрос.УстановитьПараметр("торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов", Константы.торо_ТехнологическаяКартаПриВводеНаОснованииВыявленныхДефектов.Получить());
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		#Область Запрос_График_РМ
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		|	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		|	торо_НормативныеРемонтыОборудования.НормативныйРемонт КАК РемонтнаяРабота,
		|	ЕСТЬNULL(торо_ПлановыеЗатратыТехКарты.ТехКарта_ID, """") КАК ID,
		|	"""" КАК Родитель_ID,
		|	Ремонты.ДатаНачала КАК ДатаНачала,
		|	1 КАК Количество,
		|	0 КАК Картинка
		|ПОМЕСТИТЬ ВТ_НормативыРемонта
		|ИЗ
		|	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ремонты КАК Ремонты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_НормативныеРемонтыОборудования
		|			ПО (ТИПЗНАЧЕНИЯ(Ремонты.ДокументИсточник) = ТИП(Документ.торо_ГрафикРегламентныхМероприятийТОиР))
		|				И Ремонты.ОбъектРемонта = торо_НормативныеРемонтыОборудования.СписокОбъектов
		|				И Ремонты.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидМероприятия
		|		ПО ТаблицаДокументовОснований.ID = Ремонты.ID
		|			И ТаблицаДокументовОснований.Ссылка = Ремонты.ДокументИсточник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ПлановыеЗатраты.ТехКарты КАК торо_ПлановыеЗатратыТехКарты
		|		ПО ТаблицаДокументовОснований.ID = торо_ПлановыеЗатратыТехКарты.Ссылка.РемонтыОборудования_ID
		|			И (торо_НормативныеРемонтыОборудования.НормативныйРемонт = торо_ПлановыеЗатратыТехКарты.ТехКарта)
		|ГДЕ 
		|  ТаблицаДокументовОснований.ID В (&МассивID)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РемонтыОборудования_ID,
		|	РемонтнаяРабота";
		
		#КонецОбласти
		ДополнитьЗапросРемонтнымиРаботамиИзНормативов(Запрос);
		Запрос.УстановитьПараметр("Период", Дата);
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
		#Область Запрос_Наряд_РМ
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаДокументовОснований.ID КАК РемонтыОборудования_ID,
		               |	ТаблицаДокументовОснований.Ссылка КАК Ссылка,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID КАК ID,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Количество КАК Количество,
		               |	ВЫБОР
		               |		КОГДА ТИПЗНАЧЕНИЯ(торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота) = ТИП(Справочник.торо_ТехнологическиеОперации)
		               |			ТОГДА 2
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Картинка,
		               |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.НомерСтроки КАК НомерСтроки,
					   |	торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		               |ПОМЕСТИТЬ ВТ_ТаблицаРемонтовОборудования
		               |ИЗ
		               |	ТаблицаДокументовОснований КАК ТаблицаДокументовОснований
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_НарядНаРегламентноеМероприятие.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
		               |		ПО ТаблицаДокументовОснований.ID = торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID
		               |			И ТаблицаДокументовОснований.Ссылка = торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.Ссылка
		               |ГДЕ
		               |	ТаблицаДокументовОснований.ID В(&МассивID)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	РемонтыОборудования_ID,
		               |	РемонтнаяРабота";
		#КонецОбласти
		ДополнитьЗапросПроцентами(Запрос, Перечисления.торо_ВидДокумента.НарядНаВыполнениеРегламентногоМероприятия, Владелец);  
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗатратыПоОснованию(ДокументОбъект, Основания)
	
	// TODO: заполнять только для одной ремонтной работы
	
	Если ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия")
	   И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") 
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеИсполнителейПоОснованию = Новый Соответствие;
	СоответствиеИсполнителейПоНормам = Новый Соответствие;
	СоответствиеМатериаловПоОснованию = Новый Соответствие;
	СоответствиеМатериаловПоНормам = Новый Соответствие;
	
	ТаблицаДанныхОЦепочках = ПолучитьТаблицуИнформацииОЦепочкеРемонтов(Основания);
	
	Для каждого СтрокаДанныхЦепочки из ТаблицаДанныхОЦепочках Цикл
		Если ЗначениеЗаполнено(СтрокаДанныхЦепочки.Наряд) ИЛИ ЗначениеЗаполнено(СтрокаДанныхЦепочки.Заявка) Тогда 
			СоответствиеИсполнителейПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
		Иначе
			СоответствиеИсполнителейПоНормам.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
		КонецЕсли;
		
		Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
			И ЗначениеЗаполнено(СтрокаДанныхЦепочки.Наряд) И ЗначениеЗаполнено(СтрокаДанныхЦепочки.Заявка) Тогда
			СоответствиеМатериаловПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
			СоответствиеМатериаловПоНормам.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
		Иначе
			Если ЗначениеЗаполнено(СтрокаДанныхЦепочки.Заявка) Тогда
				СоответствиеМатериаловПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
			Иначе
				СоответствиеМатериаловПоНормам.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗатратыПоОснованию_Исполнители(ДокументОбъект, СоответствиеИсполнителейПоОснованию, СоответствиеИсполнителейПоНормам);
	ЗаполнитьЗатратыПоОснованию_Материалы(ДокументОбъект, СоответствиеМатериаловПоОснованию, СоответствиеМатериаловПоНормам);
	ЗаполнитьЗатратыПоОснованию_ЗапчастиПодрядчики(ДокументОбъект, Основания);
	ЗаполнитьЗатратыПоОснованию_ИнструментыМерыБезопасности(ДокументОбъект, Основания)
	
КонецПроцедуры

Процедура ЗаполнитьЗатратыПоОснованию_Исполнители(ДокументОбъект, СоответствиеПоОснованию, СоответствиеПоНормам)
	
	Если СоответствиеПоНормам.Количество() > 0 Тогда
		ИмяТЧ = "ТрудовыеЗатраты";
		Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот")
			ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
			ИмяТЧ = "Исполнители";
		КонецЕсли;
		
		СтруктураФормы = ПодготовитьСтруктуруФормыДляЗаполненияПоНормам(ДокументОбъект, СоответствиеПоНормам, ИмяТЧ);
		торо_Ремонты.ЗаполнитьИсполнителейПоНормам(СтруктураФормы, Неопределено, Неопределено, ИмяТЧ);
	КонецЕсли;
	
	Если СоответствиеПоОснованию.Количество() > 0 Тогда
		
		СписокИДОперацийПоОснованию = Новый Массив;
		СписокИДТехКартПоОснованию = Новый Массив;
		
		Для каждого СтрокаОперации Из ДокументОбъект.РемонтныеРаботы Цикл
			НайденоПоОснованию = СоответствиеПоОснованию.Получить(СтрокаОперации.РемонтыОборудования_ID);
			
			Если НайденоПоОснованию <> Неопределено Тогда 
				СписокИДОперацийПоОснованию.Добавить(СтрокаОперации.ID);
				Если ТипЗнч(СтрокаОперации.РемонтнаяРабота) <> Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
					СписокИДТехКартПоОснованию.Добавить(СтрокаОперации.ID);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		СписокИДРемонтовПоОснованию = Новый Массив;
		МассивОснованийПоОснованию = Новый Массив;
		Для каждого Ремонт Из СоответствиеПоОснованию Цикл
			СписокИДРемонтовПоОснованию.Добавить(Ремонт.Ключ);
			Если МассивОснованийПоОснованию.Найти(Ремонт.Значение) = Неопределено Тогда
				МассивОснованийПоОснованию.Добавить(Ремонт.Значение);
			КонецЕсли;
		КонецЦикла; 
		
		ДанныеДляЗаполнения = торо_Ремонты.ПолучитьДанныеДляЗаполненияПоОснованиюИзДокументов(МассивОснованийПоОснованию, 
		ДокументОбъект, СписокИДРемонтовПоОснованию, СписокИДОперацийПоОснованию, СписокИДТехКартПоОснованию, "Исполнители");
		торо_Ремонты.ЗаполнитьИсполнителейПоДаннымЗаполненияНаОсновании(ДокументОбъект, ДанныеДляЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗатратыПоОснованию_Материалы(ДокументОбъект, СоответствиеПоОснованию, СоответствиеПоНормам)
	
	Если ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Возврат;
	КонецЕсли;
	
	Если СоответствиеПоНормам.Количество() > 0 Тогда
		ИмяТЧ = "МатериальныеЗатраты";
		СтруктураФормы = ПодготовитьСтруктуруФормыДляЗаполненияПоНормам(ДокументОбъект, СоответствиеПоНормам, ИмяТЧ);
		торо_Ремонты.ЗаполнитьМатериалыПоНормам(СтруктураФормы, Неопределено, Неопределено, ИмяТЧ, Ложь);
	КонецЕсли;
	
	Если СоответствиеПоОснованию.Количество() > 0 Тогда
		СписокИДОперацийПоОснованию = Новый Массив;
		СписокИДТехКартПоОснованию = Новый Массив;
		
		Для каждого СтрокаОперации Из ДокументОбъект.РемонтныеРаботы Цикл
			НайденоПоОснованию = СоответствиеПоОснованию.Получить(СтрокаОперации.РемонтыОборудования_ID);
			
			Если НайденоПоОснованию <> Неопределено Тогда 
				СписокИДОперацийПоОснованию.Добавить(СтрокаОперации.ID);
				Если ТипЗнч(СтрокаОперации.РемонтнаяРабота) <> Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
					СписокИДТехКартПоОснованию.Добавить(СтрокаОперации.ID);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		СписокИДРемонтовПоОснованию = Новый Массив;
		МассивОснованийПоОснованию = Новый Массив;
		Для каждого Ремонт Из СоответствиеПоОснованию Цикл
			СписокИДРемонтовПоОснованию.Добавить(Ремонт.Ключ);
			Если МассивОснованийПоОснованию.Найти(Ремонт.Значение) = Неопределено Тогда
				МассивОснованийПоОснованию.Добавить(Ремонт.Значение);
			КонецЕсли;
		КонецЦикла; 
		
		ДанныеДляЗаполнения = торо_Ремонты.ПолучитьДанныеДляЗаполненияПоОснованиюИзДокументов(МассивОснованийПоОснованию, 
		ДокументОбъект, СписокИДРемонтовПоОснованию, СписокИДОперацийПоОснованию, СписокИДТехКартПоОснованию, "Материалы");
		торо_Ремонты.ЗаполнитьМатериалыПоДаннымЗаполненияНаОсновании(ДокументОбъект, ДанныеДляЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗатратыПоОснованию_ЗапчастиПодрядчики(ДокументОбъект, Основания)
	
	СписокИДОпераций = Новый Массив;
	СписокИДТехКарт = Новый Массив;
	
	Для каждого СтрокаОперации Из ДокументОбъект.РемонтныеРаботы Цикл
		Найдено = Основания.Получить(СтрокаОперации.РемонтыОборудования_ID);
		
		Если Найдено <> Неопределено Тогда 
			СписокИДОпераций.Добавить(СтрокаОперации.ID);
			Если ТипЗнч(СтрокаОперации.РемонтнаяРабота) <> Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
				СписокИДТехКарт.Добавить(СтрокаОперации.ID);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СписокИДРемонтов = Новый Массив;
	МассивОснований = Новый Массив;
	Для каждого Ремонт Из Основания Цикл
		СписокИДРемонтов.Добавить(Ремонт.Ключ);
		Если МассивОснований.Найти(Ремонт.Значение) = Неопределено Тогда
			МассивОснований.Добавить(Ремонт.Значение);
		КонецЕсли;
	КонецЦикла; 
	
	// Запчасти
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		ДанныеДляЗаполнения = торо_Ремонты.ПолучитьДанныеДляЗаполненияПоОснованиюИзДокументов(МассивОснований, 
									ДокументОбъект, СписокИДРемонтов, СписокИДОпераций, СписокИДТехКарт, "Запчасти");
		торо_Ремонты.ЗаполнитьЗапчастиПоДаннымЗаполненияНаОсновании(ДокументОбъект, ДанныеДляЗаполнения);
	КонецЕсли;
	
	// Подрядчики
	ДанныеДляЗаполнения = торо_Ремонты.ПолучитьДанныеДляЗаполненияПоОснованиюИзДокументов(МассивОснований, 
			ДокументОбъект, СписокИДРемонтов, СписокИДОпераций, СписокИДТехКарт, "Исполнители");
	торо_Ремонты.ЗаполнитьИсполнителейСПодразделениямиПоДаннымЗаполненияНаОсновании(ДокументОбъект, ДанныеДляЗаполнения);	
	торо_Ремонты.ЗаполнитьПодрядчиковПоДаннымЗаполненияНаОсновании(ДокументОбъект, ДанныеДляЗаполнения);

КонецПроцедуры

Процедура ЗаполнитьЗатратыПоОснованию_ИнструментыМерыБезопасности(ДокументОбъект, Основания)

	Если ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Возврат;
	КонецЕсли;
	
	МассивДанныхЗаполнения = торо_Ремонты.ПолучитьНормыЗатратИзТаблицыОпераций(ДокументОбъект.РемонтныеРаботы, ДокументОбъект.РемонтыОборудования, Новый Структура("ИнструментыИТехника, МерыБезопасности"));
	
	Для каждого СтруктураДанныхЗаполнения из МассивДанныхЗаполнения Цикл 
		Если СтруктураДанныхЗаполнения.СтруктураТаблиц.ИнструментыИТехника <> Неопределено Тогда
			Для каждого СтрокаНормы из СтруктураДанныхЗаполнения.СтруктураТаблиц.ИнструментыИТехника Цикл
				НоваяСтрока = ДокументОбъект.Инструменты.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНормы);
				НоваяСтрока.РемонтыОборудования_ID = СтруктураДанныхЗаполнения.РемонтыОборудования_ID;
			КонецЦикла;
		КонецЕсли;
		
		Если СтруктураДанныхЗаполнения.СтруктураТаблиц.МерыБезопасности <> Неопределено Тогда
			Для каждого СтрокаНормы из СтруктураДанныхЗаполнения.СтруктураТаблиц.МерыБезопасности Цикл
				НоваяСтрока = ДокументОбъект.МерыБезопасности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНормы);
				НоваяСтрока.РемонтыОборудования_ID = СтруктураДанныхЗаполнения.РемонтыОборудования_ID;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьСтруктуруФормыДляЗаполненияПоНормам(ДокументОбъект, СоответствиеПоНормам, ИмяТЧ)
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("Ссылка", ДокументОбъект.Ссылка);
	СтруктураОбъекта.Вставить(ИмяТЧ, ДокументОбъект[ИмяТЧ]);
	
	ИмяТаблицыРемонтов = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДокументОбъект.Ссылка);
	ТаблицаРемонтов = ДокументОбъект[ИмяТаблицыРемонтов].ВыгрузитьКолонки();
	Для каждого Строка из ДокументОбъект[ИмяТаблицыРемонтов] Цикл
		Если СоответствиеПоНормам[Строка.ID] <> Неопределено Тогда
			НоваяСтрока = ТаблицаРемонтов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОбъекта.Вставить(ИмяТаблицыРемонтов, ТаблицаРемонтов);
	
	ТаблицаРемонтныхРабот = ДокументОбъект.РемонтныеРаботы.ВыгрузитьКолонки();
	Для каждого Строка из ДокументОбъект.РемонтныеРаботы Цикл
		Если СоответствиеПоНормам[Строка.РемонтыОборудования_ID] <> Неопределено Тогда
			НоваяСтрока = ТаблицаРемонтныхРабот.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОбъекта.Вставить("РемонтныеРаботы", ТаблицаРемонтныхРабот);
	
	СтруктураФормы = Новый Структура("Объект", СтруктураОбъекта);
	
	Возврат СтруктураФормы;
	
КонецФункции

Процедура ЗаполнитьВнешниеОснования(Основание, ДокументОбъект, ИДРемонта = Неопределено)
	
	Для каждого Элемент Из Основание Цикл
		ДокОснование = Элемент.Значение;
		Если Не ВОснованииЕстьПредписания(ДокОснование) Тогда
			Продолжить;
		КонецЕсли; 
		
		Для каждого Предписание Из ДокОснование.ЗакрываемыеПредписания Цикл
			Если ИДРемонта = Неопределено Или Предписание.РемонтыОборудования_ID = ИДРемонта Тогда
				НоваяСтрока = ДокументОбъект.ЗакрываемыеПредписания.Добавить();	
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Предписание); 
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокОбъектов(ДокументОбъект)

	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.торо_НарядНаРегламентноеМероприятие") Тогда
		ТабЧасть = ДокументОбъект.РегламентныеМероприятия;
	Иначе	
		ТабЧасть = ДокументОбъект.Мероприятия;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРемонтовОборудования.ID КАК ID,
	|	ТаблицаРемонтовОборудования.ОбъектРемонта КАК ОбъектРемонта
	|ПОМЕСТИТЬ ТаблицаРемонтовОборудования
	|ИЗ
	|	&ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаРемонтовОборудования.ID КАК ID,
	|	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_МаршрутыРегламентныхМероприятий.НомерПоПорядку КАК НомерПоПорядку
	|ПОМЕСТИТЬ ТаблицаОР
	|ИЗ
	|	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
	|		ПО ТаблицаРемонтовОборудования.ОбъектРемонта = торо_МаршрутыРегламентныхМероприятий.СписокОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОР.ID КАК Мероприятие_ID,
	|	ВЫБОР
	|		КОГДА торо_ВыполненныеМероприятияОбъектов.ОбъектРемонта ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выполнено,
	|	ТаблицаОР.ОбъектРемонта КАК ОбъектРемонта,
	|	ТаблицаОР.НомерПоПорядку КАК НомерПоПорядку
	|ИЗ
	|	ТаблицаОР КАК ТаблицаОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыполненныеМероприятияОбъектов КАК торо_ВыполненныеМероприятияОбъектов
	|		ПО ТаблицаОР.ID = торо_ВыполненныеМероприятияОбъектов.ID
	|			И ТаблицаОР.ОбъектРемонта = торо_ВыполненныеМероприятияОбъектов.ОбъектРемонта
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПоПорядку";
	
	Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТабЧасть.Выгрузить());
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.МероприятияОбъектов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры
 
Процедура ЗаполнитьАктПриемкиОборудования(Основание, ДокументОбъект)
		
	МассивID = Новый Массив(); 
	
	Для Каждого Элемент из Основание Цикл 
		ID = Элемент.Ключ;
		ДокОснование = Элемент.Значение;
		МассивID.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	ИмяТЧ = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДокОснование);
	РемонтыОборудования = ДокОснование[ИмяТЧ];
	НайденнаяСтрока = РемонтыОборудования.Найти(ID, "ID");
	
	НС = ДокументОбъект.РемонтыОборудования.Добавить();
	ЗаполнитьЗначенияСвойств(НС, НайденнаяСтрока);
	
	Если ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		НС.ОбъектРемонта = НайденнаяСтрока.ОбъектРемонтныхРабот;
	ИначеЕсли ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		НС.ВидРемонтныхРабот = Константы.торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований.Получить();
	ИначеЕсли ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
		НС.ВидРемонтныхРабот = Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить();
	КонецЕсли;
	
	ТаблицаПлановыхДат = торо_ПланированиеРемонтов.ПолучитьАктуальныеДатыРемонтов(МассивID);
	Если ТаблицаПлановыхДат.Количество() > 0 Тогда
		НС.ДатаНачала = ТаблицаПлановыхДат[0].ДатаНачала;
		НС.ДатаОкончания = ТаблицаПлановыхДат[0].ДатаОкончания;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка КАК ДокументАкт,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
	|	НЕ торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ЗавершитьРемонт КАК ИндексКартинкиРаботыЗавершены,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	ВЫБОР
	|		КОГДА торо_АктОВыполненииЭтапаРабот.Проведен
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА торо_АктОВыполненииЭтапаРабот.ПометкаУдаления
	|					ТОГДА 2
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ИндексКартинкиСтатусДокумента
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот КАК торо_АктОВыполненииЭтапаРабот
	|		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = торо_АктОВыполненииЭтапаРабот.Ссылка
	|			И (торо_АктОВыполненииЭтапаРабот.Проведен)
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&ID)";
	
	Запрос.УстановитьПараметр("ID",МассивID);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.ЗакрываемыеАкты.Добавить(), Выборка);
	КонецЦикла;
	
	НС.ДокументИсточник = ДокОснование;
	
	Если ДокументОбъект.ДокументыОснования.НайтиСтроки(Новый Структура("ДокументОснование", ДокОснование)).Количество() = 0 Тогда
		ДокументОбъект.ДокументыОснования.Добавить().ДокументОснование = ДокОснование;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьОстановочныйРемонт(Основание, ДокументОбъект)

	ДокОснование = Неопределено;
	ID = Неопределено;
	
	МассивID = Новый Массив();
	Для каждого Элемент Из Основание Цикл
		ID = Элемент.Ключ;
		ДокОснование = Элемент.Значение;
		МассивID.Добавить(Элемент.Ключ);
	КонецЦикла;

	ИмяТЧ = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДокОснование);
	ДокументОбъект.ДокументОснование = ДокОснование;
	
	Если ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		
		ДокументОбъект.IDОсновногоРемонта =  ДокОснование.IDОсновногоРемонта;
		ДокументОбъект.ОбъектРемонта = ДокОснование.ОбъектРемонта;
		ДокументОбъект.ДатаНачалаРемонта = ДокОснование.ДатаНачалаРемонта;
		ДокументОбъект.ДатаОкончанияРемонта = ДокОснование.ДатаОкончанияРемонта;
		
	Иначе
		
		НайденнаяСтрока = ДокОснование[ИмяТЧ].Найти(ID, "ID");
		ДокументОбъект.IDОсновногоРемонта = НайденнаяСтрока.ID;
		Если ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
			ДокументОбъект.ОбъектРемонта = НайденнаяСтрока.ОбъектРемонтныхРабот;
		Иначе // Заявка на ремонт.
			ДокументОбъект.ОбъектРемонта = НайденнаяСтрока.ОбъектРемонта;
		КонецЕсли;
		ДокументОбъект.ВидРемонта = НайденнаяСтрока.ВидРемонтныхРабот;
		
		ТаблицаПлановыхДат = торо_ПланированиеРемонтов.ПолучитьАктуальныеДатыРемонтов(МассивID);
		Если ТаблицаПлановыхДат.Количество() > 0 Тогда
			ДокументОбъект.ДатаНачалаРемонта = ТаблицаПлановыхДат[0].ДатаНачала;
			ДокументОбъект.ДатаОкончанияРемонта = ТаблицаПлановыхДат[0].ДатаОкончания;
		КонецЕсли;
		
	КонецЕсли;

	ДокументОбъект.ДатаНачалаРемонтаСт = ДокументОбъект.ДатаНачалаРемонта;
	ДокументОбъект.ДатаОкончанияРемонтаСт = ДокументОбъект.ДатаОкончанияРемонта;

КонецПроцедуры

Процедура ЗаполнитьАнализКоренныхПричин(Основание, ДокументОбъект) Экспорт
	
	ДокОснование = Неопределено;
	ID = Неопределено;
	
	МассивID = Новый Массив();
	Для каждого Элемент Из Основание Цикл
		ID = Элемент.Ключ;
		ДокОснование = Элемент.Значение;
		МассивID.Добавить(Элемент.Ключ);
	КонецЦикла;

	ДокументОбъект.ДокументОснование = ДокОснование;
	ДокументОбъект.ДатаСобытия =  ДокОснование.ДатаОбнаружения;
	ДокументОбъект.Статус = Перечисления.торо_СтатусыДокументовАнализаПричин.Зарегистрирован;

	СтруктураПоиска = Новый Структура("ID", ID);
	НайденныеСтроки = ДокОснование.СписокДефектов.НайтиСтроки(СтруктураПоиска);
	Для каждого НСтрока Из НайденныеСтроки Цикл
		ДокументОбъект.ИДРемонта = НСтрока.ID;
		ДокументОбъект.ОбъектРемонта = НСтрока.ОбъектРемонта;
		ДокументОбъект.КраткоеОписание = НСтрока.ДефектОписание;
		
		Если ЗначениеЗаполнено(НСтрока.ДефектПричина) Тогда
			НоваяСтрока = ДокументОбъект.КоренныеПричины.Добавить();
			НоваяСтрока.ТекстБлока = НСтрока.ДефектПричина;
			НоваяСтрока.ИДБлока = Новый УникальныйИдентификатор;
			НоваяСтрока.НомерУровня = 1;
			НоваяСтрока.ИДРодителя = "";
		КонецЕсли;
		
	КонецЦикла; 	
	
КонецПроцедуры

Функция ПолучитьТаблицуДокументовОснований(Основание)
	
	ТаблицаДокументовОснований = Новый ТаблицаЗначений;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	КвалификаторыСтроки = Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная);
	
	ТаблицаДокументовОснований.Колонки.Добавить("Ключ", Новый ОписаниеТипов(МассивТипов, , КвалификаторыСтроки));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_ВыявленныеДефекты"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_ЗаявкаНаРемонт"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_ПланГрафикРемонта"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР"));
	МассивТипов.Добавить(Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот"));
	
	ТаблицаДокументовОснований.Колонки.Добавить("Значение", Новый ОписаниеТипов(МассивТипов));

	Для каждого Элемент Из Основание Цикл
		НС = ТаблицаДокументовОснований.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Элемент);
	КонецЦикла;
	
	Возврат ТаблицаДокументовОснований;
	
КонецФункции 

// Процедура для версии платформы 8.3.13+.
Процедура ДополнитьЗапросРемонтнымиРаботамиИзНормативов(Запрос) Экспорт

	Запрос.Текст = Запрос.Текст 
		+ ОбщегоНазначения.РазделительПакетаЗапросов() 
		+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_НормативыРемонта.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта,
		  |	торо_ВерсииТехКарт.ТехКарта.ДатаПринятия КАК Период,
		  |	ВТ_НормативыРемонта.Ссылка КАК Ссылка,
		  |	АВТОНОМЕРЗАПИСИ() КАК ID,
		  |	ВТ_НормативыРемонта.Родитель_ID КАК Родитель_ID,
		  |	ВТ_НормативыРемонта.Количество КАК Количество,
		  |	ВТ_НормативыРемонта.Картинка КАК Картинка
		  |ПОМЕСТИТЬ ВТ_ВерсииТК
		  |ИЗ
		  |	ВТ_НормативыРемонта КАК ВТ_НормативыРемонта
		  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		  |		ПО ВТ_НормативыРемонта.РемонтнаяРабота = торо_ВерсииТехКарт.ИдентификаторТехКарты
		  |ГДЕ
		  |	торо_ВерсииТехКарт.ТехКарта.ДатаПринятия <= ВТ_НормативыРемонта.ДатаНачала
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	Период,
		  |	ТехКарта
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ВерсииТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	МАКСИМУМ(ВТ_ВерсииТК.Период) КАК Период
		  |ПОМЕСТИТЬ ВТ_МаксимумыПериодовТК
		  |ИЗ
		  |	ВТ_ВерсииТК КАК ВТ_ВерсииТК
		  |
		  |СГРУППИРОВАТЬ ПО
		  |	ВТ_ВерсииТК.РемонтыОборудования_ID
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	Период
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ВерсииТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ВерсииТК.ТехКарта КАК ТехКарта,
		  |	ВТ_ВерсииТК.Ссылка КАК Ссылка,
		  |	ВТ_ВерсииТК.Картинка КАК Картинка,
		  |	ВТ_ВерсииТК.Количество КАК Количество
		  |ПОМЕСТИТЬ ВТ_ВерсияТК
		  |ИЗ
		  |	ВТ_ВерсииТК КАК ВТ_ВерсииТК
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МаксимумыПериодовТК КАК ВТ_МаксимумыПериодовТК
		  |		ПО ВТ_ВерсииТК.РемонтыОборудования_ID = ВТ_МаксимумыПериодовТК.РемонтыОборудования_ID
		  |			И ВТ_ВерсииТК.Период = ВТ_МаксимумыПериодовТК.Период
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	ТехКарта,
		  |	РемонтыОборудования_ID
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ВерсияТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	торо_СоставИерархическихТехКартРемонтов.Состав КАК ТехКарта
		  |ПОМЕСТИТЬ ВТ_ПодчиненныеТК
		  |ИЗ
		  |	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СоставИерархическихТехКартРемонтов КАК торо_СоставИерархическихТехКартРемонтов
		  |		ПО ВТ_ВерсияТК.ТехКарта = торо_СоставИерархическихТехКартРемонтов.ТехКарта
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	ТехКарта,
		  |	РемонтыОборудования_ID
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ПодчиненныеТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ПодчиненныеТК.ТехКарта КАК ТехКарта
		  |ПОМЕСТИТЬ ВТ_ВсеТК
		  |ИЗ
		  |	ВТ_ПодчиненныеТК КАК ВТ_ПодчиненныеТК
		  |
		  |ОБЪЕДИНИТЬ
		  |
		  |ВЫБРАТЬ
		  |	ВТ_ВерсияТК.РемонтыОборудования_ID,
		  |	ВТ_ВерсияТК.ТехКарта
		  |ИЗ
		  |	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	ТехКарта
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ПодчиненныеТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	торо_СоставИерархическихТехКартРемонтов.ТехКарта КАК Родитель,
		  |	торо_СоставИерархическихТехКартРемонтов.Состав КАК ТехКарта
		  |ПОМЕСТИТЬ ВТ_Подчиненные
		  |ИЗ
		  |	ВТ_ПодчиненныеТК КАК ВТ_ПодчиненныеТК
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СоставИерархическихТехКартРемонтов КАК торо_СоставИерархическихТехКартРемонтов
		  |		ПО ВТ_ПодчиненныеТК.ТехКарта = торо_СоставИерархическихТехКартРемонтов.Состав
		  |ГДЕ
		  |	(ВТ_ПодчиненныеТК.РемонтыОборудования_ID, торо_СоставИерархическихТехКартРемонтов.ТехКарта) В
		  |			(ВЫБРАТЬ
		  |				ВТ_ВсеТК.РемонтыОборудования_ID,
		  |				ВТ_ВсеТК.ТехКарта
		  |			ИЗ
		  |				ВТ_ВсеТК КАК ВТ_ВсеТК)
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	ТехКарта
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_Подчиненные.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_Подчиненные.ТехКарта КАК ТехКарта,
		  |	КОЛИЧЕСТВО(ВТ_Подчиненные.ТехКарта) КАК Уровень
		  |ПОМЕСТИТЬ ВТ_УровниВложенностиТК
		  |ИЗ
		  |	ВТ_Подчиненные КАК ВТ_Подчиненные
		  |
		  |СГРУППИРОВАТЬ ПО
		  |	ВТ_Подчиненные.РемонтыОборудования_ID,
		  |	ВТ_Подчиненные.ТехКарта
		  |
		  |ОБЪЕДИНИТЬ ВСЕ
		  |
		  |ВЫБРАТЬ
		  |	ВТ_ВерсияТК.РемонтыОборудования_ID,
		  |	ВТ_ВерсияТК.ТехКарта,
		  |	0
		  |ИЗ
		  |	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	ТехКарта
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_Подчиненные.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_Подчиненные.Родитель КАК Родитель,
		  |	ВТ_Подчиненные.ТехКарта КАК ТехКарта,
		  |	ВТ_УровниВложенностиТК.Уровень - ВТ_УровниВложенностиТКРодители.Уровень КАК Расстояние
		  |ПОМЕСТИТЬ ВТ_ИерархияСРасстоянием
		  |ИЗ
		  |	ВТ_Подчиненные КАК ВТ_Подчиненные
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_УровниВложенностиТК КАК ВТ_УровниВложенностиТК
		  |		ПО ВТ_Подчиненные.РемонтыОборудования_ID = ВТ_УровниВложенностиТК.РемонтыОборудования_ID
		  |			И ВТ_Подчиненные.ТехКарта = ВТ_УровниВложенностиТК.ТехКарта
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_УровниВложенностиТК КАК ВТ_УровниВложенностиТКРодители
		  |		ПО ВТ_Подчиненные.РемонтыОборудования_ID = ВТ_УровниВложенностиТКРодители.РемонтыОборудования_ID
		  |			И ВТ_Подчиненные.Родитель = ВТ_УровниВложенностиТКРодители.ТехКарта
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	ТехКарта,
		  |	Расстояние
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ИерархияСРасстоянием.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ИерархияСРасстоянием.ТехКарта КАК ТехКарта,
		  |	МИНИМУМ(ВТ_ИерархияСРасстоянием.Расстояние) КАК Расстояние
		  |ПОМЕСТИТЬ ВТ_МинимальныеРасстояния
		  |ИЗ
		  |	ВТ_ИерархияСРасстоянием КАК ВТ_ИерархияСРасстоянием
		  |
		  |СГРУППИРОВАТЬ ПО
		  |	ВТ_ИерархияСРасстоянием.РемонтыОборудования_ID,
		  |	ВТ_ИерархияСРасстоянием.ТехКарта
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	ТехКарта,
		  |	Расстояние
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ВерсияТК.Ссылка КАК Ссылка,
		  |	ВТ_ИерархияСРасстоянием.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ИерархияСРасстоянием.Родитель КАК Родитель,
		  |	ВТ_ИерархияСРасстоянием.ТехКарта КАК ТехКарта,
		  |	0 КАК Картинка
		  |ПОМЕСТИТЬ ВТ_ИерархияТК
		  |ИЗ
		  |	ВТ_ИерархияСРасстоянием КАК ВТ_ИерархияСРасстоянием
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МинимальныеРасстояния КАК ВТ_МинимальныеРасстояния
		  |		ПО ВТ_ИерархияСРасстоянием.РемонтыОборудования_ID = ВТ_МинимальныеРасстояния.РемонтыОборудования_ID
		  |			И ВТ_ИерархияСРасстоянием.ТехКарта = ВТ_МинимальныеРасстояния.ТехКарта
		  |			И ВТ_ИерархияСРасстоянием.Расстояние = ВТ_МинимальныеРасстояния.Расстояние
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВерсияТК КАК ВТ_ВерсияТК
		  |		ПО ВТ_ИерархияСРасстоянием.РемонтыОборудования_ID = ВТ_ВерсияТК.РемонтыОборудования_ID
		  |
		  |ОБЪЕДИНИТЬ ВСЕ
		  |
		  |ВЫБРАТЬ
		  |	ВТ_ВерсияТК.Ссылка,
		  |	ВТ_ВерсияТК.РемонтыОборудования_ID,
		  |	ЗНАЧЕНИЕ(Справочник.торо_ТехКарты.ПустаяСсылка),
		  |	ВТ_ВерсияТК.ТехКарта,
		  |	0
		  |ИЗ
		  |	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	Родитель
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		  |	ВТ_ИерархияТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ИерархияТК.Ссылка КАК Ссылка,
		  |	ВТ_ИерархияТК.Картинка КАК Картинка,
		  |	ВТ_ИерархияТК.Родитель КАК РодительТК,
		  |	ВТ_ИерархияТК.ТехКарта КАК РемонтнаяРаботаТК,
		  |	торо_ТехКартыСписокОпераций.Операция КАК РемонтнаяРабота,
		  |	торо_ТехКартыСписокОпераций.НомерСтроки КАК НомерСтроки,
		  |	торо_ТехКартыСписокОпераций.Количество КАК Количество,
		  |	торо_ТехКартыСписокОпераций.ID КАК IDСтрока,
		  |	торо_ТехКартыСписокОпераций.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		  |ПОМЕСТИТЬ ВТ_БезИерархии
		  |ИЗ
		  |	ВТ_ИерархияТК КАК ВТ_ИерархияТК
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		  |		ПО ВТ_ИерархияТК.ТехКарта = торо_ВерсииТехКарт.ТехКарта
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
		  |		ПО ВТ_ИерархияТК.Родитель = торо_ТехКартыСписокОпераций.Ссылка
		  |			И (торо_ВерсииТехКарт.ИдентификаторТехКарты = торо_ТехКартыСписокОпераций.Операция)
		  |
		  |ОБЪЕДИНИТЬ ВСЕ
		  |
		  |ВЫБРАТЬ
		  |	ВТ_ВерсияТК.РемонтыОборудования_ID,
		  |	ВТ_ВерсияТК.Ссылка,
		  |	ВТ_ВерсияТК.Картинка,
		  |	ЗНАЧЕНИЕ(Справочник.торо_ТехКарты.ПустаяСсылка),
		  |	ВТ_ВерсияТК.ТехКарта,
		  |	торо_ВерсииТехКарт.ИдентификаторТехКарты,
		  |	0,
		  |	ВТ_ВерсияТК.Количество,
		  |	"""",
		  |	""""
		  |ИЗ
		  |	ВТ_ВерсияТК КАК ВТ_ВерсияТК
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
		  |		ПО ВТ_ВерсияТК.ТехКарта = торо_ВерсииТехКарт.ТехКарта
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	IDСтрока,
		  |	РемонтнаяРаботаТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		  |	АВТОНОМЕРЗАПИСИ() КАК ID,
		  |	ВТ_БезИерархии.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_БезИерархии.IDСтрока КАК IDСтрока,
		  |	ВТ_БезИерархии.РемонтнаяРаботаТК КАК РемонтнаяРабота
		  |ПОМЕСТИТЬ ВТ_ВсеТКСID
		  |ИЗ
		  |	ВТ_БезИерархии КАК ВТ_БезИерархии
		  |
		  |ИНДЕКСИРОВАТЬ ПО
		  |	РемонтыОборудования_ID,
		  |	IDСтрока,
		  |	РемонтнаяРабота
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		  |	ВТ_БезИерархии.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_БезИерархии.Ссылка КАК Ссылка,
		  |	ВТ_ВсеТКСID.ID КАК ID,
		  |	ЕСТЬNULL(ВТ_ВсеТКСIDРодители.ID, Неопределено) КАК Родитель_ID,
		  |	ВТ_БезИерархии.Картинка КАК Картинка,
		  |	ВТ_БезИерархии.РемонтнаяРаботаТК КАК ТехКарта,
		  |	ВТ_БезИерархии.РемонтнаяРабота КАК РемонтнаяРабота,
		  |	ВТ_БезИерархии.НомерСтроки КАК НомерСтроки,
		  |	ВТ_БезИерархии.Количество КАК Количество,
		  |	ВТ_БезИерархии.IDСтрока КАК IDСтрока,
		  |	ВТ_БезИерархии.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		  |ПОМЕСТИТЬ ВТ_ПолнаяИерархияТК
		  |ИЗ
		  |	ВТ_БезИерархии КАК ВТ_БезИерархии
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеТКСID КАК ВТ_ВсеТКСID
		  |		ПО ВТ_БезИерархии.РемонтыОборудования_ID = ВТ_ВсеТКСID.РемонтыОборудования_ID
		  |			И ВТ_БезИерархии.IDСтрока = ВТ_ВсеТКСID.IDСтрока
		  |			И ВТ_БезИерархии.РемонтнаяРаботаТК = ВТ_ВсеТКСID.РемонтнаяРабота
		  |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеТКСID КАК ВТ_ВсеТКСIDРодители
		  |		ПО ВТ_БезИерархии.РемонтыОборудования_ID = ВТ_ВсеТКСIDРодители.РемонтыОборудования_ID
		  |			И ВТ_БезИерархии.РодительТК = ВТ_ВсеТКСIDРодители.РемонтнаяРабота		  
		  |ИНДЕКСИРОВАТЬ ПО
		  |	ТехКарта
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		  |	ВТ_ПолнаяИерархияТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ПолнаяИерархияТК.Ссылка КАК Ссылка,
		  |	0 КАК ID,
		  |	ВТ_ПолнаяИерархияТК.ID КАК Родитель_ID,
		  |	1 КАК Картинка,
		  |	торо_ТехКартыСписокОпераций.Операция КАК РемонтнаяРабота,
		  |	торо_ТехКартыСписокОпераций.Количество КАК Количество,
		  |	торо_ТехКартыСписокОпераций.НомерСтроки КАК НомерСтроки,
		  |	торо_ТехКартыСписокОпераций.ID КАК IDСтрока,
		  |	торо_ТехКартыСписокОпераций.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		  |ПОМЕСТИТЬ ВТ_ТО
		  |ИЗ
		  |	ВТ_ПолнаяИерархияТК КАК ВТ_ПолнаяИерархияТК
		  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
		  |		ПО ВТ_ПолнаяИерархияТК.ТехКарта = торо_ТехКартыСписокОпераций.Ссылка
		  |ГДЕ
		  |	торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ТехнологическиеОперации
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВТ_ПолнаяИерархияТК.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_ПолнаяИерархияТК.Ссылка КАК Ссылка,
		  |	МАКСИМУМ(ВТ_ПолнаяИерархияТК.ID) КАК IDЧисло,
		  |	ВТ_ПолнаяИерархияТК.Родитель_ID КАК Родитель_IDЧисло,
		  |	ВТ_ПолнаяИерархияТК.Картинка КАК Картинка,
		  |	ВТ_ПолнаяИерархияТК.РемонтнаяРабота КАК РемонтнаяРабота,
		  |	ВТ_ПолнаяИерархияТК.Количество КАК Количество,
		  |	МАКСИМУМ(ВТ_ПолнаяИерархияТК.НомерСтроки) КАК НомерСтроки,
		  |	ВТ_ПолнаяИерархияТК.IDСтрока КАК IDСтрока,
		  |	ВТ_ПолнаяИерархияТК.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		  |ПОМЕСТИТЬ ВТ_БезСортировки
		  |ИЗ
		  |	ВТ_ПолнаяИерархияТК КАК ВТ_ПолнаяИерархияТК
		  |
		  |СГРУППИРОВАТЬ ПО
		  |	ВТ_ПолнаяИерархияТК.РемонтыОборудования_ID,
		  |	ВТ_ПолнаяИерархияТК.Ссылка,
		  |	ВТ_ПолнаяИерархияТК.Картинка,
		  |	ВТ_ПолнаяИерархияТК.РемонтнаяРабота,
		  |	ВТ_ПолнаяИерархияТК.Количество,
		  |	ВТ_ПолнаяИерархияТК.IDСтрока,
		  |	ВТ_ПолнаяИерархияТК.Родитель_ID,
		  |	ВТ_ПолнаяИерархияТК.ID_ПараллельнойОперации
		  |
		  |ОБЪЕДИНИТЬ ВСЕ
		  |
		  |ВЫБРАТЬ
		  |	ВТ_ТО.РемонтыОборудования_ID,
		  |	ВТ_ТО.Ссылка,
		  |	ВТ_ТО.ID,
		  |	ВТ_ТО.Родитель_ID,
		  |	ВТ_ТО.Картинка,
		  |	ВТ_ТО.РемонтнаяРабота,
		  |	ВТ_ТО.Количество,
		  |	ВТ_ТО.НомерСтроки,
		  |	ВТ_ТО.IDСтрока,
		  |	ВТ_ТО.ID_ПараллельнойОперации
		  |ИЗ
		  |	ВТ_ТО КАК ВТ_ТО
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		  |	ВТ_БезСортировки.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
		  |	ВТ_БезСортировки.Ссылка КАК Ссылка,
		  |	ВТ_БезСортировки.IDЧисло КАК IDЧисло,
		  |	ВТ_БезСортировки.Родитель_IDЧисло КАК Родитель_IDЧисло,
		  |	ВТ_БезСортировки.Картинка КАК Картинка,
		  |	ВТ_БезСортировки.РемонтнаяРабота КАК РемонтнаяРабота,
		  |	ВТ_БезСортировки.Количество КАК Количество,
		  |	ВТ_БезСортировки.НомерСтроки КАК НомерСтроки,
		  |	ВТ_БезСортировки.НомерСтроки КАК НомерСтрокиВТК,
		  |	ВТ_БезСортировки.IDСтрока КАК IDСтрока,
		  |	ВТ_БезСортировки.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
		  |ИЗ
		  |	ВТ_БезСортировки КАК ВТ_БезСортировки
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	НомерСтроки
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ВерсииТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_МаксимумыПериодовТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ВерсияТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ПодчиненныеТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ВсеТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_Подчиненные
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_УровниВложенностиТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ИерархияСРасстоянием
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_МинимальныеРасстояния
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ИерархияТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_БезИерархии
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ВсеТКСID
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ПолнаяИерархияТК
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_ТО
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_БезСортировки
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ ВТ_НормативыРемонта
		  |";

КонецПроцедуры

Функция ПолучитьВсеID(Основание)
	ВсеID = Новый Соответствие;
	Для каждого Документ Из Основание Цикл
		ИмяТЧРемонтов = торо_Ремонты.ПолучитьИмяТЧРемонтов(Документ.Значение.Ссылка);
		Для каждого Строка Из Документ.Значение[ИмяТЧРемонтов] Цикл
			ВсеID.Вставить(Строка.ID, Документ.Значение);
		КонецЦикла; 
	КонецЦикла;
	Возврат ВсеID;
	
КонецФункции

Функция ПолучитьIDТК(ТаблицаБезID)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТаблицаБезID.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ТаблицаБезID.Ссылка КАК Ссылка,
	               |	ТаблицаБезID.IDЧисло КАК IDЧисло,
	               |	ТаблицаБезID.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ТаблицаБезID.Картинка КАК Картинка,
	               |	ТаблицаБезID.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ТаблицаБезID.Количество КАК Количество,
	               |	ЕСТЬNULL(ТаблицаБезID.IDСтрока, """") КАК IDСтрока,
	               |	ТаблицаБезID.НомерСтроки КАК НомерСтроки,
	               |	"""" КАК ID,
				   |	ТаблицаБезID.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ПОМЕСТИТЬ ВТ_ТаблицаБезID
	               |ИЗ
	               |	&ТаблицаБезID КАК ТаблицаБезID
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	РемонтыОборудования_ID,
	               |	РемонтнаяРабота
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ВТ_ТаблицаБезID.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_ТаблицаБезID.Ссылка КАК Ссылка,
	               |	ВТ_ТаблицаБезID.IDЧисло КАК IDЧисло,
	               |	ВТ_ТаблицаБезID.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_ТаблицаБезID.Картинка КАК Картинка,
	               |	ВТ_ТаблицаБезID.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_ТаблицаБезID.Количество КАК Количество,
	               |	ВТ_ТаблицаБезID.IDСтрока КАК IDСтрока,
	               |	ВТ_ТаблицаБезID.НомерСтроки КАК НомерСтроки,
	               |	ВЫБОР
	               |		КОГДА НЕ торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.ID ЕСТЬ NULL
	               |			ТОГДА торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.ID
	               |		КОГДА НЕ торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.ID ЕСТЬ NULL
	               |			ТОГДА торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.ID
	               |		КОГДА НЕ торо_ЗаявкаНаРемонтРемонтныеРаботы.ID ЕСТЬ NULL
	               |			ТОГДА торо_ЗаявкаНаРемонтРемонтныеРаботы.ID
	               |		КОГДА НЕ торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID ЕСТЬ NULL
	               |			ТОГДА торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.ID
	               |		КОГДА НЕ торо_НарядНаРегламентноеМероприятиеРемонтныеРаботы.ID ЕСТЬ NULL
	               |			ТОГДА торо_НарядНаРегламентноеМероприятиеРемонтныеРаботы.ID
	               |		ИНАЧЕ ВТ_ТаблицаБезID.ID
	               |	КОНЕЦ КАК ID,
				   |	ВТ_ТаблицаБезID.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ПОМЕСТИТЬ ВТ_ТаблицаСЛишнимиID
	               |ИЗ
	               |	ВТ_ТаблицаБезID КАК ВТ_ТаблицаБезID
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК торо_АктОВыполненииЭтапаРаботРемонтныеРаботы
	               |		ПО ВТ_ТаблицаБезID.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтыОборудования_ID
	               |			И ВТ_ТаблицаБезID.РемонтнаяРабота = торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтнаяРабота
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииРегламентногоМероприятия.РемонтныеРаботы КАК торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы
	               |		ПО ВТ_ТаблицаБезID.РемонтыОборудования_ID = торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтыОборудования_ID
	               |			И ВТ_ТаблицаБезID.РемонтнаяРабота = торо_АктОВыполненииРегламентногоМероприятияРемонтныеРаботы.РемонтнаяРабота
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
	               |		ПО ВТ_ТаблицаБезID.РемонтыОборудования_ID = торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID
	               |			И ВТ_ТаблицаБезID.РемонтнаяРабота = торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы
	               |		ПО ВТ_ТаблицаБезID.РемонтыОборудования_ID = торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтыОборудования_ID
	               |			И ВТ_ТаблицаБезID.РемонтнаяРабота = торо_НарядНаВыполнениеРемонтныхРаботРемонтныеРаботы.РемонтнаяРабота
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_НарядНаРегламентноеМероприятие.РемонтныеРаботы КАК торо_НарядНаРегламентноеМероприятиеРемонтныеРаботы
	               |		ПО ВТ_ТаблицаБезID.РемонтыОборудования_ID = торо_НарядНаРегламентноеМероприятиеРемонтныеРаботы.РемонтыОборудования_ID
	               |			И ВТ_ТаблицаБезID.РемонтнаяРабота = торо_НарядНаРегламентноеМероприятиеРемонтныеРаботы.РемонтнаяРабота
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	РемонтыОборудования_ID,
	               |	Ссылка,
	               |	IDЧисло,
	               |	РемонтнаяРабота,
	               |	Количество,
	               |	IDСтрока
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ТаблицаСЛишнимиID.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_ТаблицаСЛишнимиID.Ссылка КАК Ссылка,
	               |	ВТ_ТаблицаСЛишнимиID.IDЧисло КАК IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Картинка КАК Картинка,
	               |	ВТ_ТаблицаСЛишнимиID.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_ТаблицаСЛишнимиID.Количество КАК Количество,
	               |	ВТ_ТаблицаСЛишнимиID.IDСтрока КАК IDСтрока,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ТаблицаСЛишнимиID.ID) КАК КоличествоID,
	               |	ВТ_ТаблицаСЛишнимиID.НомерСтроки КАК НомерСтроки
	               |ПОМЕСТИТЬ ВТ_КоличествоПрисоединенныхТО
	               |ИЗ
	               |	ВТ_ТаблицаСЛишнимиID КАК ВТ_ТаблицаСЛишнимиID
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ТаблицаСЛишнимиID.РемонтыОборудования_ID,
	               |	ВТ_ТаблицаСЛишнимиID.Ссылка,
	               |	ВТ_ТаблицаСЛишнимиID.IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Родитель_IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Картинка,
	               |	ВТ_ТаблицаСЛишнимиID.РемонтнаяРабота,
	               |	ВТ_ТаблицаСЛишнимиID.Количество,
	               |	ВТ_ТаблицаСЛишнимиID.IDСтрока,
	               |	ВТ_ТаблицаСЛишнимиID.НомерСтроки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	РемонтыОборудования_ID,
	               |	Ссылка,
	               |	IDЧисло,
	               |	РемонтнаяРабота,
	               |	Количество,
	               |	IDСтрока
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ТаблицаСЛишнимиID.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_ТаблицаСЛишнимиID.Ссылка КАК Ссылка,
	               |	ВТ_ТаблицаСЛишнимиID.IDЧисло КАК IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Картинка КАК Картинка,
	               |	ВТ_ТаблицаСЛишнимиID.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_ТаблицаСЛишнимиID.Количество КАК Количество,
	               |	ВТ_ТаблицаСЛишнимиID.IDСтрока КАК IDСтрока,
	               |	ВТ_ТаблицаСЛишнимиID.ID КАК ID,
	               |	ВТ_ТаблицаСЛишнимиID.НомерСтроки КАК НомерСтроки,
				   |	ВТ_ТаблицаСЛишнимиID.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ПОМЕСТИТЬ ВТ_ЕдиничныеТО
	               |ИЗ
	               |	ВТ_ТаблицаСЛишнимиID КАК ВТ_ТаблицаСЛишнимиID
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КоличествоПрисоединенныхТО КАК ВТ_КоличествоПрисоединенныхТО
	               |		ПО ВТ_ТаблицаСЛишнимиID.РемонтыОборудования_ID = ВТ_КоличествоПрисоединенныхТО.РемонтыОборудования_ID
	               |			И ВТ_ТаблицаСЛишнимиID.Ссылка = ВТ_КоличествоПрисоединенныхТО.Ссылка
	               |			И ВТ_ТаблицаСЛишнимиID.IDЧисло = ВТ_КоличествоПрисоединенныхТО.IDЧисло
	               |			И ВТ_ТаблицаСЛишнимиID.Родитель_IDЧисло = ВТ_КоличествоПрисоединенныхТО.Родитель_IDЧисло
	               |			И ВТ_ТаблицаСЛишнимиID.РемонтнаяРабота = ВТ_КоличествоПрисоединенныхТО.РемонтнаяРабота
	               |			И ВТ_ТаблицаСЛишнимиID.Количество = ВТ_КоличествоПрисоединенныхТО.Количество
	               |			И ВТ_ТаблицаСЛишнимиID.IDСтрока = ВТ_КоличествоПрисоединенныхТО.IDСтрока
	               |ГДЕ
	               |	ВТ_КоличествоПрисоединенныхТО.КоличествоID = 1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ТаблицаСЛишнимиID.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_ТаблицаСЛишнимиID.Ссылка КАК Ссылка,
	               |	ВТ_ТаблицаСЛишнимиID.IDЧисло КАК IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_ТаблицаСЛишнимиID.Картинка КАК Картинка,
	               |	ВТ_ТаблицаСЛишнимиID.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_ТаблицаСЛишнимиID.Количество КАК Количество,
	               |	ВТ_ТаблицаСЛишнимиID.IDСтрока КАК IDСтрока,
	               |	ВТ_ТаблицаСЛишнимиID.ID КАК ID,
	               |	ВТ_ТаблицаСЛишнимиID.НомерСтроки КАК НомерСтроки,
				   |	ВТ_ТаблицаСЛишнимиID.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ПОМЕСТИТЬ ВТ_БезСортировки
	               |ИЗ
	               |	ВТ_ТаблицаСЛишнимиID КАК ВТ_ТаблицаСЛишнимиID
	               |ГДЕ
	               |	(ВТ_ТаблицаСЛишнимиID.IDСтрока = ВТ_ТаблицаСЛишнимиID.ID
	               |			ИЛИ ВТ_ТаблицаСЛишнимиID.IDСтрока = """"
	               |			ИЛИ ВТ_ТаблицаСЛишнимиID.ID = """")
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ЕдиничныеТО.РемонтыОборудования_ID,
	               |	ВТ_ЕдиничныеТО.Ссылка,
	               |	ВТ_ЕдиничныеТО.IDЧисло,
	               |	ВТ_ЕдиничныеТО.Родитель_IDЧисло,
	               |	ВТ_ЕдиничныеТО.Картинка,
	               |	ВТ_ЕдиничныеТО.РемонтнаяРабота,
	               |	ВТ_ЕдиничныеТО.Количество,
	               |	ВТ_ЕдиничныеТО.IDСтрока,
	               |	ВТ_ЕдиничныеТО.ID,
	               |	ВТ_ЕдиничныеТО.НомерСтроки,
				   |	ВТ_ЕдиничныеТО.ID_ПараллельнойОперации
	               |ИЗ
	               |	ВТ_ЕдиничныеТО КАК ВТ_ЕдиничныеТО
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_БезСортировки.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_БезСортировки.Ссылка КАК Ссылка,
	               |	ВТ_БезСортировки.IDЧисло КАК IDЧисло,
	               |	ВТ_БезСортировки.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_БезСортировки.Картинка КАК Картинка,
	               |	ВТ_БезСортировки.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_БезСортировки.Количество КАК Количество,
	               |	ВТ_БезСортировки.IDСтрока КАК IDСтрока,
	               |	ВТ_БезСортировки.ID КАК ID,
	               |	ВТ_БезСортировки.НомерСтроки КАК НомерСтроки
	               |ПОМЕСТИТЬ ВТ_IDТКПлановыхЗатрат
	               |ИЗ
	               |	ВТ_БезСортировки КАК ВТ_БезСортировки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПлановыеЗатраты.ТехКарты КАК торо_ПлановыеЗатратыТехКарты
	               |		ПО ВТ_БезСортировки.РемонтнаяРабота = торо_ПлановыеЗатратыТехКарты.ТехКарта
	               |			И ВТ_БезСортировки.ID = торо_ПлановыеЗатратыТехКарты.ТехКарта_ID
	               |			И ВТ_БезСортировки.РемонтыОборудования_ID = торо_ПлановыеЗатратыТехКарты.Ссылка.РемонтыОборудования_ID
	               |;
	               |
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_БезСортировки.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_БезСортировки.Ссылка КАК Ссылка,
	               |	ВТ_БезСортировки.IDЧисло КАК IDЧисло,
	               |	ВТ_БезСортировки.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_БезСортировки.Картинка КАК Картинка,
	               |	ВТ_БезСортировки.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_БезСортировки.Количество КАК Количество,
	               |	ВТ_БезСортировки.IDСтрока КАК IDСтрока,
	               |	ВТ_БезСортировки.ID КАК ID,
	               |	ВТ_БезСортировки.НомерСтроки КАК НомерСтроки,
				   |	ВТ_БезСортировки.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ПОМЕСТИТЬ ВТ_ОперацииИзПлановыхЗатрат
	               |ИЗ
	               |	ВТ_БезСортировки КАК ВТ_БезСортировки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_IDТКПлановыхЗатрат КАК ВТ_IDТКПлановыхЗатрат
	               |		ПО ВТ_БезСортировки.РемонтыОборудования_ID = ВТ_IDТКПлановыхЗатрат.РемонтыОборудования_ID
	               |			И ВТ_БезСортировки.РемонтнаяРабота = ВТ_IDТКПлановыхЗатрат.РемонтнаяРабота
	               |			И ВТ_БезСортировки.ID = ВТ_IDТКПлановыхЗатрат.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_БезСортировки.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_БезСортировки.Ссылка КАК Ссылка,
	               |	ВТ_БезСортировки.IDЧисло КАК IDЧисло,
	               |	ВТ_БезСортировки.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_БезСортировки.Картинка КАК Картинка,
	               |	ВТ_БезСортировки.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_БезСортировки.Количество КАК Количество,
	               |	ВТ_БезСортировки.IDСтрока КАК IDСтрока,
	               |	ВТ_БезСортировки.ID КАК ID,
	               |	ВТ_БезСортировки.НомерСтроки КАК НомерСтроки,
				   |	ВТ_БезСортировки.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ПОМЕСТИТЬ ВТ_ОперацииБезПлановыхЗатрат
	               |ИЗ
	               |	ВТ_БезСортировки КАК ВТ_БезСортировки
	               |ГДЕ
	               |	(НЕ ВТ_БезСортировки.РемонтыОборудования_ID В
	               |					(ВЫБРАТЬ
	               |						ВТ_IDТКПлановыхЗатрат.РемонтыОборудования_ID КАК РемонтыОборудования_ID
	               |					ИЗ
	               |						ВТ_IDТКПлановыхЗатрат КАК ВТ_IDТКПлановыхЗатрат)
	               |			ИЛИ ТИПЗНАЧЕНИЯ(ВТ_БезСортировки.РемонтнаяРабота) = ТИП(Справочник.торо_ТехнологическиеОперации))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОперацииИзПлановыхЗатрат.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	ВТ_ОперацииИзПлановыхЗатрат.Ссылка КАК Ссылка,
	               |	ВТ_ОперацииИзПлановыхЗатрат.IDЧисло КАК IDЧисло,
	               |	ВТ_ОперацииИзПлановыхЗатрат.Родитель_IDЧисло КАК Родитель_IDЧисло,
	               |	ВТ_ОперацииИзПлановыхЗатрат.Картинка КАК Картинка,
	               |	ВТ_ОперацииИзПлановыхЗатрат.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ВТ_ОперацииИзПлановыхЗатрат.Количество КАК Количество,
	               |	ВТ_ОперацииИзПлановыхЗатрат.IDСтрока КАК IDСтрока,
	               |	ВТ_ОперацииИзПлановыхЗатрат.ID КАК ID,
	               |	ВТ_ОперацииИзПлановыхЗатрат.НомерСтроки КАК НомерСтроки,
				   |	ВТ_ОперацииИзПлановыхЗатрат.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	               |ИЗ
	               |	ВТ_ОперацииИзПлановыхЗатрат КАК ВТ_ОперацииИзПлановыхЗатрат
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ОперацииБезПлановыхЗатрат.РемонтыОборудования_ID,
	               |	ВТ_ОперацииБезПлановыхЗатрат.Ссылка,
	               |	ВТ_ОперацииБезПлановыхЗатрат.IDЧисло,
	               |	ВТ_ОперацииБезПлановыхЗатрат.Родитель_IDЧисло,
	               |	ВТ_ОперацииБезПлановыхЗатрат.Картинка,
	               |	ВТ_ОперацииБезПлановыхЗатрат.РемонтнаяРабота,
	               |	ВТ_ОперацииБезПлановыхЗатрат.Количество,
	               |	ВТ_ОперацииБезПлановыхЗатрат.IDСтрока,
	               |	ВТ_ОперацииБезПлановыхЗатрат.ID,
	               |	ВТ_ОперацииБезПлановыхЗатрат.НомерСтроки,
				   |	ВТ_ОперацииБезПлановыхЗатрат.ID_ПараллельнойОперации
	               |ИЗ
	               |	ВТ_ОперацииБезПлановыхЗатрат КАК ВТ_ОперацииБезПлановыхЗатрат
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки,
	               |	IDЧисло УБЫВ";
		
	Запрос.УстановитьПараметр("ТаблицаБезID", ТаблицаБезID);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
КонецФункции 

Функция ВОснованииЕстьПредписания(Основание)
	
	ТипДокумента = ТипЗнч(Основание);
	
	Если ТипДокумента = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
			
		ЕстьВкладкаПредписаний = Истина;
	Иначе
		ЕстьВкладкаПредписаний = Ложь;
	КонецЕсли;
	
	Возврат ЕстьВкладкаПредписаний;
 
КонецФункции

#Область ЗаполнениеЗатратПоНормам

// Возвращает массив структур с полями:
// -РемонтнаяРабота - ссылка на тех. операцию.
// -РемонтыОборудования_ID - ID ремонта.
// -ID - ID строки в дереве тех. операций.
// -СтруктураТаблиц - структура с таблицами значений МатериальныеЗатраты, ТрудовыеЗатраты, ИнструментыИТехника,
//  соответствующими одной тех. операции.
Функция ПолучитьНормыЗатрат(ТаблицаОпераций, ТаблицаРемонтов, Основания, Знач СтруктураТаблиц = Неопределено) Экспорт
	
	МассивРезультат = Новый Массив;
	
	ТаблицаОперацийТЗ = ТаблицаОпераций;
	Если ТипЗнч(ТаблицаОпераций) <> Тип("ТаблицаЗначений") Тогда
		ТаблицаОперацийТЗ = ТаблицаОпераций.Выгрузить();
	КонецЕсли;
	
	ТаблицаОперацийТЗ.Индексы.Добавить("РемонтыОборудования_ID, Родитель_ID");
	
	Для каждого ТекущийРемонт Из ТаблицаРемонтов Цикл
		ДокОснование = Основания.Получить(ТекущийРемонт.ID);
		Если ДокОснование = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
				
		ДеревоОпераций = Новый ДеревоЗначений;
		ДеревоОпераций.Колонки.Добавить("ID");
		ДеревоОпераций.Колонки.Добавить("РемонтнаяРабота");
		ДеревоОпераций.Колонки.Добавить("Родитель_ID");
		ДеревоОпераций.Колонки.Добавить("РемонтыОборудования_ID");
		ДеревоОпераций.Колонки.Добавить("Количество");
		ДеревоОпераций.Колонки.Добавить("НомерОперацииПоПорядку");
		торо_Ремонты.ПостроитьДеревоОпераций(ДеревоОпераций, ТаблицаОперацийТЗ, ТекущийРемонт.ID);
		
		// Заполнение номеров операций внутри ТК, чтобы брать затраты верно,
		// если в ТК добавлено несколько одинаковых ТО с разными затрататми.
		ПроставитьНомераОпераций(ДеревоОпераций);
		
		ДатаВерсииТехКарт = ТекущийРемонт.ДатаНачала;
		Если НЕ ЗначениеЗаполнено(ДатаВерсииТехКарт) И ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
			ДатаВерсииТехКарт = ДокОснование.ДатаОбнаружения;
		КонецЕсли;
		
		МассивДанныхЗаполнения = торо_Ремонты.ПолучитьНормыЗатратИзВетвиДереваОпераций(ДеревоОпераций, ТекущийРемонт.ДатаНачала, ТекущийРемонт.ДатаОкончания, ДатаВерсииТехКарт, СтруктураТаблиц);
		Для каждого СтруктураДанныхЗаполнения Из МассивДанныхЗаполнения Цикл
			СтруктураДанныхЗаполнения.Вставить("ДокументОснование", ДокОснование);
			МассивРезультат.Добавить(СтруктураДанныхЗаполнения);
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивРезультат;
	
КонецФункции

Процедура ПроставитьНомераОпераций (ДеревоОпераций)	Экспорт
	Счетчик = 1;
	Для каждого Строка Из ДеревоОпераций.Строки Цикл
		Строка.НомерОперацииПоПорядку = Счетчик;
		Счетчик = Счетчик + 1;	
		Если Строка.Строки.Количество()>0 Тогда
			ПроставитьНомераОпераций(Строка);
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры
 
Функция ВернутьIDНеПроанализированногоРемонта(Основание) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	торо_ВыявленныеДефектыСписокДефектов.ID КАК ID
		|ИЗ
		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АнализКоренныхПричин КАК торо_АнализКоренныхПричин
		|		ПО торо_ВыявленныеДефектыСписокДефектов.ID = торо_АнализКоренныхПричин.ИДРемонта
		|ГДЕ
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
		|	И (торо_АнализКоренныхПричин.Ссылка ЕСТЬ NULL
		|			ИЛИ торо_АнализКоренныхПричин.ПометкаУдаления = ИСТИНА)";
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Результат = Запрос.Выполнить().Выгрузить();
	
	МассивНеотмененных = Результат.ВыгрузитьКолонку("ID");
	Если МассивНеотмененных.Количество() = 1 Тогда
		Возврат МассивНеотмененных[0];
	КонецЕсли; 	
	
	Возврат "";
КонецФункции

Функция ВернутьIDНеобработанногоРемонта(Основание) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_АнализКоренныхПричинКорректирующиеМероприятия.Ссылка КАК Ссылка,
		|	торо_АнализКоренныхПричинКорректирующиеМероприятия.ИДМероприятия КАК ИДМероприятия
		|ПОМЕСТИТЬ ВТ_МероприятияБезЗаданий
		|ИЗ
		|	Документ.торо_АнализКоренныхПричин.КорректирующиеМероприятия КАК торо_АнализКоренныхПричинКорректирующиеМероприятия
		|ГДЕ
		|	торо_АнализКоренныхПричинКорректирующиеМероприятия.Ссылка = &Ссылка
		|	И торо_АнализКоренныхПричинКорректирующиеМероприятия.Задание = &ПустаяСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МероприятияБезЗаданий.Ссылка КАК Ссылка,
		|	ВТ_МероприятияБезЗаданий.ИДМероприятия КАК ID,
		|	торо_ВнешниеОснованияДляРабот.Регистратор КАК Регистратор
		|ИЗ
		|	ВТ_МероприятияБезЗаданий КАК ВТ_МероприятияБезЗаданий
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВнешниеОснованияДляРабот КАК торо_ВнешниеОснованияДляРабот
		|		ПО ВТ_МероприятияБезЗаданий.ИДМероприятия = торо_ВнешниеОснованияДляРабот.ID
		|ГДЕ
		|	торо_ВнешниеОснованияДляРабот.Регистратор ЕСТЬ NULL";
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.УстановитьПараметр("ПустаяСсылка", БизнесПроцессы.Задание.ПустаяСсылка());
	Результат = Запрос.Выполнить().Выгрузить();
	
	МассивНеобработанных = Результат.ВыгрузитьКолонку("ID");
	Если МассивНеобработанных.Количество() = 1 Тогда
		Возврат МассивНеобработанных[0];
	КонецЕсли; 	
	
	Возврат "";
КонецФункции
 
Функция ПолучитьТаблицуИнформацииОЦепочкеРемонтов(СоответствиеОснований) Экспорт
	
	// Для заполнения затрат по основаниям или нормативам нас инетерсует: 
	// - есть ли в цепочке документов наряд (для заполнения исполнителей);
	// - естьли в цепочке документов заявка (для заполнения исполнителей и материальных затрат).
	// С чего цепочка началась - по большому счету не важно. Если нет ни заявки, ни наряда, 
	// то должно выполниться заполнения по нормам. Поэтому рассматриваем только описанные случаи.
	
	МассивТиповДокументовИсточников = Новый Массив;
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ВыявленныеДефекты"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ПланГрафикРемонта"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ЗаявкаНаРемонт"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие"));
	
	ТаблицаРемонтов = Новый ТаблицаЗначений();
	ТаблицаРемонтов.Колонки.Добавить("ID", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(36)));
	ТаблицаРемонтов.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТиповДокументовИсточников));
	
	Для каждого КлючИЗначение из СоответствиеОснований Цикл
		НоваяСтрока = ТаблицаРемонтов.Добавить();
		НоваяСтрока.ID = КлючИЗначение.Ключ;
		НоваяСтрока.ДокументОснование = КлючИЗначение.Значение;
	КонецЦикла;
	
	// При заполнении затрат на основании наряд в цепочке может быть только в том случае, если 
	// сам документ-основание является нарядом. Заявка в цепочке может быть, если сам докумен-основание
	// является заявкой, либо если документ-основание является нарядом, созданным на основании заявки.
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРемонтов.ID КАК ID,
	|	ТаблицаРемонтов.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаРемонтов
	|ИЗ
	|	&ТаблицаРемонтов КАК ТаблицаРемонтов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРемонтов.ID КАК ID,
	|	ТаблицаРемонтов.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ТаблицаРемонтов.ДокументОснование ССЫЛКА Документ.торо_НарядНаВыполнениеРемонтныхРабот
	|				ИЛИ ТаблицаРемонтов.ДокументОснование ССЫЛКА Документ.торо_НарядНаРегламентноеМероприятие
	|			ТОГДА ТаблицаРемонтов.ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Наряд
	|ПОМЕСТИТЬ ТаблицаСНарядами
	|ИЗ
	|	ТаблицаРемонтов КАК ТаблицаРемонтов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Наряд,
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСНарядами.ID КАК ID,
	|	ТаблицаСНарядами.ДокументОснование КАК ДокументОснование,
	|	ТаблицаСНарядами.Наряд КАК Наряд,
	|	ВЫБОР
	|		КОГДА ТаблицаСНарядами.ДокументОснование ССЫЛКА Документ.торо_ЗаявкаНаРемонт
	|			ТОГДА ТаблицаСНарядами.ДокументОснование
	|		КОГДА НЕ торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник ЕСТЬ NULL
	|				И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник ССЫЛКА Документ.торо_ЗаявкаНаРемонт
	|			ТОГДА торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Заявка
	|ИЗ
	|	ТаблицаСНарядами КАК ТаблицаСНарядами
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|		ПО ТаблицаСНарядами.Наряд = торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка
	|			И ТаблицаСНарядами.ID = торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID";
	
	Запрос.УстановитьПараметр("ТаблицаРемонтов", ТаблицаРемонтов);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

Процедура ЗаполнитьДокументПроектныхЗатратПоТехКарте(ДокументОбъект, РемонтнаяРабота, ДатаСрезаТехКарты, Родитель_ID, КоличествоРодителя = 1)
	
	ВерсияТехКарты = РегистрыСведений.торо_ВерсииТехКарт.ПолучитьВерсиюТехКарты(РемонтнаяРабота, ДатаСрезаТехКарты);
	Если НЕ ЗначениеЗаполнено(ВерсияТехКарты) Тогда
		Возврат;			
	КонецЕсли;

	Для каждого СтрокаРР из ВерсияТехКарты.СписокОпераций Цикл
		НоваяСтрока = ДокументОбъект.РемонтныеРаботы.Добавить();
		НоваяСтрока.Родитель_ID = Родитель_ID;
		НоваяСтрока.ID = СтрокаРР.ID;
		НоваяСтрока.РемонтнаяРабота = СтрокаРР.Операция;
		НоваяСтрока.Количество = СтрокаРР.Количество*КоличествоРодителя;
		НоваяСтрока.ID_ПараллельнойОперации = СтрокаРР.ID_ПараллельнойОперации;

		Если ТипЗнч(СтрокаРР.Операция) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
			ЗаполнитьДокументПроектныхЗатратПоТехКарте(ДокументОбъект, СтрокаРР.Операция, ДатаСрезаТехКарты, СтрокаРР.ID, НоваяСтрока.Количество);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтрокаЗатрат из ВерсияТехКарты.МатериальныеЗатраты Цикл
		НоваястрокаЗатрат = ДокументОбъект.МатериальныеЗатраты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваястрокаЗатрат, СтрокаЗатрат);
		
		НоваястрокаЗатрат.ХарактеристикаНоменклатуры = СтрокаЗатрат.Характеристика;
		НоваястрокаЗатрат.КоличествоУпаковок = СтрокаЗатрат.КоличествоУпаковок * КоличествоРодителя;
		
		Коэффициент = СтрокаЗатрат.Упаковка.Коэффициент;
		Если Коэффициент = 0 Тогда
			Коэффициент = 1;
		КонецЕсли;
		НоваястрокаЗатрат.Количество = НоваястрокаЗатрат.КоличествоУпаковок * Коэффициент;
	КонецЦикла;
	
	Для каждого СтрокаЗатрат из ВерсияТехКарты.ТрудовыеЗатраты Цикл
		НоваястрокаЗатрат = ДокументОбъект.ТрудовыеЗатраты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваястрокаЗатрат, СтрокаЗатрат);
		НоваястрокаЗатрат.ВремяРаботы = СтрокаЗатрат.ВремяРаботы * КоличествоРодителя;
	КонецЦикла;

	Для каждого СтрокаЗатрат из ВерсияТехКарты.ИнструментыИТехника Цикл
		НоваястрокаЗатрат = ДокументОбъект.ИнструментыИТехника.Добавить();
		ЗаполнитьЗначенияСвойств(НоваястрокаЗатрат, СтрокаЗатрат);
		
		Коэффициент = СтрокаЗатрат.Упаковка.Коэффициент;
		Если Коэффициент = 0 Тогда
			Коэффициент = 1;
		КонецЕсли;
		НоваястрокаЗатрат.Количество = СтрокаЗатрат.КоличествоУпаковок * Коэффициент;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЗапчастиВДокументеПроектныхЗатрат(ДокументОбъект)
	
	Если ТипЗнч(ДокументОбъект.ОбъектРемонта) = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки ССЫЛКА Документ.торо_ВнешнееОснованиеДляРабот
	|			ТОГДА торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований.Значение
	|		ИНАЧЕ торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Значение
	|	КОНЕЦ КАК ВидРемонта
	|ПОМЕСТИТЬ ДанныеДляОтбора
	|ИЗ
	|	РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам,
	|	Константа.торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований КАК торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований,
	|	Константа.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов КАК торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов
	|ГДЕ
	|	торо_ОбщиеДанныеПоРемонтам.IDРемонта = &IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура КАК Номенклатура,
	|	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика КАК ХарактеристикаНоменклатуры,
	|	торо_НормыЗапчастейНаОбъектыРемонта.Количество КАК Количество
	|ИЗ
	|	ДанныеДляОтбора КАК ДанныеДляОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонта КАК торо_НормыЗапчастейНаОбъектыРемонта
	|		ПО ДанныеДляОтбора.ОбъектРемонта = торо_НормыЗапчастейНаОбъектыРемонта.ОбъектРемонта
	|			И ДанныеДляОтбора.ВидРемонта = торо_НормыЗапчастейНаОбъектыРемонта.ВидРемонта
	|ГДЕ
	|	ДанныеДляОтбора.ОбъектРемонта.ВестиУчетСерийныхЗапчастей
	|	И торо_НормыЗапчастейНаОбъектыРемонта.Приоритет";
	
	Запрос.УстановитьПараметр("IDРемонта", ДокументОбъект.IDРемонта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДокументОбъект.Запчасти.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПроектныхЗатратПоВнешнемуОснованию(ДокументОбъект, ДокументИсточник, ДатаСрезаТехКарты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.ID КАК ID,
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Количество КАК Количество,
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Предписание_ID КАК РемонтыОборудования_ID,
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.ID_ПараллельнойОперации КАК ID_ПараллельнойОперации
	|ИЗ
	|	Документ.торо_ВнешнееОснованиеДляРабот.РемонтныеРаботы КАК торо_ВнешнееОснованиеДляРаботРемонтныеРаботы
	|ГДЕ
	|	торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Ссылка = &Ссылка
	|	И торо_ВнешнееОснованиеДляРаботРемонтныеРаботы.Предписание_ID = &ИДРемонта";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументИсточник);
	Запрос.УстановитьПараметр("ИДРемонта", ДокументОбъект.IDРемонта);
	
	ТаблицаОпераций = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка из ТаблицаОпераций Цикл	
		НоваяСтрока = ДокументОбъект.РемонтныеРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	ТаблицаРемонтов = Новый ТаблицаЗначений;
	ТаблицаРемонтов.Колонки.Добавить("ID");
	ТаблицаРемонтов.Колонки.Добавить("ОбъектРемонта");
	ТаблицаРемонтов.Колонки.Добавить("ДатаНачала");
	ТаблицаРемонтов.Колонки.Добавить("ДатаОкончания");
	
	СтрокаРемонта = ТаблицаРемонтов.Добавить();
	СтрокаРемонта.ID = ДокументОбъект.IDРемонта;
	СтрокаРемонта.ОбъектРемонта = ДокументОбъект.ОбъектРемонта;
	СтрокаРемонта.ДатаНачала = ДатаСрезаТехКарты;
	СтрокаРемонта.ДатаОкончания = ДатаСрезаТехКарты;
	
	МассивДанныхЗаполнения = торо_Ремонты.ПолучитьНормыЗатратИзТаблицыОпераций(ТаблицаОпераций, ТаблицаРемонтов, Новый Структура("ИнструментыИТехника, МатериальныеЗатраты, ТрудовыеЗатраты"));
	
	Для каждого СтруктураДанныхЗаполнения из МассивДанныхЗаполнения Цикл
		Если СтруктураДанныхЗаполнения.СтруктураТаблиц.МатериальныеЗатраты <> Неопределено Тогда
			
			Для каждого СтрокаНормы из СтруктураДанныхЗаполнения.СтруктураТаблиц.МатериальныеЗатраты Цикл
				НовСтр = ДокументОбъект.МатериальныеЗатраты.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрокаНормы);
				НовСтр.ID = СтруктураДанныхЗаполнения.ID;
				
				Коэффициент = СтрокаНормы.Упаковка.Коэффициент;
				Если Коэффициент = 0 Тогда
					Коэффициент = 1;
				КонецЕсли;
				НовСтр.Количество = СтрокаНормы.КоличествоУпаковок * Коэффициент;
				НовСтр.ХарактеристикаНоменклатуры = СтрокаНормы.Характеристика;
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтруктураДанныхЗаполнения.СтруктураТаблиц.ТрудовыеЗатраты <> Неопределено Тогда
			
			Для каждого СтрокаНормы из СтруктураДанныхЗаполнения.СтруктураТаблиц.ТрудовыеЗатраты Цикл
				НовСтр = ДокументОбъект.ТрудовыеЗатраты.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрокаНормы);
				НовСтр.ID = СтруктураДанныхЗаполнения.ID;
			КонецЦикла;
			
		КонецЕсли;

		Если СтруктураДанныхЗаполнения.СтруктураТаблиц.ИнструментыИТехника <> Неопределено Тогда
			Для каждого СтрокаНормы из СтруктураДанныхЗаполнения.СтруктураТаблиц.ИнструментыИТехника Цикл
				НовСтр = ДокументОбъект.ИнструментыИТехника.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, СтрокаНормы);
				НовСтр.ID = СтруктураДанныхЗаполнения.ID;
			КонецЦикла;

		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ВернутьIDНеобработанногоРемонтаДляАктаПриемки(Основание, ТабЧасть)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ТЗ.ID КАК ID
	|ПОМЕСТИТЬ ТабЧасть
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабЧасть.ID КАК ID
	|ИЗ
	|	ТабЧасть КАК ТабЧасть
	|ГДЕ
	|	НЕ ТабЧасть.ID В
	|				(ВЫБРАТЬ
	|					торо_ОтмененныеРемонты.ID КАК ID
	|				ИЗ
	|					РегистрСведений.торо_ОтмененныеРемонты КАК торо_ОтмененныеРемонты)
	|	И НЕ ТабЧасть.ID В
	|				(ВЫБРАТЬ
	|					торо_ОтмененныеЗаявки.ИДРемонта КАК ID
	|				ИЗ
	|					РегистрСведений.торо_ОтмененныеЗаявки КАК торо_ОтмененныеЗаявки)";
	
	Запрос.УстановитьПараметр("ТЗ", ТабЧасть.Выгрузить(, "ID"));
	Результат = Запрос.Выполнить().Выгрузить();
	МассивНеотмененных = Результат.ВыгрузитьКолонку("ID");
	
	Если МассивНеотмененных.Количество() = 1 Тогда
		Возврат МассивНеотмененных[0];
	КонецЕсли; 	
	
	Возврат "";
	
КонецФункции
#КонецОбласти