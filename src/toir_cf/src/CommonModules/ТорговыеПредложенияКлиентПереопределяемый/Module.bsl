
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Торговые предложения".
// ОбщийМодуль.ТорговыеПредложенияКлиентПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РаботаСФормами

// Обработка переопределяемой команды формы.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма, из которой производится обработка команды.
//  Команда	 - КомандаФормы               - описание команды формы.
//
Процедура ОбработатьКомандуФормы(Форма, Команда) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЗапросЦен

// Открытие формы отправки запросов цен поставщикам.
//
// Параметры:
//  ПараметрыОткрытия	 - Структура - параметры для открываемой формы
//    * ИдентификаторЗаказа - УникальныйИдентификатор - ключ уникальности формы поиска товаров.
//    * АдресТоваровВХранилище - Строка - адрес хранилища значений таблицы товаров для поиска.
//    * Валюта - СправочникСсылка.Валюта - валюта поиска товаров.
//    * Организация - ОпределяемыйТип.Организация - организация, от лица которой происходит поиск товара.
//
Процедура ОткрытьФормуОтправкиЗапросовЦен(ПараметрыОткрытия) Экспорт

	ПараметрыОткрытия.Вставить("РежимЗапросаЦен", Истина);
	ОчиститьСообщения();
	ТорговыеПредложенияКлиент.ОткрытьФормуФормированияЗаказов(ПараметрыОткрытия);

КонецПроцедуры

#КонецОбласти

#Область Подсказки

// Получение данных контекста для подсказки.
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения - форма прикладного объекта.
//  ДанныеКонтекста	 - Структура - свойства контекста:
//   * Основание            - Произвольный - ссылка на источник данных, например документ.
//   * Организации          - Массив из ОпределяемыйТип.Организация - организации контекста.
//   * РежимПоставщика      - Булево - контекст определяет режим поставщика.
//   * РежимПокупателя      - Булево - контекст определяет режим покупателя.
//   * РежимПоискаПоОтборам - Булево - действием подсказки является открытие формы поиска с отборами.
//   * РежимПоискаПоСписку  - Булево - действием подсказки является открытие формы поиска по списку.
//
Процедура ПолучитьДанныеКонтекстаДляПодсказки(Знач Форма, ДанныеКонтекста) Экспорт

	Если Форма.ИмяФормы = "Документ.торо_ЗаказПоставщику.Форма.ФормаСписка" Тогда
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.торо_ЗаказПоставщику.Форма.ФормаДокумента" Тогда 
		
		ДанныеКонтекста.Основание = Форма.Объект.Ссылка;
		ДанныеКонтекста.Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.Объект.Организация);
		ДанныеКонтекста.РежимПокупателя = Истина;
		ДанныеКонтекста.РежимПоискаПоСписку = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда 
		
		ДанныеКонтекста.Основание = Форма.Объект.Ссылка;
		ДанныеКонтекста.РежимПокупателя = Истина;
		ДанныеКонтекста.РежимПоискаПоОтборам = Истина;
		
	Иначе
		
		ДанныеКонтекста = Неопределено;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ДиагностикаОшибокТорговыхПредложений

// Вызывает диалог интерактивного изменения реквизита торгового предложения. Вызывается при нажатии 
//   пользователем на ячейку с текущим значением реквизита.
//
// Реквизиты, доступные для изменения посредством перехода из карточки торгового предложения определяется
//   в процедуре ОпределитьОбрабатываемыеРеквизитыКарточкиТорговогоПредложения общего модуля 
//   ТорговыеПредложенияПереопределяемый
//
// Параметры:
//  ПозицияТорговогоПредложения   - Структура     - указывает на измененную позицию торгового предложения.
//            Ключи:
//                *ПрайсЛист - ОпределяемыйТип.ТорговоеПредложение - Прайс-лист позиции торгового предложения
//                *Номенклатура - ОпределяемыйТип.НоменклатураБЭД - номенклатура позиции торгового предложения
//                *Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика позиции торгового предложения
//                *Упаковка - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка позиции торгового предложения
//  ИмяРеквизита                  - Строка     - Имя реквизита с учетом имени таблицы. Например: "Товары.НаименованиеНоменклатуры",
//            "Контакты.Телефон"
//            см. ТорговыеПредложенияПереопределяемый.ИнициализацияЗапросаПубликуемыхТоваров
//  ДополнительныйРеквизит        - ОпределяемыйТип.ДополнительныеРеквизитыРаботаСНоменклатурой     - ссылка на 
//            устанавливаемый дополнительный реквизит в случае, если нажата гиперссылка свойства торгового предложения.
//  Форма                         - ФормаКлиентскогоПриложения - форма карточки торгового предложения, на которой
//            была нажата гиперссылка
//  ЭлементФормы                  - ПолеФормы - элемент формы, нажатие на которое вызвало обработчик
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - обработчик, который требуется вызвать
//            при окончании редактирования значения реквизита. Данный обработчик заново формирует карточку
//            торгового предложения
//
// Пример:
//    Если ИмяРеквизита = "Товары.НаименованиеНоменклатуры" Тогда
//        ОткрываемаяФорма = ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",
//            Новый Структура("Ключ", КлючЗаписи.Номенклатура), Форма, Новый УникальныйИдентификатор
//                , , , ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//        ОткрываемаяФорма.ТекущийЭлемент = ОткрываемаяФорма.Элементы.Наименование;
//    ИначеЕсли ИмяРеквизита = "Контакты.Телефон" Тогда
//        ОткрываемаяФорма = ОткрытьФорму("Справочник.ТорговыеПредложения.ФормаОбъекта",
//             Новый Структура("Ключ", КлючЗаписи.ПрайсЛист), Форма, Новый УникальныйИдентификатор
//                , , , ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//        ОткрываемаяФорма.ТекущийЭлемент = ОткрываемаяФорма.Элементы.КонтактныйТелефон;
//    КонецЕсли; 
Процедура ОбработатьНажатиеПоГиперссылкеРеквизитаКарточкиТорговогоПредложения(ПозицияТорговогоПредложения,
				ИмяРеквизита, ДополнительныйРеквизит, Форма, ЭлементФормы, ОписаниеОповещенияОЗавершении) Экспорт
				
	НастройкиПубликации = торо_ТорговыеПредложенияКЭДОВызовСервера.НастройкиПубликации(ПозицияТорговогоПредложения.ПрайсЛист);
	
	ПоВсемТоварам            = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПоВсемТоварам;
	ПубликоватьЦены          = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПубликоватьЦены;
	ПубликоватьСрокиПоставки = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПубликоватьСрокиПоставки;
	ПубликоватьОстатки       = НЕ (НастройкиПубликации = Неопределено) И НастройкиПубликации.ПубликоватьОстатки;
	Организация              = ?(НастройкиПубликации = Неопределено, 
		ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"), НастройкиПубликации.Организация);
	
	// Таблица Товары
	Если ИмяРеквизита = "Товары.НаименованиеНоменклатуры" Тогда
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         = "Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "Наименование";
	ИначеЕсли ИмяРеквизита = "Товары.Артикул" Тогда
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         ="Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "Артикул";
	ИначеЕсли ИмяРеквизита = "Товары.НаименованиеУпаковки" И ПоВсемТоварам Тогда
		
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         ="Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "ЕдиницаИзмерения";
		
	ИначеЕсли ИмяРеквизита = "Товары.НаименованиеУпаковки" Тогда
		Объект           = ПозицияТорговогоПредложения.ПрайсЛист;
		ИмяФормы         ="Справочник.ТорговыеПредложения.ФормаОбъекта";
		ИмяЭлементаФормы = "ЕдиницаИзмерения";
	ИначеЕсли (ИмяРеквизита = "Товары.Цена" И НЕ ПубликоватьЦены)
		ИЛИ (ИмяРеквизита = "Товары.Наличие" И НЕ ПубликоватьОстатки) Тогда
		
		ТорговыеПредложенияКлиент.ОткрытьФормуНастроекПубликации(ПозицияТорговогоПредложения.ПрайсЛист, Форма, 
			ОписаниеОповещенияОЗавершении);
		
	ИначеЕсли ИмяРеквизита = "Товары.СтавкаНДС" И НЕ ПубликоватьЦены Тогда
		
		ТорговыеПредложенияКлиент.ОткрытьФормуНастроекПубликации(ПозицияТорговогоПредложения.ПрайсЛист, Форма, 
			ОписаниеОповещенияОЗавершении);
		
	ИначеЕсли ИмяРеквизита = "Товары.СтавкаНДС" Тогда
		Объект           = ПозицияТорговогоПредложения.Номенклатура;
		ИмяФормы         ="Справочник.Номенклатура.ФормаОбъекта";
		ИмяЭлементаФормы = "СтавкаНДС";
	ИначеЕсли ИмяРеквизита = "Товары.СрокПоставки" И НЕ ПубликоватьСрокиПоставки Тогда
		
		ТорговыеПредложенияКлиент.ОткрытьФормуНастроекПубликации(ПозицияТорговогоПредложения.ПрайсЛист, Форма, 
			ОписаниеОповещенияОЗавершении);
		
	ИначеЕсли ИмяРеквизита = "Товары.СрокПоставки" Тогда
		Объект           = ПозицияТорговогоПредложения.ПрайсЛист;
		ИмяФормы         ="Справочник.ТорговыеПредложения.ФормаОбъекта";
		ИмяЭлементаФормы = "СрокПоставки";
	КонецЕсли;
	
	// Таблица ПрайсЛистыСлужебный
	Если ИмяРеквизита = "ПрайсЛистыСлужебный.НаименованиеОрганизации" Тогда
		Объект           = Организация;
		ИмяФормы         ="Справочник.Организации.ФормаОбъекта";
		ИмяЭлементаФормы = "Наименование";
	ИначеЕсли ИмяРеквизита = "ПрайсЛистыСлужебный.ИННОрганизации" Тогда
		Объект           = Организация;
		ИмяФормы         ="Справочник.Организации.ФормаОбъекта";
		ИмяЭлементаФормы = "ИНН";
	ИначеЕсли ИмяРеквизита = "ПрайсЛистыСлужебный.КППОрганизации" Тогда
		Объект           = Организация;
		ИмяФормы         ="Справочник.Организации.ФормаОбъекта";
		ИмяЭлементаФормы = "КПП";
	КонецЕсли;

	// Таблица Контакты
	Если ИмяРеквизита = "Контакты.Телефон" Тогда
		Объект           = Организация;
		ИмяФормы         ="Справочник.Организации.ФормаОбъекта";
	КонецЕсли;
	
	// Изображения.
	Если ИмяРеквизита = "Изображения.ФайлИзображения" Тогда
		Объект = ПозицияТорговогоПредложения.Номенклатура;
		Если ТипЗнч(ДополнительныйРеквизит) = Тип("Структура") Тогда
			Если ДополнительныйРеквизит.ТипДействия = "Добавление" Тогда
				Если ЗначениеЗаполнено(Объект) Тогда
					ИдентификаторФайла = Новый УникальныйИдентификатор;
					Фильтр = ФильтрФайловИзображенийДляПубликации();
					РаботаСФайламиКлиент.ДобавитьФайлы(Объект, ИдентификаторФайла, Фильтр, , ОписаниеОповещенияОЗавершении);
				КонецЕсли;
			ИначеЕсли ДополнительныйРеквизит.ТипДействия = "Редактирование" Тогда
				Изображение = ДополнительныйРеквизит.Изображения[ДополнительныйРеквизит.ИндексИзображения];
				Если Изображение <> Неопределено Тогда
					РаботаСФайламиКлиент.ОткрытьФормуФайла(Изображение, , ОписаниеОповещенияОЗавершении);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ИмяФормы) И ЗначениеЗаполнено(Объект) Тогда

		ПараметрыОткрытияФормы = Новый Структура;
		ПараметрыОткрытияФормы.Вставить("Ключ", Объект);
		
		ФормаОбъекта = ОткрытьФорму(ИмяФормы, ПараметрыОткрытияФормы, Форма, , , , ОписаниеОповещенияОЗавершении, 
			РежимОткрытияОкнаФормы.Независимый);

	КонецЕсли;
		
	Если ФормаОбъекта <> Неопределено И НЕ ПустаяСтрока(ИмяЭлементаФормы) Тогда
		ЭлементФормы = ФормаОбъекта.Элементы.Найти(ИмяЭлементаФормы);
		Если ЭлементФормы <> Неопределено Тогда
			ФормаОбъекта.ТекущийЭлемент = ЭлементФормы;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Вызывает диалог интерактивного массового исправления причин исключения позиций торговых предложений
//    из публикации.
//
// Вызывается для причин, описанных в методе ОпределитьОбрабатываемыеПричиныИсключенияИзПубликации общего
//    модуля ТорговыеПредложенияПереопределяемый.
//
// Параметры:
//  Причина                       - ОпределяемыйТип.ПричиныИсключенияИзПубликацииБизнесСеть     - причина
//        исключения из публикации, на гиперссылку который нажал пользователь.
//  ПрайсЛист                     - ОпределяемыйТип.ТорговоеПредложение - отбор по торговому предложению, в котором
//            находится пользователь в форме списка ошибок.
//  ПозицииТорговыхПредложений    - Массив из Структура, Неопределено - позиции торговых предложений для просмотра.
//            В случае, если отбор по позициям торговых предложений не задан следует, в параметре передается Неопределено.
//            В случае, если отбор по позициям торговых предложений задан, то структура со следующими ключами:
//     * ПрайсЛист - ОпределяемыйТип.ТорговоеПредложение - прайс-лист позиции торгового предложения
//     * Номенклатура - ОпределяемыйТип.НоменклатураБЭД - номенклатура позиции торгового предложения
//     * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика позиции торгового предложения
//     * Упаковка - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка позиции торгового предложения
//  Форма                         - ФормаКлиентскогоПриложения - форма карточки торгового предложения, на которой
//            была нажата гиперссылка.
//  ЭлементФормы                  - ПолеФормы - элемент формы, нажатие на которое вызвало обработчик
//            была нажата гиперссылка.
//  ОписаниеОповещенияОЗавершении - ОписаниеОповещения - обработчик, который требуется вызвать
//            при окончании редактирования значения реквизита. Данный обработчик заново формирует карточку
//            торгового предложения.
//
// Пример:
//    Если Причина =
//        ПредопределенноеЗначение("Перечисление._ДемоПричиныИсключенияИзПубликации.ОтсутствуетНаСкладе") Тогда
//        ОткрытьФорму("Отчет._ДемоОстаткиТоваров.ФормаОбъекта", Контекст, Форма, Новый УникальныйИдентификатор, , , 
//            ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//    ИначеЕсли Причина =
//        ПредопределенноеЗначение("Перечисление._ДемоПричиныИсключенияИзПубликации.ОтсутствуетНаСкладе") Тогда
//        ОткрытьФорму("РегистрСведений.ПрайсЛист.ФормаСписка", Контекст, Форма, Новый УникальныйИдентификатор, , , 
//            ОписаниеОповещенияОЗавершении, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//    КонецЕсли; 
//
Процедура ОбработатьНажатиеПоГиперссылкеПричиныИсключенияИзПубликации(Причина, ПрайсЛист, ПозицииТорговыхПредложений,
				Форма, ЭлементФормы, ОписаниеОповещенияОЗавершении) Экспорт 

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает фильтр, используемый для выбора файлов-изображений.
//
// Возвращаемое значение:
//  Строка - строка, содержащая фильтр для файлов-изображений разрешенных для публикации ТП.
//
Функция ФильтрФайловИзображенийДляПубликации()
	
	Возврат НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.jpg;*.jpe)|*.bmp;*.gif;*.png;*.jpeg;*.jpg;*.jpe"
				+ "|Формат bmp(*.bmp)|*.bmp"
				+ "|Формат GIF(*.gif)|*.gif"
				+ "|Формат JPEG(*.jpeg;*.jpg;*.jpe)|*.jpeg;*.jpg;*.jpe"
				+ "|Формат PNG(*.png)|*.png'");
		
КонецФункции

#КонецОбласти
