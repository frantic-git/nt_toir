////////////////////////////////////////////////////////////////////////////////
// торо_Печать: методы для печати.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выводит документ на печать.
//
// Параметры:
//		ИмяОбъектаМетаданных - Строка - Имя объекта метаданных. Например "Документ.торо_АктОВыполненииЭтапаРабот".
//		ИмяПечатнойФормы - Строка - имя печатной формы.
//		МассивОбъектов - Массив, Ссылка - ссылка или массив ссылок на печатаемые объекты.
//		ПараметрыПечати - Структура - дополнительные параметры.
//
Процедура НапечататьДокумент(ИмяОбъектаМетаданных, ИмяПечатнойФормы, МассивОбъектов, ПараметрыПечати = Неопределено) Экспорт
	
	ПечатьДокументовБезПредварительногоПросмотра = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	Если ПечатьДокументовБезПредварительногоПросмотра Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
			ИмяОбъектаМетаданных, ИмяПечатнойФормы, МассивОбъектов, ПараметрыПечати);
		
	Иначе
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			ИмяОбъектаМетаданных, ИмяПечатнойФормы, МассивОбъектов, Неопределено, ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗапроситьУПользователяДополнительныеПараметрыПередПечатью(ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати.ОбъектыПечати.Количество() = 1 Тогда
		
		ИмяТаблицыРемонтов = "РемонтыОборудования";
		Если ПараметрыПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты" Тогда
			ИмяТаблицыРемонтов = "СписокДефектов";
		ИначеЕсли ПараметрыПечати.МенеджерПечати = "Документ.торо_НарядНаРегламентноеМероприятие" Тогда
			ИмяТаблицыРемонтов = "РегламентныеМероприятия";
		ИначеЕсли ПараметрыПечати.МенеджерПечати = "Документ.торо_АктОВыполненииРегламентногоМероприятия" Тогда
			ИмяТаблицыРемонтов = "Мероприятия";
		КонецЕсли;
		
		РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудования(ПараметрыПечати.ОбъектыПечати[0], ИмяТаблицыРемонтов);
		
		ДополнительныеПараметры = Новый Структура("ПараметрыПечати", ПараметрыПечати);
		
		Если РемонтыОборудования.Количество() = 1 Тогда
			МассивID = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РемонтыОборудования[0].ID);
			ПослеВыбораРемонтовДляПечати(МассивID, ДополнительныеПараметры);
		Иначе 		
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораРемонтовДляПечати", ЭтотОбъект, ДополнительныеПараметры);
			ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораИзОбъектовОборудования", Новый Структура("РемонтыОборудования, КлючНазначенияИспользования", РемонтыОборудования, "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор), ПараметрыПечати.Форма, ПараметрыПечати.ОбъектыПечати[0],,,ОписаниеОповещения);
		КонецЕсли;
	Иначе
		
		НапечататьДокумент(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, ПараметрыПечати.ОбъектыПечати, Новый Структура);		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПослеВыбораРемонтовДляПечати(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;
	Параметры = Новый Структура("МассивID", Результат);
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);

КонецПроцедуры
		
Функция ВыбратьГарантийныеРемонтыДляПечати(ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати.ОбъектыПечати.Количество() = 1 Тогда
		ИмяТаблицыРемонтов = "СписокДефектов";
		РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхГарантийнхРемонтов(ПараметрыПечати.ОбъектыПечати[0], ИмяТаблицыРемонтов);
		
		ДополнительныеПараметры = Новый Структура("ПараметрыПечати", ПараметрыПечати);
		
		Если РемонтыОборудования.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Рекламационный акт оформляется только для объектов на гарантийном обслуживании.
				                        |В документе отсутствуют объекты на гарантийном обслуживании!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		ИначеЕсли РемонтыОборудования.Количество() = 1 Тогда
			МассивID = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РемонтыОборудования[0].ID);
			ПослеВыбораРемонтовДляПечати(МассивID, ДополнительныеПараметры);
		Иначе 		
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораРемонтовДляПечати", ЭтотОбъект, ДополнительныеПараметры);
			ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораИзОбъектовОборудования", Новый Структура("РемонтыОборудования, КлючНазначенияИспользования, ПоказыватьОтказавшийЭлемент", РемонтыОборудования, "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор, Истина), ПараметрыПечати.Форма, ПараметрыПечати.ОбъектыПечати[0],,,ОписаниеОповещения);
		КонецЕсли;
		
	Иначе
		НапечататьДокумент(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, ПараметрыПечати.ОбъектыПечати, Новый Структура);
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции 

Функция ЗапроситьУПользователяДополнительныеПараметрыПередПечатьюКС2_КС3(ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати.Идентификатор = "ФормаКС2" Тогда
		ИмяФормы = "КС-2";
		КлючНазначенияИспользования = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьФормаКС2";
	Иначе
		ИмяФормы = "КС-3";
		КлючНазначенияИспользования = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьФормаКС3";
	КонецЕсли;
	
	Если ПараметрыПечати.ОбъектыПечати.Количество() = 1 Тогда
		
		РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудованияСПодрядчиками(ПараметрыПечати.ОбъектыПечати[0]);
		ДополнительныеПараметры = Новый Структура("ПараметрыПечати", ПараметрыПечати);
		
		Если РемонтыОборудования.Количество() = 0 Тогда
			ШаблонСообщения = НСтр("ru = 'В документе ""%1"" не указан ни один подрядчик. Формы %2 не будут созданы.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПараметрыПечати.ОбъектыПечати[0], ИмяФормы);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		ИначеЕсли РемонтыОборудования.Количество() = 1 Тогда
			МассивID = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РемонтыОборудования[0].ID);
			ПослеВыбораРемонтовДляПечатиКС2_КС3(МассивID, ДополнительныеПараметры);
		Иначе 		
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораРемонтовДляПечатиКС2_КС3", ЭтотОбъект, ДополнительныеПараметры);
			ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораИзОбъектовОборудования", Новый Структура("РемонтыОборудования, КлючНазначенияИспользования", РемонтыОборудования, КлючНазначенияИспользования), ПараметрыПечати.Форма, ПараметрыПечати.ОбъектыПечати[0],,,ОписаниеОповещения);
		КонецЕсли;
		
	Иначе
		
		НапечататьДокумент(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, ПараметрыПечати.ОбъектыПечати, Новый Структура);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПослеВыбораРемонтовДляПечатиКС2_КС3(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;
	
	Если ПараметрыПечати.Идентификатор = "ФормаКС2" Тогда
		ТекстЭлементаВсеПодрядчики = НСтр("ru = '(КС-2 для всех подрядчиков)'");
		ЗаголовокСпискаВыбора = НСтр("ru = 'Формировать КС-2 для...'");
	Иначе
		ТекстЭлементаВсеПодрядчики = НСтр("ru = '(КС-3 для всех подрядчиков)'");
		ЗаголовокСпискаВыбора = НСтр("ru = 'Формировать КС-3 для...'");
	КонецЕсли;
	
	МассивПодрядчиков = торо_ПечатьСервер.ПолучитьСписокПодрядчиковПоРемонтам(ПараметрыПечати.ОбъектыПечати[0], Результат);

	// Перенесено из ТОиР 1.3
	УникальныйНомерВсе = Новый УникальныйИдентификатор;
	СписокПодрядчиков = Новый СписокЗначений;
	СписокПодрядчиков.Добавить(УникальныйНомерВсе, ТекстЭлементаВсеПодрядчики);
	Для Каждого ТекПодрядчик Из МассивПодрядчиков Цикл
		СписокПодрядчиков.Добавить(ТекПодрядчик);
	КонецЦикла;		
	
	ДополнительныеПараметры.Вставить("МассивID", Результат);
	ДополнительныеПараметры.Вставить("СписокПодрядчиков", СписокПодрядчиков);
	ДополнительныеПараметры.Вставить("УникальныйНомерВсе", УникальныйНомерВсе);
	
	Описаниеоповещения = Новый ОписаниеОповещения("ПослеВыбораКонтрагентовДляПечатиКС2_КС3", ЭтотОбъект, ДополнительныеПараметры);
	СписокПодрядчиков.ПоказатьВыборЭлемента(Описаниеоповещения, ЗаголовокСпискаВыбора);

КонецПроцедуры
		
Процедура ПослеВыбораКонтрагентовДляПечатиКС2_КС3(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	СписокПодрядчиков = ДополнительныеПараметры.СписокПодрядчиков;
	УникальныйНомерВсе = ДополнительныеПараметры.УникальныйНомерВсе;
	
	ФормироватьКСДля = Новый СписокЗначений;
	Если ВыбранныйЭлемент.Значение = УникальныйНомерВсе Тогда
		СписокПодрядчиков.Удалить(СписокПодрядчиков.НайтиПоЗначению(УникальныйНомерВсе));
		ФормироватьКСДля = СписокПодрядчиков.Скопировать();
	Иначе
		ФормироватьКСДля.Добавить(ВыбранныйЭлемент.Значение);
	КонецЕсли; 
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;
	Параметры = Новый Структура("МассивID, Подрядчики", ДополнительныеПараметры.МассивID, ФормироватьКСДля);
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);
	
КонецПроцедуры

Функция ОбработатьКомандуПечатиППР(ПараметрыПечати) Экспорт
	
	ПараметрКоманды = ПараметрыПечати.ОбъектыПечати;
	
	Если ПараметрКоманды.Количество() = 1 Тогда	
		ДопПараметры = Новый Структура;
		Доппараметры.Вставить("ПараметрыПечати", ПараметрыПечати);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораПараметровПечатиППР", ЭтотОбъект, ДопПараметры);
		
		ПараметрыФормы = Новый Структура("ДокППР, КлючНазначенияИспользования", ПараметрКоманды[0], "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор); 
		ОткрытьФорму(ПараметрыПечати.МенеджерПечати + ".Форма.ФормаВводаПериода", ПараметрыФормы, ПараметрыПечати.Форма, ПараметрКоманды[0],,,ОписаниеОповещения);
	Иначе
		НапечататьДокумент(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, ПараметрыПечати.ОбъектыПечати, Новый Структура);
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

Процедура ПослеВыбораПараметровПечатиППР(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;

	Параметры = Новый Структура;
	Параметры.Вставить("Параметры", Результат);
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);
	
КонецПроцедуры

Функция ОбработатьКомандуПечатиОстановочныеРемонта(ПараметрыПечати) Экспорт
	
	ПараметрКоманды = ПараметрыПечати.ОбъектыПечати;
	
	Если ПараметрКоманды.Количество() = 1 Тогда	
		ДопПараметры = Новый Структура;
		Доппараметры.Вставить("ПараметрыПечати", ПараметрыПечати);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораПараметровПечатиОстановочныеРемонты", ЭтотОбъект, ДопПараметры);
		
		ПараметрыФормы = Новый Структура("ОстановочныйРемонт, КлючНазначенияИспользования", ПараметрКоманды[0], "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор); 
		ОткрытьФорму(ПараметрыПечати.МенеджерПечати + ".Форма.ФормаВводаПериода", ПараметрыФормы, ПараметрыПечати.Форма, ПараметрКоманды[0],,,ОписаниеОповещения);
	Иначе
		НапечататьДокумент(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, ПараметрыПечати.ОбъектыПечати, Новый Структура);
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

Процедура ПослеВыбораПараметровПечатиОстановочныеРемонты(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;

	Параметры = Новый Структура;
	Параметры.Вставить("Параметры", Результат);
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);
	
КонецПроцедуры

Функция ЗапроситьДопПараметрыПечатиОР(ПараметрыПечати) Экспорт
	
	МассивОбычныхОР = Новый Массив;
	Для каждого ОбъектПечати из ПараметрыПечати.ОбъектыПечати Цикл
		Если ТипЗнч(ОбъектПечати) = Тип("СправочникСсылка.торо_ОбъектыРемонта") 
			И торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ОбъектПечати, "ЭтоГруппа", Истина) = Ложь Тогда
			МассивОбычныхОР.Добавить(ОбъектПечати);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПечати.ОбъектыПечати = МассивОбычныхОР;
	Если МассивОбычныхОР.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Печать возможна только для объектов ремонта!'"));
	Иначе	
		ДополнительныеПараметры = Новый Структура("ПараметрыПечати", ПараметрыПечати);
		ДополнительныеПараметры.Вставить("ТекСтруктураИерархии", ПараметрыПечати.Форма.ТекСтруктураИерархии);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораПараметровПечатиОР", ЭтотОбъект, ДополнительныеПараметры);
		ОткрытьФорму("Справочник.торо_ОбъектыРемонта.Форма.ФормаВыбораРазделовПаспортаОР", Новый Структура("КлючНазначенияИспользования", "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор), ПараметрыПечати.Форма, ПараметрыПечати.Идентификатор,,,ОписаниеОповещения);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПослеВыбораПараметровПечатиОР(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;
	
	ТекСтруктураИерархии = ДополнительныеПараметры.ТекСтруктураИерархии;
	Параметры = Новый Структура;
	Параметры.Вставить("ТекСтруктураИерархии", ТекСтруктураИерархии);
	Параметры.Вставить("ПечатаемыеРазделы", Результат);
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);
	
КонецПроцедуры
		
Функция ПечататьТекущуюВерсиюТехКары(ПараметрыПечати) Экспорт
	
	Параметры = Новый Структура;
	СтруктураФормы = Новый Структура("ТехКарта");
	ЗаполнитьЗначенияСвойств(СтруктураФормы, ПараметрыПечати.Форма);
	
	Если СтруктураФормы.ТехКарта <> Неопределено Тогда
		ДатаПринятия = СтруктураФормы.ТехКарта.ДатаПринятия;
	КонецЕсли;
	
	Если ДатаПринятия <> Неопределено Тогда
		Параметры.Вставить("ДатаПринятия", ДатаПринятия);
	КонецЕсли;
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);
			
	Возврат Неопределено;		
	
КонецФункции   	

Функция ЗапроситьДополнительныеПараметрыПечатиСпискаОбъектовРМ(ПараметрыПечати) Экспорт
	МассивОбъектовПечати = Новый Массив;
	Для каждого ОбъектПечати Из ПараметрыПечати.ОбъектыПечати Цикл
		Если Не торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ОбъектПечати, "ЭтоГруппа", Истина) Тогда
			МассивОбъектовПечати.Добавить(ОбъектПечати);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПечати.ОбъектыПечати = МассивОбъектовПечати;
	Если МассивОбъектовПечати.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Печать возможна только для списка объектов регламентных мероприятий!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	Иначе	
		ДополнительныеПараметры = Новый Структура("ПараметрыПечати", ПараметрыПечати);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораПараметровПечатиСпискаОбъектовРМ", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыФормы = Новый Структура("КлючНазначенияИспользования", "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор);
		ОткрытьФорму("Справочник.торо_СписокОбъектовРегламентногоМероприятия.Форма.ФормаВыбораРазделовСпискаОбъектовРМ", ПараметрыФормы, ПараметрыПечати.Форма, ПараметрыПечати.Идентификатор,,, ОписаниеОповещения);
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

Процедура ПослеВыбораПараметровПечатиСпискаОбъектовРМ(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = ДополнительныеПараметры.ПараметрыПечати;
	
	Параметры = Новый Структура;
	Параметры.Вставить("ПечатаемыеРазделы", Результат);
	
	НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
			ПараметрыПечати.Идентификатор,
			ПараметрыПечати.ОбъектыПечати,
			Параметры);
КонецПроцедуры

Функция ОбработатьКомандуПечатиГрафикРаботыСотрудника(ПараметрыПечати) Экспорт
	
	Если ПараметрыПечати.ОбъектыПечати.Количество() = 1 Тогда
		ПлановаяДоступность = ПараметрыПечати.ОбъектыПечати[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
				
	НастройкиВывода = Новый Структура;
	НастройкиВывода.Вставить("ПлановаяДоступность", ПлановаяДоступность);
	
	ОткрытьФорму("Отчет.торо_ГрафикРаботыСотрудника.Форма.ФормаНастроекПечатнойФормы", НастройкиВывода);
	
КонецФункции

#КонецОбласти
