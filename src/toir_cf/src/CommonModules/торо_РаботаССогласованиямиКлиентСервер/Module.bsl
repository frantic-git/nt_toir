////////////////////////////////////////////////////////////////////////////////
// торо_РаботаССогласованиямиКлиентСервер: клиент-серверные методы, для работы со статусами документов.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет запись в таблицу ИсторияСтатусов документа.
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма документа.
//		СтатусДокумента - СправочникСсылка.торо_СтатусыСогласованияДокументовРемонтныхРабот - устанавливаемый статус.
//		ЗаКого - СправочникСсылка.Пользователи - за кого, устанавливается статус.
//		Комментарий - Строка - Комментарий к статусу.	
//
Процедура ДобавитьСтрокуВИсториюСтатусов(Форма, СтатусДокумента, ЗаКого = Неопределено, Комментарий = "") Экспорт
	
	Объект = Форма.Объект;
	
	Пользователь = ТекущийПользователь();
	
	НоваяЗаписьИС = Форма.ИсторияСтатусовРегистр.Добавить();
	НоваяЗаписьИС.Период            = ТекущаяДата();
	НоваяЗаписьИС.Пользователь    = Пользователь;
	НоваяЗаписьИС.ЗаКого          = ЗаКого;
	НоваяЗаписьИС.СтатусДокумента = СтатусДокумента;
	НоваяЗаписьИС.Комментарий = Комментарий;
		
КонецПроцедуры

// Процедура переносит данные из ДеревоСогласования в таблицу согласующих.
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ЗаписатьДеревоСогласования(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Форма.СогласующиеРегистр.Очистить();
	
	МассивСогласованного = Новый Массив;			
	ЗаполнитьМассивИзДерева(МассивСогласованного, Форма.ДеревоСогласования.ПолучитьЭлементы());
	
	Для Каждого ЭлементМассива Из МассивСогласованного Цикл
		Если ЭлементМассива.Согласовано Тогда
			ЗаполнитьЗначенияСвойств(Форма.СогласующиеРегистр.Добавить(), ЭлементМассива);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция устанавливает видимость закладки "согласование и утверждение" 
// во всех документах, для которых реализована эта функция.
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура УстановитьВидимостьСогласованиеИУтверждение(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Объект  = Форма.Объект;
	
	Форма["СогласованиеТолькоПросмотр"] = Ложь;
	
	ЭтоСпособСЗапретомПеревыбора = ЗначениеЗаполнено(Объект.СпособСогласования) 
				И Объект.СпособСогласования = Форма.ПараметрыСпособаСогласованияПоУмолчанию.СпособСогласования
				И Форма.ПараметрыСпособаСогласованияПоУмолчанию.ЗапретПеревыбора;
				
	СтатусОтличаетсяОтНачального = ЗначениеЗаполнено(Объект.СпособСогласования) 
				И ЗначениеЗаполнено(Форма.СтатусДокументаРегистр)  
				И Форма.СтатусДокументаРегистр <> торо_РаботаССогласованиями.ПолучитьНачальныйСтатус(Объект.СпособСогласования);
				
	Элементы.СпособСогласования.ТолькоПросмотр = СтатусОтличаетсяОтНачального ИЛИ ЭтоСпособСЗапретомПеревыбора;
	
	НужноЗаблокироватьФорму = торо_РаботаССогласованиями.НужноЗаблокироватьФорму(Объект.СпособСогласования, Форма.СтатусДокументаРегистр);
	
	Если НужноЗаблокироватьФорму	Тогда
		
		Форма["СогласованиеТолькоПросмотр"] = Истина;
		
		Исключения = Новый Соответствие;
		Исключения.Вставить("ФормаКоманднаяПанель", Новый Структура("СПодчиненными", Истина));
		Исключения.Вставить("ГруппаСогласование", Новый Структура("СПодчиненными", Истина));
		Исключения.Вставить("ДиаграммаРемонтов", Новый Структура("СПодчиненными", Истина));
		Исключения.Вставить("ДеревоПланаГрафикаППРСУчетомПозицииПоказыватьПоложение", Новый Структура("СПодчиненными", Ложь));
		Исключения.Вставить("ДеревоПланаГрафикаППРСУчетомПозицииГруппировкаПоМаршруту", Новый Структура("СПодчиненными", Ложь));
		Исключения.Вставить("ДеревоПланаГрафикаППРСУчетомПозицииПоказыватьОР", Новый Структура("СПодчиненными", Ложь));
		Исключения.Вставить("ОбъектыРемонтаОтображатьПоложение", Новый Структура("СПодчиненными", Ложь));
		УстановитьТолькоПросмотрФормы(Форма, Исключения);
		
	КонецЕсли;
	
	СпособНаРедактировании = Ложь;
	Если ЗначениеЗаполнено(Объект.СпособСогласования) Тогда
		Статус = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.СпособСогласования, "Статус", Истина);
		СпособНаРедактировании = (Статус = ПредопределенноеЗначение("Перечисление.торо_СтатусыСпособовСогласованияДокументов.ВРазработке"));
	КонецЕсли;
	
	Элементы.ПредупреждениеСпособРедактируется.Видимость = СпособНаРедактировании;
	Элементы.ДеревоСогласованияУтвердитьСтатус.Доступность = ЗначениеЗаполнено(Объект.СпособСогласования) И НЕ Форма.ТолькоПросмотр И НЕ СпособНаРедактировании;
	
КонецПроцедуры

// Удаляет строки из таблицы ИсторияСтатусов документа. 
//
// Параметры:
//		Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ОчиститьИсториюСтатусов(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Форма.ИсторияСтатусовРегистр.Очистить();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМассивИзДерева(Массив, ЭлементыДерева) Экспорт
	
	Для каждого Элемент Из ЭлементыДерева Цикл
		Массив.Добавить(Элемент);
		ЗаполнитьМассивИзДерева(Массив, Элемент.ПолучитьЭлементы());
	КонецЦикла; 
	
КонецПроцедуры

Процедура УстановитьТолькоПросмотрФормы(Форма, Исключения, ТолькоПросмотр = Истина) Экспорт
	
	МассивИсключений = Новый Массив;
	
	Для каждого КлючИЗначение из Исключения Цикл
		МассивИсключений.Добавить(КлючИЗначение.Ключ);
		Если КлючИЗначение.Значение.СПодчиненными = Истина Тогда
			ЭлементРодитель = Форма.Элементы.Найти(КлючИЗначение.Ключ);
			Если ЭлементРодитель <> Неопределено Тогда
				ДобавитьПодчиненныеЭлементыВМассив(ЭлементРодитель, МассивИсключений);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элемент из Форма.Элементы Цикл
		Если МассивИсключений.Найти(Элемент.Имя) = Неопределено Тогда
			Если ТипЗнч(Элемент) = Тип("ГруппаФормы") И Элемент.Вид = ВидГруппыФормы.Страницы Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(Элемент) = Тип("КнопкаФормы")
				// Чтобы не заблокировалась комбинация клавиш Ctrl+C.
				И (СтрЗаканчиваетсяНа(Элемент.Имя, "КопироватьВБуферОбмена")
					ИЛИ СтрНайти(Элемент.Имя, "ВывестиСписок") > 0
					ИЛИ СтрНайти(Элемент.Имя, "ПоказатьВСписке") > 0
					ИЛИ СтрНайти(Элемент.Имя, "Справка") > 0
					ИЛИ СтрНайти(Элемент.Имя, "ИзменитьФорму") > 0) Тогда
				Продолжить;
			КонецЕсли; 
			
			Попытка 
				Элемент.ТолькоПросмотр = ТолькоПросмотр;
			Исключение
				Попытка 
					Элемент.Доступность = НЕ ТолькоПросмотр;	
				Исключение
				КонецПопытки;	
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПодчиненныеЭлементыВМассив(ЭлементРодитель, МассивИсключений)
	
	Если ТипЗнч(ЭлементРодитель) = Тип("КоманднаяПанельФормы") 
		ИЛИ ТипЗнч(ЭлементРодитель) = Тип("ГруппаФормы")
		ИЛИ ТипЗнч(ЭлементРодитель) = Тип("ТаблицаФормы")
		Тогда
		
		Для каждого ПодчЭлемент из ЭлементРодитель.ПодчиненныеЭлементы Цикл
			МассивИсключений.Добавить(ПодчЭлемент.Имя);
			ДобавитьПодчиненныеЭлементыВМассив(ПодчЭлемент, МассивИсключений);
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ТекущийПользователь()
	
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Возврат Пользователи.ТекущийПользователь();
#Иначе
	Возврат ПользователиКлиент.ТекущийПользователь();
#КонецЕсли
	
КонецФункции

#КонецОбласти
