
////////////////////////////////////////////////////////////////////////////////
// торо_ГарантийноеОбслуживание: методы, реализующие соответствующий функционал
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс
// Функция определяет гарантийный ли ремонт, с указанными датами начала и окончания.
//
// Параметры:
//	 ОбъектРемонта - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта,
//	 ДатаНачала    - Дата - дата начала ремонта, 
//	 ДатаОкончания - Дата - дата окончания ремонта.
//
// Возвращаемое значение:
//		Булево - ремонт гарантийный.
Функция ПолучитьЗначениеФлагаГарантийныйРемонтДляОбъектаРемонта(ОбъектРемонта,ДатаНачала,ДатаОкончания) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТаблицаГаранитийОбъекта = ПолучитьТаблицуГарантийССамимОР(ОбъектРемонта, ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаГаранитийОбъекта.ОбъектРемонта КАК ОбъектРемонта,
	|	ТаблицаГаранитийОбъекта.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	|	ТаблицаГаранитийОбъекта.ДатаНачала КАК ДатаНачала,
	|	ТаблицаГаранитийОбъекта.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаГаранитийОбъекта.ПроверятьНаработку КАК ПроверятьНаработку,
	|	ТаблицаГаранитийОбъекта.ПоказательНаработки КАК ПоказательНаработки,
	|	ТаблицаГаранитийОбъекта.ЗначениеНаработки КАК ЗначениеНаработки
	|ПОМЕСТИТЬ ТаблицаГаранитийОбъекта
	|ИЗ
	|	&ТаблицаГаранитийОбъекта КАК ТаблицаГаранитийОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаГаранитийОбъекта.ОбъектРемонта КАК ОбъектРемонта,
	|	ТаблицаГаранитийОбъекта.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	|	ТаблицаГаранитийОбъекта.ДатаНачала КАК ДатаНачала,
	|	ТаблицаГаранитийОбъекта.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаГаранитийОбъекта.ПроверятьНаработку КАК ПроверятьНаработку,
	|	ТаблицаГаранитийОбъекта.ПоказательНаработки КАК ПоказательНаработки,
	|	ТаблицаГаранитийОбъекта.ЗначениеНаработки КАК ЗначениеНаработки
	|ПОМЕСТИТЬ ГарантииПоСроку
	|ИЗ
	|	ТаблицаГаранитийОбъекта КАК ТаблицаГаранитийОбъекта
	|ГДЕ
	|	ТаблицаГаранитийОбъекта.ПроверятьПериодГарантии = ИСТИНА
	|	И ТаблицаГаранитийОбъекта.ДатаОкончания >= &ДатаНачала
	|	И ТаблицаГаранитийОбъекта.ДатаНачала <= &ДатаНачала
	|	И (&ДатаОкончания >= ТаблицаГаранитийОбъекта.ДатаНачала
	|			ИЛИ &БезДатыОкончания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаГаранитийОбъекта.ОбъектРемонта,
	|	ТаблицаГаранитийОбъекта.ПроверятьПериодГарантии,
	|	ТаблицаГаранитийОбъекта.ДатаНачала,
	|	ТаблицаГаранитийОбъекта.ДатаОкончания,
	|	ТаблицаГаранитийОбъекта.ПроверятьНаработку,
	|	ТаблицаГаранитийОбъекта.ПоказательНаработки,
	|	ТаблицаГаранитийОбъекта.ЗначениеНаработки
	|ИЗ
	|	ТаблицаГаранитийОбъекта КАК ТаблицаГаранитийОбъекта
	|ГДЕ
	|	ТаблицаГаранитийОбъекта.ПроверятьПериодГарантии = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_НаработкаОбъектовРемонтаОстатки.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонтаОстатки.Показатель КАК Показатель,
	|	торо_НаработкаОбъектовРемонтаОстатки.НаработкаОстаток КАК Наработка
	|ПОМЕСТИТЬ ТекущаяНаработка
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта.Остатки(
	|			&ДатаНачала,
	|			(ОбъектРемонта, Показатель) В
	|				(ВЫБРАТЬ
	|					ГарантииПоСроку.ОбъектРемонта,
	|					ГарантииПоСроку.ПоказательНаработки
	|				ИЗ
	|					ГарантииПоСроку КАК ГарантииПоСроку
	|				ГДЕ
	|					ГарантииПоСроку.ПроверятьНаработку)) КАК торо_НаработкаОбъектовРемонтаОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГарантииПоСроку.ОбъектРемонта КАК ОбъектРемонта,
	|	ГарантииПоСроку.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	|	ГарантииПоСроку.ДатаНачала КАК ДатаНачала,
	|	ГарантииПоСроку.ДатаОкончания КАК ДатаОкончания,
	|	ГарантииПоСроку.ПроверятьНаработку КАК ПроверятьНаработку,
	|	ГарантииПоСроку.ПоказательНаработки КАК ПоказательНаработки,
	|	ГарантииПоСроку.ЗначениеНаработки КАК ЗначениеНаработки,
	|	ЕСТЬNULL(ТекущаяНаработка.Наработка, 0) КАК Наработка
	|ПОМЕСТИТЬ ВТ_ГарантииНаработки
	|ИЗ
	|	ГарантииПоСроку КАК ГарантииПоСроку
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущаяНаработка КАК ТекущаяНаработка
	|		ПО (ГарантииПоСроку.ПроверятьНаработку)
	|			И ГарантииПоСроку.ОбъектРемонта = ТекущаяНаработка.ОбъектРемонта
	|			И ГарантииПоСроку.ПоказательНаработки = ТекущаяНаработка.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТ_ГарантииНаработки.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ГарантииНаработки.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	|	ВТ_ГарантииНаработки.ДатаНачала КАК ДатаНачала,
	|	ВТ_ГарантииНаработки.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ГарантииНаработки.ПроверятьНаработку КАК ПроверятьНаработку,
	|	ВТ_ГарантииНаработки.ПоказательНаработки КАК ПоказательНаработки,
	|	ВТ_ГарантииНаработки.ЗначениеНаработки КАК ЗначениеНаработки,
	|	ВТ_ГарантииНаработки.Наработка КАК Наработка
	|ИЗ
	|	ВТ_ГарантииНаработки КАК ВТ_ГарантииНаработки
	|ГДЕ
	|	(ВТ_ГарантииНаработки.ПроверятьНаработку = ИСТИНА
	|			И ВТ_ГарантииНаработки.Наработка >= ВТ_ГарантииНаработки.ЗначениеНаработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ГарантииПоСроку.ОбъектРемонта КАК ОбъектРемонта,
	|	ГарантииПоСроку.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	|	ГарантииПоСроку.ДатаНачала КАК ДатаНачала,
	|	ГарантииПоСроку.ДатаОкончания КАК ДатаОкончания,
	|	ГарантииПоСроку.ПроверятьНаработку КАК ПроверятьНаработку,
	|	ГарантииПоСроку.ПоказательНаработки КАК ПоказательНаработки,
	|	ГарантииПоСроку.ЗначениеНаработки КАК ЗначениеНаработки
	|ИЗ
	|	ГарантииПоСроку КАК ГарантииПоСроку";
	
	Запрос.УстановитьПараметр("ТаблицаГаранитийОбъекта", ТаблицаГаранитийОбъекта);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("БезДатыОкончания", НЕ ЗначениеЗаполнено(ДатаОкончания));
	
	Результат = Запрос.ВыполнитьПакет();
	
	ЕстьПревышениеНаработки = НЕ Результат[4].Пустой();
	ЕстьПодходящиеПоДате = НЕ Результат[5].Пустой();
	
	Гарантия = Ложь;
	Если ЕстьПодходящиеПоДате И Не ЕстьПревышениеНаработки Тогда
		// Истина -- только если нет ни одного превысившего наработку среди родителей и самого ОР.	
		Гарантия = Истина;
	КонецЕсли; 
	
	Возврат Гарантия;
	
КонецФункции

// Функция возвращает дату начала и окончания гарантии, объект гарантии для объекта ремонта переданного
// параметром ОбъектРемонта.
//
// Параметры:
//	 ОбъектРемонта - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта, указанный в строке,
//  ДатаОкончания - Дата - дата окончания ремонта, используется
//					для определения положения в структуре иерархии для иераррхии,
//					в которой объекты перемещаются документами.
//
// Возвращаемое значение:
//		ТаблицаЗначений - таблица гарантий.
//
Функция ПолучитьТаблицуГарантий(ОбъектРемонта, ДатаОкончания = Неопределено) Экспорт
	
	Иерархия = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	
	СписокОбъектовДляПолученияСроковГарантии = ПолучитьСписокОбъектовДляПолученияСроковГарантии(ОбъектРемонта,Иерархия, ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаНачалаГарантии КАК ДатаНачала,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаОкончанияГарантии КАК ДатаОкончания,
	               |	торо_СрокиГарантииОбъектовРемонта.ГарантирующаяОрганизация,
	               |	торо_СрокиГарантииОбъектовРемонта.Договор,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьНаработку КАК ПроверятьНаработку,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПоказательНаработки КАК ПоказательНаработки,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ЗначениеНаработки КАК ЗначениеНаработки
	               |ИЗ
	               |	РегистрСведений.торо_СрокиГарантииОбъектовРемонта КАК торо_СрокиГарантииОбъектовРемонта
	               |ГДЕ
	               |	торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта В(&ОбъектРемонта)";
	
	Запрос.УстановитьПараметр("ОбъектРемонта", СписокОбъектовДляПолученияСроковГарантии);
	
	ТаблицаГарантий = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаГарантий;
	
КонецФункции

// Функция для каждого Объекта ремонта из таблицы возвращает
// Даты начала и окончания гарантии и гарантирующую организацию
// для объектов ремонта, даты ремонтов которых находятся в гарантийном периоде.
//
// Параметры:
//	 ТаблицаСОбъектамиИДатамиРемонтов - ТаблицаЗначений - с колонками: ОбъектРемонта, ДатаНачала, ДатаОкончания.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица гарантий.
Функция ПолучитьТаблицуГарантийДляВсехОбъектов(ТаблицаСОбъектамиИДатамиРемонтов) Экспорт
	
	ТаблицаСОбъектамиГаранитии = ЗаполнитьРодителей(ТаблицаСОбъектамиИДатамиРемонтов);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаСОбъектамиГаранитии.ОбъектРемонта КАК ОбъектРемонта,
	               |	ТаблицаСОбъектамиГаранитии.ОбъектГарантии КАК ОбъектГарантии,
	               |	ТаблицаСОбъектамиГаранитии.ДатаНачала КАК ДатаНачала,
	               |	ТаблицаСОбъектамиГаранитии.ДатаОкончания КАК ДатаОкончания
	               |ПОМЕСТИТЬ втТаблицаДляПолученияГарантийнойИнформации
	               |ИЗ
	               |	&ТаблицаСОбъектамиГаранитии КАК ТаблицаСОбъектамиГаранитии
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектГарантии
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втТаблицаДляПолученияГарантийнойИнформации.ОбъектРемонта КАК ОбъектРемонта,
	               |	втТаблицаДляПолученияГарантийнойИнформации.ДатаНачала КАК ДатаНачала,
	               |	втТаблицаДляПолученияГарантийнойИнформации.ДатаОкончания КАК ДатаОкончания,
	               |	торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта КАК ГарантийныйОбъект,
	               |	торо_СрокиГарантииОбъектовРемонта.ГарантирующаяОрганизация КАК ГарантирующаяОрганизация,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаНачалаГарантии КАК ДатаНачалаГарантии,
	               |	КОНЕЦПЕРИОДА(торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаОкончанияГарантии, ДЕНЬ) КАК ДатаОкончанияГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьНаработку КАК ПроверятьНаработку,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПоказательНаработки КАК ПоказательНаработки,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ЗначениеНаработки КАК ЗначениеНаработки
	               |ПОМЕСТИТЬ УсловияГарантии
	               |ИЗ
	               |	втТаблицаДляПолученияГарантийнойИнформации КАК втТаблицаДляПолученияГарантийнойИнформации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СрокиГарантииОбъектовРемонта КАК торо_СрокиГарантииОбъектовРемонта
	               |		ПО втТаблицаДляПолученияГарантийнойИнформации.ОбъектГарантии = торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УсловияГарантии.ОбъектРемонта КАК ОбъектРемонта,
	               |	УсловияГарантии.ДатаНачала КАК ДатаНачала,
	               |	УсловияГарантии.ДатаОкончания КАК ДатаОкончания,
	               |	УсловияГарантии.ГарантийныйОбъект КАК ГарантийныйОбъект,
	               |	УсловияГарантии.ГарантирующаяОрганизация КАК ГарантирующаяОрганизация,
	               |	УсловияГарантии.ДатаНачалаГарантии КАК ДатаНачалаГарантии,
	               |	УсловияГарантии.ДатаОкончанияГарантии КАК ДатаОкончанияГарантии,
	               |	УсловияГарантии.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	               |	УсловияГарантии.ПроверятьНаработку КАК ПроверятьНаработку,
	               |	УсловияГарантии.ПоказательНаработки КАК ПоказательНаработки,
	               |	УсловияГарантии.ЗначениеНаработки КАК ЗначениеНаработки
	               |ПОМЕСТИТЬ ГарантииПоСрокам
	               |ИЗ
	               |	УсловияГарантии КАК УсловияГарантии
	               |ГДЕ
	               |	УсловияГарантии.ПроверятьПериодГарантии = ИСТИНА
	               |	И УсловияГарантии.ДатаОкончанияГарантии > УсловияГарантии.ДатаНачала
	               |	И УсловияГарантии.ДатаНачалаГарантии <= УсловияГарантии.ДатаНачала
	               |	И (УсловияГарантии.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИЛИ УсловияГарантии.ДатаОкончания > УсловияГарантии.ДатаНачалаГарантии)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УсловияГарантии.ОбъектРемонта,
	               |	УсловияГарантии.ДатаНачала,
	               |	УсловияГарантии.ДатаОкончания,
	               |	УсловияГарантии.ГарантийныйОбъект,
	               |	УсловияГарантии.ГарантирующаяОрганизация,
	               |	УсловияГарантии.ДатаНачалаГарантии,
	               |	УсловияГарантии.ДатаОкончанияГарантии,
	               |	УсловияГарантии.ПроверятьПериодГарантии,
	               |	УсловияГарантии.ПроверятьНаработку,
	               |	УсловияГарантии.ПоказательНаработки,
	               |	УсловияГарантии.ЗначениеНаработки
	               |ИЗ
	               |	УсловияГарантии КАК УсловияГарантии
	               |ГДЕ
	               |	УсловияГарантии.ПроверятьПериодГарантии = ЛОЖЬ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	ПоказательНаработки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_НаработкаОбъектовРемонтаОстатки.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_НаработкаОбъектовРемонтаОстатки.Показатель КАК Показатель,
	               |	торо_НаработкаОбъектовРемонтаОстатки.Период КАК ДатаКон,
	               |	торо_НаработкаОбъектовРемонтаОстатки.НаработкаОборот КАК Наработка
	               |ПОМЕСТИТЬ РазвернутаяНаработка
	               |ИЗ
	               |	РегистрНакопления.торо_НаработкаОбъектовРемонта.Обороты(
	               |			&МинДатаНачала,
	               |			&МаксДатаНачала,
	               |			Секунда,
	               |			(ОбъектРемонта, Показатель) В
	               |				(ВЫБРАТЬ
	               |					ГарантииПоСрокам.ОбъектРемонта,
	               |					ГарантииПоСрокам.ПоказательНаработки
	               |				ИЗ
	               |					ГарантииПоСрокам КАК ГарантииПоСрокам
	               |				ГДЕ
	               |					ГарантииПоСрокам.ПроверятьНаработку)) КАК торо_НаработкаОбъектовРемонтаОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_НаработкаОбъектовРемонтаОстатки.ОбъектРемонта,
	               |	торо_НаработкаОбъектовРемонтаОстатки.Показатель,
	               |	&МинДатаНачала,
	               |	торо_НаработкаОбъектовРемонтаОстатки.НаработкаОстаток
	               |ИЗ
	               |	РегистрНакопления.торо_НаработкаОбъектовРемонта.Остатки(
	               |			&МинДатаНачала,
	               |			(ОбъектРемонта, Показатель) В
	               |				(ВЫБРАТЬ
	               |					ГарантииПоСрокам.ОбъектРемонта,
	               |					ГарантииПоСрокам.ПоказательНаработки
	               |				ИЗ
	               |					ГарантииПоСрокам КАК ГарантииПоСрокам
	               |				ГДЕ
	               |					ГарантииПоСрокам.ПроверятьНаработку)) КАК торо_НаработкаОбъектовРемонтаОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГарантииПоСрокам.ОбъектРемонта КАК ОбъектРемонта,
	               |	ГарантииПоСрокам.ДатаНачала КАК ДатаНачала,
	               |	ГарантииПоСрокам.ДатаОкончания КАК ДатаОкончания,
	               |	ГарантииПоСрокам.ГарантийныйОбъект КАК ГарантийныйОбъект,
	               |	ГарантииПоСрокам.ГарантирующаяОрганизация КАК ГарантирующаяОрганизация,
	               |	ГарантииПоСрокам.ДатаНачалаГарантии КАК ДатаНачалаГарантии,
	               |	ГарантииПоСрокам.ДатаОкончанияГарантии КАК ДатаОкончанияГарантии,
	               |	ГарантииПоСрокам.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	               |	ГарантииПоСрокам.ПроверятьНаработку КАК ПроверятьНаработку,
	               |	ГарантииПоСрокам.ПоказательНаработки КАК ПоказательНаработки,
	               |	ГарантииПоСрокам.ЗначениеНаработки КАК ЗначениеНаработки,
	               |	СУММА(ЕСТЬNULL(РазвернутаяНаработка.Наработка, 0)) КАК Наработка
	               |ПОМЕСТИТЬ ДанныеСНаработкой
	               |ИЗ
	               |	ГарантииПоСрокам КАК ГарантииПоСрокам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РазвернутаяНаработка КАК РазвернутаяНаработка
	               |		ПО (ГарантииПоСрокам.ПроверятьНаработку)
	               |			И ГарантииПоСрокам.ОбъектРемонта = РазвернутаяНаработка.ОбъектРемонта
	               |			И ГарантииПоСрокам.ПоказательНаработки = РазвернутаяНаработка.Показатель
	               |			И ГарантииПоСрокам.ДатаНачала >= РазвернутаяНаработка.ДатаКон
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ГарантииПоСрокам.ОбъектРемонта,
	               |	ГарантииПоСрокам.ДатаНачала,
	               |	ГарантииПоСрокам.ДатаОкончания,
	               |	ГарантииПоСрокам.ГарантийныйОбъект,
	               |	ГарантииПоСрокам.ГарантирующаяОрганизация,
	               |	ГарантииПоСрокам.ДатаНачалаГарантии,
	               |	ГарантииПоСрокам.ДатаОкончанияГарантии,
	               |	ГарантииПоСрокам.ПроверятьПериодГарантии,
	               |	ГарантииПоСрокам.ПроверятьНаработку,
	               |	ГарантииПоСрокам.ПоказательНаработки,
	               |	ГарантииПоСрокам.ЗначениеНаработки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеСНаработкой.ОбъектРемонта КАК ОбъектРемонта,
	               |	ДанныеСНаработкой.ДатаНачала КАК ДатаНачала,
	               |	ДанныеСНаработкой.ДатаОкончания КАК ДатаОкончания,
	               |	ДанныеСНаработкой.ГарантийныйОбъект КАК ГарантийныйОбъект,
	               |	ДанныеСНаработкой.ГарантирующаяОрганизация КАК ГарантирующаяОрганизация,
	               |	ДанныеСНаработкой.ДатаНачалаГарантии КАК ДатаНачалаГарантии,
	               |	ДанныеСНаработкой.ДатаОкончанияГарантии КАК ДатаОкончанияГарантии,
	               |	ДанныеСНаработкой.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	               |	ДанныеСНаработкой.ПроверятьНаработку КАК ПроверятьНаработку,
	               |	ДанныеСНаработкой.ПоказательНаработки КАК ПоказательНаработки,
	               |	ДанныеСНаработкой.ЗначениеНаработки КАК ЗначениеНаработки,
	               |	ДанныеСНаработкой.Наработка КАК Наработка
	               |ИЗ
	               |	ДанныеСНаработкой КАК ДанныеСНаработкой
	               |ГДЕ
	               |	(ДанныеСНаработкой.ПроверятьНаработку = ЛОЖЬ
	               |			ИЛИ ДанныеСНаработкой.Наработка <= ДанныеСНаработкой.ЗначениеНаработки)";
	
	Запрос.УстановитьПараметр("ТаблицаСОбъектамиГаранитии", ТаблицаСОбъектамиГаранитии);
	
	Если ТаблицаСОбъектамиГаранитии.Количество() > 0 Тогда
		МаксДатаНачала = ТаблицаСОбъектамиГаранитии[0].ДатаНачала;
		МинДатаНачала = ТаблицаСОбъектамиГаранитии[0].ДатаНачала;
		Для каждого СтрокаТаблицы из ТаблицаСОбъектамиГаранитии Цикл
			Если СтрокаТаблицы.ДатаНачала > МаксДатаНачала Тогда
				МаксДатаНачала = СтрокаТаблицы.ДатаНачала;
			КонецЕсли;
			Если СтрокаТаблицы.ДатаНачала < МинДатаНачала Тогда
				МинДатаНачала = СтрокаТаблицы.ДатаНачала;
			КонецЕсли;
		КонецЦикла;
		Запрос.УстановитьПараметр("МаксДатаНачала", МаксДатаНачала);
		Запрос.УстановитьПараметр("МинДатаНачала", МинДатаНачала);
	Иначе
		Запрос.УстановитьПараметр("МинДатаНачала", Дата(1,1,1));
		Запрос.УстановитьПараметр("МаксДатаНачала", Дата(1,1,1));
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Формирует предупреждения.
//
// Параметры:
//  ОбъектФормы - Объект - объект формы.
//  ИмяТЧ - Строка - имя табличной части.
//  ТабОбъектов - ТаблицаЗначений - таблица объектов.
Процедура СформироватьПредупрежденияОРекламационныхАктах(Знач ОбъектФормы, ИмяТЧ, ТабОбъектов = Неопределено) Экспорт
	
	ДатаОбнаружения = Дата(1, 1, 1);
	Если ТабОбъектов <> Неопределено Тогда
		ТаблицаСОбъектамиИДатамиРемонтов = ТабОбъектов.Скопировать(Новый Структура("ГарантийныйРемонт", Истина));
		ДатаОбнаружения = ТабОбъектов[0].ДатаОбнаружения;
		Если ТабОбъектов.Колонки.Найти("ДатаОбнаружения") <> Неопределено Тогда
			ДатаОбнаружения = ТабОбъектов[0].ДатаОбнаружения;
		КонецЕсли;
	Иначе
		ТаблицаСОбъектамиИДатамиРемонтов = ОбъектФормы[ИмяТЧ].Выгрузить().Скопировать(Новый Структура("ГарантийныйРемонт", Истина));
		Если ОбъектФормы.Свойство("ДатаОбнаружения") Тогда 
			ДатаОбнаружения = ОбъектФормы.ДатаОбнаружения;
		КонецЕсли;
	КонецЕсли;
	
	КолонкаОтказавшийЭлемент = ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Найти("ОтказавшийЭлемент");
	КолонкаПлановаяДатаРемонта =  ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Найти("ПлановаяДатаРемонта");
	КолонкаДатаОкончанияРемонта = ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Найти("ДатаОкончанияРемонта");
	
	Если Не КолонкаОтказавшийЭлемент = Неопределено Тогда
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.ОбъектРемонта.Имя     = "ОбъектРемонтаРодитель";
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.ОтказавшийЭлемент.Имя = "ОбъектРемонта";
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Добавить("ДатаОкончания");
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Добавить("ДатаНачала");
		ТаблицаСОбъектамиИДатамиРемонтов.ЗаполнитьЗначения(ДатаОбнаружения, "ДатаНачала");
	ИначеЕсли Не КолонкаПлановаяДатаРемонта = Неопределено Тогда
		
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.ПлановаяДатаРемонта.Имя = "ДатаОкончания";
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.Добавить("ДатаНачала");
		Для каждого Строка Из ТаблицаСОбъектамиИДатамиРемонтов Цикл
			Строка.ДатаНачала = НачалоДня(Строка.ДатаОкончания);
		КонецЦикла; 
	ИначеЕсли НЕ КолонкаДатаОкончанияРемонта = Неопределено Тогда
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.ДатаНачалаРемонта.Имя    = "ДатаНачала";
		ТаблицаСОбъектамиИДатамиРемонтов.Колонки.ДатаОкончанияРемонта.Имя = "ДатаОкончания";
		НС = ТаблицаСОбъектамиИДатамиРемонтов.Добавить();
		ЗаполнитьЗначенияСвойств(НС, ОбъектФормы);
		НС.ДатаНачала = ОбъектФормы.ДатаНачалаРемонта;
		НС.ДатаОкончания = ОбъектФормы.ДатаОкончанияРемонта;
	КонецЕсли; 
	
	ТаблицаГарантий = ПолучитьТаблицуГарантийДляВсехОбъектов(ТаблицаСОбъектамиИДатамиРемонтов);
	
	Для каждого Строка Из ТаблицаГарантий Цикл
		
		ШаблонСообщения = НСтр("ru = 'Оборудование <%1> находится на гарантийном обслуживании у организации %2. Необходимо оформить рекламационный акт.'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Строка.ГарантийныйОбъект, Строка.ГарантирующаяОрганизация);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
	КонецЦикла; 
	
КонецПроцедуры

// Проверяет наличие контрагентов в документах.
//
// Параметры:
//  ДокОбъект - ДокументОбъект - объект.
//  ИмяТЧ - Строка - имя табличной части.
//  ИмяРеквизита - Строка - Имя реквизита.
//  Отказ - Булево - отказ.
Процедура ПроверитьНаличиеКонтрагентов(ДокОбъект, ИмяТЧ, ИмяРеквизита, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументРемонтыОборудования.ID,
	|	ДокументРемонтыОборудования.ГарантийныйРемонт
	|ПОМЕСТИТЬ ДокументРемонтыОборудования
	|ИЗ
	|	&ДокументРемонтыОборудования КАК ДокументРемонтыОборудования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументИсполнителиРемонтныхРабот.РемонтыОборудования_ID,
	|	ДокументИсполнителиРемонтныхРабот." + ИмяРеквизита + " КАК Исполнитель
	|ПОМЕСТИТЬ ДокументИсполнителиРемонтныхРабот
	|ИЗ
	|	&ДокументИсполнителиРемонтныхРабот КАК ДокументИсполнителиРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументРемонтыОборудования.ID КАК ID,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ДокументИсполнителиРемонтныхРабот.Исполнитель КАК Справочник.Контрагенты) ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьКонтрагент
	|ИЗ
	|	ДокументРемонтыОборудования КАК ДокументРемонтыОборудования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументИсполнителиРемонтныхРабот КАК ДокументИсполнителиРемонтныхРабот
	|		ПО ДокументРемонтыОборудования.ID = ДокументИсполнителиРемонтныхРабот.РемонтыОборудования_ID
	|ГДЕ
	|	ДокументРемонтыОборудования.ГарантийныйРемонт
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументРемонтыОборудования.ID";
	
	Запрос.УстановитьПараметр("ДокументРемонтыОборудования", ДокОбъект.РемонтыОборудования.Выгрузить());
	Запрос.УстановитьПараметр("ДокументИсполнителиРемонтныхРабот", ДокОбъект[ИмяТЧ].Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ЕстьКонтрагент Тогда
				
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		ТекстСообщения = НСтр("ru = 'Ремонт гарантийного оборудования собственными силами запрещён. Подрядчик выбирается только для технологической карты. Добавьте технологическую карту и назначьте ей подрядчика.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция для каждой строки таблицы проставлят признак гарантийности ремонта.
//
// Параметры:
//	 ТаблицаСОбъектамиИДатамиРемонтов - ТаблицаЗначений - с колонками: ОбъектРемонта, ДатаНачала, ДатаОкончания, ГарантийныйРемонт.
//
Процедура ПроставитьЗначениеФлагаГарантийныйВТаблице(ТаблицаСОбъектамиИДатамиРемонтов) Экспорт
	
	ПолнаяТаблицаГарантий = ПолучитьТаблицуГарантийДляВсехОбъектов(ТаблицаСОбъектамиИДатамиРемонтов);
	ПолнаяТаблицаГарантий.Свернуть("ОбъектРемонта, ДатаНачала, ДатаОкончания");
	
	СтруктураПоиска = Новый Структура("ОбъектРемонта, ДатаНачала, ДатаОкончания");
	
	Для каждого Строка из ТаблицаСОбъектамиИДатамиРемонтов Цикл
		Строка.ГарантийныйРемонт = Ложь;
	КонецЦикла;
	
	Для каждого Строка из ПолнаяТаблицаГарантий Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
		НайденныеСтроки = ТаблицаСОбъектамиИДатамиРемонтов.НайтиСтроки(СтруктураПоиска);
		Для каждого НайденнаяСтрока из НайденныеСтроки Цикл
			НайденнаяСтрока.ГарантийныйРемонт = Истина;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Проверяет гарантийность для ремонтов, введеных после наработки. 
//
// Параметры:
//  Регистратор			 - 	ДокументСсылка.торо_УстановкаПроизвольногоЗначенияНаработки, 
//							ДокументСсылка.торо_УчетНаработкиОборудования - Ссылка на документ наработки.
//
Процедура ПроверитьГарантийностьРемонтовПослеНаработки(Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ГарантийностьРемонтов.Период КАК Период,
	               |	торо_ГарантийностьРемонтов.Регистратор КАК Регистратор,
	               |	торо_ГарантийностьРемонтов.IDРемонта КАК IDРемонта
	               |ПОМЕСТИТЬ ВТ_Ремонты
	               |ИЗ
	               |	РегистрСведений.торо_ГарантийностьРемонтов КАК торо_ГарантийностьРемонтов
	               |ГДЕ
	               |	торо_ГарантийностьРемонтов.Регистратор = &Регистратор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта,
	               |	Регистратор,
	               |	Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ГарантийностьРемонтов.Период КАК Период,
	               |	торо_ГарантийностьРемонтов.Регистратор КАК Регистратор,
	               |	торо_ГарантийностьРемонтов.IDРемонта КАК IDРемонта
	               |ПОМЕСТИТЬ ВТ_РемонтыПослеНаработки
	               |ИЗ
	               |	ВТ_Ремонты КАК ВТ_Ремонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ГарантийностьРемонтов КАК торо_ГарантийностьРемонтов
	               |		ПО ВТ_Ремонты.IDРемонта = торо_ГарантийностьРемонтов.IDРемонта
	               |			И ВТ_Ремонты.Период < торо_ГарантийностьРемонтов.Период
	               |			И (НЕ ВТ_Ремонты.Регистратор = торо_ГарантийностьРемонтов.Регистратор)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_РемонтыПослеНаработки.IDРемонта КАК IDРемонта,
	               |	ВТ_РемонтыПослеНаработки.Регистратор КАК Регистратор,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ВТ_РемонтыПослеНаработки.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот)
	               |				ИЛИ ТИПЗНАЧЕНИЯ(ВТ_РемонтыПослеНаработки.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |			ТОГДА торо_СвернутыеФактическиеДатыРемонтов.ОбъектРемонта
	               |		ИНАЧЕ торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта
	               |	КОНЕЦ КАК ОбъектРемонта,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ВТ_РемонтыПослеНаработки.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот)
	               |				ИЛИ ТИПЗНАЧЕНИЯ(ВТ_РемонтыПослеНаработки.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |			ТОГДА торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала
	               |		ИНАЧЕ торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала
	               |	КОНЕЦ КАК ДатаНачала,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ВТ_РемонтыПослеНаработки.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот)
	               |				ИЛИ ТИПЗНАЧЕНИЯ(ВТ_РемонтыПослеНаработки.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |			ТОГДА торо_СвернутыеФактическиеДатыРемонтов.ДатаОкончания
	               |		ИНАЧЕ торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания
	               |	КОНЕЦ КАК ДатаОкончания
	               |ИЗ
	               |	ВТ_РемонтыПослеНаработки КАК ВТ_РемонтыПослеНаработки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	               |		ПО ВТ_РемонтыПослеНаработки.IDРемонта = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СвернутыеФактическиеДатыРемонтов КАК торо_СвернутыеФактическиеДатыРемонтов
	               |		ПО ВТ_РемонтыПослеНаработки.IDРемонта = торо_СвернутыеФактическиеДатыРемонтов.IDРемонта";
	
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.торо_ГарантийностьРемонтов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			Если Запись.IDРемонта = Выборка.IDРемонта Тогда
				Запись.Гарантийный = ПолучитьЗначениеФлагаГарантийныйРемонтДляОбъектаРемонта(Выборка.ОбъектРемонта, Выборка.ДатаНачала, Выборка.ДатаОкончания);
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;		
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Функция возвращает дату начала и окончания гарантии, объект гарантии для объекта ремонта переданного
// параметром ОбъектРемонта.
//
// Параметры:
//	 ОбъектРемонта - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта, указанный в строке,
//  ДатаОкончания - Дата - дата окончания ремонта, используется
//					для определения положения в структуре иерархии для иераррхии,
//					в которой объекты перемещаются документами.
//
// Возвращаемое значение:
//		ТаблицаЗначений - таблица гарантий.
//
Функция ПолучитьТаблицуГарантийССамимОР(ОбъектРемонта, ДатаОкончания = Неопределено) Экспорт
	
	Иерархия = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	
	ТаблицаОбъектовДляПолученияСроковГарантии = ПолучитьТаблицуОбъектовДляПолученияСроковГарантии(ОбъектРемонта,Иерархия, ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаОбъектов.ОбъектРемонта КАК ОбъектРемонта,
	               |	ТаблицаОбъектов.Родитель КАК Родитель
	               |ПОМЕСТИТЬ ВТ_ТаблицаОбъектов
	               |ИЗ
	               |	&ТаблицаОбъектов КАК ТаблицаОбъектов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаОбъектов.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии КАК УсловияГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаНачалаГарантии КАК ДатаНачала,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаОкончанияГарантии КАК ДатаОкончания,
	               |	торо_СрокиГарантииОбъектовРемонта.ГарантирующаяОрганизация КАК ГарантирующаяОрганизация,
	               |	торо_СрокиГарантииОбъектовРемонта.Договор КАК Договор,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьПериодГарантии КАК ПроверятьПериодГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьНаработку КАК ПроверятьНаработку,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПоказательНаработки КАК ПоказательНаработки,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ЗначениеНаработки КАК ЗначениеНаработки
	               |ИЗ
	               |	ВТ_ТаблицаОбъектов КАК ВТ_ТаблицаОбъектов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СрокиГарантииОбъектовРемонта КАК торо_СрокиГарантииОбъектовРемонта
	               |		ПО ВТ_ТаблицаОбъектов.ОбъектРемонта = торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаОбъектов.ОбъектРемонта,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаНачалаГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ДатаОкончанияГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.ГарантирующаяОрганизация,
	               |	торо_СрокиГарантииОбъектовРемонта.Договор,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьПериодГарантии,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПроверятьНаработку,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ПоказательНаработки,
	               |	торо_СрокиГарантииОбъектовРемонта.УсловияГарантии.ЗначениеНаработки
	               |ИЗ
	               |	ВТ_ТаблицаОбъектов КАК ВТ_ТаблицаОбъектов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СрокиГарантииОбъектовРемонта КАК торо_СрокиГарантииОбъектовРемонта
	               |		ПО ВТ_ТаблицаОбъектов.Родитель = торо_СрокиГарантииОбъектовРемонта.ОбъектРемонта";
	
	Запрос.УстановитьПараметр("ТаблицаОбъектов", ТаблицаОбъектовДляПолученияСроковГарантии);
	Запрос.УстановитьПараметр("ОбъектРемонта", ТаблицаОбъектовДляПолученияСроковГарантии.ВыгрузитьКолонку("ОбъектРемонта"));
	
	ТаблицаГарантий = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаГарантий;
	
КонецФункции

// Функция возвращает таблицу родителей объекта ремонта для определения
// для них сроков гарантии и гарантирующих организаций.
// Параметры:
//	ОР - Объект ремонта,
//	Иерархия - иерархия для ввода новых объектов ремонта,
//	ДатаОкончания - Дата окончания ремонта, используется в случае,
//	когда объекты ремонта в иерархии перемещаются документами,
//  ТЗРезультат - таблица иеирархии, если не передана параметром, то будет получена.
// Возвращаемое значение: 
//		СписокЗначений - список объектов.
Функция ПолучитьТаблицуОбъектовДляПолученияСроковГарантии(ОР, Иерархия, ДатаОкончания = Неопределено, ТЗРезультат = Неопределено) 
		
	ТаблицаОбъектовДляПолученияСроковГарантии = Новый ТаблицаЗначений;
	ОписаниеТипаОР = Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта");
	ТаблицаОбъектовДляПолученияСроковГарантии.Колонки.Добавить("ОбъектРемонта", ОписаниеТипаОР);
	ТаблицаОбъектовДляПолученияСроковГарантии.Колонки.Добавить("Родитель", ОписаниеТипаОР);
	
	ЗаполнитьРодителейТаблицей(ОР, ТаблицаОбъектовДляПолученияСроковГарантии, Иерархия);
			
	Возврат ТаблицаОбъектовДляПолученияСроковГарантии;
	
КонецФункции

// Функция возвращает список родителей объекта ремонта для определения
// для них сроков гарантии и гарантирующих организаций.
// Параметры:
//	ОР - Объект ремонта,
//	Иерархия - иерархия для ввода новых объектов ремонта,
//	ДатаОкончания - Дата окончания ремонта, используется в случае,
//	когда объекты ремонта в иерархии перемещаются документами,
//  ТЗРезультат - таблица иеирархии, если не передана параметром, то будет получена.
// Возвращаемое значение: 
//		СписокЗначений - список объектов.
Функция ПолучитьСписокОбъектовДляПолученияСроковГарантии(ОР, Иерархия, ДатаОкончания = Неопределено, ТЗРезультат = Неопределено) 
		
	СписокОбъектовДляПолученияСроковГарантии = Новый СписокЗначений;
	СписокОбъектовДляПолученияСроковГарантии.Добавить(ОР);
	
	Если НЕ Иерархия.СтроитсяАвтоматически Тогда
		торо_РаботаСИерархией20.ЗаполнитьМассивРодителейОбъектаРемонта(ОР, СписокОбъектовДляПолученияСроковГарантии, Иерархия);
	КонецЕсли;
			
	Возврат СписокОбъектовДляПолученияСроковГарантии;
	
КонецФункции

Процедура ЗаполнитьРодителейТаблицей(ОбъектРемонта, ТаблицаОбъектов, СтруктураИерархии)

	ЭлементРодитель = торо_РаботаСИерархией20.ПолучитьТекущегоРодителяВИерархии(ОбъектРемонта, СтруктураИерархии);
	
	Если ТипЗнч(ЭлементРодитель) = Тип("Строка") Тогда
		НоваяСтрока = ТаблицаОбъектов.Добавить();
		НоваяСтрока.ОбъектРемонта = ОбъектРемонта;
		НоваяСтрока.Родитель = Справочники.торо_ОбъектыРемонта.ПустаяСсылка();
	 	Возврат;
	КонецЕсли;
	
	НоваяСтрока = ТаблицаОбъектов.Добавить();
	НоваяСтрока.ОбъектРемонта = ОбъектРемонта;
	НоваяСтрока.Родитель = ЭлементРодитель;
	
	ЗаполнитьРодителейТаблицей(ЭлементРодитель, ТаблицаОбъектов, СтруктураИерархии);
	

КонецПроцедуры

// Рекурсивная процедура - заполняет список родителей для объекта ремонта, переданного параметром
// изначально вызывается из функции ПолучитьСписокОбъектовДляПолученияСроковГарантии.
// Параметры:
//		Список - список для добавления родителей,
//		ОР - Объект ремонта,
//		ТЗИерархии - таблица иеирархии.
Процедура ЗаполнитьСписиокРодителейОбъектаРемонта(Список, ОР, ТЗИерархии)
	
	МассивСтрок = ТЗИерархии.НайтиСтроки(Новый Структура("ОбъектИерархии", ОР));
	
	Если МассивСтрок.Количество() > 0 Тогда
		
		Родитель = МассивСтрок[0].РодительИерархии;
		Если ЗначениеЗаполнено(Родитель) Тогда
			Список.Добавить(Родитель);
			ЗаполнитьСписиокРодителейОбъектаРемонта(Список, Родитель, ТЗИерархии);
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет фомирвание списка родителей для каждого Объекта ремонта из
// переданной в качетсвве параметра ТЗ.
// Параметры:
//	 ТаблицаСОбъектамиИДатамиРемонтов - ТаблицаЗначений с колонками: ОбъектРемонта, ДатаНачала, ДатаОкончания. 
Функция ЗаполнитьРодителей(ТаблицаСОбъектамиИДатамиРемонтов)
		
	Иерархия = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.торо_ОбъектыРемонта"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);
	
	ТаблицаЗначений.Колонки.Добавить("ОбъектРемонта", ОписаниеТипов);
	ТаблицаЗначений.Колонки.Добавить("ОбъектГарантии",ОписаниеТипов);
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Дата"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	
	ТаблицаЗначений.Колонки.Добавить("ДатаНачала",    ОписаниеТипов);
	ТаблицаЗначений.Колонки.Добавить("ДатаОкончания", ОписаниеТипов);
	
	Если НЕ Иерархия.СтроитсяАвтоматически Тогда
		ТаблицаИерархии = торо_РаботаСИерархией20.ПолучитьТаблицуИерархии(Иерархия);
		ТаблицаИерархии.Индексы.Добавить("ОбъектИерархии");	
	КонецЕсли;
	
	Для каждого Строка Из ТаблицаСОбъектамиИДатамиРемонтов Цикл
		
		СписокОбъектовДляПолученияСроковГарантии = Новый СписокЗначений;
		
		Если Иерархия.СтроитсяАвтоматически Тогда
			СписокОбъектовДляПолученияСроковГарантии.Добавить(Строка.ОбъектРемонта);
		Иначе
			ЗаполнитьСписиокРодителейОбъектаРемонта(СписокОбъектовДляПолученияСроковГарантии, Строка.ОбъектРемонта, ТаблицаИерархии);
			СписокОбъектовДляПолученияСроковГарантии.Добавить(Строка.ОбъектРемонта);
		КонецЕсли;
		
		Для каждого Элемент Из СписокОбъектовДляПолученияСроковГарантии Цикл
			Нс = ТаблицаЗначений.Добавить();
			Нс.ОбъектРемонта  = Строка.ОбъектРемонта;
			Нс.ДатаНачала     = Строка.ДатаНачала; 
			Нс.ДатаОкончания  = Строка.ДатаОкончания ;
			Нс.ОбъектГарантии = Элемент.Значение;
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТаблицаЗначений;
	
КонецФункции

#КонецОбласти




