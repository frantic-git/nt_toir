////////////////////////////////////////////////////////////////////////////////
// торо_НастройкаПорядкаЭлементов: методы, для работы с порядком элементо
//
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс
// Заполняет значение реквизита дополнительного упорядочивания у объекта.
//
// Параметры:
//		Ссылка - Объект - записываемый объект;
//		СтруктураИерархии - СправочникСсылка.торо_СтруктурыОР - структура иерархии.
//		Отказ - Булево - признак отказа от записи объекта.
//		УстанавливаемоеЗначение - Число - значение реквизита доп. упорядочивания, которое нужно установить.
//													Если не задано, то рассчитывается автоматически.
//
Процедура ЗаполнитьЗначениеРеквизитаУпорядочивания(Ссылка, СтруктураИерархии, Отказ, УстанавливаемоеЗначение = Неопределено) Экспорт
	
	// Если в обработчике был установлен отказ новый порядок не вычисляем.
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Вычислим новое значение для порядка элемента.
	Запись = РегистрыСведений.торо_ПорядокОРПоИерархии.СоздатьМенеджерЗаписи();
	Запись.ОбъектРемонта = Ссылка;
	Запись.СтруктураИерархии = СтруктураИерархии;
	Если УстанавливаемоеЗначение = Неопределено Тогда
		Запись.РеквизитДопУпорядочиванияОР = ПолучитьМаксимальноеЗначениеРеквизитаДопУпорядоивания(СтруктураИерархии);
	Иначе
		Запись.РеквизитДопУпорядочиванияОР = УстанавливаемоеЗначение;
	КонецЕсли;
	Запись.Записать(Истина);
						
КонецПроцедуры

// Возвращает максимальное значение реквизита доп. упорядочивания.
// Параметры:
//		Иерархия - СправочникСсылка.торо_СтруктурыОР - структура иерархии.
// Возвращаемое значение:
//		Число - максимальное значение.
Функция ПолучитьМаксимальноеЗначениеРеквизитаДопУпорядоивания(Иерархия) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.РеквизитДопУпорядочиванияОР КАК РеквизитДопУпорядочивания
	|ИЗ
	|	РегистрСведений.торо_ПорядокОРПоИерархии КАК Таблица
	|ГДЕ
	|	Таблица.СтруктураИерархии = &СтруктураИерархии
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеквизитДопУпорядочивания УБЫВ";
	
	Запрос.УстановитьПараметр("СтруктураИерархии", Иерархия);
	
	РезЗапроса = Запрос.Выполнить();
	
	Если РезЗапроса.Пустой() Тогда 
		возврат 1; 
	КонецЕсли;
	
	Выборка = РезЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.РеквизитДопУпорядочивания + 1;	
	
КонецФункции

#КонецОбласти

