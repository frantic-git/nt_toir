
////////////////////////////////////////////////////////////////////////////////////////
// СопоставлениеНоменклатурыКонтрагентовКлиентПереопределяемый: 
// механизм сопоставления номенклатуры контрагентов с номенклатурой информационной базы.
//
////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПереопределяемыеКоманды_НоменклатурыКонтрагентов

// Выполняет подключаемую переопределяемую команду для форм справочника НоменклатураКонтрагентов.
//
// Параметры:
//  Форма   - ФормаКлиентскогоПриложения - форма, в которой расположена команда.
//  Команда - КомандаФормы               - команда формы.
//
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду_НоменклатурыКонтрагентов(Форма, Команда) Экспорт
		
КонецПроцедуры

// Выполняет подключаемую переопределяемую команду интеграции для форм справочника НоменклатураКонтрагентов.
//
// Параметры:
//  Форма    - ФормаКлиентскогоПриложения                 - форма, в которой расположена команда.
//  Команда  - КомандаФормы                               - команда формы.
//  Источник - ДанныеФормыСтруктура, ДанныеФормыКоллекция - данные, уточняющие параметр команды.
//
Процедура Подключаемый_ВыполнитьКомандуИнтеграции_НоменклатурыКонтрагентов(Форма, Команда, Источник) Экспорт	
	
КонецПроцедуры

#Область РаботаСФайлами

// См. РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов_НоменклатурыКонтрагентов(Форма, Команда) Экспорт
	
КонецПроцедуры

// См. РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания_НоменклатурыКонтрагентов(Форма,
																						Элемент,
																						ПараметрыПеретаскивания,
																						СтандартнаяОбработка) Экспорт
		
КонецПроцедуры

// См. РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание_НоменклатурыКонтрагентов(Форма, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка) Экспорт
		
КонецПроцедуры

// См. РаботаСФайламиКлиент.ПолеПредпросмотраНажатие
Процедура Подключаемый_ПолеПредпросмотраНажатие_НоменклатурыКонтрагентов(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий_ФормыНоменклатурыКонтрагентов

// Обработчик события "ПослеЗаписи" формы элемента справочника НоменклатураКонтрагентов.
//
// Параметры:
//  Форма           - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  ПараметрыЗаписи - Структура                  - содержит параметры записи.
//
Процедура ПослеЗаписи_ФормаЭлементаНоменклатурыКонтрагентов(Форма, ПараметрыЗаписи) Экспорт
		
КонецПроцедуры

// Обработчик события "ПриОткрытии" формы элемента справочника НоменклатураКонтрагентов.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ - Булево                     - признак отказа от создания формы.
//
Процедура ПриОткрытии_ФормаЭлементаНоменклатурыКонтрагентов(Форма, Отказ) Экспорт

КонецПроцедуры

// Обработчик события "ОбработкаОповещения" формы элемента справочника НоменклатураКонтрагентов.
// 
// Параметры:
//  Форма      - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  ИмяСобытия - Строка                     - имя события обработки оповещения.
//  Параметр   - Произвольный               - параметр, переданный в сообщении
//  Источник   - Произвольный               - источник события, переданный в сообщении.
//
Процедура ОбработкаОповещения_ФормаЭлементаНоменклатурыКонтрагентов(Форма, ИмяСобытия, Параметр, Источник) Экспорт

КонецПроцедуры

#КонецОбласти

#Область РаботаСФормамиОбъектовИБ

//++ Локализация

// Выполняется при создании номенклатуры информационной базы по данным контрагента.
//
// Параметры:
//  НаборНоменклатурыКонтрагентов - Массив - номенклатура контрагентов, по которой нужно создать номенклатуру информационной базы.
//                                           См. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента.
//  ОповещениеОЗавершении - ОписаниеОповещения - 
//   оповещение, которое нужно выполнить после создания номенклатуры с результатом, представляющим массив структур со свойствами:
//   * НоменклатураКонтрагента - Структура - элемент из параметра НаборНоменклатурыКонтрагентов, для которого удалось создать номенклатуру.
//   * НоменклатураИБ - Структура - описание созданной номенклатуры. См. СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//  СтандартнаяОбработка - Булево - если метод реализован, то необходимо установить значение Ложь.
//
Процедура ПриСозданииНоменклатурыПоДаннымКонтрагента(Знач НаборНоменклатурыКонтрагентов, Знач ОповещениеОЗавершении, СтандартнаяОбработка = Истина) Экспорт

	СтандартнаяОбработка = Ложь;
	
	Обработка = Новый ОписаниеОповещения("ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента", ЭтотОбъект);
	
	Параметры = Новый Структура;
	Параметры.Вставить("НаборНоменклатурыКонтрагентов", НаборНоменклатурыКонтрагентов);
	Параметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Обработка = Новый ОписаниеОповещения("ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента", ЭтотОбъект);
	
	ПроцессВыполнения = НовыйПроцессВыполнения(Параметры, Обработка);
	
	ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента(ПроцессВыполнения);

КонецПроцедуры

// Открывает форму элемента номенклатуры информационной базы.
//
// Параметры:
//  Параметры           - Структура                  - параметры формы.
//  Владелец            - ФормаКлиентскогоПриложения - владелец формы.
//  Уникальность        - Произвольный               - ключ уникальности формы.
//  ОповещениеОЗакрытии - ОписаниеОповещения         - описание оповещения о закрытии, с которым нужно открыть форму.
//
// Пример:
//  ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", Параметры, Владелец, Уникальность);
//
Процедура ОткрытьФормуНоменклатуры(Знач Параметры, Знач Владелец, Знач Уникальность, Знач ОповещениеОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",
		Параметры, Владелец, Уникальность,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

//-- Локализация

// Открывает форму выбора элемента номенклатуры информационной базы.
//
// Параметры:
//  Параметры - Структура - параметры формы.
//  Владелец - ФормаКлиентскогоПриложения - владелец формы.
//  Уникальность - Произвольный - ключ уникальности формы.
//
// Пример:
//  ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", Параметры, Владелец, Уникальность);
//
Процедура ОткрытьФормуВыбораНоменклатуры(Знач Параметры, Знач Владелец, Знач Уникальность) Экспорт

	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", 
		Параметры, Владелец, Уникальность,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Процедура ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента(Знач ПроцессВыполнения, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	ТекущийЭтап = "ПолучитьСведенияОНабореНоменклатурыКонтрагентов";
	СведенияОНаборе = Неопределено;
	Если Не ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, СведенияОНаборе) Тогда
		СведенияОНаборе = СведенияОНабореНоменклатурыКонтрагентов(ПроцессВыполнения.Параметры.НаборНоменклатурыКонтрагентов);
		Если СведенияОНаборе.Количество <= 1 Тогда
			ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
			Возврат;
		КонецЕсли;
		ПроцессВыполнения.Выполнено.Вставить(ТекущийЭтап, СведенияОНаборе);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОНаборе.Различия) Тогда
		
		ТекущийЭтап = "ПоказатьВопросОСозданииНоменклатурыСРазличиями";
		ОтветНаВопрос = Неопределено;
		Если ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, ОтветНаВопрос) Тогда
			Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
				ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
				Возврат;
			КонецЕсли;
		Иначе
			ПроцессВыполнения.Вставить("ТекущийЭтап", ТекущийЭтап);
			ПоказатьВопросОСозданииНоменклатурыСРазличиями(СведенияОНаборе.Различия, ПроцессВыполнения);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийЭтап = "ВыбратьЗначенияДляСозданияНоменклатуры";
	ВыбранныеЗначения = Неопределено;
	Если ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, ВыбранныеЗначения) Тогда
		Если ВыбранныеЗначения = Неопределено Тогда
			ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
			Возврат;
		КонецЕсли;
	Иначе
		ПроцессВыполнения.Вставить("ТекущийЭтап", ТекущийЭтап);
		НачатьВыборЗначенийДляСозданияНоменклатуры(СведенияОНаборе.Значения, ПроцессВыполнения);
		Возврат;
	КонецЕсли;
	
	СозданнаяНоменклатура = торо_ТорговыеПредложенияКЭДОВызовСервера.СоздатьНоменклатуруПоДаннымКонтрагента(
		ПроцессВыполнения.Параметры.НаборНоменклатурыКонтрагентов, ВыбранныеЗначения);
		
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, СозданнаяНоменклатура);
	
КонецПроцедуры

Функция НовыйПроцессВыполнения(Знач Параметры, Знач ОсновнойОбработчик)
	
	ПроцессВыполнения = Новый Структура;
	ПроцессВыполнения.Вставить("Параметры", Параметры);
	ПроцессВыполнения.Вставить("ОсновнойОбработчик", ОсновнойОбработчик);
	ПроцессВыполнения.Вставить("Выполнено", Новый Структура);
	ПроцессВыполнения.Вставить("ТекущийЭтап", Неопределено);
	
	Возврат ПроцессВыполнения;
	
КонецФункции

Функция СведенияОНабореНоменклатурыКонтрагентов(Знач НаборНоменклатурыКонтрагентов)
	
	НаборСвойств = СтрРазделить("СтавкаНДС,ЕдиницаИзмерения", ",");
	Значения = Новый Структура;
	Различия = Новый Массив;
	
	Для каждого НоменклатураКонтрагента Из НаборНоменклатурыКонтрагентов Цикл
		Для каждого ТекущееСвойство Из НаборСвойств Цикл
			Если Различия.Найти(ТекущееСвойство) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ТекущееЗначение = НоменклатураКонтрагента[ТекущееСвойство];
			Если Не ЗначениеЗаполнено(ТекущееЗначение) Тогда
				Продолжить;
			КонецЕсли;
			Если Не Значения.Свойство(ТекущееСвойство) Тогда
				Значения.Вставить(ТекущееСвойство, ТекущееЗначение);
			КонецЕсли;
			Если ТекущееЗначение <> Значения[ТекущееСвойство] Тогда
				Различия.Добавить(ТекущееСвойство);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Сведения = Новый Структура;
	Сведения.Вставить("Количество", НаборНоменклатурыКонтрагентов.Количество());
	Сведения.Вставить("Значения", Значения);
	Сведения.Вставить("Различия", Различия);
	
	Возврат Сведения;
	
КонецФункции

Процедура ПоказатьВопросОСозданииНоменклатурыСРазличиями(Знач Различия, ПроцессВыполнения)
	
	СписокПолей = СтрСоединить(Различия,", ");
	СписокПолей = СтрЗаменить(СписокПолей, "СтавкаНДС", НСтр("ru = 'Ставка НДС'"));
	СписокПолей = СтрЗаменить(СписокПолей, "ЕдиницаИзмерения", НСтр("ru = 'Единица измерения'"));
	СписокПолей = СтрЗаменить(СписокПолей, "ЕдиницаИзмеренияКод", НСтр("ru = 'Код единицы измерения'"));
	
	ОбработкаОтвета = Новый ОписаниеОповещения("ОбработатьВопросОСозданииНоменклатурыСРазличиями", ЭтотОбъект, ПроцессВыполнения);
	ТекстВопроса = СтрШаблон(НСтр("ru = 'Для выбранной номенклатуры различаются поля: %1. Продолжить создание?'"), СписокПолей);
	ПоказатьВопрос(ОбработкаОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры   

Процедура НачатьВыборЗначенийДляСозданияНоменклатуры(Знач Значения, ПроцессВыполнения)
	
	ПараметрыФормы = Новый Структура("ЗначенияНоменклатурыКонтрагента", Значения);
	
	ОбработкаВыбораЗначений = Новый ОписаниеОповещения("ЗакончитьВыборЗначенийДляСозданияНоменклатуры", ЭтотОбъект, ПроцессВыполнения);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЗначенийРеквизитов",
		ПараметрыФормы,,,,, ОбработкаВыбораЗначений, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ЗакончитьВыборЗначенийДляСозданияНоменклатуры(Знач ВыбранныеЗначения, ПроцессВыполнения) Экспорт
	
	ПроцессВыполнения.Выполнено.Вставить(ПроцессВыполнения.ТекущийЭтап, ВыбранныеЗначения);
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.ОсновнойОбработчик, ПроцессВыполнения);
	
КонецПроцедуры

#КонецОбласти
