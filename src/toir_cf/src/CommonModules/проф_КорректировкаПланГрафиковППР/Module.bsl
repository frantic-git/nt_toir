#Область ПрограммныйИнтерфейс

//++ Проф-ИТ, #227, Соловьёв.А.А., 18.08.2023

Процедура проф_КорректировкаПланГрафиковППР() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(проф_СводныйПланГрафикППР.НачалоПериодаПланирования) КАК НачалоПериодаПланирования
	|ПОМЕСТИТЬ втПериодПланированияАктуальногоДокумента
	|ИЗ
	|	Документ.проф_СводныйПланГрафикППР КАК проф_СводныйПланГрафикППР
	|ГДЕ
	|	проф_СводныйПланГрафикППР.НачалоПериодаПланирования <= &ТекущаяДата
	|	И проф_СводныйПланГрафикППР.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_СводныйПланГрафикППРСписокППР.ПланГрафикППР КАК ПланГрафикППР,
	|	проф_СводныйПланГрафикППР.ИнтервалПересчетаПланГрафикаППР КАК ИнтервалПересчета
	|ИЗ
	|	втПериодПланированияАктуальногоДокумента КАК втПериодПланированияАктуальногоДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.проф_СводныйПланГрафикППР КАК проф_СводныйПланГрафикППР
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.проф_СводныйПланГрафикППР.СписокППР КАК проф_СводныйПланГрафикППРСписокППР
	|			ПО проф_СводныйПланГрафикППР.Ссылка = проф_СводныйПланГрафикППРСписокППР.Ссылка
	|		ПО втПериодПланированияАктуальногоДокумента.НачалоПериодаПланирования = проф_СводныйПланГрафикППР.НачалоПериодаПланирования";
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НачатьТранзакцию();
	
	Попытка
		
		Пока Выборка.Следующий() Цикл
			
			ДокументОснование = ПоследнийПодчиненныйДокумент(Выборка.ПланГрафикППР);
			
			НовыйДокумент = Документы.торо_ПланГрафикРемонта.СоздатьДокумент();
			НовыйДокумент.Заполнить(ДокументОснование);
			НовыйДокумент.Дата = ТекущаяДата;
			НовыйДокумент.ПериодичностьДетализации = Перечисления.Периодичность.День;
			НовыйДокумент.ДатаПланирования = ТекущаяДата;
			НовыйДокумент.КоличествоПериодов = (ДеньГода(КонецГода(ТекущаяДата)) - ДеньГода(ТекущаяДата) + 1);
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			
			торо_РасчетППР.РасчетППР(НовыйДокумент.Ссылка, Ложь, Истина);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Корректировка План-графиков ППР'"), 
			УровеньЖурналаРегистрации.Ошибка, ДокументОснование,, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

//-- Проф-ИТ, #227, Соловьёв.А.А., 18.08.2023

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Проф-ИТ, #227, Соловьёв.А.А., 18.08.2023

Функция ПоследнийПодчиненныйДокумент(ОсновнойДокумент)
	
	ТаблицаСвязанныхДокументов = Новый ТаблицаЗначений;
	ТаблицаСвязанныхДокументов.Колонки.Добавить("Ссылка");
	НоваяСтрока = ТаблицаСвязанныхДокументов.Добавить();
	НоваяСтрока.Ссылка = ОсновнойДокумент;
	
	Для Каждого СтрокаТаблицы Из ТаблицаСвязанныхДокументов Цикл
		МассивСвязанныхДокументов = КритерииОтбора.СвязанныеДокументы.Найти(СтрокаТаблицы.Ссылка);
		
		Для Каждого ЭлементКоллекции Из МассивСвязанныхДокументов Цикл
			РезультатПоиска = ТаблицаСвязанныхДокументов.Найти(ЭлементКоллекции);
			Если РезультатПоиска = Неопределено И ТипЗнч(ЭлементКоллекции.Ссылка) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
				ДокументПроведен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементКоллекции.Ссылка, "Проведен");
				Если ДокументПроведен Тогда 
					НоваяСтрока = ТаблицаСвязанныхДокументов.Добавить();
					НоваяСтрока.Ссылка = ЭлементКоллекции.Ссылка;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаСвязанныхДокументов.Сортировать("Ссылка УБЫВ");
	
	Возврат ТаблицаСвязанныхДокументов[0].Ссылка;
	
КонецФункции

//-- Проф-ИТ, #227, Соловьёв.А.А., 18.08.2023

#КонецОбласти