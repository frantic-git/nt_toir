#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
// Первоначальная регистрация объектов в узле.
//
// Параметры:
//  Узел - ПланОбменаСсылка.mobileBrigades - узел обмена.
//  ПоследнийПользователь - Строка - имя последнего пользователя.
//  
Процедура ВыполнитьПервоначальнуюРегистрациюОбъектов(Узел, ПоследнийПользователь) Экспорт
	
	ИерархияДляМобильногоПриложения = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ИерархияДляМобильногоПриложения",
	Справочники.торо_СтруктурыОР.ПустаяСсылка(),,
	ПоследнийПользователь);
	
	Если НЕ ЗначениеЗаполнено(ИерархияДляМобильногоПриложения) Тогда
		ТекстСообщения = НСтр("ru = 'Заполните иерархию для мобильного приложения!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	РегистрацияСправочников(Узел); 
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, Метаданные.ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта);
	
	// Регистры 
	РегистрацияПорядокОР(Узел, ИерархияДляМобильногоПриложения);
	РегистрацияОбщиеФайлы_Регистр(Узел); 
	РегистрацияВерсииТК_Регистр(Узел);
	РегистрацияПараметрыНаработкиОР_Регистр(Узел);
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, Метаданные.РегистрыСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта);
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, Метаданные.РегистрыСведений.торо_МаршрутыРегламентныхМероприятий);
	ПланыОбмена.ЗарегистрироватьИзменения(Узел, Метаданные.РегистрыСведений.торо_ВыходныеДокументы);

КонецПроцедуры    

// Процедура - При получении настроек
//
// Параметры:
//  Настройки	 - Структура - ключ - имя настройки, значение – значение настройки
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура РегистрацияСправочников(Узел)
	
	ВыбранныйПланОбмена = Метаданные.ПланыОбмена.mobileBrigades;
	Состав = ВыбранныйПланОбмена.Состав;
	
	Для каждого ЭлементСписка Из Состав Цикл
		ОбъектМетаданных = Метаданные.Справочники.Найти(ЭлементСписка.Метаданные.Имя); 
		Если НЕ ОбъектМетаданных = Неопределено Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(Узел, ОбъектМетаданных);
		КонецЕсли; 	
	КонецЦикла;
	
КонецПроцедуры

Процедура РегистрацияПорядокОР(Узел, СтруктураИерархии) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПорядокОРПоИерархии.ОбъектРемонта КАК ОбъектРемонта
	               |ИЗ
	               |	РегистрСведений.торо_ПорядокОРПоИерархии КАК торо_ПорядокОРПоИерархии
	               |ГДЕ
	               |	торо_ПорядокОРПоИерархии.СтруктураИерархии = &СтруктураИерархии";
	
	Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.торо_ПорядокОРПоИерархии.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(Выборка.ОбъектРемонта);
		НаборЗаписей.Отбор.СтруктураИерархии.Установить(СтруктураИерархии);
		НаборЗаписей.Прочитать();
		
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура РегистрацияВерсииТК_Регистр(Узел) 
	
	Выборка = РегистрыСведений.торо_ВерсииТехКарт.СрезПоследних(); 
	НаборЗаписей = РегистрыСведений.торо_ВерсииТехКарт.СоздатьНаборЗаписей();
	
	Для каждого ТекущийОбъект из Выборка Цикл
		НаборЗаписей.Отбор.Период.Установить(ТекущийОбъект.Период);
		НаборЗаписей.Отбор.ИдентификаторТехКарты.Установить(ТекущийОбъект.ИдентификаторТехКарты);
		НаборЗаписей.Прочитать();
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);
	КонецЦикла;
	
КонецПроцедуры

Процедура РегистрацияОбщиеФайлы_Регистр(Узел)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ОбщиеПрисоединенныеФайлы.Файл КАК Файл,
	               |	торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
	               |ИЗ
	               |	РегистрСведений.торо_ОбщиеПрисоединенныеФайлы КАК торо_ОбщиеПрисоединенныеФайлы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
	               |		ПО торо_ОбщиеПрисоединенныеФайлы.Файл = Файлы.Ссылка
	               |ГДЕ
	               |	НЕ Файлы.ПометкаУдаления
	               |	И (ТИПЗНАЧЕНИЯ(торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла) = ТИП(Справочник.торо_ОбъектыРемонта)
	               |			ИЛИ ТИПЗНАЧЕНИЯ(торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла) = ТИП(Справочник.торо_ТиповыеОР)
	               |			ИЛИ ТИПЗНАЧЕНИЯ(торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла) = ТИП(Справочник.торо_ТехКарты))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	НаборЗаписей = РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей.Отбор.Файл.Установить(Выборка.Файл);
		НаборЗаписей.Отбор.ВладелецФайла.Установить(Выборка.ВладелецФайла);
		НаборЗаписей.Прочитать();
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);
	КонецЦикла;
	
КонецПроцедуры

Процедура РегистрацияПараметрыНаработкиОР_Регистр(Узел)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ОбъектыРемонта.Ссылка КАК ОбъектРемонта
		|ПОМЕСТИТЬ вт_ОР
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.Ссылка ССЫЛКА Справочник.торо_ОбъектыРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.Период КАК Период,
		|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.Показатель КАК Показатель
		|ИЗ
		|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних(
		|			,
		|			ОбъектРемонта В
		|				(ВЫБРАТЬ
		|					вт_ОР.ОбъектРемонта КАК ОбъектРемонта
		|				ИЗ
		|					вт_ОР КАК вт_ОР)) КАК торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.торо_ПараметрыНаработкиОбъектовРемонта.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(Выборка.ОбъектРемонта);
		НаборЗаписей.Отбор.Показатель.Установить(Выборка.Показатель);
		НаборЗаписей.Прочитать();
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
