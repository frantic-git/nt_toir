<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП21">2.01</ВерсияФормата>
	<Ид>8a4719e2-c379-4582-8ddb-eff8874be91b    </Ид>
	<Наименование>рсм_RCM --&gt; рсм_ТОИР (Основной)</Наименование>
	<ДатаВремяСоздания>2020-11-05T13:57:14</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.0.11.1" СинонимКонфигурации="1С:RCM Управление надежностью, редакция 1.0">УправлениеНадежностью</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="3.0.1.1" СинонимКонфигурации="1С:ТОИР Управление ремонтами и обслуживанием оборудования КОРП, редакция 3.0">ТехническоеОбслуживаниеИРемонты20</Приемник>
	<ПередЗагрузкойДанных>СписокТК = Новый Массив;
Параметры.Вставить("СписокТК", СписокТК);

НормативныеРемонты = Новый ТаблицаЗначений();
НормативныеРемонты.Колонки.Добавить("ОбъектРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
НормативныеРемонты.Колонки.Добавить("НормативныйРемонт", Новый ОписаниеТипов("СправочникСсылка.торо_ИдентификаторыТехКарт"));
НормативныеРемонты.Колонки.Добавить("ИсточникСтратегии", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(150)));
НормативныеРемонты.Колонки.Добавить("СпособПланирования", Новый ОписаниеТипов("СправочникСсылка.торо_СпособыПланированияРемонтныхРабот"));
НормативныеРемонты.Колонки.Добавить("Отменено", Новый ОписаниеТипов("Булево"));

ЗамещаемыеРемонты = Новый ТаблицаЗначений();
ЗамещаемыеРемонты.Колонки.Добавить("ОбъектРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
ЗамещаемыеРемонты.Колонки.Добавить("Мероприятие", Новый ОписаниеТипов("СправочникСсылка.торо_ИдентификаторыТехКарт"));
ЗамещаемыеРемонты.Колонки.Добавить("ЗамещаемоеМероприятие", Новый ОписаниеТипов("СправочникСсылка.торо_ИдентификаторыТехКарт"));

Параметры.Вставить("НормативныеРемонты", НормативныеРемонты);
Параметры.Вставить("ЗамещаемыеРемонты", ЗамещаемыеРемонты);</ПередЗагрузкойДанных>
	<ПослеЗагрузкиДанных>Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	торо_ИдентификаторыТехКарт.Ссылка КАК Ссылка,
               |	торо_ИдентификаторыТехКарт.ОбменРСМ КАК ОбменРСМ
               |ПОМЕСТИТЬ вт_ИДТК
               |ИЗ
               |	Справочник.торо_ИдентификаторыТехКарт КАК торо_ИдентификаторыТехКарт
               |ГДЕ
               |	ВЫРАЗИТЬ(торо_ИдентификаторыТехКарт.ОбменРСМ КАК СТРОКА(500)) В (&amp;Мас)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	вт_ИДТК.Ссылка КАК ИдентификаторТехКарты,
               |	торо_ТехКарты.Ссылка КАК ТехКарта
               |ИЗ
               |	вт_ИДТК КАК вт_ИДТК
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты КАК торо_ТехКарты
               |		ПО ((ВЫРАЗИТЬ(вт_ИДТК.ОбменРСМ КАК СТРОКА(500))) = (ВЫРАЗИТЬ(торо_ТехКарты.ОбменРСМ КАК СТРОКА(500))))";

Запрос.УстановитьПараметр("Мас", Параметры.СписокТК);
Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.Следующий() Цикл
	мз = РегистрыСведений.торо_ВерсииТехКарт.СоздатьМенеджерЗаписи();
	мз.ИдентификаторТехКарты = Выборка.ИдентификаторТехКарты;
	мз.ТехКарта = Выборка.ТехКарта;
	мз.Период = ТекущаяДата();
	мз.Записать(Истина);
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	Таб.ОбъектРемонта КАК ОбъектРемонта,
               |	Таб.НормативныйРемонт КАК НормативныйРемонт,
               |	Таб.ИсточникСтратегии КАК ИсточникСтратегии,
               |	Таб.СпособПланирования КАК СпособПланирования,
			   |	Таб.Отменено КАК Отменено
               |ПОМЕСТИТЬ ВТ_Данные
               |ИЗ
               |	&amp;Таб КАК Таб
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ РАЗЛИЧНЫЕ
               |	Таб.ОбъектРемонта КАК ОбъектРемонта
               |ПОМЕСТИТЬ ВТ_Фильтр
               |ИЗ
               |	ВТ_Данные КАК Таб
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	НормРемонты.ОбъектРемонта КАК ОбъектРемонта,
               |	НормРемонты.ВидРемонта КАК ВидРемонта,
               |	НормРемонты.ТиповойОР КАК ТиповойОР,
               |	НормРемонты.НормативныйРемонт КАК НормативныйРемонт,
               |	НормРемонты.СпособПланирования КАК СпособПланирования,
               |	НормРемонты.ГрафикРемонтныхРабот КАК ГрафикРемонтныхРабот,
               |	НормРемонты.СпособВыполнения КАК СпособВыполнения,
               |	НормРемонты.НеИспользоватьВПланированииДатуВводаВЭксплуатацию КАК НеИспользоватьВПланированииДатуВводаВЭксплуатацию,
               |	НормРемонты.СпособУчетаДатыОтсчета КАК СпособУчетаДатыОтсчета,
               |	НормРемонты.НеУчаствуетВПланировании КАК НеУчаствуетВПланировании,
               |	НормРемонты.РазрешитьСокращатьМежремонтныйПериодПриПланировании КАК РазрешитьСокращатьМежремонтныйПериодПриПланировании,
               |	НормРемонты.НеУчитыватьПриПланированииГрафикРаботыОборудования КАК НеУчитыватьПриПланированииГрафикРаботыОборудования,
               |	НормРемонты.НеУчитыватьПриПланированииГрафикРемонтныхРабот КАК НеУчитыватьПриПланированииГрафикРемонтныхРабот,
               |	НормРемонты.НеУчитыватьПродолжительность КАК НеУчитыватьПродолжительность,
               |	НормРемонты.ИспользоватьКоэффициентыРемонтныхОсобенностей КАК ИспользоватьКоэффициентыРемонтныхОсобенностей,
               |	НормРемонты.УчитыватьПростоиОборудования КАК УчитыватьПростоиОборудования,
               |	НормРемонты.Приоритет КАК Приоритет,
               |	НормРемонты.СтратегияОбслуживания КАК СтратегияОбслуживания,
               |	НормРемонты.ИсточникСтратегии КАК ИсточникСтратегии,
               |	НормРемонты.ВидРемонта.ИзРСМ КАК ИзРСМ
               |ИЗ
               |	РегистрСведений.торо_НормативныеРемонтыОборудования КАК НормРемонты
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Фильтр КАК ВТ_Фильтр
               |		ПО НормРемонты.ОбъектРемонта = ВТ_Фильтр.ОбъектРемонта
               |ИТОГИ ПО
               |	ОбъектРемонта
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ПредРемонты.ВидРемонта КАК ВидРемонта,
               |	ПредРемонты.ОбъектРемонта КАК ОбъектРемонта,
               |	ПредРемонты.ПредшествующийВидРемонта КАК ПредшествующийВидРемонта,
               |	ПредРемонты.ТиповойОР КАК ТиповойОР,
               |	ПредРемонты.Приоритет КАК Приоритет,
               |	ПредРемонты.ВидРемонта.ИзРСМ КАК ИзРСМ
               |ИЗ
               |	РегистрСведений.торо_ПредшествующиеНормативныеРемонтыОборудования КАК ПредРемонты
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Фильтр КАК ВТ_Фильтр
               |		ПО ПредРемонты.ОбъектРемонта = ВТ_Фильтр.ОбъектРемонта
               |ИТОГИ ПО
               |	ОбъектРемонта
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	торо_ВидыРемонтов.Ссылка КАК Ссылка
               |ИЗ
               |	Справочник.торо_ВидыРемонтов КАК торо_ВидыРемонтов
               |ГДЕ
               |	торо_ВидыРемонтов.ИзРСМ = ИСТИНА
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВТ_Данные.ОбъектРемонта КАК ОбъектРемонта,
               |	ВТ_Данные.НормативныйРемонт КАК НормативныйРемонт,
               |	ВТ_Данные.ИсточникСтратегии КАК ИсточникСтратегии,
               |	ВТ_Данные.СпособПланирования КАК СпособПланирования,
			   |	ВТ_Данные.Отменено КАК Отменено
               |ИЗ
               |	ВТ_Данные КАК ВТ_Данные
			   |ГДЕ
			   |	ВТ_Данные.Отменено = Ложь
               |ИТОГИ ПО
               |	ОбъектРемонта
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ ПЕРВЫЕ 1
               |	торо_ВидыРемонтов.Наименование КАК Наименование
               |ИЗ
               |	Справочник.торо_ВидыРемонтов КАК торо_ВидыРемонтов
               |ГДЕ
               |	торо_ВидыРемонтов.Наименование ПОДОБНО ""Из RCM %""
               |
               |УПОРЯДОЧИТЬ ПО
               |	Наименование УБЫВ";

Запрос.УстановитьПараметр("Таб", Параметры.НормативныеРемонты);
РезЗапроса = Запрос.ВыполнитьПакет();

НомерВР = 1;
Если НЕ РезЗапроса[6].Пустой() Тогда
	Выборка = РезЗапроса[6].Выбрать();
	
	Если Выборка.Следующий() Тогда
		НаименованиеПоследнегоВР = Выборка.Наименование;
		НомерВР = Число(Прав(НаименованиеПоследнегоВР, СтрДлина(НаименованиеПоследнегоВР) - 7)) + 1;
	КонецЕсли;
КонецЕсли;	

списокВР = Новый ТаблицаЗначений;
списокВР.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
Если НЕ РезЗапроса[4].Пустой() Тогда
	списокВР = РезЗапроса[4].Выгрузить();
КонецЕсли;	

Если НЕ РезЗапроса[2].Пустой() Тогда
	ВыборкаПоОР = РезЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОР.Следующий() Цикл
		ВыборкаДЗ = ВыборкаПоОР.Выбрать();
		нз = РегистрыСведений.торо_НормативныеРемонтыОборудования.СоздатьНаборЗаписей();
		нз.Отбор.ОбъектРемонта.Установить(ВыборкаПоОР.ОбъектРемонта);
		Пока ВыборкаДЗ.Следующий() Цикл
			Если НЕ ВыборкаДЗ.ИзРСМ Тогда
				нс = нз.Добавить();	
				ЗаполнитьЗначенияСвойств(нс, ВыборкаДЗ);
			КонецЕсли;
		КонецЦикла;
		нз.Записать();
	КонецЦикла;
КонецЕсли;

Если НЕ РезЗапроса[3].Пустой() Тогда 
	ВыборкаПоОР = РезЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОР.Следующий() Цикл
		ВыборкаДЗ = ВыборкаПоОР.Выбрать();
		нз = РегистрыСведений.торо_ПредшествующиеНормативныеРемонтыОборудования.СоздатьНаборЗаписей();
		нз.Отбор.ОбъектРемонта.Установить(ВыборкаПоОР.ОбъектРемонта);
		Пока ВыборкаДЗ.Следующий() Цикл
			Если НЕ ВыборкаДЗ.ИзРСМ Тогда
				нс = нз.Добавить();	
				ЗаполнитьЗначенияСвойств(нс, ВыборкаДЗ);
			КонецЕсли;
		КонецЦикла;
		нз.Записать();
	КонецЦикла;
КонецЕсли;

ГрафикРемРабот = Константы.торо_ГрафикРемонтныхРабот.Получить();

Если НЕ РезЗапроса[5].Пустой() Тогда 
	ВыборкаПоОР = РезЗапроса[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОР.Следующий() Цикл
		нзНормРемонты = РегистрыСведений.торо_НормативныеРемонтыОборудования.СоздатьНаборЗаписей();
		нзНормРемонты.Отбор.ОбъектРемонта.Установить(ВыборкаПоОР.ОбъектРемонта);
		нзНормРемонты.Прочитать();
		
		нзПредРемонты = РегистрыСведений.торо_ПредшествующиеНормативныеРемонтыОборудования.СоздатьНаборЗаписей();
		нзПредРемонты.Отбор.ОбъектРемонта.Установить(ВыборкаПоОР.ОбъектРемонта);
		нзПредРемонты.Прочитать();
		
		нзЗамРемонты = РегистрыСведений.торо_ПараметрыЗамещенияПланированияРемонтныхРабот.СоздатьНаборЗаписей();
		нзЗамРемонты.Отбор.ОбъектРемонта.Установить(ВыборкаПоОР.ОбъектРемонта);
		нзЗамРемонты.Прочитать();
		
		ВыборкаДЗ = ВыборкаПоОР.Выбрать();
		масСвободныхВР = СписокВР.ВыгрузитьКолонку("Ссылка");
		Пока ВыборкаДЗ.Следующий() Цикл
			
			ТекВидРемонта = Неопределено;
			Если масСвободныхВР.Количество() = 0 Тогда
				спрОб = Справочники.торо_ВидыРемонтов.СоздатьЭлемент();
				спрОб.ИзРСМ = Истина;
				спрОб.Наименование = "Из RCM " + НомерВР;
				НомерВР = НомерВР + 1;
				спрОб.ВидОбслуживанияОС = "Из RCM";
				спрОб.ПланГрафикППР = Истина;
				спрОб.ГрафикМероприятий = Истина;
				спрОб.Записать();
				ТекВидРемонта = спрОб.Ссылка;
			Иначе 
				ТекВидРемонта = масСвободныхВР[0];
				масСвободныхВР.Удалить(0);
			КонецЕсли;
			
			нс = нзНормРемонты.Добавить();
			нс.ОбъектРемонта = ВыборкаДЗ.ОбъектРемонта;
			нс.ВидРемонта = ТекВидРемонта;
			нс.НормативныйРемонт = ВыборкаДЗ.НормативныйРемонт;
			нс.СпособПланирования = ВыборкаДЗ.СпособПланирования;
			нс.ИсточникСтратегии = ВыборкаДЗ.ИсточникСтратегии;
			нс.Приоритет = Истина;
			нс.ГрафикРемонтныхРабот = ГрафикРемРабот;
			нс.СпособВыполнения = Перечисления.СпособыСтроительства.Хозспособ;
			нс.СпособУчетаДатыОтсчета = Перечисления.торо_СпособыУчетаДатыОтсчетаПриПланированииРемонтныхРабот.НеИспользоватьДатуВводаВЭксплуатацию;
			
			нс = нзПредРемонты.Добавить();
			нс.ВидРемонта = ТекВидРемонта;
			нс.ОбъектРемонта = ВыборкаДЗ.ОбъектРемонта;
			нс.ПредшествующийВидРемонта = ТекВидРемонта;
			нс.Приоритет = Истина;
		КонецЦикла;
		
		// Замещаемые ремонты
		Если Параметры.НормативныеРемонты.Количество() &gt; 0 Тогда
			СпособЗамещения = Перечисления.торо_СпособыЗамещенияРемонтов.Замещение;
			
			Для Каждого НормРемонт Из нзНормРемонты Цикл
				ТехКарта = НормРемонт.НормативныйРемонт;
				
				Для Каждого ЗамРемонт Из Параметры.ЗамещаемыеРемонты Цикл
					Если ЗамРемонт.ОбъектРемонта = ВыборкаПоОР.ОбъектРемонта И ЗамРемонт.Мероприятие = ТехКарта Тогда
						нс = нзЗамРемонты.Добавить();
						нс.ОбъектРемонта = ВыборкаПоОР.ОбъектРемонта;
						нс.ВидРемонта = НормРемонт.ВидРемонта;
						
						ЗамещаемыйВидРемонта = Неопределено;
						Для Каждого НормРемонт2 Из нзНормРемонты Цикл
							Если НормРемонт2.НормативныйРемонт = ЗамРемонт.ЗамещаемоеМероприятие Тогда
								ЗамещаемыйВидРемонта = НормРемонт2.ВидРемонта;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						нс.ЗамещаемыйВидРемонта = ЗамещаемыйВидРемонта;
						
						нс.СпособЗамещения = СпособЗамещения;
						
						СпособПланирования = НормРемонт.СпособПланирования;
						ПериодичностьРемонтныхРабот = СпособПланирования.ПериодичностьРемонтныхРабот;
						
						Если ПериодичностьРемонтныхРабот = Перечисления.Периодичность.Год Тогда
							Период = 365;
						ИначеЕсли ПериодичностьРемонтныхРабот = Перечисления.Периодичность.Полугодие Тогда
							Период = 182;
						ИначеЕсли ПериодичностьРемонтныхРабот = Перечисления.Периодичность.Квартал Тогда
							Период = 90;
						ИначеЕсли ПериодичностьРемонтныхРабот = Перечисления.Периодичность.Месяц Тогда
							Период = 28;
						ИначеЕсли ПериодичностьРемонтныхРабот = Перечисления.Периодичность.Декада Тогда
							Период = 10;
						ИначеЕсли ПериодичностьРемонтныхРабот = Перечисления.Периодичность.Неделя Тогда
							Период = 7;
						Иначе
							Период = 1;
						КонецЕсли;
						
						МежремонтныйИнтервал = СпособПланирования.КоличествоПериодов * Период;
						
						нс.НачальнаяГраница = МежремонтныйИнтервал;
						нс.КонечнаяГраница = МежремонтныйИнтервал;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		нзНормРемонты.Записать();
		нзПредРемонты.Записать();
		нзЗамРемонты.Записать();
	КонецЦикла;
	
КонецЕсли;</ПослеЗагрузкиДанных>
	<Параметры/>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило>
				<Код>Проекты_системный</Код>
				<Наименование>Справочник: Проекты</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Параметры.Вставить("ОтладкаСинхронизации", Ложь);

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ПрограммаТОИР.ИДСтратегии КАК ИДСтратегии,
               |	ПрограммаТОИР.Мероприятие КАК Мероприятие
               |ПОМЕСТИТЬ ВТ_Стратегии
               |ИЗ
               |	РегистрСведений.рсм_ПрограммаТОИР.СрезПоследних(, Проект = &amp;Анализ) КАК ПрограммаТОИР
               |ГДЕ
               |	ПрограммаТОИР.Отменено = ЛОЖЬ
			   |	И ПрограммаТОИР.Проект.Окончен = ИСТИНА
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	рсм_ОперацииМероприятийСрезПоследних.ИДСтратегии КАК ИДСтратегии,
               |	рсм_ОперацииМероприятийСрезПоследних.Мероприятие КАК Мероприятие,
               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(рсм_ОперацииМероприятийСрезПоследних.Мероприятие) КАК Наименование,
               |	рсм_ОперацииМероприятийСрезПоследних.ИДМероприятия КАК ИДМероприятия
               |ИЗ
               |	РегистрСведений.рсм_Мероприятия.СрезПоследних(
               |			,
               |			(ИДСтратегии, Мероприятие) В
               |				(ВЫБРАТЬ
               |					Таб.ИДСтратегии,
               |					Таб.Мероприятие
               |				ИЗ
               |					ВТ_Стратегии КАК Таб)) КАК рсм_ОперацииМероприятийСрезПоследних
               |ГДЕ
               |	рсм_ОперацииМероприятийСрезПоследних.Отменено = ЛОЖЬ";

Запрос.УстановитьПараметр("Анализ", Источник.Ссылка);

ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "0");

РезЗапроса = Запрос.Выполнить();

Если НЕ РезЗапроса.Пустой() Тогда
	струкДанные = Новый Структура;
	струкДанные.Вставить("Мероприятие", Неопределено);
	струкДанные.Вставить("ИДСтратегии", Неопределено);
	струкДанные.Вставить("ИДМероприятия", Неопределено);
	струкДанные.Вставить("Наименование", Неопределено);
	струкДанные.Вставить("КВД", Неопределено);
	струкДанные.Вставить("ПометкаУдаления", Ложь);
	струкДанные.Вставить("ИдентификаторТехКарты", Неопределено);
	струкДанные.Вставить("ТехКарта", Ложь);
	
	Выборка = РезЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Параметры.ОтладкаСинхронизации Тогда
			МероСС = Строка(Выборка.ИДСтратегии) + "_" + Выборка.Мероприятие.Наименование + "_" + "ПустаяСсылка";
		Иначе
			МероСС = Строка(Выборка.ИДСтратегии)
				+ ЗначениеВСтрокуВнутр(Выборка.Мероприятие) 
				+ ЗначениеВСтрокуВнутр(Справочники.рсм_Мероприятия.ПустаяСсылка());
		КонецЕсли;
			
			
		струкДанные.КВД = МероСС;
		струкДанные.Мероприятие = Выборка.Мероприятие;
		струкДанные.ИДСтратегии = Выборка.ИДСтратегии;
		струкДанные.ИДМероприятия = Выборка.ИДМероприятия;
		струкДанные.Наименование = Выборка.Наименование;
		струкДанные.ИдентификаторТехКарты = Выборка.Мероприятие;
		струкДанные.ТехКарта = Выборка.Мероприятие;
		
		ВыгрузитьПоПравилу(Выборка.Мероприятие,,струкДанные,, "торо_ТехКарты");
		ВыгрузитьПоПравилу(Выборка.Мероприятие,,струкДанные,, "торо_ИдентификаторыТехКарт");
		//ВыгрузитьПоПравилу(Выборка.Мероприятие,,струкДанные,, "торо_ВерсииТехКарт");
	КонецЦикла;
	
	//Выборка.Сбросить();
	//
	//Пока Выборка.Следующий() Цикл
	//	МероСС = Строка(Выборка.ИДСтратегии) + "_" + Выборка.Мероприятие.Наименование + "_" + "ПустаяСсылка";
	//		
	//	струкДанные.КВД = МероСС;
	//	струкДанные.Мероприятие = Выборка.Мероприятие;
	//	струкДанные.ИДСтратегии = Выборка.ИДСтратегии;
	//	струкДанные.ИДМероприятия = Выборка.ИДМероприятия;
	//	струкДанные.Наименование = Выборка.Наименование;
	//	струкДанные.ИдентификаторТехКарты = Выборка.Мероприятие;
	//	струкДанные.ТехКарта = Выборка.Мероприятие;
	//	
	//	ВыгрузитьПоПравилу(Выборка.Мероприятие,,струкДанные,, "торо_ВерсииТехКарт");
	//КонецЦикла;
	
КонецЕсли;

ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "1");

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	рсм_ПрограммаТОИРСрезПоследних.Объект КАК Объект,
|	Неопределено КАК ОбъектТОИР,
|	рсм_ПрограммаТОИРСрезПоследних.Периодичность КАК Периодичность,
|	рсм_ПрограммаТОИРСрезПоследних.Периодичность.ВыполнятьОднократно КАК ВыполнятьОднократно,
|	рсм_ПрограммаТОИРСрезПоследних.ИДСтратегии КАК ИДСтратегии,
|	рсм_ПрограммаТОИРСрезПоследних.Мероприятие КАК Мероприятие,
|	рсм_ПрограммаТОИРСрезПоследних.Количество КАК Количество,
|	рсм_ПрограммаТОИРСрезПоследних.Отменено КАК Отменено,
|	рсм_ПрограммаТОИРСрезПоследних.ИДОбъекта КАК ИДОбъекта
|ИЗ
|	РегистрСведений.рсм_ПрограммаТОИР.СрезПоследних(, Проект = &amp;Анализ) КАК рсм_ПрограммаТОИРСрезПоследних
|ГДЕ
|	рсм_ПрограммаТОИРСрезПоследних.Проект.Окончен = ИСТИНА
|ИТОГИ ПО
|	ИДСтратегии
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	рсм_ОбъектыАнализа.ИДОбъекта КАК ИДОбъекта,
|	рсм_ОбъектыАнализа.ИДРодителя КАК ИДРодителя,
|	рсм_ОбъектыАнализа.Объект КАК Объект,
|	рсм_ОбъектыАнализа.Объект.ОбъектТОИР как ОбъектТОИР,
|	рсм_ОбъектыАнализа.Родитель КАК Родитель,
|	рсм_ОбъектыАнализа.ИДКомпонента КАК ИДКомпонента,
|	рсм_ОбъектыАнализа.Включен КАК Включен
|ИЗ
|	РегистрСведений.рсм_ОбъектыАнализа КАК рсм_ОбъектыАнализа
|ГДЕ
|	рсм_ОбъектыАнализа.Проект = &amp;Анализ";

Запрос.УстановитьПараметр("Анализ", Источник.Ссылка);
РезЗапроса = Запрос.ВыполнитьПакет();

ПрограммаТОИР = РезЗапроса[0];
ОбъектыАнализа = РезЗапроса[1].Выгрузить();
ОбъектыАнализа.Индексы.Добавить("ИДОбъекта");

ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "2");


Если НЕ ПрограммаТОИР.Пустой() Тогда
	ВыборкаПоИДС = ПрограммаТОИР.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ТекИДС Из ВыборкаПоИДС.Строки Цикл
		Для Каждого ТекМероприятие из ТекИДС.Строки Цикл
			ИДПоиска = ТекМероприятие.ИДОбъекта;
			ИскатьДальше = Истина;
			Пока ИскатьДальше Цикл
				НайС = ОбъектыАнализа.Найти(ИДПоиска, "ИДОбъекта");
				Если ЗначениеЗаполнено(НайС.ОбъектТОИР) Тогда
					ТекМероприятие.ОбъектТОИР = НайС.ОбъектТОИР;
					Прервать;
				Иначе
					ИДПоиска = НайС.ИДРодителя;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ОбследованноеОборудование = Новый ТаблицаЗначений;
	ОбследованноеОборудование.Колонки.Добавить("ID", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ОбследованноеОборудование.Колонки.Добавить("ОбъектРемонта", Новый ОписаниеТипов("СправочникСсылка.рсм_ИерархияТОИР"));
	
	РемонтныеРаботы = Новый ТаблицаЗначений;
	РемонтныеРаботы.Колонки.Добавить("Предписание_ID", Новый ОписаниеТипов("УникальныйИдентификатор"));
	РемонтныеРаботы.Колонки.Добавить("РемонтнаяРабота", Новый ОписаниеТипов("СправочникСсылка.рсм_Мероприятия"));
	РемонтныеРаботы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 3)));
	
	
	Для Каждого ТекИДС Из ВыборкаПоИДС.Строки Цикл
		ОбследованноеОборудование.Очистить();
		РемонтныеРаботы.Очистить();
		
		ИДОР = Новый УникальныйИдентификатор;
		ВыгружатьВнешнееОснование = Ложь;
		ТекОР = Неопределено;
		Для Каждого ТекМероприятие из ТекИДС.Строки Цикл
			Если ТекМероприятие.ВыполнятьОднократно Тогда
				Если ТекМероприятие.Отменено = Ложь Тогда
					ВыгружатьВнешнееОснование = Истина;
					нс = РемонтныеРаботы.Добавить();
					нс.Предписание_ID = ИДОР;
					нс.РемонтнаяРабота = ТекМероприятие.Мероприятие;
					нс.Количество = ТекМероприятие.Количество;
					ТекОР = ТекМероприятие.ОбъектТОИР;
				КонецЕсли;
			Иначе
				Если Параметры.ОтладкаСинхронизации Тогда
					КВД = Строка(ТекМероприятие.ИДСтратегии) + "_" + ТекМероприятие.Мероприятие.Наименование + "_" + "ПустаяСсылка";
				Иначе
					КВД = Строка(ТекМероприятие.ИДСтратегии)
						+ ЗначениеВСтрокуВнутр(ТекМероприятие.Мероприятие) 
						+ ЗначениеВСтрокуВнутр(Справочники.рсм_Мероприятия.ПустаяСсылка());
				КонецЕсли;
				
				СтрукДанные = Новый Структура("ОбъектРемонта, НормативныйРемонт, КВД, ИсточникСтратегии, СпособПланирования, Отменено", 
					ТекМероприятие.ОбъектТОИР, ТекМероприятие.Мероприятие, КВД, Источник.Наименование, ТекМероприятие.Периодичность, ТекМероприятие.Отменено);
					
				ВыгрузитьПоПравилу(ТекМероприятие.ОбъектТОИР,, СтрукДанные,, "торо_НормативныеРемонтыОборудования");
			КонецЕсли;
		КонецЦикла;
		
		Если ВыгружатьВнешнееОснование Тогда
			нс = ОбследованноеОборудование.Добавить();
			нс.ID = ИДОР;
			нс.ОбъектРемонта = ТекОР;
			
			струкДанных = Новый Структура("ИДСтратегии, ОбследованноеОборудование, РемонтныеРаботы");
			струкДанных.ИДСтратегии = ТекИДС.ИДСтратегии;
			струкДанных.ОбследованноеОборудование = ОбследованноеОборудование;
			струкДанных.РемонтныеРаботы = РемонтныеРаботы;
			
			ВыгрузитьПоПравилу(ТекМероприятие.Объект,, струкДанных,, "торо_ВнешнееОснованиеДляРабот");
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "3");

// Замещаемые мероприятия
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	рсм_ЗамещаемыеМероприятия.Объект КАК Объект,
               |	рсм_ЗамещаемыеМероприятия.ИДМероприятия КАК ИДМероприятия,
               |	рсм_ЗамещаемыеМероприятия.ИДЗамещающегоМероприятия КАК ИДЗамещающегоМероприятия
               |ПОМЕСТИТЬ ЗамещаемыеМероприятия
               |ИЗ
               |	РегистрСведений.рсм_ЗамещаемыеМероприятия КАК рсм_ЗамещаемыеМероприятия
               |ГДЕ
               |	рсм_ЗамещаемыеМероприятия.Проект = &amp;Проект
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	рсм_ПрограммаТОИРСрезПоследних.ИДМероприятия КАК ИДМероприятия,
               |	рсм_ПрограммаТОИРСрезПоследних.ИДСтратегии КАК ИДСтратегии,
               |	рсм_ПрограммаТОИРСрезПоследних.Мероприятие КАК Мероприятие
               |ПОМЕСТИТЬ ПрограммаТОИР
               |ИЗ
               |	РегистрСведений.рсм_ПрограммаТОИР.СрезПоследних(, Проект = &amp;Проект) КАК рсм_ПрограммаТОИРСрезПоследних
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЗамещаемыеМероприятия.Объект.ОбъектТОИР КАК ОбъектТОИР,
               |	ПрограммаТОИР.Мероприятие КАК Мероприятие,
               |	ПрограммаТОИР.ИДСтратегии КАК ИДСтратегии,
               |	ПрограммаТОИРДляЗамещаемых.Мероприятие КАК ЗамещаемоеМероприятие,
               |	ПрограммаТОИРДляЗамещаемых.ИДСтратегии КАК ИДСтратегииЗамещаемогоМероприятия
               |ИЗ
               |	ЗамещаемыеМероприятия КАК ЗамещаемыеМероприятия
               |		ЛЕВОЕ СОЕДИНЕНИЕ ПрограммаТОИР КАК ПрограммаТОИР
               |		ПО ЗамещаемыеМероприятия.ИДМероприятия = ПрограммаТОИР.ИДМероприятия
               |		ЛЕВОЕ СОЕДИНЕНИЕ ПрограммаТОИР КАК ПрограммаТОИРДляЗамещаемых
               |		ПО ЗамещаемыеМероприятия.ИДЗамещающегоМероприятия = ПрограммаТОИРДляЗамещаемых.ИДМероприятия";

Запрос.УстановитьПараметр("Проект", Источник.Ссылка);

Выборка = Запрос.Выполнить().Выбрать();

ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "4");

Пока Выборка.Следующий() Цикл
	СтрукДанные = Новый Структура;
	
	СтрукДанные.Вставить("Мероприятие", Выборка.Мероприятие);
	СтрукДанные.Вставить("ЗамещаемоеМероприятие", Выборка.ЗамещаемоеМероприятие);
	
	Если Параметры.ОтладкаСинхронизации Тогда
		МероприятиеКВД = Строка(Выборка.ИДСтратегии) + "_" + Выборка.Мероприятие.Наименование + "_" + "ПустаяСсылка";
		ЗамещаемоеМероприятиеКВД = Строка(Выборка.ИДСтратегииЗамещаемогоМероприятия) + "_" + Выборка.ЗамещаемоеМероприятие.Наименование + "_" + "ПустаяСсылка";
	Иначе
		ПСМ = ЗначениеВСтрокуВнутр(Справочники.рсм_Мероприятия.ПустаяСсылка());
		
		МероприятиеКВД = Строка(Выборка.ИДСтратегии)
			+ ЗначениеВСтрокуВнутр(Выборка.Мероприятие) 
			+ ПСМ;
		
		ЗамещаемоеМероприятиеКВД = Строка(Выборка.ИДСтратегииЗамещаемогоМероприятия)
			+ ЗначениеВСтрокуВнутр(Выборка.ЗамещаемоеМероприятие) 
			+ ПСМ;
	КонецЕсли;
	
ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "4 0");
	СтрукДанные.Вставить("МероприятиеКВД", МероприятиеКВД);
ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "4 1");
	СтрукДанные.Вставить("ЗамещаемоеМероприятиеКВД", ЗамещаемоеМероприятиеКВД);
ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "4 2");
	
	//ВыгрузитьПоПравилу(Выборка.ОбъектТОИР,, СтрукДанные,, "торо_ЗамещаемыеРемонты");
КонецЦикла;

ЗаписьЖурналаРегистрации("Киви", УровеньЖурналаРегистрации.Информация, , , "5");

Отказ = Истина;</ПередВыгрузкой>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>СправочникСсылка.рсм_Проекты</Источник>
				<Приемник>СправочникСсылка.торо_ОбъектыРемонта</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true" Поиск="true">
						<Код>2</Код>
						<Наименование>Окончен --&gt;</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Окончен" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="" Вид=""/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ТехКарты</Код>
				<Наименование>Справочник: Мероприятия</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ВходящиеДанные.КВД;</ПередВыгрузкой>
				<ПослеЗагрузки>Параметры.СписокТК.Добавить(Объект.ОбменРСМ);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.рсм_Мероприятия</Источник>
				<Приемник>СправочникСсылка.торо_ТехКарты</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>3</Код>
						<Наименование>--&gt; СписокОпераций</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СписокОпераций" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	рсм_ОперацииМероприятийСрезПоследних.Операция КАК Операция,
               |	рсм_ОперацииМероприятийСрезПоследних.Количество КАК Количество,
               |	рсм_ОперацииМероприятий.НормаВремени КАК НормаВремениВСекундах
               |ИЗ
               |	РегистрСведений.рсм_ОперацииМероприятий.СрезПоследних(
               |			,
               |			ИДСтратегии = &amp;ИДСтратегии
               |				И Родитель = &amp;ИдМероприятия) КАК рсм_ОперацииМероприятийСрезПоследних
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.рсм_ОперацииМероприятий КАК рсм_ОперацииМероприятий
               |		ПО рсм_ОперацииМероприятийСрезПоследних.Операция = рсм_ОперацииМероприятий.Ссылка
               |ГДЕ
               |	рсм_ОперацииМероприятийСрезПоследних.Отменена = ЛОЖЬ";

Запрос.УстановитьПараметр("ИДСтратегии", ВходящиеДанные.ИДСтратегии);
Запрос.УстановитьПараметр("ИдМероприятия", ВходящиеДанные.ИДМероприятия);

РезЗапроса = Запрос.Выполнить();

Если РезЗапроса.Пустой() Тогда
	Отказ = Истина;
Иначе
	тз = РезЗапроса.Выгрузить();
	КоллекцияОбъектов = тз
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Операция</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Операция" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ТипЗнч(ОбъектКоллекции.Операция) = Тип("СправочникСсылка.рсм_Мероприятия") Тогда
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//           |	рсм_ОперацииМероприятийСрезПоследних.ИДСтратегии КАК ИДСтратегии,
	//           |	рсм_ОперацииМероприятийСрезПоследних.Мероприятие КАК Мероприятие,
	//           |	ПРЕДСТАВЛЕНИЕССЫЛКИ(рсм_ОперацииМероприятийСрезПоследних.Мероприятие) КАК Наименование,
	//           |	рсм_ОперацииМероприятийСрезПоследних.ИДМероприятия КАК ИДМероприятия
	//           |ИЗ
	//           |	РегистрСведений.рсм_Мероприятия.СрезПоследних(
	//           |			,
	//           |			ИДСтратегии = &amp;ИДСтратегии И Мероприятие = &amp;Мероприятие) КАК рсм_ОперацииМероприятийСрезПоследних
	//           |ГДЕ
	//           |	рсм_ОперацииМероприятийСрезПоследних.Отменено = ЛОЖЬ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	рсм_ОперацииМероприятийСрезПоследних.Операция КАК Мероприятие,
	               |	рсм_ОперацииМероприятийСрезПоследних.ИДМероприятия КАК ИДМероприятия,
	               |	рсм_ОперацииМероприятийСрезПоследних.Количество КАК Количество
	               |ИЗ
	               |	РегистрСведений.рсм_ОперацииМероприятий.СрезПоследних(
	               |			,
	               |			ИДСтратегии = &amp;ИДСтратегии
	               |				И Родитель = &amp;ИдМероприятия) КАК рсм_ОперацииМероприятийСрезПоследних
	               |ГДЕ
	               |	рсм_ОперацииМероприятийСрезПоследних.Отменена = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ИДСтратегии", ВходящиеДанные.ИДСтратегии);
	Запрос.УстановитьПараметр("ИдМероприятия", ВходящиеДанные.ИДМероприятия);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ИсходящиеДанные = Новый Структура("КВД, Мероприятие, ИДМероприятия, ИдентификаторТехКарты, ТехКарта, ИдСтратегии");
	
	Если Параметры.ОтладкаСинхронизации Тогда
		МероСС = Строка(ВходящиеДанные.ИДСтратегии) + "_" + ОбъектКоллекции.Операция.Наименование + "_" + ВходящиеДанные.Мероприятие.Наименование;
	Иначе
		МероСС = Строка(ВходящиеДанные.ИДСтратегии) 
			+ ЗначениеВСтрокуВнутр(ОбъектКоллекции.Операция) 
			+ ЗначениеВСтрокуВнутр(ВходящиеДанные.Мероприятие);
	КонецЕсли;
	
	ИсходящиеДанные.КВД = МероСС;
	ИсходящиеДанные.ИДСтратегии = ВходящиеДанные.ИДСтратегии;
	ИсходящиеДанные.Мероприятие = ОбъектКоллекции.Операция;
	ИсходящиеДанные.ИДМероприятия = Выборка.ИДМероприятия;
	ИсходящиеДанные.ИдентификаторТехКарты = ОбъектКоллекции.Операция;
	ИсходящиеДанные.ТехКарта = ОбъектКоллекции.Операция;
	
	ВыгрузитьПоПравилу(ОбъектКоллекции.Операция,,ИсходящиеДанные,, "торо_ТехКарты");
	//ВыгрузитьПоПравилу(ОбъектКоллекции.Операция,,ИсходящиеДанные,, "торо_ВерсииТехКарт");
	ВыгрузитьПоПравилу(ОбъектКоллекции.Операция,,ИсходящиеДанные,, "торо_ИдентификаторыТехКарт");
	
	ИмяПКО = "торо_ИдентификаторыТехКарт";
	//Отказ = Истина;
Иначе
	ИмяПКО = "торо_ТехнологическиеОперации";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Количество</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; НормаВремениВСекундах</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НормаВремениВСекундах" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; СозданаАвтоматически</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СозданаАвтоматически" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Истина;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ОбменРСМ</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбменРСМ" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.КВД;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ДатаПринятия</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПринятия" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ТекущаяДата();</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; ВремяПростоя</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВремяПростоя" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ВремяПростояТекст</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВремяПростояТекст" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>значение = 1;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>Продолжительность --&gt; НормаВремени</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="Продолжительность" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="НормаВремени" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Значение = Источник.Продолжительность;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>Продолжительность --&gt; НормаВремениТекст</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="Продолжительность" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="НормаВремениТекст" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>ПродолжительностьОстаток = Источник.Продолжительность;
Если ПродолжительностьОстаток = 0 Тогда
	Значение = "Ввести продолжительность";	
Иначе
	Часы = Цел(ПродолжительностьОстаток / 3600);
	ПродолжительностьОстаток = ПродолжительностьОстаток % 3600;
	
	Минуты = Цел(ПродолжительностьОстаток / 60);
	ПродолжительностьОстаток = ПродолжительностьОстаток % 60;
	
	Секунды = ПродолжительностьОстаток;
		
	Значение = СтрШаблон(Нстр("ru = '%1 ч. %2 м. %3 с.'"), Часы, Минуты, Секунды);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ТехнологическиеОперации</Код>
				<Наименование>Справочник: Операции мероприятий</Наименование>
				<Порядок>150</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.рсм_ОперацииМероприятий</Источник>
				<Приемник>СправочникСсылка.торо_ТехнологическиеОперации</Приемник>
				<Свойства/>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ИдентификаторыТехКарт</Код>
				<Наименование>Справочник: Проекты</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ВходящиеДанные.КВД;</ПередВыгрузкой>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.рсм_Мероприятия</Источник>
				<Приемник>СправочникСсылка.торо_ИдентификаторыТехКарт</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; ОбменРСМ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбменРСМ" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.КВД;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Статус</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Реквизит" Тип="ПеречислениеСсылка.торо_СтатусыНормативныхРемонтовИТехКарт"/>
						<ПередВыгрузкой>Выражение = "Перечисления.торо_СтатусыНормативныхРемонтовИТехКарт.Действует";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.рсм_Мероприятия"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.торо_ИдентификаторыТехКарт"/>
						<КодПравилаКонвертации>торо_ИдентификаторыТехКарт_группа                 </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Ссылка;

//ИсходящиеДанные = Новый Структура("Наименование, ЭтоГруппа", "Из RCM", Истина);
//ВыгрузитьПоПравилу(,,ИсходящиеДанные,, "торо_ИдентификаторыТехКарт_группа");

//Отказ = Истина;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ИдентификаторыТехКарт_Поиск</Код>
				<Наименование>Справочник: Проекты</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>Значение = ВходящиеДанные.КВД;</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.рсм_Мероприятия</Источник>
				<Приемник>СправочникСсылка.торо_ИдентификаторыТехКарт</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ОбменРСМ</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбменРСМ" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.КВД;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ОбъектыРемонта_Поиск</Код>
				<Наименование>Справочник: Иерархия ТОИР</Наименование>
				<Порядок>400</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.рсм_ИерархияТОИР</Источник>
				<Приемник>СправочникСсылка.торо_ОбъектыРемонта</Приемник>
				<Свойства>
					<Свойство Отключить="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_СпособыПланированияРемонтныхРабот_Поиск</Код>
				<Наименование>Справочник: Способы планирования</Наименование>
				<Порядок>450</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.рсм_СпособыПланирования</Источник>
				<Приемник>СправочникСсылка.торо_СпособыПланированияРемонтныхРабот</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Обязательное="true">
						<Код>2</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ИдентификаторыТехКарт_группа</Код>
				<Наименование>Справочник: Мероприятия</Наименование>
				<Порядок>500</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.торо_ИдентификаторыТехКарт</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Из RCM";</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>2</Код>
						<Наименование>--&gt; ЭтоГруппа</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Истина;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>торо_ВнешнееОснованиеДляРабот</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ВходящиеДанные.ИДСтратегии;</ПередВыгрузкой>
				<ПослеЗагрузки>Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Подразделение КАК Подразделение,
	|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка = &amp;Пользователь";

Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());

Выборка = Запрос.Выполнить().Выбрать();

Если Выборка.Следующий() Тогда
	Объект.Подразделение = Выборка.Подразделение;
КонецЕсли;

ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Выборка.ИдентификаторПользователяИБ); 
   
Если ПользовательИБ &lt;&gt; Неопределено Тогда 
	Объект.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР",
	    "ОсновнаяОрганизация",
	    Справочники.Организации.ПустаяСсылка(),,
	    ПользовательИБ.Имя);
КонецЕсли;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.торо_ВнешнееОснованиеДляРабот</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = ТекущаяДата();</ПередВыгрузкой>
					</Свойство>
					<Свойство Отключить="true">
						<Код>2</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>3</Код>
						<Наименование>--&gt; ОбследованноеОборудование</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбследованноеОборудование" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; ID</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ID" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ОбъектРемонта</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбъектРемонта" Вид="Реквизит" Тип="СправочникСсылка.торо_ОбъектыРемонта"/>
							<КодПравилаКонвертации>торо_ОбъектыРемонта_Поиск                         </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>6</Код>
						<Наименование>--&gt; РемонтныеРаботы</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РемонтныеРаботы" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; РемонтнаяРабота</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РемонтнаяРабота" Вид="Реквизит"/>
							<КодПравилаКонвертации>торо_ИдентификаторыТехКарт_Поиск                  </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Параметры.ОтладкаСинхронизации Тогда
	МероСС = Строка(ВходящиеДанные.ИДСтратегии) + "_" + ОбъектКоллекции.РемонтнаяРабота.Наименование + "_" + "ПустаяСсылка";
Иначе
	МероСС = Строка(ВходящиеДанные.ИДСтратегии) 
		+ ЗначениеВСтрокуВнутр(ОбъектКоллекции.РемонтнаяРабота) 
		+ ЗначениеВСтрокуВнутр(Справочники.рсм_Мероприятия.ПустаяСсылка());
КонецЕсли;
ИсходящиеДанные = Новый Структура("КВД", мероСС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Предписание_ID</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Предписание_ID" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ID</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ID" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Значение = Новый УникальныйИдентификатор;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Количество</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>--&gt; ОбменРСМ</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбменРСМ" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = ВходящиеДанные.ИДСтратегии;</ПередВыгрузкой>
					</Свойство>
					<Свойство Отключить="true">
						<Код>13</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>14</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.СтруктураПредприятия"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Регистры сведений</Код>
			<Наименование>Регистры сведений</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>торо_НормативныеРемонтыОборудования</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = ВходящиеДанные.КВД;</ПередВыгрузкой>
				<ПослеЗагрузки>нс = Параметры.НормативныеРемонты.Добавить();
нс.ОбъектРемонта = Объект.ОбъектРемонта;
нс.НормативныйРемонт = Объект.НормативныйРемонт;
нс.ИсточникСтратегии = Объект.ИсточникСтратегии;
нс.СпособПланирования = Объект.СпособПланирования;
нс.Отменено = ПараметрыОбъекта["Отменено"];

Отказ = Истина;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.торо_НормативныеРемонтыОборудования</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ОбъектРемонта</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектРемонта" Вид="Измерение" Тип="СправочникСсылка.торо_ОбъектыРемонта"/>
						<КодПравилаКонвертации>торо_ОбъектыРемонта_Поиск                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; НормативныйРемонт</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НормативныйРемонт" Вид="Ресурс" Тип="СправочникСсылка.торо_ИдентификаторыТехКарт"/>
						<КодПравилаКонвертации>торо_ИдентификаторыТехКарт_Поиск                  </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура("КВД", ВходящиеДанные.КВД);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ИсточникСтратегии</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИсточникСтратегии" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; СпособПланирования</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособПланирования" Вид="Ресурс" Тип="СправочникСсылка.торо_СпособыПланированияРемонтныхРабот"/>
						<КодПравилаКонвертации>торо_СпособыПланированияРемонтныхРабот_Поиск      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Отменено</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Отменено</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>торо_ЗамещаемыеРемонты</Код>
				<Наименование>Справочник: Иерархия ТОИР</Наименование>
				<Порядок>100</Порядок>
				<ПослеЗагрузки>нс = Параметры.ЗамещаемыеРемонты.Добавить();
нс.ОбъектРемонта = Объект.ОбъектРемонта;
нс.Мероприятие = ПараметрыОбъекта["Мероприятие"];
нс.ЗамещаемоеМероприятие = ПараметрыОбъекта["ЗамещаемоеМероприятие"];

Отказ = Истина;</ПослеЗагрузки>
				<Источник>СправочникСсылка.рсм_ИерархияТОИР</Источник>
				<Приемник>РегистрСведенийЗапись.торо_ПараметрыЗамещенияПланированияРемонтныхРабот</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ОбъектРемонта</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектРемонта" Вид="Измерение" Тип="СправочникСсылка.торо_ОбъектыРемонта"/>
						<КодПравилаКонвертации>торо_ОбъектыРемонта_Поиск                         </КодПравилаКонвертации>
						<ПередВыгрузкой>Значение = Источник.Ссылка;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Мероприятие</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<КодПравилаКонвертации>торо_ИдентификаторыТехКарт_Поиск                  </КодПравилаКонвертации>
						<ИмяПараметраДляПередачи>Мероприятие</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Значение = ВходящиеДанные.Мероприятие;
ИсходящиеДанные = Новый Структура("КВД", ВходящиеДанные.МероприятиеКВД);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ЗамещаемоеМероприятие</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<КодПравилаКонвертации>торо_ИдентификаторыТехКарт_Поиск                  </КодПравилаКонвертации>
						<ИмяПараметраДляПередачи>ЗамещаемоеМероприятие</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>Значение = ВходящиеДанные.ЗамещаемоеМероприятие;
ИсходящиеДанные = Новый Структура("КВД", ВходящиеДанные.ЗамещаемоеМероприятиеКВД);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>рсм_Проекты</Код>
				<Наименование>Проекты</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>Проекты_системный                                 </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.рсм_Проекты</ОбъектВыборки>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы/>
	<Запросы/>
</ПравилаОбмена>