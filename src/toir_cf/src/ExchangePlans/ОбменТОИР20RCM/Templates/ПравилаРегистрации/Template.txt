<ПравилаРегистрации>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>d5ca1ae5-4b23-11e9-9ef4-c86000550c9e</Ид>
	<Наименование>рсм_ТОИР: RCM</Наименование>
	<ДатаВремяСоздания>2020-03-24T13:19:32</ДатаВремяСоздания>
	<ПланОбмена Имя="ОбменТОИР20RCM">ПланОбменаСсылка.ОбменТОИР20RCM</ПланОбмена>
	<Конфигурация ВерсияПлатформы="8.2" ВерсияКонфигурации="3.0.1.1" СинонимКонфигурации="1С:ТОИР Управление ремонтами и обслуживанием оборудования КОРП, редакция 3.0">ТехническоеОбслуживаниеИРемонты30</Конфигурация>
	<СоставПланаОбмена>
		<Элемент>
			<Тип>СправочникСсылка.торо_ПриоритетыОбъектовРемонта</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.торо_ИдентификаторыТехКарт</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.торо_ВыявленныеДефекты</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.торо_КритичностьДефекта</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>РегистрСведенийЗапись.торо_ИерархическиеСтруктурыОР</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.ЕдиницыИзмерения</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.торо_ТиповыеОР</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.торо_ВводНачальныхДанных</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.торо_СпособыПланированияРемонтныхРабот</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.Валюты</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>РегистрСведенийЗапись.торо_РасположениеОРВСтруктуреИерархии</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.ПараметрыВыработкиОС</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>РегистрСведенийЗапись.СоответствияОбъектовИнформационныхБаз</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>ДокументСсылка.торо_УчетНаработкиОборудования</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.торо_ТехнологическиеОперации</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
		<Элемент>
			<Тип>СправочникСсылка.торо_ОбъектыРемонта</Тип>
			<Авторегистрация>false</Авторегистрация>
		</Элемент>
	</СоставПланаОбмена>
	<ПравилаРегистрацииОбъектов>
		<Группа Отключить="false">
			<Код>000000001</Код>
			<Наименование>Документы</Наименование>
			<Правило Отключить="false" Валидное="true">
				<Код>000000002</Код>
				<Наименование>Учет наработки оборудования</Наименование>
				<ОбъектНастройки>ДокументСсылка.торо_УчетНаработкиОборудования</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.торо_УчетНаработкиОборудования</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>// TODO: Нужно учитывать возможное наличие нескольких узлов планов обмена с различными настройками
// (например с разной иерархией ОР отправляемых в RCM), сейчас пока считаем что он всего 1,
//  либо во всех узлах одна структура иерархии

Если Не Объект.ДополнительныеСвойства.Свойство("РегистрацияВRCMБезУсловий") Тогда
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	торо_СтруктурыОР.Ссылка КАК Иерархия,
	|	торо_СтруктурыОР.ИзменяетсяДокументами КАК ИзменяетсяДокументами
	|ИЗ
	|	ПланОбмена.ОбменТОИР20RCM КАК ОбменТОИР20RCM
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_СтруктурыОР КАК торо_СтруктурыОР
	|		ПО ОбменТОИР20RCM.Иерархия = торо_СтруктурыОР.Ссылка
	|			И (НЕ ОбменТОИР20RCM.ЭтотУзел)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ИерархияДляВводаНовыхОР.Значение,
	|	торо_ИерархияДляВводаНовыхОР.Значение.ИзменяетсяДокументами
	|ИЗ
	|	Константа.торо_ИерархияДляВводаНовыхОР КАК торо_ИерархияДляВводаНовыхОР");
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект
		|ПОМЕСТИТЬ ОбъектыДоЗаписи
		|ИЗ
		|	Документ.торо_УчетНаработкиОборудования.НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
		|ГДЕ
		|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Ссылка = &amp;Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.Объект
		|ИЗ
		|	Документ.торо_УчетНаработкиОборудования.НаработкаПодчиненныхОбъектов КАК торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов
		|ГДЕ
		|	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.Ссылка = &amp;Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыПослеЗаписи.Объект КАК Объект
		|ПОМЕСТИТЬ ОбъектыПослеЗаписи
		|ИЗ
		|	&amp;ОбъектыПослеЗаписи КАК ОбъектыПослеЗаписи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыДоЗаписи.Объект КАК Объект
		|ПОМЕСТИТЬ ВсеОбъекты
		|ИЗ
		|	ОбъектыДоЗаписи КАК ОбъектыДоЗаписи
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъектыПослеЗаписи.Объект
		|ИЗ
		|	ОбъектыПослеЗаписи КАК ОбъектыПослеЗаписи
		|;
		|" 
		
		+ ?(Выборка.ИзменяетсяДокументами
		
		,"ВЫБРАТЬ
		|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.ОбъектИерархии КАК Объект
		|ИЗ
		|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(
		|			,
		|			ОбъектИерархии В
		|					(ВЫБРАТЬ
		|						ВсеОбъекты.Объект КАК Объект
		|					ИЗ
		|						ВсеОбъекты КАК ВсеОбъекты)
		|				И СтруктураИерархии = &amp;Иерархия) КАК торо_РасположениеОРВСтруктуреИерархииСрезПоследних"
		
		,"ВЫБРАТЬ
		|	ВсеОбъекты.Объект КАК Объект
		|ИЗ
		|	ВсеОбъекты КАК ВсеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
		|		ПО ВсеОбъекты.Объект = торо_ИерархическиеСтруктурыОР.ОбъектИерархии
		|			И (торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &amp;Иерархия)");
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Иерархия", Выборка.Иерархия);
		
		ОбъектыПослеЗаписи = Новый ТаблицаЗначений();
		ОбъектыПослеЗаписи.Колонки.Добавить("Объект", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
		
		Для Каждого СтрНаработки Из Объект.НаработкаОбъектов Цикл
			НС = ОбъектыПослеЗаписи.Добавить();
			НС.Объект = СтрНаработки.Объект;
		КонецЦикла;
		
		Для Каждого СтрНаработки Из Объект.НаработкаПодчиненныхОбъектов Цикл
			НС = ОбъектыПослеЗаписи.Добавить();
			НС.Объект = СтрНаработки.Объект;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ОбъектыПослеЗаписи", ОбъектыПослеЗаписи);
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</ПередОбработкой>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000003</Код>
				<Наименование>Выявленные дефекты</Наименование>
				<ОбъектНастройки>ДокументСсылка.торо_ВыявленныеДефекты</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Документ.торо_ВыявленныеДефекты</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Документ</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>//// TODO: Нужно учитывать возможное наличие нескольких узлов планов обмена с различными настройками
//// (например с разной иерархией ОР отправляемых в RCM), сейчас пока считаем что он всего 1,
////  либо во всех узлах одна структура иерархии

//Если Не Объект.ДополнительныеСвойства.Свойство("РегистрацияВRCMБезУсловий") Тогда
//	
//	Запрос = Новый Запрос(
//	"ВЫБРАТЬ ПЕРВЫЕ 1
//	|	торо_СтруктурыОР.Ссылка КАК Иерархия,
//	|	торо_СтруктурыОР.ИзменяетсяДокументами КАК ИзменяетсяДокументами
//	|ИЗ
//	|	ПланОбмена.ОбменТОИР20RCM КАК ОбменТОИР20RCM
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_СтруктурыОР КАК торо_СтруктурыОР
//	|		ПО ОбменТОИР20RCM.Иерархия = торо_СтруктурыОР.Ссылка
//	|			И (НЕ ОбменТОИР20RCM.ЭтотУзел)
//	|
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ
//	|	торо_ИерархияДляВводаНовыхОР.Значение,
//	|	торо_ИерархияДляВводаНовыхОР.Значение.ИзменяетсяДокументами
//	|ИЗ
//	|	Константа.торо_ИерархияДляВводаНовыхОР КАК торо_ИерархияДляВводаНовыхОР");
//	Результат = Запрос.Выполнить();
//	
//	Если Не Результат.Пустой() Тогда
//		
//		Выборка = Результат.Выбрать();
//		Выборка.Следующий();
//		
//		ТекстЗапроса = "ВЫБРАТЬ
//		|	торо_ВыявленныеДефектыСписокДефектов.ВидДефекта КАК ВидДефекта,
//		|	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент КАК Объект
//		|ПОМЕСТИТЬ ОбъектыДоЗаписи
//		|ИЗ
//		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
//		|ГДЕ
//		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &amp;Ссылка
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ВидыДефектовДляПередачи.ВидДефекта КАК ВидДефекта
//		|ПОМЕСТИТЬ
//		|	ВидыДефектовДляПередачи
//		|ИЗ
//		|	ПланОбмена.ОбменТОИР20RCM.ВидыДефектовДляПередачи КАК ВидыДефектовДляПередачи
//		|ОБЪЕДИНИТЬ
//		|ВЫБРАТЬ
//		|	ЗНАЧЕНИЕ(Справочник.торо_ВидыДефектов.ПустаяСсылка)
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ОбъектыПослеЗаписи.ВидДефекта КАК ВидДефекта,
//		|	ОбъектыПослеЗаписи.Объект КАК Объект
//		|ПОМЕСТИТЬ ОбъектыПослеЗаписи
//		|ИЗ
//		|	&amp;ОбъектыПослеЗаписи КАК ОбъектыПослеЗаписи
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	ОбъектыДоЗаписи.ВидДефекта КАК ВидДефекта,
//		|	ОбъектыДоЗаписи.Объект КАК Объект
//		|ПОМЕСТИТЬ ВсеОбъекты
//		|ИЗ
//		|	ОбъектыДоЗаписи КАК ОбъектыДоЗаписи
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыДефектовДляПередачи
//		|		ПО ОбъектыДоЗаписи.ВидДефекта = ВидыДефектовДляПередачи.ВидДефекта
//		|
//		|ОБЪЕДИНИТЬ ВСЕ
//		|
//		|ВЫБРАТЬ
//		|	ОбъектыПослеЗаписи.ВидДефекта,
//		|	ОбъектыПослеЗаписи.Объект
//		|ИЗ
//		|	ОбъектыПослеЗаписи КАК ОбъектыПослеЗаписи
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыДефектовДляПередачи
//		|		ПО ОбъектыПослеЗаписи.ВидДефекта = ВидыДефектовДляПередачи.ВидДефекта
//		|;
//		|" 
//		
//		+ ?(Выборка.ИзменяетсяДокументами
//		
//		,"ВЫБРАТЬ
//		|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.ОбъектИерархии КАК Объект
//		|ИЗ
//		|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(
//		|			,
//		|			ОбъектИерархии В
//		|					(ВЫБРАТЬ
//		|						ВсеОбъекты.Объект КАК Объект
//		|					ИЗ
//		|						ВсеОбъекты КАК ВсеОбъекты)
//		|				И СтруктураИерархии = &amp;Иерархия) КАК торо_РасположениеОРВСтруктуреИерархииСрезПоследних"
//		
//		,"ВЫБРАТЬ
//		|	ВсеОбъекты.Объект КАК Объект
//		|ИЗ
//		|	ВсеОбъекты КАК ВсеОбъекты
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
//		|		ПО ВсеОбъекты.Объект = торо_ИерархическиеСтруктурыОР.ОбъектИерархии
//		|			И (торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &amp;Иерархия)");
//		
//		Запрос = Новый Запрос(ТекстЗапроса);
//		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
//		Запрос.УстановитьПараметр("Иерархия", Выборка.Иерархия);
//		
//		ОбъектыПослеЗаписи = Новый ТаблицаЗначений();
//		ОбъектыПослеЗаписи.Колонки.Добавить("ВидДефекта", Новый ОписаниеТипов("СправочникСсылка.торо_ВидыДефектов"));
//		ОбъектыПослеЗаписи.Колонки.Добавить("Объект", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
//		
//		Для Каждого СтрДефекта Из Объект.СписокДефектов Цикл
//			НС = ОбъектыПослеЗаписи.Добавить();
//			НС.ВидДефекта = СтрДефекта.ВидДефекта;
//			НС.Объект = СтрДефекта.ОтказавшийЭлемент;
//		КонецЦикла;
//		
//		Запрос.УстановитьПараметр("ОбъектыПослеЗаписи", ОбъектыПослеЗаписи);
//		
//		Результат = Запрос.Выполнить();
//		Если Результат.Пустой() Тогда
//			Отказ = Истина;
//		КонецЕсли;
//	КонецЕсли;
//КонецЕсли;</ПередОбработкой>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>000000004</Код>
			<Наименование>Справочники</Наименование>
			<Правило Отключить="false" Валидное="true">
				<Код>000000005</Код>
				<Наименование>Валюты</Наименование>
				<ОбъектНастройки>СправочникСсылка.Валюты</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.Валюты</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000006</Код>
				<Наименование>Единицы измерения</Наименование>
				<ОбъектНастройки>СправочникСсылка.ЕдиницыИзмерения</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.ЕдиницыИзмерения</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000007</Код>
				<Наименование>Объекты ремонта</Наименование>
				<ОбъектНастройки>СправочникСсылка.торо_ОбъектыРемонта</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.торо_ОбъектыРемонта</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПриОбработке>Если Объект.ДополнительныеСвойства.Свойство("Иерархия") Тогда
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПланОбменаОсновнаяТаблица.Ссылка КАК Ссылка
	|ИЗ
	|	ПланОбмена.ОбменТОИР20RCM КАК ПланОбменаОсновнаяТаблица
	|ГДЕ
	|	&amp;СвойствоОбъекта_Иерархия = ПланОбменаОсновнаяТаблица.Иерархия
	|	[УсловиеОтбораПоРеквизитуФлагу]";
	ПараметрыЗапроса.Вставить("Иерархия", Объект.ДополнительныеСвойства.Иерархия);
Иначе
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПланОбменаОсновнаяТаблица.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменТОИР20RCM КАК ПланОбменаОсновнаяТаблица
	|		ПО (торо_ИерархическиеСтруктурыОР.ОбъектИерархии = &amp;СвойствоОбъекта_Ссылка)
	|			И НЕ ПланОбменаОсновнаяТаблица.Ссылка = &amp;ОбменТОИР20RCMЭтотУзел
	|			И торо_ИерархическиеСтруктурыОР.СтруктураИерархии = ПланОбменаОсновнаяТаблица.Иерархия
	|			[УсловиеОтбораПоРеквизитуФлагу]
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланОбменаОсновнаяТаблица.Ссылка
	|ИЗ
	|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(, ОбъектИерархии = &amp;СвойствоОбъекта_Ссылка) КАК торо_РасположениеОРВСтруктуреИерархииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменТОИР20RCM КАК ПланОбменаОсновнаяТаблица
	|		ПО торо_РасположениеОРВСтруктуреИерархииСрезПоследних.СтруктураИерархии = ПланОбменаОсновнаяТаблица.Иерархия
	|			И НЕ ПланОбменаОсновнаяТаблица.Ссылка = &amp;ОбменТОИР20RCMЭтотУзел
	|			[УсловиеОтбораПоРеквизитуФлагу]";
	ПараметрыЗапроса.Вставить("Ссылка", Объект.Ссылка);
КонецЕсли;</ПриОбработке>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000008</Код>
				<Наименование>Параметры наработки ОР</Наименование>
				<ОбъектНастройки>СправочникСсылка.ПараметрыВыработкиОС</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.ПараметрыВыработкиОС</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000009</Код>
				<Наименование>Приоритеты объектов ремонта</Наименование>
				<ОбъектНастройки>СправочникСсылка.торо_ПриоритетыОбъектовРемонта</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.торо_ПриоритетыОбъектовРемонта</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000010</Код>
				<Наименование>Способы планирования ремонтных работ</Наименование>
				<ОбъектНастройки>СправочникСсылка.торо_СпособыПланированияРемонтныхРабот</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.торо_СпособыПланированияРемонтныхРабот</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000011</Код>
				<Наименование>Технологические карты ремонтов</Наименование>
				<ОбъектНастройки>СправочникСсылка.торо_ИдентификаторыТехКарт</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.торо_ИдентификаторыТехКарт</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000012</Код>
				<Наименование>Технологические операции</Наименование>
				<ОбъектНастройки>СправочникСсылка.торо_ТехнологическиеОперации</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.торо_ТехнологическиеОперации</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000016</Код>
				<Наименование>Критичность дефекта</Наименование>
				<ОбъектНастройки>СправочникСсылка.торо_КритичностьДефекта</ОбъектНастройки>
				<ОбъектМетаданныхИмя>Справочник.торо_КритичностьДефекта</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>Справочник</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>000000013</Код>
			<Наименование>РегистрыСведений</Наименование>
			<Правило Отключить="false" Валидное="true">
				<Код>000000014</Код>
				<Наименование>Иерархические структуры объектов ремонта</Наименование>
				<ОбъектНастройки>РегистрСведенийЗапись.торо_ИерархическиеСтруктурыОР</ОбъектНастройки>
				<ОбъектМетаданныхИмя>РегистрСведений.торо_ИерархическиеСтруктурыОР</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>РегистрСведений</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>// Правило нужно для регистрации другого объекта
Отказ = Истина;

Если Не Выгрузка Тогда
	
	СтруктураОтбора = Новый Структура;
	ДляСборкиУсловияМассив = Новый Массив;
	
	Для Каждого ЭлементОтбора Из Объект.Отбор Цикл
		СтруктураОтбора.Вставить(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
		ДляСборкиУсловияМассив.Добавить(СтрШаблон("торо_ИерархическиеСтруктурыОР.%1 = &amp;%1", ЭлементОтбора.Имя));
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии КАК ОбъектИерархии,
	|	торо_ИерархическиеСтруктурыОР.СтруктураИерархии КАК СтруктураИерархии
	|ИЗ
	|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
	|ГДЕ
	|	"                                        
	+ СтрСоединить(ДляСборкиУсловияМассив, " И "));
	Для Каждого КлючЗначПарам Из СтруктураОтбора Цикл
		Запрос.УстановитьПараметр(КлючЗначПарам.Ключ, КлючЗначПарам.Значение);
	КонецЦикла;
	
	ТабТекДанных = Объект.Выгрузить();
	ТабТекДанных.Индексы.Добавить("ОбъектИерархии, СтруктураИерархии");
	
	СоответствиеОР = Новый Соответствие;
	Для Каждого Запись Из Объект Цикл
		СоответствиеПоИерархиям = СоответствиеОР.Получить(Запись.ОбъектИерархии); 
		Если СоответствиеПоИерархиям = Неопределено Тогда
			СоответствиеПоИерархиям = Новый Соответствие;
			СоответствиеОР.Вставить(Запись.ОбъектИерархии, СоответствиеПоИерархиям);
		КонецЕсли;
		СоответствиеПоИерархиям.Вставить(Запись.СтруктураИерархии, Истина);
		
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеПоИерархиям = СоответствиеОР.Получить(Выборка.ОбъектИерархии); 
			Если СоответствиеПоИерархиям = Неопределено Тогда
				СоответствиеПоИерархиям = Новый Соответствие;
				СоответствиеОР.Вставить(Выборка.ОбъектИерархии, СоответствиеПоИерархиям);
			КонецЕсли;
			Если СоответствиеПоИерархиям.Получить(Выборка.СтруктураИерархии) = Неопределено Тогда
				СоответствиеПоИерархиям.Вставить(Выборка.СтруктураИерархии, Истина);
			КонецЕсли;
			НайденныеСтрокиДляУдаления = ТабТекДанных.НайтиСтроки(Новый Структура("ОбъектИерархии, СтруктураИерархии", Выборка.ОбъектИерархии, Выборка.СтруктураИерархии));
			Для Каждого СтрокаКУдалению Из НайденныеСтрокиДляУдаления Цикл
				ТабТекДанных.Удалить(СтрокаКУдалению);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого КлючЗначПоОР Из СоответствиеОР Цикл
		Для Каждого КлючЗначПоИерархиям Из КлючЗначПоОР.Значение Цикл
			ОбъектИерархии = КлючЗначПоОР.Ключ.ПолучитьОбъект();
			Если Не ОбъектИерархии = Неопределено Тогда
				ОбъектИерархии.ДополнительныеСвойства.Вставить("Иерархия", КлючЗначПоИерархиям.Ключ);
				ВыполнитьПравилаРегистрацииДляОбъекта(ОбъектИерархии, "ОбменТОИР20RCM");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ТабТекДанных.Количество() &gt; 0 Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабТекДанных.ОбъектИерархии КАК ОбъектИерархии,
		|	ТабТекДанных.СтруктураИерархии КАК СтруктураИерархии
		|ПОМЕСТИТЬ ТабТекДанных
		|ИЗ
		|	&amp;ТабТекДанных КАК ТабТекДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабТекДанных.ОбъектИерархии КАК ОбъектИерархии
		|ПОМЕСТИТЬ ОтобранныеОР
		|ИЗ
		|	ПланОбмена.ОбменТОИР20RCM КАК ОбменТОИР20RCM
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабТекДанных КАК ТабТекДанных
		|		ПО ОбменТОИР20RCM.Иерархия = ТабТекДанных.СтруктураИерархии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_ВыявленныеДефекты.Регистратор КАК Ссылка
		|ИЗ
		|	ОтобранныеОР КАК ОтобранныеОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
		|		ПО ОтобранныеОР.ОбъектИерархии = торо_ВыявленныеДефекты.ОтказавшийЭлемент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_НаработкаОбъектовРемонта.Регистратор КАК Ссылка
		|ИЗ
		|	ОтобранныеОР КАК ОтобранныеОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_НаработкаОбъектовРемонта КАК торо_НаработкаОбъектовРемонта
		|		ПО ОтобранныеОР.ОбъектИерархии = торо_НаработкаОбъектовРемонта.ОбъектРемонта");
		Запрос.УстановитьПараметр("ТабТекДанных", ТабТекДанных);
		Результаты = Запрос.ВыполнитьПакет();
		
		РезультатПоДефектам = Результаты[2];
		Если Не РезультатПоДефектам.Пустой() Тогда
			Выборка = РезультатПоДефектам.Выбрать();
			Пока Выборка.Следующий() Цикл
				ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ДокОбъект.ДополнительныеСвойства.Вставить("РегистрацияВRCMБезУсловий", Истина);
				ВыполнитьПравилаРегистрацииДляОбъекта(ДокОбъект, "ОбменТОИР20RCM");
			КонецЦикла;
		КонецЕсли;
		
		РезультатПоУчетуНаработки = Результаты[3];
		Если Не РезультатПоУчетуНаработки.Пустой() Тогда
			Выборка = РезультатПоУчетуНаработки.Выбрать();
			Пока Выборка.Следующий() Цикл
				ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ДокОбъект.ДополнительныеСвойства.Вставить("РегистрацияВRCMБезУсловий", Истина);
				ВыполнитьПравилаРегистрацииДляОбъекта(ДокОбъект, "ОбменТОИР20RCM");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;</ПередОбработкой>
			</Правило>
			<Правило Отключить="false" Валидное="true">
				<Код>000000015</Код>
				<Наименование>Расположение объектов ремонтных работ в структуре иерархии</Наименование>
				<ОбъектНастройки>РегистрСведенийЗапись.торо_РасположениеОРВСтруктуреИерархии</ОбъектНастройки>
				<ОбъектМетаданныхИмя>РегистрСведений.торо_РасположениеОРВСтруктуреИерархии</ОбъектМетаданныхИмя>
				<ОбъектМетаданныхТип>РегистрСведений</ОбъектМетаданныхТип>
				<ОтборПоСвойствамПланаОбмена/>
				<ОтборПоСвойствамОбъекта/>
				<ПередОбработкой>// Правило нужно для регистрации другого объекта
Отказ = Истина;

Если Не Выгрузка Тогда
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	торо_РасположениеОРВСтруктуреИерархии.ОбъектИерархии КАК ОбъектИерархии,
	|	торо_РасположениеОРВСтруктуреИерархии.СтруктураИерархии КАК СтруктураИерархии
	|ИЗ
	|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии КАК торо_РасположениеОРВСтруктуреИерархии
	|ГДЕ
	|	торо_РасположениеОРВСтруктуреИерархии.Регистратор = &amp;Регистратор");
	Запрос.УстановитьПараметр("Регистратор", Объект.Отбор.Регистратор.Значение);
	
	СоответствиеОР = Новый Соответствие;
	Для Каждого Запись Из Объект Цикл
		СоответствиеПоИерархиям = СоответствиеОР.Получить(Запись.ОбъектИерархии); 
		Если СоответствиеПоИерархиям = Неопределено Тогда
			СоответствиеПоИерархиям = Новый Соответствие;
			СоответствиеОР.Вставить(Запись.ОбъектИерархии, СоответствиеПоИерархиям);
		КонецЕсли;
		СоответствиеПоИерархиям.Вставить(Запись.СтруктураИерархии, Истина);
		
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеПоИерархиям = СоответствиеОР.Получить(Выборка.ОбъектИерархии); 
			Если СоответствиеПоИерархиям = Неопределено Тогда
				СоответствиеПоИерархиям = Новый Соответствие;
				СоответствиеОР.Вставить(Выборка.ОбъектИерархии, СоответствиеПоИерархиям);
			КонецЕсли;
			Если СоответствиеПоИерархиям.Получить(Выборка.СтруктураИерархии) = Неопределено Тогда
				СоответствиеПоИерархиям.Вставить(Выборка.СтруктураИерархии, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого КлючЗначПоОР Из СоответствиеОР Цикл
		Для Каждого КлючЗначПоИерархиям Из КлючЗначПоОР.Значение Цикл
			ОбъектИерархии = КлючЗначПоОР.Ключ.ПолучитьОбъект();
			Если Не ОбъектИерархии = Неопределено Тогда
				ОбъектИерархии.ДополнительныеСвойства.Вставить("Иерархия", КлючЗначПоИерархиям.Ключ);
				ВыполнитьПравилаРегистрацииДляОбъекта(ОбъектИерархии, "ОбменТОИР20RCM");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецЕсли;</ПередОбработкой>
			</Правило>
		</Группа>
	</ПравилаРегистрацииОбъектов>
</ПравилаРегистрации>