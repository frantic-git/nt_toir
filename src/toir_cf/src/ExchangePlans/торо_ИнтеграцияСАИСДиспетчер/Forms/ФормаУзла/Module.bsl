#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ВидПускаПоУмолчанию.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетПусковОборудования");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	РегламентноеЗадание = торо_ИнтеграцияСАИСДиспетчер.ПолучитьРегламентноеЗадание();
	Если Не РегламентноеЗадание = Неопределено Тогда
	    Расписание = РегламентноеЗадание.Расписание;
		Элементы.НастроитьРасписание.Доступность = РегламентноеЗадание.Использование;
		IDЗадания = РегламентноеЗадание.УникальныйИдентификатор;
	КонецЕсли;
	
	Элементы.ЗагружатьВыявленныеДефекты.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	Элементы.ЗагружатьКонтролируемыеПоказателиОР.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетКонтролируемыхПоказателей");
	Элементы.ЗагружатьНаработкуОР.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетНаработкиОборудования");
	Элементы.ЗагружатьСостоянияОР.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетСостоянияОборудования");
	Элементы.ВидПускаПоУмолчанию.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетПусковОборудования");
	Элементы.ВидЦеныДляНоменклатуры.Видимость = Объект.ЗагружатьЦеныНоменклатуры;
	
	ДатаОтсчетаДляЗагрузкиДокументовВидимость = Элементы.ЗагружатьВыявленныеДефекты.Видимость
												Или Элементы.ЗагружатьКонтролируемыеПоказателиОР.Видимость
												Или Элементы.ЗагружатьНаработкуОР.Видимость 
												Или Элементы.ЗагружатьСостоянияОР.Видимость;
	
	Элементы.ДатаОтсчетаДляЗагрузкиДокументов.Видимость = ДатаОтсчетаДляЗагрузкиДокументовВидимость;
	
	ЗаполнитьСписокДетализации();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Объект.Ссылка, Пароль);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_РегламентныеЗадания" И IDЗадания = Параметр Тогда
		ОбновитьДанныеРегламентногоЗадания();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Объект.ЗагружатьВыявленныеДефекты Тогда
		Элементы.ЗагружатьИнициатораВД.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоставОтправляемыхДанных(Команда)
	ОбменДаннымиКлиент.ОткрытьСоставОтправляемыхДанных(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	ДанныеЗадания = Новый Структура("НаименованиеЗадания, ВыполняемыйМетод, ВариантЗадания,
											|ПодключитьОбработчикОповещенияОПрогрессе, ОбработчикОповещенияОПрогрессе,
											|ПодключитьОбработчикЗавершения, ОбработчикЗавершения,
											|ЗакрыватьФормуВыполненияПриЗавершении, ЗапускатьВыполнениеАвтоматически, ЗакрыватьФормуВладельцаПриВыполнении");
	
	ДанныеЗадания.ВариантЗадания = "";
	ДанныеЗадания.ПодключитьОбработчикЗавершения = Истина;
	ДанныеЗадания.ОбработчикЗавершения = "ОбработчикОкончанияФоновогоЗадания";
	ДанныеЗадания.ЗапускатьВыполнениеАвтоматически = Ложь;
	ДанныеЗадания.НаименованиеЗадания = "Выполнить обмен с АИС Диспетчер";
	ДанныеЗадания.ВыполняемыйМетод = "торо_ИнтеграцияСАИСДиспетчер.ВыполнитьОбмен";
	ДанныеЗадания.ПодключитьОбработчикОповещенияОПрогрессе = Истина;
	ДанныеЗадания.ОбработчикОповещенияОПрогрессе = "ОбработчикОповещенияОПрогрессе";
	ДанныеЗадания.ЗакрыватьФормуВыполненияПриЗавершении = Ложь;
	ДанныеЗадания.ЗакрыватьФормуВладельцаПриВыполнении = Ложь;
	
	ПараметрыФормы = Новый Структура("ДанныеЗадания, АдресПараметровЗапуска", ДанныеЗадания, ПоместитьВоВременноеХранилище(Новый Структура()));
	ОткрытьФорму("ПланОбмена.торо_ИнтеграцияСАИСДиспетчер.Форма.ФормаВыполненияДлительнойОперацииСАИСДиспетчер", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
#Если Не МобильныйКлиент Тогда
    Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект));
#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПервичногоСопоставленияСправочников(Команда)
	ОткрытьФорму("Обработка.торо_ЗагрузкаСправочниковИзАИСДиспетчер.Форма.ЗагрузкаИСопоставлениеНСИ");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЗагрузкиДанныхПоОР(Команда)
	ОткрытьФорму("Обработка.торо_ЗагрузкаСправочниковИзАИСДиспетчер.Форма.ЗагрузкаДанныхПоОР");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПароль(Команда)
	Элементы.ПоказатьПароль.Пометка = Не Элементы.ПоказатьПароль.Пометка;
	Элементы.Пароль.РежимПароля = Не Элементы.ПоказатьПароль.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ЗагружатьЦеныНоменклатурыПриИзменении(Элемент)
	Элементы.ВидЦеныДляНоменклатуры.Видимость = Объект.ЗагружатьЦеныНоменклатуры;
КонецПроцедуры

&НаКлиенте
Процедура ЗагружатьВыявленныеДефектыПриИзменении(Элемент)
	Если Не Объект.ЗагружатьВыявленныеДефекты Тогда
		Объект.ЗагружатьИнициатораВД = Ложь;
		Элементы.ЗагружатьИнициатораВД.Доступность = Ложь;
	Иначе
		Элементы.ЗагружатьИнициатораВД.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагружатьИнициатораВДПриИзменении(Элемент)
	Если Объект.ЗагружатьИнициатораВД Тогда
		Объект.ЗагружатьВыявленныеДефекты = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(НовоеРасписание, Контекст) Экспорт
	Если Не НовоеРасписание = Неопределено Тогда
		Расписание = НовоеРасписание;
		торо_ИнтеграцияСАИСДиспетчер.УстановитьНовоеРасписаниеРегламентногоЗадания(НовоеРасписание);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеРегламентногоЗадания()
	РегламентноеЗадание = торо_ИнтеграцияСАИСДиспетчер.ПолучитьРегламентноеЗадание();
	Если РегламентноеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.НастроитьРасписание.Доступность = РегламентноеЗадание.Использование;
	Расписание = РегламентноеЗадание.Расписание;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДетализации()
	МассивДетализации = Новый Массив();
	МассивДетализации.Добавить(Перечисления.Периодичность.День);
	МассивДетализации.Добавить(Перечисления.Периодичность.Неделя);
	МассивДетализации.Добавить(Перечисления.Периодичность.Месяц);
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", МассивДетализации);
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(ПараметрВыбора);
	Элементы.ДетализацияПериодаЗагрузкиДанных.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
КонецПроцедуры

#КонецОбласти