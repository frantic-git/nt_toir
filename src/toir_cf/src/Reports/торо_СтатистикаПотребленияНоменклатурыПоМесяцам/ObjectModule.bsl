#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ФункцииОтчетовКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
		// 	Никакие настройки не требуются	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ЗначениеКонстанты = Константы.торо_ПериодРасчетаСтатистикиПотребления.Получить();
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодВыполнения");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено И ПараметрПользовательскойНастройки.Использование Тогда
			ПараметрНачалоПериода = ПараметрПользовательскойНастройки.Значение.ДатаНачала;
			ПараметрКонецПериода  = ПараметрПользовательскойНастройки.Значение.ДатаОкончания;
			ДатаНачалаОтсчета = ДобавитьМесяц(ПараметрНачалоПериода,-12*(ЗначениеКонстанты-1));
			
			Параметры.УстановитьЗначениеПараметра("ДатаНачала",НачалоМесяца(ДатаНачалаОтсчета));
			Параметры.УстановитьЗначениеПараметра("ДатаОкончания",КонецМесяца(ПараметрКонецПериода));
			
			СписокМесяцев = Новый СписокЗначений;
			
			Для Счетчик = Месяц(ПараметрНачалоПериода) По Месяц(ПараметрКонецПериода) Цикл
				СписокМесяцев.Добавить(Счетчик);
			КонецЦикла;
			
			Параметры.УстановитьЗначениеПараметра("СписокМесяцев",СписокМесяцев);
		Иначе
			СписокМесяцев = Новый СписокЗначений;
			
			Для Счетчик = 1 По 12 Цикл
				СписокМесяцев.Добавить(Счетчик);
			КонецЦикла;
			
			Параметры.УстановитьЗначениеПараметра("СписокМесяцев",СписокМесяцев);
			
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры 

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ЗначениеКонстанты = Константы.торо_ПериодРасчетаСтатистикиПотребления.Получить();
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодВыполнения");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено И ПараметрПользовательскойНастройки.Использование Тогда
			ПараметрНачалоПериода = ПараметрПользовательскойНастройки.Значение.ДатаНачала;
			ПараметрКонецПериода  = ПараметрПользовательскойНастройки.Значение.ДатаОкончания;	
			
			Если Год(ПараметрНачалоПериода) <> Год(ПараметрКонецПериода) Тогда
				
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Период должен быть в пределах одного года!'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли