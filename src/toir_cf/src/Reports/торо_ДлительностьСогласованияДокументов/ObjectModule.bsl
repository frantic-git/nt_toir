#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПослеЗагрузкиНастроекВКомпоновщик = Истина;
	
КонецПроцедуры

// Вызывается после загрузки всех настроек в компоновщик.
//  Используется для уточнения, например параметров выбора,
//  зависимых от значений загруженных фиксированных отборов.
//  Структура ДополнительныеСвойства объекта Настройки компоновщика настроек объекта отчета
//  содержит свойства КлючВарианта, КлючПредопределенногоВарианта, КонтекстВарианта,
//  ФормаПараметрыОтбор, заполненные ПередЗагрузкойНастроекВКомпоновщик, а также свойство
//  ВариантНаименование, которое можно изменить для предопределенного варианта отчета.
//
//  Параметры:
//    ДополнительныеПараметры - Структура - резерв.
//
Процедура ПослеЗагрузкиНастроекВКомпоновщик(ДополнительныеПараметры) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
	// Режим отображения меняется только через эти настройки.
	НастройкиЭлементы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;
	ПрименитьФункциональныеОпцииКНастройкам(НастройкиЭлементы);
	
КонецПроцедуры

Процедура ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы)
	
	Если Не ПолучитьФункциональнуюОпцию("торо_ИспользоватьРегламентныеМероприятия") Тогда
		ОтключитьНастройкиПоРМ(ПользовательскиеНастройкиЭлементы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтключитьНастройкиПоРМ(ПользовательскиеНастройкиЭлементы)
	
	Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И Строка(Элемент.Параметр) = "ВыводитьДокументыПоРегламентымМероприятиям" Тогда
			Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Элемент.Значение = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьДокументыПоРемонтам")).ИдентификаторПользовательскойНастройки;
	ВыводитьДокументыПоРемонтам = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор);
	Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьДокументыПоРегламентымМероприятиям")).ИдентификаторПользовательскойНастройки;
	ВыводитьДокументыПоРегламентымМероприятиям = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор);
	Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьДокументыПоМТО")).ИдентификаторПользовательскойНастройки;
	ВыводитьДокументыПоМТО = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор);
	
	Если ВыводитьДокументыПоРегламентымМероприятиям.Значение Тогда
		ТекстПоляВыборки = "ВЫБОР
							|	";
		
		Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.торо_ВидыДокументовСогласованияМероприятий.ЗначенияПеречисления Цикл
			ТекстПоляВыборки = ТекстПоляВыборки + "КОГДА торо_ВидыДокументовСогласования.Ссылка = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовСогласованияМероприятий." + ЗначениеПеречисления.Имя + ")
													|	ТОГДА ТИП(Документ." + ЗначениеПеречисления.Имя + ")" + Символы.ПС;
		КонецЦикла;
		
		ТекстПоляВыборки = ТекстПоляВыборки + "КОНЕЦ";
		
		СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос, "&ТипДокументаМероприятий", ТекстПоляВыборки);
	Иначе
		СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос, "&ТипДокументаМероприятий", "ТИП(Число)");
	КонецЕсли;
	
	Если ВыводитьДокументыПоРемонтам.Значение Тогда
		ТекстПоляВыборки = "ВЫБОР
							|	";
		
		Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.торо_ВидыДокументовСогласованияРемонтов.ЗначенияПеречисления Цикл
			ТекстПоляВыборки = ТекстПоляВыборки + "КОГДА торо_ВидыДокументовСогласования.Ссылка = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовСогласованияРемонтов." + ЗначениеПеречисления.Имя + ")
													|	ТОГДА ТИП(Документ." + ЗначениеПеречисления.Имя + ")" + Символы.ПС;
		КонецЦикла;
		
		ТекстПоляВыборки = ТекстПоляВыборки + "КОНЕЦ";
		
		СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос, "&ТипДокументаРемонтов", ТекстПоляВыборки);
	Иначе
		СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос, "&ТипДокументаРемонтов", "ТИП(Число)");
	КонецЕсли;
	
	Если ВыводитьДокументыПоМТО.Значение Тогда
		ТекстПоляВыборки = "ВЫБОР
							|	";
		
		Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.торо_ВидыДокументовСогласованияМТО.ЗначенияПеречисления Цикл
			ТекстПоляВыборки = ТекстПоляВыборки + "КОГДА торо_ВидыДокументовСогласования.Ссылка = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовСогласованияМТО." + ЗначениеПеречисления.Имя + ")
													|	ТОГДА ТИП(Документ." + ЗначениеПеречисления.Имя + ")" + Символы.ПС;
		КонецЦикла;
		
		ТекстПоляВыборки = ТекстПоляВыборки + "КОНЕЦ";
		
		СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос, "&ТипДокументаМТО", ТекстПоляВыборки);
	Иначе
		СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос = СтрЗаменить(СхемаКомпоновкиДанных.НаборыДанных.Данные.Запрос, "&ТипДокументаМТО", "ТИП(Число)");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли