#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
Перем ИспользоватьУчетСостоянийОборудования;
Перем ИспользоватьОтмененныеРемонты;

#Область ОбработчикиСобытий
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
		ИдентификаторПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета")).ИдентификаторПользовательскойНастройки;
		ЗначениеПериода = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПериода).Значение;
		НеИспользоватьПериод = Не КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПериода).Использование;
		
		ТекИерархия = торо_ОтчетыСервер.ПолучитьЗначениеСтруктурыИерархии(КомпоновщикНастроек);
		
		торо_ОтчетыСервер.УстановитьЗапросыНаборовДанныхИерархииОР(СхемаКомпоновкиДанных, ТекИерархия, "ДатаОкончания");
		
		Если ТекИерархия.СтроитсяАвтоматически Тогда
			
			СхемаКомпоновкиДанных.НаборыДанных.Объекты.Запрос =
			ПолучитьСодержательнуюЧастьЗапроса(ЗначениеПериода, НеИспользоватьПериод)+
			"ВЫБРАТЬ
			|	ВТ_ФинДанные.Организация КАК Организация,
			|	ВТ_ФинДанные.Подразделение КАК Подразделение,
			|	ВТ_ФинДанные.Объект КАК Объект,
			|	ВТ_ФинДанные.ВидРемонта КАК ВидРемонта,
			|	ВТ_ФинДанные.Вид КАК Вид,
			|	ЕСТЬNULL(ВТ_ФинДанные.ЗначРесурса, 0) КАК ЗначРесурса,
			|	ВТ_ФинДанные.ДатаНачала КАК ДатаНачала,
			|	ВТ_ФинДанные.ID КАК ID,
			|	ВТ_ФинДанные.ЕстьПлан КАК ЕстьПлан,
			|	ВТ_ФинДанные.ЕстьФакт КАК ЕстьФакт,
			|	ВТ_ФинДанные.ЕстьОстанов КАК ЕстьОстанов,
			|	ВТ_ФинДанные.Отменен КАК Отменен,
			|	ВТ_ФинДанные.Объект." + ТекИерархия.РеквизитОР + " КАК ОбъектИерархии
			|ИЗ
			|	ВТ_ФинальныеДанные КАК ВТ_ФинДанные";
			
			торо_ОтчетыКлиентСервер.УстановитьТипИерархическойГруппировкиВНастройках(КомпоновщикНастроек, "ОбъектИерархии", ТипГруппировкиКомпоновкиДанных.Иерархия);
			
		Иначе
			
			торо_ОтчетыКлиентСервер.УстановитьТипИерархическойГруппировкиВНастройках(КомпоновщикНастроек, "ОбъектИерархии", ТипГруппировкиКомпоновкиДанных.ТолькоИерархия);
			
			СхемаКомпоновкиДанных.НаборыДанных.Объекты.Запрос = 
			ПолучитьСодержательнуюЧастьЗапроса(ЗначениеПериода, НеИспользоватьПериод)+
			"ВЫБРАТЬ
			|	ВТ_ФинДанные.Организация КАК Организация,
			|	ВТ_ФинДанные.Подразделение КАК Подразделение,
			|	ВТ_ФинДанные.Объект КАК Объект,
			|	ВТ_ФинДанные.ВидРемонта КАК ВидРемонта,
			|	ВТ_ФинДанные.Вид КАК Вид,
			|	ЕСТЬNULL(ВТ_ФинДанные.ЗначРесурса, 0) КАК ЗначРесурса,
			|	ВТ_ФинДанные.ДатаНачала КАК ДатаНачала,
			|	ВТ_ФинДанные.ID КАК ID,
			|	ВТ_ФинДанные.ЕстьПлан КАК ЕстьПлан,
			|	ВТ_ФинДанные.ЕстьФакт КАК ЕстьФакт,
			|	ВТ_ФинДанные.ЕстьОстанов КАК ЕстьОстанов,
			|	ВТ_ФинДанные.Отменен КАК Отменен,
			|	ВТ_ФинДанные.Объект КАК ОбъектИерархии
			|ИЗ
			|	ВТ_ФинальныеДанные КАК ВТ_ФинДанные";
			
		КонецЕсли;
		
		Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Периодичность")).ИдентификаторПользовательскойНастройки;
		МетодРазбиения = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор).Значение;
		
		ЭлементСтруктурыТаблица = Неопределено;
		Для каждого ЭлементСтруктуры из КомпоновщикНастроек.Настройки.Структура Цикл
			Если ЭлементСтруктуры.Имя = "Таблица" Тогда
				ЭлементСтруктурыТаблица = ЭлементСтруктуры;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭлементСтруктурыТаблица <> Неопределено Тогда
			
			ГрупВидРемонта = НайтиДанные("ВидРемонта", ЭлементСтруктурыТаблица.Строки);
			Если ГрупВидРемонта <> Неопределено Тогда
				Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоказыватьВидыРемонта")).ИдентификаторПользовательскойНастройки;
				Флаг = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор).Значение;
				ГрупВидРемонта.Использование = Флаг;
			КонецЕсли;
			
			ГруппировкаОтч = ЭлементСтруктурыТаблица.Колонки[0].ПоляГруппировки.Элементы[0];
			
			Если МетодРазбиения = Перечисления.Периодичность.День Тогда
				ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.День;
			ИначеЕсли МетодРазбиения = Перечисления.Периодичность.Неделя Тогда
				ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Неделя;
			ИначеЕсли МетодРазбиения = Перечисления.Периодичность.Месяц Тогда
				ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Месяц;
			ИначеЕсли МетодРазбиения = Перечисления.Периодичность.Квартал Тогда
				ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Квартал;
			Иначе
				ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Год;	
			КонецЕсли;
			
		КонецЕсли;
		
		Если НеИспользоватьПериод Тогда 
			ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
			ПараметрДатаНачала.Использование = Ложь;
			ПараметрДатаОкончания = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
			ПараметрДатаОкончания.Использование = Ложь;
		Иначе 
			ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
			ПараметрДатаНачала.Использование = Истина;
			ПараметрДатаОкончания = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
			ПараметрДатаОкончания.Использование = Истина;
		КонецЕсли;
		
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция НайтиДанные(ИмяПоиска, МестоПоиска)
	
	Для каждого Элемент Из МестоПоиска Цикл
		Если Элемент.Имя = ИмяПоиска Тогда
			
			Возврат Элемент;
			
		Иначе
			
			Результат = НайтиДанные(ИмяПоиска, Элемент.Структура);
			Если Результат <> Неопределено Тогда
				Возврат Результат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ФункцииОтчетовКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
	Настройки.События.ПослеЗаполненияПанелиБыстрыхНастроек = Истина;
	
	Настройки.ЗагрузитьНастройкиПриИзмененииПараметров = ЗагрузитьНастройкиПриИзмененииПараметров();
КонецПроцедуры

Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
КонецПроцедуры

Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);

КонецПроцедуры

Процедура ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы)
	
	Если НЕ ИспользоватьУчетСостоянийОборудования Тогда
		
		Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
			Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
				Если Строка(Элемент.Параметр) = "ОтображатьПростоиБезПлановыхРемонтов"
					ИЛИ Строка(Элемент.Параметр) = "ПричинаПростояВидимая"
					ИЛИ Строка(Элемент.Параметр) = "ОтображатьОстановыОборудования"
					ИЛИ Строка(Элемент.Параметр) = "ВидПростояВидимый" Тогда
					Элемент.Значение      = Ложь;
					Элемент.Использование = Ложь;
					Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ИспользоватьОтмененныеРемонты Тогда
		
		Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
			Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
				Если Строка(Элемент.Параметр) = "ОтображатьОтмененныеРемонты" Тогда
					Элемент.Значение      = Ложь;
					Элемент.Использование = Ложь;
					Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаполненияПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
КонецПроцедуры

Функция ПолучитьЗначениеФО(НаименованиеФО) Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию(НаименованиеФО);
	
КонецФункции

Функция ПолучитьСодержательнуюЧастьЗапроса(ЗначениеПериода, НеИспользоватьПериод) 
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика
	|ИЗ
	|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|ГДЕ
	|	(&НеИспользоватьПериод
	|			ИЛИ КалендарныеГрафики.ДатаГрафика МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|	И КалендарныеГрафики.Календарь = &Календарь";
	
	Запрос.УстановитьПараметр("ДатаНачала", ЗначениеПериода.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ЗначениеПериода.ДатаОкончания);
	Запрос.УстановитьПараметр("Календарь", Константы.торо_ГрафикРемонтныхРабот.Получить());
	Запрос.УстановитьПараметр("НеИспользоватьПериод", НеИспользоватьПериод);
	
	РезультатЗапросаГрафика = Запрос.Выполнить();
	НеЗаполненКалендарь = РезультатЗапросаГрафика.Пустой();
	
	ЗапросТекст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&СсылкаНаППР КАК ДокументКорректировки
	|ПОМЕСТИТЬ ВТ_ППРсКорректировками
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_СоответствиеКорректировокДокументамППР.Корректируемый
	|ИЗ
	|	РегистрСведений.торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР
	|ГДЕ
	|	торо_СоответствиеКорректировокДокументамППР.Корректировка = &СсылкаНаППР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_СоответствиеКорректировокДокументамППР.Корректировка
	|ИЗ
	|	РегистрСведений.торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР
	|ГДЕ
	|	торо_СоответствиеКорректировокДокументамППР.Корректируемый = &СсылкаНаППР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ПланГрафикРемонта.ID КАК ID
	|ПОМЕСТИТЬ ВТ_IDРемонтов
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	|			,
	|			&СсылкаНаППР = ЗНАЧЕНИЕ(Документ.торо_ПланГрафикРемонта.ПустаяСсылка)
	|				ИЛИ ВЫРАЗИТЬ(Регистратор КАК Документ.торо_ПланГрафикРемонта) В
	|					(ВЫБРАТЬ
	|						ВТ_ППРсКорректировками.ДокументКорректировки КАК IDРемонта
	|					ИЗ
	|						ВТ_ППРсКорректировками КАК ВТ_ППРсКорректировками)) КАК торо_ПланГрафикРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ОбщиеДанныеПоРемонтам.Организация КАК Организация,
	|	торо_ОбщиеДанныеПоРемонтам.ПодразделениеИнициатор КАК Подразделение,
	|	торо_ОбщиеДанныеПоРемонтам.IDРемонта КАК IDРемонта,
	|	торо_ОбщиеДанныеПоРемонтам.Завершен КАК Завершен,
	|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ОбщиеДанныеПоРемонтам.ВидРемонта КАК ВидРемонта,
	|	торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДокументОснование КАК ДокументОснование,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания КАК ДатаОкончания,
	|	торо_ОбщиеДанныеПоРемонтам.Отменен КАК Отменен
	|ПОМЕСТИТЬ ВТ_ПлановыеДаты
	|ИЗ
	|	ВТ_IDРемонтов КАК ВТ_IDРемонтов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО ВТ_IDРемонтов.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|			И (НЕ торо_ОбщиеДанныеПоРемонтам.Замещен)
	|			И (&ОтображатьОтмененныеРемонты ИЛИ НЕ торо_ОбщиеДанныеПоРемонтам.Отменен)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|		ПО ВТ_IDРемонтов.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|{ГДЕ
	|	(торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала <= &ДатаОкончания),
	|	(торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания >= &ДатаНачала)}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_ПлановыеДаты.Организация КАК Организация,
	|	ВТ_ПлановыеДаты.Подразделение КАК Подразделение,
	|	ВТ_ПлановыеДаты.IDРемонта КАК IDРемонта,
	|	ВТ_ПлановыеДаты.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ПлановыеДаты.ВидРемонта КАК ВидРемонта,
	|	торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала КАК ДатаНачалаНастоящая,
	|	НАЧАЛОПЕРИОДА(торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала, ДЕНЬ) КАК ДатаНачала,
	|	НАЧАЛОПЕРИОДА(торо_СвернутыеФактическиеДатыРемонтов.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	ВТ_ПлановыеДаты.Отменен КАК Отменен
	|ПОМЕСТИТЬ ВТ_Факт
	|ИЗ
	|	ВТ_ПлановыеДаты КАК ВТ_ПлановыеДаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СвернутыеФактическиеДатыРемонтов КАК торо_СвернутыеФактическиеДатыРемонтов
	|		ПО ВТ_ПлановыеДаты.IDРемонта = торо_СвернутыеФактическиеДатыРемонтов.IDРемонта
	|ГДЕ
	|	ВТ_ПлановыеДаты.Завершен
	|{ГДЕ
	|	(торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала <= &ДатаОкончания),
	|	(торо_СвернутыеФактическиеДатыРемонтов.ДатаОкончания >= &ДатаНачала)}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ТекущееСостояниеОРСрезПоследних.Период КАК Период,
	|	торо_ТекущееСостояниеОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ТекущееСостояниеОРСрезПоследних.ВидЭксплуатации КАК ВидЭксплуатации,
	|	торо_ТекущееСостояниеОРСрезПоследних.ПричинаПростоя КАК ПричинаПростоя
	|ПОМЕСТИТЬ ВТ_СостоянияОРСрезПоследних
	|ИЗ
	|	РегистрСведений.торо_ТекущееСостояниеОР.СрезПоследних(
	|			&ДатаОкончания {(&ДатаОкончания)},
	|			&ОтображатьОстановыОборудования
	|				И (&ОтображатьПростоиБезПлановыхРемонтов
	|					ИЛИ ОбъектРемонта В
	|						(ВЫБРАТЬ
	|							ВТ_ПлановыеДаты.ОбъектРемонта
	|						ИЗ
	|							ВТ_ПлановыеДаты КАК ВТ_ПлановыеДаты))) КАК торо_ТекущееСостояниеОРСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ТекущееСостояниеОРСрезПервых.Период КАК Период,
	|	торо_ТекущееСостояниеОРСрезПервых.ОбъектРемонта КАК ОбъектРемонта
	|ПОМЕСТИТЬ ВТ_СостоянияОРСрезПервых
	|ИЗ
	|	РегистрСведений.торо_ТекущееСостояниеОР.СрезПервых(
	|			&ДатаОкончания {(&ДатаОкончания)},
	|			ОбъектРемонта В
	|				(ВЫБРАТЬ
	|					ВТ_СостоянияОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта
	|				ИЗ
	|					ВТ_СостоянияОРСрезПоследних КАК ВТ_СостоянияОРСрезПоследних)) КАК торо_ТекущееСостояниеОРСрезПервых
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ВремяНахожденияВСостоянииПоДатамОбороты.Период КАК Период,
	|	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ВидЭксплуатации КАК ВидЭксплуатации,
	|	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ПричинаПростоя КАК ПричинаПростоя,
	|	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ВремяНахожденияВСостоянииОборот КАК ВремяНахожденияВСостоянииОборот
	|ПОМЕСТИТЬ ВТ_ПростоиОбороты
	|ИЗ
	|	РегистрНакопления.торо_ВремяНахожденияВСостоянииПоДатам.Обороты(
	|			&ДатаНачала {(&ДатаНачала)},
	|			&ДатаОкончания {(&ДатаОкончания)},
	|			День,
	|			ОбъектРемонта В
	|					(ВЫБРАТЬ
	|						ВТ_СостоянияОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта
	|					ИЗ
	|						ВТ_СостоянияОРСрезПоследних КАК ВТ_СостоянияОРСрезПоследних)
	|				И ТипЭксплуатации = ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Простой)) КАК торо_ВремяНахожденияВСостоянииПоДатамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПростоиОбороты.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ПростоиОбороты.Период КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВТ_ПростоиОбороты.Период, ДЕНЬ) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПростоиОР
	|ИЗ
	|	ВТ_ПростоиОбороты КАК ВТ_ПростоиОбороты
	|ГДЕ
	|	(ВТ_ПростоиОбороты.ПричинаПростоя.ВидПростоя = &ВидПростоя
	|			ИЛИ &ВидПростоя = НЕОПРЕДЕЛЕНО)
	|	И (ВТ_ПростоиОбороты.ПричинаПростоя = &ПричинаПростоя
	|			ИЛИ &ПричинаПростоя = ЗНАЧЕНИЕ(Справочник.торо_ПричиныПростояОборудования.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СостоянияОРСрезПоследних.ОбъектРемонта,
	|	ВТ_СостоянияОРСрезПоследних.Период,
	|	&ДатаОкончания
	|ИЗ
	|	ВТ_СостоянияОРСрезПоследних КАК ВТ_СостоянияОРСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СостоянияОРСрезПервых КАК ВТ_СостоянияОРСрезПервых
	|		ПО ВТ_СостоянияОРСрезПоследних.ОбъектРемонта = ВТ_СостоянияОРСрезПервых.ОбъектРемонта
	|ГДЕ
	|	ВТ_СостоянияОРСрезПервых.ОбъектРемонта ЕСТЬ NULL
	|	И ВТ_СостоянияОРСрезПоследних.ВидЭксплуатации.ТипЭксплуатации = ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Простой)
	|	И (ВТ_СостоянияОРСрезПоследних.ПричинаПростоя.ВидПростоя = &ВидПростоя
	|			ИЛИ &ВидПростоя = НЕОПРЕДЕЛЕНО)
	|	И (ВТ_СостоянияОРСрезПоследних.ПричинаПростоя = &ПричинаПростоя
	|			ИЛИ &ПричинаПростоя = ЗНАЧЕНИЕ(Справочник.торо_ПричиныПростояОборудования.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ПлановыеДаты.Организация, ВТ_ПростоиОР.ОбъектРемонта.Организация) КАК Организация,
	|	ЕСТЬNULL(ВТ_ПлановыеДаты.Подразделение, ВТ_ПростоиОР.ОбъектРемонта.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(ВТ_ПлановыеДаты.ВидРемонта, НЕОПРЕДЕЛЕНО) КАК ВидРемонта,
	|	ВТ_ПростоиОР.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ПростоиОР.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПростоиОР.ДатаОкончания КАК ДатаОкончания,
	|	"""" КАК IDРемонта
	|ПОМЕСТИТЬ ВТ_Остановы
	|ИЗ
	|	ВТ_ПростоиОР КАК ВТ_ПростоиОР
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеДаты КАК ВТ_ПлановыеДаты
	|		ПО ВТ_ПростоиОР.ОбъектРемонта = ВТ_ПлановыеДаты.ОбъектРемонта
	|ГДЕ
	|	(&ОтображатьПростоиБезПлановыхРемонтов
	|			ИЛИ НЕ ВТ_ПлановыеДаты.ВидРемонта ЕСТЬ NULL)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлановыеДаты.Организация КАК Организация,
	|	ВТ_ПлановыеДаты.Подразделение КАК Подразделение,
	|	ВТ_ПлановыеДаты.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ПлановыеДаты.ВидРемонта КАК ВидРемонта,
	|	ВТ_ПлановыеДаты.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПлановыеДаты.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПлановыеДаты.IDРемонта КАК IDРемонта,
	|	ВТ_ПлановыеДаты.Отменен КАК Отменен,
	|	""План"" КАК Вид
	|ПОМЕСТИТЬ ТабДат
	|ИЗ
	|	ВТ_ПлановыеДаты КАК ВТ_ПлановыеДаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Факт.Организация,
	|	ВТ_Факт.Подразделение,
	|	ВТ_Факт.ОбъектРемонта,
	|	ВТ_Факт.ВидРемонта,
	|	ВТ_Факт.ДатаНачала,
	|	ВТ_Факт.ДатаОкончания,
	|	ВТ_Факт.IDРемонта,
	|	ВТ_Факт.Отменен,
	|	""Факт""	
	|ИЗ
	|	ВТ_Факт КАК ВТ_Факт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Остановы.Организация,
	|	ВТ_Остановы.Подразделение,
	|	ВТ_Остановы.ОбъектРемонта,
	|	ВТ_Остановы.ВидРемонта,
	|	ВТ_Остановы.ДатаНачала,
	|	ВТ_Остановы.ДатаОкончания,
	|	ВТ_Остановы.IDРемонта,
	|	Ложь,	
	|	""Останов""
	| 
	|ИЗ
	|	ВТ_Остановы КАК ВТ_Остановы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания";

	ЗапросТекст = ЗапросТекст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если НеЗаполненКалендарь Тогда
		
		ЗапросТекст = ЗапросТекст +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТабДат.Организация КАК Организация,
		|	ТабДат.Подразделение КАК Подразделение,
		|	ТабДат.ОбъектРемонта КАК Объект,
		|	ТабДат.ВидРемонта КАК ВидРемонта,
		|	ТабДат.Вид КАК Вид,
		|	ТабДат.IDРемонта КАК ID,
		|	ТабДат.ДатаНачала КАК НачалоРемонта,
		|	1 КАК ЗначРесурса,
		|	ТабДат.Отменен КАК Отменен,
		|	ВЫБОР
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
		|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ДЕНЬ)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, МЕСЯЦ)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
		|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ГОД)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
		|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, КВАРТАЛ)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
		|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, НЕДЕЛЯ)
		|	КОНЕЦ КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_ДанныеТаблицы
		|ИЗ
		|	ТабДат КАК ТабДат
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТабДат.IDРемонта,
		|	ТабДат.Вид
		|";
		
	Иначе
		
		ЗапросТекст = ЗапросТекст +
		"ВЫБРАТЬ
		|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика
		|ПОМЕСТИТЬ КалендарныеДни
		|ИЗ
		|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.торо_ГрафикРемонтныхРабот КАК торо_ГрафикРемонтныхРабот
		|		ПО КалендарныеГрафики.Календарь = торо_ГрафикРемонтныхРабот.Значение
		|{ГДЕ
		|	(КалендарныеГрафики.ДатаГрафика МЕЖДУ &ДатаНачала И &ДатаОкончания)}
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаГрафика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТабДат.Организация КАК Организация,
		|	ТабДат.Подразделение КАК Подразделение,
		|	ТабДат.ОбъектРемонта КАК Объект,
		|	ТабДат.ВидРемонта КАК ВидРемонта,
		|	ТабДат.Вид КАК Вид,
		|	1 КАК ЗначРесурса,
		|	ТабДат.IDРемонта КАК ID,
		|	ТабДат.ДатаНачала КАК НачалоРемонта,
		|	ТабДат.Отменен КАК Отменен,
		|	ВЫБОР
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
		|			ТОГДА НАЧАЛОПЕРИОДА(КалендарныеДни.ДатаГрафика, ДЕНЬ)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
		|			ТОГДА НАЧАЛОПЕРИОДА(КалендарныеДни.ДатаГрафика, МЕСЯЦ)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
		|			ТОГДА НАЧАЛОПЕРИОДА(КалендарныеДни.ДатаГрафика, ГОД)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
		|			ТОГДА НАЧАЛОПЕРИОДА(КалендарныеДни.ДатаГрафика, КВАРТАЛ)
		|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
		|			ТОГДА НАЧАЛОПЕРИОДА(КалендарныеДни.ДатаГрафика, НЕДЕЛЯ)
		|	КОНЕЦ КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_ДанныеТаблицы
		|ИЗ
		|	КалендарныеДни КАК КалендарныеДни
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДат КАК ТабДат
		|		ПО (КалендарныеДни.ДатаГрафика >= НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ДЕНЬ))
		|			И КалендарныеДни.ДатаГрафика <= ТабДат.ДатаОкончания
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ID,
		|	Вид
		|";
		
	КонецЕсли;

	ЗапросТекст = ЗапросТекст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ЗапросТекст = ЗапросТекст +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_ДанныеТаблицы.Организация КАК Организация,
	|	ВТ_ДанныеТаблицы.Подразделение КАК Подразделение,
	|	торо_ОбъектыРемонта.Ссылка КАК Объект,
	|	ВТ_ДанныеТаблицы.ВидРемонта КАК ВидРемонта,
	|	ВТ_ДанныеТаблицы.Вид КАК Вид,
	|	ВТ_ДанныеТаблицы.ЗначРесурса КАК ЗначРесурса,
	|	ВТ_ДанныеТаблицы.ДатаНачала КАК ДатаНачала,
	|	ВТ_ДанныеТаблицы.Отменен КАК Отменен,
	|	ЕСТЬNULL(ВТ_ДанныеТаблицы.ID, """") КАК ID,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеТаблицы.ЗначРесурса > 0
	|				И ВТ_ДанныеТаблицы.Вид = ""План""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПлан,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеТаблицы.ЗначРесурса > 0
	|				И ВТ_ДанныеТаблицы.Вид = ""Факт""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьФакт,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеТаблицы.ЗначРесурса > 0
	|				И ВТ_ДанныеТаблицы.Вид = ""Останов""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОстанов
	|ПОМЕСТИТЬ ВТ_ФинальныеДанные
	|ИЗ
	|	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	|		ПО ВТ_ДанныеТаблицы.Объект = торо_ОбъектыРемонта.Ссылка";
	
	ЗапросТекст = ЗапросТекст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ЗапросТекст;
		
КонецФункции

Функция ЗагрузитьНастройкиПриИзмененииПараметров()  
	
	Параметры = Новый Массив;
	Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ИерархияТип"));	
	Возврат Параметры;
	
КонецФункции

ИспользоватьУчетСостоянийОборудования	= ПолучитьЗначениеФО("торо_УчетСостоянияОборудования");
ИспользоватьОтмененныеРемонты			= ПолучитьЗначениеФО("торо_ИспользоватьВозможностьОтменыРемонтов");

#КонецОбласти


#КонецЕсли