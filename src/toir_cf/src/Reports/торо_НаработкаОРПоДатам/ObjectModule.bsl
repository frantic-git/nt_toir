#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекИерархия = торо_ОтчетыСервер.ПолучитьЗначениеСтруктурыИерархии(КомпоновщикНастроек);
	
	торо_ОтчетыСервер.УстановитьЗапросыНаборовДанныхИерархииОР(СхемаКомпоновкиДанных, ТекИерархия, "ТекущаяДата");

	Если ТекИерархия.СтроитсяАвтоматически Тогда
		торо_ОтчетыКлиентСервер.УстановитьТипИерархическойГруппировкиВНастройках(КомпоновщикНастроек, "ОбъектИерархии", ТипГруппировкиКомпоновкиДанных.Иерархия);
	Иначе
		торо_ОтчетыКлиентСервер.УстановитьТипИерархическойГруппировкиВНастройках(КомпоновщикНастроек, "ОбъектИерархии", ТипГруппировкиКомпоновкиДанных.ТолькоИерархия);
	КонецЕсли;
	
	ТабНаработки = ПолучитьТабЗначСРезультатомОтчета(ТекИерархия);
	ТабРезультата = ДобавитьКолонкуОбъектИерархии(ТабНаработки, ТекИерархия);
	
	// Сгенерируем макет компоновки данных при помощи компоновщика макета.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	// В качестве схемы компоновки будет выступать схема самого отчета.
	// В качестве настроек отчета - текущие настройки отчета.
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// получаем внешние наборы данных
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("НаборДанных", ТабРезультата);
	
	// Создадим и инициализируем процессор компоновки.
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
	

	// Создадим и инициализируем процессор вывода результата.
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.ОтображатьПроцентВывода = Истина;

	// выводим отчет
	ПроцессорВывода.Вывести(ПроцессорКомпоновки,Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.ЗагрузитьНастройкиПриИзмененииПараметров = ЗагрузитьНастройкиПриИзмененииПараметров();

КонецПроцедуры

Функция ЗагрузитьНастройкиПриИзмененииПараметров()  
	
	Параметры = Новый Массив;
	Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ИерархияТип"));	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьТабЗначСРезультатомОтчета(ТекИерархия)
	
	ДатаНач = Дата(1,1,1);
	ДатаКон = Дата(3999,12,31);
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	Если Не Параметр = Неопределено Тогда
		СтрокаПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Параметр.ИдентификаторПользовательскойНастройки);
		
		Если СтрокаПользовательскийПараметр = Неопределено Тогда
			ДатаНач = Параметр.Значение.ДатаНачала;
			ДатаКон = Параметр.Значение.ДатаОкончания;
		ИначеЕсли СтрокаПользовательскийПараметр.Использование Тогда
			ДатаНач = СтрокаПользовательскийПараметр.Значение.ДатаНачала;
			ДатаКон = СтрокаПользовательскийПараметр.Значение.ДатаОкончания;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК IDРемонта,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания КАК ДатаОкончания,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ДокументОснование КАК ДокументОснование,
	               |	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки
	               |ПОМЕСТИТЬ ВТ_ПлановыеДаты
	               |ИЗ
	               |	РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	               |		ПО торо_АктуальныеПлановыеДатыРемонтов.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
	               |ГДЕ
	               |	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон
	               |	И торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки ССЫЛКА Документ.торо_ПланГрафикРемонта
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	IDРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот КАК ВидРемонта,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Регистратор КАК Регистратор,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID КАК ID_Ремонта
	               |ПОМЕСТИТЬ ВТ_ПлановыеРемонтыСрезПоследних
	               |ИЗ
	               |	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	               |			,
	               |			ID В
	               |				(ВЫБРАТЬ
	               |					ВТ_ПлановыеДаты.IDРемонта КАК IDРемонта
	               |				ИЗ
	               |					ВТ_ПлановыеДаты КАК ВТ_ПлановыеДаты)) КАК торо_ПланГрафикРемонтаПланРемонтов
	               |ГДЕ
	               |	НЕ торо_ПланГрафикРемонтаПланРемонтов.Отменен
	               |	И НЕ торо_ПланГрафикРемонтаПланРемонтов.Замещен
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ID_Ремонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ПлановыеРемонтыСрезПоследних.ВидРемонта КАК ВидРемонта,
	               |	ВТ_ПлановыеРемонтыСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_ПлановыеРемонтыСрезПоследних.ID_Ремонта КАК ID_Ремонта,
	               |	ВТ_ПлановыеДаты.ДокументОснование КАК ДокументОснование,
	               |	ВТ_ПлановыеДаты.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	               |	НАЧАЛОПЕРИОДА(ВТ_ПлановыеДаты.ДатаНачала, ДЕНЬ) КАК ПланируемаяДатаНачалаРемонта,
	               |	НАЧАЛОПЕРИОДА(ВТ_ПлановыеДаты.ДатаОкончания, ДЕНЬ) КАК ПланируемаяДатаОкончанияРемонта
	               |ПОМЕСТИТЬ ВТ_ПлановыеРемонты
	               |ИЗ
	               |	ВТ_ПлановыеРемонтыСрезПоследних КАК ВТ_ПлановыеРемонтыСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПлановыеДаты КАК ВТ_ПлановыеДаты
	               |		ПО ВТ_ПлановыеРемонтыСрезПоследних.ID_Ремонта = ВТ_ПлановыеДаты.IDРемонта
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ПлановыеРемонты.ID_Ремонта КАК ID_Ремонта,
	               |	ВТ_ПлановыеРемонты.ОбъектРемонта КАК Объект,
	               |	МИНИМУМ(ВЫБОР
	               |				КОГДА торо_ПараметрыНаработкиОбъектовРемонта.Период < ВТ_ПлановыеРемонты.ОбъектРемонта.ДатаВводаВЭксплуатацию
	               |					ТОГДА ВТ_ПлановыеРемонты.ОбъектРемонта.ДатаВводаВЭксплуатацию
	               |				ИНАЧЕ торо_ПараметрыНаработкиОбъектовРемонта.Период
	               |			КОНЕЦ) КАК ДатаРаботыС,
	               |	торо_ПараметрыНаработкиОбъектовРемонта.Показатель КАК Показатель,
	               |	ВТ_ПлановыеРемонты.ПланируемаяДатаНачалаРемонта КАК ДатаРаботыПо
	               |ИЗ
	               |	ВТ_ПлановыеРемонты КАК ВТ_ПлановыеРемонты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	               |		ПО ВТ_ПлановыеРемонты.ОбъектРемонта = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	               |			И ВТ_ПлановыеРемонты.ПланируемаяДатаНачалаРемонта > торо_ПараметрыНаработкиОбъектовРемонта.Период
	               |ГДЕ
	               |	НЕ торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта ЕСТЬ NULL
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ПлановыеРемонты.ОбъектРемонта,
	               |	ВТ_ПлановыеРемонты.ID_Ремонта,
	               |	ВТ_ПлановыеРемонты.ПланируемаяДатаНачалаРемонта,
	               |	ВТ_ПлановыеРемонты.ПланируемаяДатаОкончанияРемонта,
	               |	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ПлановыеРемонты.ВидРемонта КАК ВидРемонта,
	               |	ВТ_ПлановыеРемонты.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_ПлановыеРемонты.ID_Ремонта КАК ID_Ремонта,
	               |	ВТ_ПлановыеРемонты.ДокументОснование КАК ДокументОснование,
	               |	ВТ_ПлановыеРемонты.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	               |	ВТ_ПлановыеРемонты.ПланируемаяДатаНачалаРемонта КАК ПланируемаяДатаНачалаРемонта,
	               |	ВТ_ПлановыеРемонты.ПланируемаяДатаОкончанияРемонта КАК ПланируемаяДатаОкончанияРемонта
	               |ИЗ
	               |	ВТ_ПлановыеРемонты КАК ВТ_ПлановыеРемонты";
						   
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаДляРасчетаПлановойНаработки = РезультатЗапроса[3].Выгрузить();
	ТаблицаРемонтов = РезультатЗапроса[4].Выгрузить();
	
	ТаблицаНаработки = торо_РаботаСНаработкой.РассчитатьНаработку(ТаблицаРемонтов, ДатаНач, ДатаКон);
	ТаблицаПлановойНаработки = торо_РаботаСНаработкой.РассчитатьПлановуюНаработку(ТаблицаДляРасчетаПлановойНаработки, ДатаКон);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТаблицаНаработки.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	ТаблицаНаработки.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	ТаблицаНаработки.ID КАК ID,
	               |	ТаблицаНаработки.Показатель КАК Показатель,
	               |	ТаблицаНаработки.ДатаНач КАК ДатаНач,
	               |	ВЫРАЗИТЬ(ТаблицаНаработки.Наработка КАК ЧИСЛО(16, 2)) КАК Наработка
	               |ПОМЕСТИТЬ ВТ_ТаблицаНаработки
	               |ИЗ
	               |	&ТаблицаНаработки КАК ТаблицаНаработки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонтныхРабот,
	               |	Показатель,
	               |	ДатаНач
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТаблицаПлановойНаработки.ОбъектРемонта КАК ОбъектРемонта,
	               |	ТаблицаПлановойНаработки.ДатаРаботыС КАК ДатаРаботыС,
	               |	ТаблицаПлановойНаработки.Показатель КАК Показатель,
	               |	ТаблицаПлановойНаработки.ДатаРаботыПо КАК ДатаРаботыПо,
	               |	ТаблицаПлановойНаработки.ФактическаяНаработка КАК ПлановаяНаработка
	               |ПОМЕСТИТЬ ВТ_ТаблицаПлановойНаработкиНачальная
	               |ИЗ
	               |	&ТаблицаПлановойНаработки КАК ТаблицаПлановойНаработки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.ОбъектРемонта КАК ОбъектРемонта,
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.ДатаРаботыС КАК ДатаРаботыС,
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.Показатель КАК Показатель,
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.ДатаРаботыПо КАК ДатаРаботыПо,
	               |	ВЫРАЗИТЬ(СУММА(ВТ_ТаблицаПлановойНаработкиНачальная.ПлановаяНаработка) КАК ЧИСЛО(16, 2)) КАК ПлановаяНаработка
	               |ПОМЕСТИТЬ ВТ_ТаблицаПлановойНаработки
	               |ИЗ
	               |	ВТ_ТаблицаПлановойНаработкиНачальная КАК ВТ_ТаблицаПлановойНаработкиНачальная
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.ОбъектРемонта,
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.Показатель,
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.ДатаРаботыС,
	               |	ВТ_ТаблицаПлановойНаработкиНачальная.ДатаРаботыПо
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	Показатель,
	               |	ДатаРаботыПо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ТаблицаНаработки.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	ВТ_ТаблицаНаработки.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	ВТ_ТаблицаНаработки.ID КАК ID,
	               |	ВТ_ТаблицаНаработки.Показатель КАК Показатель,
	               |	ВТ_ТаблицаНаработки.ДатаНач КАК ДатаНач,
	               |	ВТ_ТаблицаНаработки.Наработка КАК Наработка,
	               |	ЕСТЬNULL(ВТ_ТаблицаПлановойНаработки.ПлановаяНаработка, 0) КАК ПлановаяНаработка,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТаблицаПлановойНаработки.ПлановаяНаработка ЕСТЬ NULL
	               |				ИЛИ ВТ_ТаблицаПлановойНаработки.ПлановаяНаработка = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_ТаблицаПлановойНаработки.ПлановаяНаработка - ВТ_ТаблицаНаработки.Наработка
	               |	КОНЕЦ КАК ОтклонениеОтПлановойНаработки
	               |ИЗ
	               |	ВТ_ТаблицаНаработки КАК ВТ_ТаблицаНаработки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаПлановойНаработки КАК ВТ_ТаблицаПлановойНаработки
	               |		ПО (ВТ_ТаблицаПлановойНаработки.ОбъектРемонта = ВТ_ТаблицаНаработки.ОбъектРемонтныхРабот)
	               |			И (ВТ_ТаблицаПлановойНаработки.Показатель = ВТ_ТаблицаНаработки.Показатель)
	               |			И (ВТ_ТаблицаПлановойНаработки.ДатаРаботыПо = ВТ_ТаблицаНаработки.ДатаНач)";
	
	Запрос.УстановитьПараметр("ТаблицаНаработки", ТаблицаНаработки);
	Запрос.УстановитьПараметр("ТаблицаПлановойНаработки", ТаблицаПлановойНаработки);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДобавитьКолонкуОбъектИерархии(ТабНаработки, ТекИерархия)

	Запрос = Новый Запрос;
	
	Если ТекИерархия.СтроитсяАвтоматически Тогда
				
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Данные.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ВТ_Данные.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_Данные.Показатель КАК Показатель,
		|	ВТ_Данные.ДатаНач КАК ДатаНач,
		|	ВТ_Данные.ID КАК ID,
		|	ВТ_Данные.Наработка КАК Наработка,
		|	ВТ_Данные.ПлановаяНаработка КАК ПлановаяНаработка,
		|	ВТ_Данные.ОтклонениеОтПлановойНаработки КАК ОтклонениеОтПлановойНаработки
		|ПОМЕСТИТЬ ВТ_ДанныеПредв
		|ИЗ
		|	&ВТ_Данные КАК ВТ_Данные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПредв.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ВТ_ДанныеПредв.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_ДанныеПредв.Показатель КАК Показатель,
		|	ВТ_ДанныеПредв.ДатаНач КАК ДатаНач,
		|	ВТ_ДанныеПредв.ID КАК ID,
		|	ВТ_ДанныеПредв.Наработка КАК Наработка,
		|	ВТ_ДанныеПредв.ПлановаяНаработка КАК ПлановаяНаработка,
		|	ВТ_ДанныеПредв.ОтклонениеОтПлановойНаработки КАК ОтклонениеОтПлановойНаработки,
		|	ВЫРАЗИТЬ(ВТ_ДанныеПредв.ОбъектРемонтныхРабот КАК Справочник.торо_ОбъектыРемонта)." + ТекИерархия.РеквизитОР + " КАК ОбъектИерархии
		|ИЗ
		|	ВТ_ДанныеПредв КАК ВТ_ДанныеПредв";
		
	Иначе

		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТ_Данные.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ВТ_Данные.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_Данные.Показатель КАК Показатель,
		|	ВТ_Данные.ДатаНач КАК ДатаНач,
		|	ВТ_Данные.ID КАК ID,
		|	ВТ_Данные.Наработка КАК Наработка,
		|	ВТ_Данные.ПлановаяНаработка КАК ПлановаяНаработка,
		|	ВТ_Данные.ОтклонениеОтПлановойНаработки КАК ОтклонениеОтПлановойНаработки
		|ПОМЕСТИТЬ ВТ_ДанныеПредв
		|ИЗ
		|	&ВТ_Данные КАК ВТ_Данные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПредв.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ВТ_ДанныеПредв.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ВТ_ДанныеПредв.Показатель КАК Показатель,
		|	ВТ_ДанныеПредв.ДатаНач КАК ДатаНач,
		|	ВТ_ДанныеПредв.ID КАК ID,
		|	ВТ_ДанныеПредв.Наработка КАК Наработка,
		|	ВТ_ДанныеПредв.ПлановаяНаработка КАК ПлановаяНаработка,
		|	ВТ_ДанныеПредв.ОтклонениеОтПлановойНаработки КАК ОтклонениеОтПлановойНаработки,
		|	ВТ_ДанныеПредв.ОбъектРемонтныхРабот КАК ОбъектИерархии
		|ИЗ
		|	ВТ_ДанныеПредв КАК ВТ_ДанныеПредв";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВТ_Данные", ТабНаработки);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли