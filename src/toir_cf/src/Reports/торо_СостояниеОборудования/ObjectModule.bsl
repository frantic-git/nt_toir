Перем ТекущиеНастройкиОтчета;

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ФункцииОтчетовКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере 				   = Истина;
	Настройки.События.ПослеЗаполненияПанелиБыстрыхНастроек         = Истина;
	Настройки.События.ПослеЗагрузкиНастроекВКомпоновщик = Истина;
	
	Настройки.ЗагрузитьНастройкиПриИзмененииПараметров = ЗагрузитьНастройкиПриИзмененииПараметров();
		
КонецПроцедуры

Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	ПрименитьПереданныеПараметрыКНастройкам(ПользовательскиеНастройкиЭлементы, Форма);
		
КонецПроцедуры

Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	ПрименитьПереданныеПараметрыКНастройкам(ПользовательскиеНастройкиЭлементы, Форма);
	
КонецПроцедуры

Процедура ПослеЗаполненияПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
	ИДНастройки_ПериодОтчета = Неопределено;
	
	Попытка
		КомпоновщикНастроекТекущий = Форма.КомпоновщикНастроек;
	Исключение
		КомпоновщикНастроекТекущий = Форма.Отчет.КомпоновщикНастроек;
	КонецПопытки;
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроекТекущий.ПользовательскиеНастройки.Элементы;
	
	Для каждого Элемент из ПользовательскиеНастройкиЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			
			Если Строка(Элемент.Параметр) = "ПериодВыполнени" Тогда
				ИДНастройки_ПериодОтчета = СтрЗаменить(Элемент.ИдентификаторПользовательскойНастройки, "-", "");
			ИначеЕсли Строка(Элемент.Параметр) = "КонтролируемыеПоказатели" 
				ИЛИ Строка(Элемент.Параметр) = "ПоказательНаработки" Тогда   
				
				Если Форма.ТипФормыОтчета <> ТипФормыОтчета.Настройка Тогда
					Продолжить;
				КонецЕсли;
				
				ЭлементНастройки = ОтчетыКлиентСервер.ПолучитьОбъектПоПользовательскомуИдентификатору(
					КомпоновщикНастроекТекущий.Настройки,
					Элемент.ИдентификаторПользовательскойНастройки,,
					КомпоновщикНастроекТекущий.ПользовательскиеНастройки);
				
				ОписаниеНастройки = ОтчетыКлиентСервер.НайтиДоступнуюНастройку(КомпоновщикНастроекТекущий.Настройки, ЭлементНастройки);
								
				Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда 
					ПутьКЭлементуФормы = Форма.ПутьКДаннымЭлементов.ПоИндексу[ПользовательскиеНастройкиЭлементы.Индекс(Элемент)];
					Если ТипЗнч(ОписаниеНастройки.ДоступныеЗначения) = Тип("СписокЗначений") Тогда
						// Выбранные значения не удаляются из списка при смене ОР, даже если их нет у этого ОР.
						// Поэтому проверим и очистим сами.
						МассивДляУдаления = Новый Массив;
						Для каждого ЭлементСписка из Элемент.Значение Цикл
							Если ОписаниеНастройки.ДоступныеЗначения.НайтиПоЗначению(ЭлементСписка.Значение) = Неопределено Тогда
								МассивДляУдаления.Добавить(ЭлементСписка);
							КонецЕсли;
						КонецЦикла;
						
						Для каждого ЭлементДляУдаления из МассивДляУдаления Цикл
							Элемент.Значение.Удалить(ЭлементДляУдаления);
						КонецЦикла;
						
						Если ПутьКЭлементуФормы <> Неопределено Тогда
							ЭлементФормы = Форма[ПутьКЭлементуФормы];
							
							МассивДляУдаления = Новый Массив;
							Для каждого ЭлементСписка из ЭлементФормы Цикл
								Если ОписаниеНастройки.ДоступныеЗначения.НайтиПоЗначению(ЭлементСписка.Значение) = Неопределено Тогда
									МассивДляУдаления.Добавить(ЭлементСписка);
								КонецЕсли;
							КонецЦикла;
							
							Для каждого ЭлементДляУдаления из МассивДляУдаления Цикл
								ЭлементФормы.Удалить(ЭлементДляУдаления);
							КонецЦикла;	
						КонецЕсли;
						
					ИначеЕсли ОписаниеНастройки.ДоступныеЗначения = Неопределено Тогда 
						Элемент.Значение.Очистить();
						Если ПутьКЭлементуФормы <> Неопределено Тогда
							ЭлементФормы = Форма[ПутьКЭлементуФормы];
							ЭлементФормы.Очистить();
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
		
	Для каждого Элем Из Форма.Элементы Цикл 		
		Если ЗначениеЗаполнено(ИДНастройки_ПериодОтчета) 
			И Найти(Элем.Имя, ИДНастройки_ПериодОтчета) > 0 Тогда
			Если ТипЗнч(Элем) = Тип("ГруппаФормы") 
				ИЛИ (ТипЗнч(Элем) = Тип("ПолеФормы") И Элем.Вид = ВидПоляФормы.ПолеВвода) Тогда
				Элем.РастягиватьПоГоризонтали = Истина;
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры 

// Вызывается после загрузки всех настроек в компоновщик.
//  Используется для уточнения, например параметров выбора,
//  зависимых от значений загруженных фиксированных отборов.
//  Структура ДополнительныеСвойства объекта Настройки компоновщика настроек объекта отчета
//  содержит свойства КлючВарианта, КлючПредопределенногоВарианта, КонтекстВарианта,
//  ФормаПараметрыОтбор, заполненные ПередЗагрузкойНастроекВКомпоновщик, а также свойство
//  ВариантНаименование, которое можно изменить для предопределенного варианта отчета.
//
//  Параметры:
//    ДополнительныеПараметры - Структура - резерв.
//
Процедура ПослеЗагрузкиНастроекВКомпоновщик(ДополнительныеПараметры) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	НастройкиСтруктура = КомпоновщикНастроек.Настройки.Структура;
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы, НастройкиСтруктура);
	
	НаложитьОтборыНаПараметрыНаработкиИПоказатели();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПрименитьПереданныеПараметрыКНастройкам(ПользовательскиеНастройкиЭлементы, Форма)
	
	ПараметрыВыполнения = Форма.Параметры;
	
	Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если Строка(Элемент.Параметр) = "ОбъектРемонта" Тогда
				
				Если ПараметрыВыполнения.Свойство("ОбъектРемонта") Тогда
					Элемент.Значение      = ПараметрыВыполнения.ОбъектРемонта;
					Элемент.Использование = Истина;			
					Продолжить;
				КонецЕсли;
				
			ИначеЕсли Строка(Элемент.Параметр) = "КонтролируемыеПоказатели" Тогда
				Если ПараметрыВыполнения.Свойство("ТекПоказатель") Тогда
					ТекПоказатель = Новый СписокЗначений;
					Если ЗначениеЗаполнено(ПараметрыВыполнения.ТекПоказатель) Тогда
						ТекПоказатель.Добавить(ПараметрыВыполнения.ТекПоказатель);
					КонецЕсли;
					
					Элемент.Значение = ТекПоказатель;
					Элемент.Использование = Истина;
				ИначеЕсли НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда 
					ТекПоказатель = Новый СписокЗначений;
					Элемент.Значение = ТекПоказатель;
				КонецЕсли;
				
			ИначеЕсли Строка(Элемент.Параметр) = "ПоказательНаработки" Тогда
				
				Если ПараметрыВыполнения.Свойство("ТекПоказательНаработки") Тогда
					ТекПоказатель = Новый СписокЗначений;
					Если ЗначениеЗаполнено(ПараметрыВыполнения.ТекПоказательНаработки) Тогда
						ТекПоказатель.Добавить(ПараметрыВыполнения.ТекПоказательНаработки);
					КонецЕсли;
					
					Элемент.Значение = ТекПоказатель;
					Элемент.Использование = Истина;
				ИначеЕсли НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда 
					ТекПоказатель = Новый СписокЗначений;
					Элемент.Значение = ТекПоказатель;
				КонецЕсли;
				
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы, НастройкиСтруктура) 
	
	ПоказателиФО = ПолучитьФункциональнуюОпцию("торо_УчетКонтролируемыхПоказателей");
	НаработкаФО = ПолучитьФункциональнуюОпцию("торо_УчетНаработкиОборудования");
	
	Если Не НаработкаФО Тогда
		ОтключитьНастройкиПоНаработке(ПользовательскиеНастройкиЭлементы, НастройкиСтруктура);
	КонецЕсли;
	
	Если Не ПоказателиФО Тогда
		ОтключитьНастройкиПоИзмеряемымПоказателям(ПользовательскиеНастройкиЭлементы, НастройкиСтруктура);
	КонецЕсли;
	
КонецПроцедуры

Процедура НаложитьОтборыНаПараметрыНаработкиИПоказатели()
	
	ОбъектРемонта = ПолучитьЗначениеПараметраОбъектРемонта();

	Для каждого Элемент из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И (Строка(Элемент.Параметр) = "КонтролируемыеПоказатели"
				ИЛИ Строка(Элемент.Параметр) = "ПоказательНаработки") Тогда
			ОчиститьКешНастройки(Элемент.ИдентификаторПользовательскойНастройки);
		КонецЕсли;
	КонецЦикла;
	
	КоллекцияЭлементов = КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.Элементы;
		
	Для каждого Элемент из КоллекцияЭлементов Цикл
		
		Если Строка(Элемент.Параметр) = "КонтролируемыеПоказатели" Тогда
			СписокДоступныхЗначений = ПолучитьСписокКонтролируемыхПоказателей(ОбъектРемонта);
			Элемент.ДоступныеЗначения = СписокДоступныхЗначений;
		ИначеЕсли Строка(Элемент.Параметр) = "ПоказательНаработки" Тогда
			СписокДоступныхЗначений = ПолучитьСписокПараметровНаработки(ОбъектРемонта);
			Элемент.ДоступныеЗначения = СписокДоступныхЗначений;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтключитьНастройкиПоНаработке(ПользовательскиеНастройкиЭлементы, НастройкиСтруктура)
	
	Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И (Строка(Элемент.Параметр) = "ПоказательНаработки"
			ИЛИ Строка(Элемент.Параметр) = "СредняяНаработка")Тогда
			Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Элемент.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	МассивДляУдаления = Новый Массив;
	Для Каждого Элемент Из НастройкиСтруктура Цикл
		Для Каждого ВыбранноеПоле Из Элемент.Выбор.Элементы Цикл
			Если ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ЗначениеПараметраНаработки") Тогда
				МассивДляУдаления.Добавить(Элемент);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого Элемент из МассивДляУдаления Цикл
		НастройкиСтруктура.Удалить(Элемент);
	КонецЦикла;
		
КонецПроцедуры

Процедура ОтключитьНастройкиПоИзмеряемымПоказателям(ПользовательскиеНастройкиЭлементы, НастройкиСтруктура)
	
	Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И Строка(Элемент.Параметр) = "КонтролируемыеПоказатели" Тогда
			Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Элемент.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;	
	
	МассивДляУдаления = Новый Массив;
	Для Каждого Элемент Из НастройкиСтруктура Цикл
		Для Каждого ВыбранноеПоле Из Элемент.Выбор.Элементы Цикл
			Если ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ЗначениеИзмеряемогоПоказателя") Тогда
				МассивДляУдаления.Добавить(Элемент);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого Элемент из МассивДляУдаления Цикл
		НастройкиСтруктура.Удалить(Элемент);
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьЗначениеПараметраОбъектРемонта()
	
	ОР = Неопределено;
	
   ЭлементыНастроек = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	
	Для каждого ЭлементНастройки Из ЭлементыНастроек Цикл
		Если Строка(ЭлементНастройки.Параметр) = "ОбъектРемонта" Тогда
			ОР = ЭлементНастройки.Значение;
			Если ТипЗнч(ОР) = Тип("СписокЗначений") Тогда
				ОР = ОР[0].Значение;
			КонецЕсли;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ОР;
	
КонецФункции

Функция ПолучитьСписокКонтролируемыхПоказателей(ОбъектРемонта)
	
 	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ИзмеряемыеПоказателиОР.Показатель КАК Показатель
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК ИзмеряемыеПоказателиОР
		|ГДЕ
		|	ИзмеряемыеПоказателиОР.ОбъектРемонта = &ОбъектРемонта
		|	ИЛИ ИзмеряемыеПоказателиОР.ОбъектРемонта = &ТиповойОР";
		Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
		Запрос.УстановитьПараметр("ТиповойОР", ОбъектРемонта.ТиповойОР);		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ИзмеряемыеПоказателиОР.Показатель КАК Показатель
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК ИзмеряемыеПоказателиОР";
	КонецЕсли; 

	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	СписокПараметров = Новый СписокЗначений;
	СписокПараметров.ЗагрузитьЗначения(ТаблицаРезультат.ВыгрузитьКолонку("Показатель"));
	
	Возврат СписокПараметров;
	
КонецФункции

Функция ПолучитьСписокПараметровНаработки(ОбъектРемонта)
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель КАК Показатель
		|ИЗ
		|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
		|ГДЕ
		|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = &ОбъектРемонта";
		Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель КАК Показатель
		|ИЗ
		|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта";
	КонецЕсли; 
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	СписокПараметров = Новый СписокЗначений;
	СписокПараметров.ЗагрузитьЗначения(ТаблицаРезультат.ВыгрузитьКолонку("Показатель"));
	
	Возврат СписокПараметров;
	
КонецФункции

Процедура ОчиститьКешНастройки(КлючПользовательскойНастройки)
	
	КэшЗначенийОтборов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства, "КэшЗначенийОтборов");
	
	Если КэшЗначенийОтборов = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	Если КэшЗначенийОтборов[КлючПользовательскойНастройки] <> Неопределено Тогда
		КэшЗначенийОтборов.Удалить(КлючПользовательскойНастройки);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗагрузитьНастройкиПриИзмененииПараметров()  
	
	Параметры = Новый Массив;
	Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ОбъектРемонта"));	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#КонецЕсли
