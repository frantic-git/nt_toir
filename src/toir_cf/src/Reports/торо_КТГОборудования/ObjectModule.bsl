#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяИерархия = торо_ОтчетыСервер.ПолучитьЗначениеСтруктурыИерархии(КомпоновщикНастроек);
	
	торо_ОтчетыСервер.УстановитьЗапросыНаборовДанныхИерархииОР(СхемаКомпоновкиДанных, ТекущаяИерархия, "КонецПериода", "СостоянияОборудования");
	торо_ОтчетыСервер.УстановитьТипГруппировкиОбъектаИерархии(КомпоновщикНастроек, ТекущаяИерархия);
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	ДанныеОтчета = ДанныеОтчета(НастройкиОсновнойСхемы, ТекущаяИерархия);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("СостоянияОборудования", ДанныеОтчета);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОсновнойСхемы, ДанныеРасшифровки);	
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.ЗагрузитьНастройкиПриИзмененииПараметров = ЗагрузитьНастройкиПриИзмененииПараметров();
	
КонецПроцедуры

Функция ЗагрузитьНастройкиПриИзмененииПараметров()  
	
	Параметры = Новый Массив;
	Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ИерархияТип"));	
	Возврат Параметры;
	
КонецФункции

Функция ДанныеОтчета(НастройкиОсновнойСхемы, ТекущаяИерархия)
	
	ПериодОтчета = НастройкиОсновнойСхемы.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	
	ДатаНачала = ПериодОтчета.Значение.ДатаНачала;
	ДатаОкончания = ПериодОтчета.Значение.ДатаОкончания; 
	Периодичность = НастройкиОсновнойСхемы.ПараметрыДанных.Элементы.Найти("Периодичность").Значение;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Если ДатаОкончания > ТекущаяДата Тогда
		ДатаОкончания = ТекущаяДата;
	КонецЕсли;
	
	ПредварительныеДанные = ПредварительныеДанныеСПользовательскимиОтборами(ТекущаяИерархия, ДатаНачала, ДатаОкончания);
	
	ПлановыеГрафикиРабот = ПредварительныеДанные.ВыгрузитьКолонку("ПлановыйГрафикРаботы");
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	КалендарныеГрафики.СоздатьВТРасписанияРаботыНаПериод(МенеджерВременныхТаблиц, ПлановыеГрафикиРабот, ДатаНачала, ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапросаДанныхОтчета();
	ЗаменитьПериодичностьВТекстеЗапроса(Запрос.Текст, Периодичность);
	
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	Запрос.УстановитьПараметр("ПредварительныеДанные", ПредварительныеДанные);
	Запрос.УстановитьПараметр("Периодичность", Периодичность);
		
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаДанныхОтчета() 
	
	Возврат "ВЫБРАТЬ
	        |	ПредварительныеДанные.ОбъектРемонта КАК ОбъектРемонта,
	        |	ПредварительныеДанные.Организация КАК Организация,
	        |	ПредварительныеДанные.ПодразделениеКонтрагент КАК ПодразделениеКонтрагент,
	        |	ПредварительныеДанные.ТипЭксплуатации КАК ТипЭксплуатации,
	        |	ПредварительныеДанные.ВидЭксплуатации КАК ВидЭксплуатации,
	        |	ПредварительныеДанные.ПлановыйГрафикРаботы КАК ПлановыйГрафикРаботы,
	        |	ПредварительныеДанные.НачалоПериода КАК НачалоПериода,
	        |	ПредварительныеДанные.КонецПериода КАК КонецПериода,
	        |	ВЫБОР
	        |		КОГДА ПредварительныеДанные.КонецПериода = КОНЕЦПЕРИОДА(ПредварительныеДанные.КонецПериода, ДЕНЬ)
	        |			ТОГДА ДОБАВИТЬКДАТЕ(ПредварительныеДанные.КонецПериода, СЕКУНДА, 1)
	        |		ИНАЧЕ ПредварительныеДанные.КонецПериода
	        |	КОНЕЦ КАК КонецПериодаРассчетный,
	        |	ПредварительныеДанные.НуженРасчетПоГрафику КАК НуженРасчетПоГрафику,
	        |	ПредварительныеДанные.ОбъектИерархии КАК ОбъектИерархии
	        |ПОМЕСТИТЬ СостоянияПоПериодам
	        |ИЗ
	        |	&ПредварительныеДанные КАК ПредварительныеДанные
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	ПлановыйГрафикРаботы,
	        |	НачалоПериода,
	        |	КонецПериода
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТРасписанияРаботы.ГрафикРаботы КАК ГрафикРаботы,
	        |	ВТРасписанияРаботы.ДатаГрафика КАК ДатаГрафика,
	        |	ДОБАВИТЬКДАТЕ(ВТРасписанияРаботы.ДатаГрафика, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ВТРасписанияРаботы.ВремяНачала, СЕКУНДА)) КАК ДатаНачала,
	        |	ДОБАВИТЬКДАТЕ(ВТРасписанияРаботы.ДатаГрафика, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ВТРасписанияРаботы.ВремяОкончания, СЕКУНДА)) КАК ДатаОкончания
	        |ПОМЕСТИТЬ РасписанияОбъектовРемонтов
	        |ИЗ
	        |	ВТРасписанияРаботы КАК ВТРасписанияРаботы
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	ГрафикРаботы,
	        |	ДатаГрафика
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	СостоянияПоПериодам.ОбъектРемонта КАК ОбъектРемонта,
	        |	СостоянияПоПериодам.ОбъектИерархии КАК ОбъектИерархии,
	        |	СостоянияПоПериодам.Организация КАК Организация,
	        |	СостоянияПоПериодам.ПодразделениеКонтрагент КАК ПодразделениеКонтрагент
	        |ПОМЕСТИТЬ ОбщиеДанныеОР
	        |ИЗ
	        |	СостоянияПоПериодам КАК СостоянияПоПериодам
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	ОбъектРемонта
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	торо_ВремяНахожденияВСостоянииПоДатамОбороты.Период КАК Период,
	        |	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ОбъектРемонта КАК ОбъектРемонта,
	        |	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ТипЭксплуатации КАК ТипЭксплуатации,
	        |	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ВидЭксплуатации КАК ВидЭксплуатации,
	        |	торо_ВремяНахожденияВСостоянииПоДатамОбороты.ВремяНахожденияВСостоянииОборот КАК ВремяНахожденияВСостоянии
	        |ПОМЕСТИТЬ ВремяВСостоянииОбороты
	        |ИЗ
	        |	РегистрНакопления.торо_ВремяНахожденияВСостоянииПоДатам.Обороты(
	        |			&НачалоПериода,
	        |			&КонецПериода,
	        |			Месяц,
	        |			ОбъектРемонта В
	        |				(ВЫБРАТЬ
	        |					ОбщиеДанныеОР.ОбъектРемонта КАК ОбъектРемонта
	        |				ИЗ
	        |					ОбщиеДанныеОР КАК ОбщиеДанныеОР)) КАК торо_ВремяНахожденияВСостоянииПоДатамОбороты
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	ОбъектРемонта
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВЫБОР &Периодичность
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, ДЕНЬ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, НЕДЕЛЯ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, МЕСЯЦ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, ГОД)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, КВАРТАЛ)
	        |	КОНЕЦ КАК Период,
	        |	СостоянияПоПериодам.Организация КАК Организация,
	        |	СостоянияПоПериодам.ПодразделениеКонтрагент КАК ПодразделениеКонтрагент,
	        |	СостоянияПоПериодам.ОбъектРемонта КАК ОбъектРемонта,
	        |	СостоянияПоПериодам.ТипЭксплуатации КАК ТипЭксплуатации,
	        |	СостоянияПоПериодам.ВидЭксплуатации КАК ВидЭксплуатации,
	        |	СостоянияПоПериодам.ОбъектИерархии КАК ОбъектИерархии,
	        |	СУММА(ВЫБОР
	        |			КОГДА РасписанияОбъектовРемонтов.ДатаГрафика <> НАЧАЛОПЕРИОДА(СостоянияПоПериодам.НачалоПериода, ДЕНЬ)
	        |					И РасписанияОбъектовРемонтов.ДатаГрафика <> НАЧАЛОПЕРИОДА(СостоянияПоПериодам.КонецПериода, ДЕНЬ)
	        |				ТОГДА РАЗНОСТЬДАТ(РасписанияОбъектовРемонтов.ДатаНачала, РасписанияОбъектовРемонтов.ДатаОкончания, СЕКУНДА)
	        |			КОГДА СостоянияПоПериодам.НачалоПериода > РасписанияОбъектовРемонтов.ДатаОкончания
	        |					ИЛИ СостоянияПоПериодам.КонецПериода < РасписанияОбъектовРемонтов.ДатаНачала
	        |				ТОГДА 0
	        |			КОГДА СостоянияПоПериодам.НачалоПериода > РасписанияОбъектовРемонтов.ДатаНачала
	        |				ТОГДА ВЫБОР
	        |						КОГДА СостоянияПоПериодам.КонецПериода > РасписанияОбъектовРемонтов.ДатаОкончания
	        |							ТОГДА РАЗНОСТЬДАТ(СостоянияПоПериодам.НачалоПериода, РасписанияОбъектовРемонтов.ДатаОкончания, СЕКУНДА)
	        |						ИНАЧЕ РАЗНОСТЬДАТ(СостоянияПоПериодам.НачалоПериода, СостоянияПоПериодам.КонецПериодаРассчетный, СЕКУНДА)
	        |					КОНЕЦ
	        |			ИНАЧЕ ВЫБОР
	        |					КОГДА СостоянияПоПериодам.КонецПериода > РасписанияОбъектовРемонтов.ДатаОкончания
	        |						ТОГДА РАЗНОСТЬДАТ(РасписанияОбъектовРемонтов.ДатаНачала, РасписанияОбъектовРемонтов.ДатаОкончания, СЕКУНДА)
	        |					ИНАЧЕ РАЗНОСТЬДАТ(РасписанияОбъектовРемонтов.ДатаНачала, СостоянияПоПериодам.КонецПериодаРассчетный, СЕКУНДА)
	        |				КОНЕЦ
	        |		КОНЕЦ) КАК СекундРаботы
	        |ПОМЕСТИТЬ СостоянияСПериодичностью
	        |ИЗ
	        |	СостоянияПоПериодам КАК СостоянияПоПериодам
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасписанияОбъектовРемонтов КАК РасписанияОбъектовРемонтов
	        |		ПО СостоянияПоПериодам.ПлановыйГрафикРаботы = РасписанияОбъектовРемонтов.ГрафикРаботы
	        |			И (НАЧАЛОПЕРИОДА(СостоянияПоПериодам.НачалоПериода, ДЕНЬ) <= РасписанияОбъектовРемонтов.ДатаГрафика)
	        |			И (НАЧАЛОПЕРИОДА(СостоянияПоПериодам.КонецПериода, ДЕНЬ) >= РасписанияОбъектовРемонтов.ДатаГрафика)
	        |			И (СостоянияПоПериодам.НуженРасчетПоГрафику)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВЫБОР &Периодичность
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, ДЕНЬ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, НЕДЕЛЯ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, МЕСЯЦ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, ГОД)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	        |			ТОГДА НАЧАЛОПЕРИОДА(РасписанияОбъектовРемонтов.ДатаГрафика, КВАРТАЛ)
	        |	КОНЕЦ,
	        |	СостоянияПоПериодам.Организация,
	        |	СостоянияПоПериодам.ПодразделениеКонтрагент,
	        |	СостоянияПоПериодам.ОбъектРемонта,
	        |	СостоянияПоПериодам.ТипЭксплуатации,
	        |	СостоянияПоПериодам.ВидЭксплуатации,
	        |	СостоянияПоПериодам.ОбъектИерархии
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	ВЫБОР &Периодичность
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	        |			ТОГДА НАЧАЛОПЕРИОДА(ВремяВСостоянииОбороты.Период, ДЕНЬ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	        |			ТОГДА НАЧАЛОПЕРИОДА(ВремяВСостоянииОбороты.Период, НЕДЕЛЯ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	        |			ТОГДА НАЧАЛОПЕРИОДА(ВремяВСостоянииОбороты.Период, МЕСЯЦ)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	        |			ТОГДА НАЧАЛОПЕРИОДА(ВремяВСостоянииОбороты.Период, ГОД)
	        |		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	        |			ТОГДА НАЧАЛОПЕРИОДА(ВремяВСостоянииОбороты.Период, КВАРТАЛ)
	        |	КОНЕЦ,
	        |	ОбщиеДанныеОР.Организация,
	        |	ОбщиеДанныеОР.ПодразделениеКонтрагент,
	        |	ВремяВСостоянииОбороты.ОбъектРемонта,
	        |	ВремяВСостоянииОбороты.ТипЭксплуатации,
	        |	ВремяВСостоянииОбороты.ВидЭксплуатации,
	        |	ОбщиеДанныеОР.ОбъектИерархии,
	        |	ВремяВСостоянииОбороты.ВремяНахожденияВСостоянии
	        |ИЗ
	        |	ВремяВСостоянииОбороты КАК ВремяВСостоянииОбороты
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеДанныеОР КАК ОбщиеДанныеОР
	        |		ПО ВремяВСостоянииОбороты.ОбъектРемонта = ОбщиеДанныеОР.ОбъектРемонта
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СостоянияСПериодичностью.Период КАК Период,
	        |	СостоянияСПериодичностью.Организация КАК Организация,
	        |	СостоянияСПериодичностью.ПодразделениеКонтрагент КАК ПодразделениеКонтрагент,
	        |	СостоянияСПериодичностью.ОбъектРемонта КАК ОбъектРемонта,
	        |	СостоянияСПериодичностью.ОбъектИерархии КАК ОбъектИерархии,
	        |	СостоянияСПериодичностью.ВидЭксплуатации КАК ВидЭксплуатации,
	        |	СУММА(ВЫБОР
	        |			КОГДА СостоянияСПериодичностью.ТипЭксплуатации = ""Фонд времени""
	        |				ТОГДА СостоянияСПериодичностью.СекундРаботы
	        |			ИНАЧЕ 0
	        |		КОНЕЦ) КАК ФондВремени,
	        |	СУММА(ВЫБОР
	        |			КОГДА СостоянияСПериодичностью.ТипЭксплуатации = ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Эксплуатация)
	        |				ТОГДА СостоянияСПериодичностью.СекундРаботы
	        |			ИНАЧЕ 0
	        |		КОНЕЦ) КАК Эксплуатация,
	        |	СУММА(ВЫБОР
	        |			КОГДА СостоянияСПериодичностью.ТипЭксплуатации = ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Простой)
	        |				ТОГДА СостоянияСПериодичностью.СекундРаботы
	        |			ИНАЧЕ 0
	        |		КОНЕЦ) КАК Простой,
	        |	СУММА(ВЫБОР
	        |			КОГДА СостоянияСПериодичностью.ТипЭксплуатации = ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Испытания)
	        |				ТОГДА СостоянияСПериодичностью.СекундРаботы
	        |			ИНАЧЕ 0
	        |		КОНЕЦ) КАК Испытания
	        |ИЗ
	        |	СостоянияСПериодичностью КАК СостоянияСПериодичностью
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	СостоянияСПериодичностью.Период,
	        |	СостоянияСПериодичностью.Организация,
	        |	СостоянияСПериодичностью.ПодразделениеКонтрагент,
	        |	СостоянияСПериодичностью.ОбъектРемонта,
	        |	СостоянияСПериодичностью.ОбъектИерархии,
	        |	СостоянияСПериодичностью.ВидЭксплуатации";
	
	
КонецФункции

Процедура ЗаменитьПериодичностьВТекстеЗапроса(ТекстЗапроса, Периодичность)
	
	Если Периодичность = Перечисления.Периодичность.Месяц Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПериодичности = "Месяц"; 
	
	Если Периодичность = Перечисления.Периодичность.День Тогда
		СтрокаПериодичности = "День";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда 
      СтрокаПериодичности = "Неделя";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
      СтрокаПериодичности = "Квартал";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда
		СтрокаПериодичности = "Год";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"Обороты(
	        |			&НачалоПериода,
	        |			&КонецПериода,
	        |			Месяц", 
			"Обороты(
	        |			&НачалоПериода,
	        |			&КонецПериода,
	        |			"+СтрокаПериодичности);
		
КонецПроцедуры

Функция ПредварительныеДанныеСПользовательскимиОтборами(ТекущаяИерархия, ДатаНачала, ДатаОкончания)
	
	СхемаКомпоновкиОтбор = ПолучитьМакет("СхемаКомпоновкиОтбор");
	
	ПараметрыИсходнойСхемы = СхемаКомпоновкиДанных.Параметры;
	Для каждого ПараметрИсходнойСхемы из ПараметрыИсходнойСхемы Цикл
		
		ПараметрСхемыОтбора = СхемаКомпоновкиОтбор.Параметры.Найти(ПараметрИсходнойСхемы.Имя);
		Если ПараметрСхемыОтбора = Неопределено Тогда
			ПараметрСхемыОтбора = СхемаКомпоновкиОтбор.Параметры.Добавить();
			ПараметрСхемыОтбора.Имя = ПараметрИсходнойСхемы.Имя;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПараметрСхемыОтбора, ПараметрыИсходнойСхемы);
	КонецЦикла;
	
	ПараметрСхемыОтбора = СхемаКомпоновкиОтбор.Параметры.Найти("НачалоПериода");
	Если ПараметрСхемыОтбора <> Неопределено Тогда
		ПараметрСхемыОтбора.Значение = ДатаНачала;
	КонецЕсли;	
	ПараметрСхемыОтбора = СхемаКомпоновкиОтбор.Параметры.Найти("КонецПериода");
	Если ПараметрСхемыОтбора <> Неопределено Тогда
		ПараметрСхемыОтбора.Значение = ДатаОкончания;
	КонецЕсли;
	
	КомпоновщикСхемыОтбора = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикСхемыОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиОтбор));
	КомпоновщикСхемыОтбора.ЗагрузитьНастройки(СхемаКомпоновкиОтбор.НастройкиПоУмолчанию);
	
	торо_ОтчетыСервер.УстановитьПолеОбъектИерархии(
		СхемаКомпоновкиОтбор.НаборыДанных.СостоянияОборудования.Запрос,
		"ПоследниеСостояния.ОбъектРемонта",
		ТекущаяИерархия);
	
	СхемаКомпоновкиОтбор.НаборыДанных.Иерархия.Запрос = СхемаКомпоновкиДанных.НаборыДанных.Иерархия.Запрос;
	СхемаКомпоновкиОтбор.НаборыДанных.Контроль.Запрос = СхемаКомпоновкиДанных.НаборыДанных.Контроль.Запрос;
	
	НастройкиИсходнойСхемы = КомпоновщикНастроек.ПолучитьНастройки(); 	
	Для каждого ПараметрИсходнойСхемы из НастройкиИсходнойСхемы.ПараметрыДанных.Элементы Цикл
		
		ПараметрСхемыОтбора = КомпоновщикСхемыОтбора.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрИсходнойСхемы.Параметр);
		Если ПараметрСхемыОтбора = Неопределено Тогда
			Продолжить;
		КонецЕсли;   
		
		КомпоновщикСхемыОтбора.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрИсходнойСхемы.Параметр, ПараметрИсходнойСхемы.Значение);	
		ПараметрСхемыОтбора.Использование = ПараметрИсходнойСхемы.Использование; 
	КонецЦикла;
			
	Для каждого ЭлементОтбораИсходнойСхемы из НастройкиИсходнойСхемы.Отбор.Элементы Цикл
		
		ТипОтбораЭлемент = ТипЗнч(ЭлементОтбораИсходнойСхемы) = Тип("ЭлементОтбораКомпоновкиДанных");
		
		Если ТипОтбораЭлемент Тогда
			ПолеНеДоступноДляОтбора = КомпоновщикСхемыОтбора.Настройки.ДоступныеПоляОтбора.НайтиПоле(ЭлементОтбораИсходнойСхемы.ЛевоеЗначение) = Неопределено;
			Если ПолеНеДоступноДляОтбора Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли;	
		
		НовыйОтбор = КомпоновщикСхемыОтбора.Настройки.Отбор.Элементы.Добавить(ТипЗнч(ЭлементОтбораИсходнойСхемы));
		ЗаполнитьЗначенияСвойств(НовыйОтбор, ЭлементОтбораИсходнойСхемы);
		Если ТипОтбораЭлемент Тогда
			Если ТипЗнч(ЭлементОтбораИсходнойСхемы.ПравоеЗначение) = Тип("СписокЗначений") Тогда
				НовыйОтбор.ПравоеЗначение.ЗагрузитьЗначения(ЭлементОтбораИсходнойСхемы.ПравоеЗначение.ВыгрузитьЗначения());
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Настройки = КомпоновщикСхемыОтбора.ПолучитьНастройки();
		
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиОтбор, Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПредварительныеДанные = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ПредварительныеДанные);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ПредварительныеДанные;
	
КонецФункции	

#КонецОбласти

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли