
#Область СлужебныеПроцедурыИФункции

Процедура АктуализироватьЗаписиРегистра(Регистратор, ЭтоОтменаПроведения = Ложь, ТабИД = Неопределено) Экспорт
	
	Таблица_ID = Неопределено; 
	
	Если ТабИД <> Неопределено Тогда
		Таблица_ID = ТабИД;
	Иначе
		Регистратор.ДополнительныеСвойства.Свойство("Таблица_ID", Таблица_ID);
	КонецЕсли;
	
	Если Таблица_ID = Неопределено Тогда
		Таблица_ID = Новый ТаблицаЗначений;
		Таблица_ID.Колонки.Добавить("ID", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(36, ДопустимаяДлина.Фиксированная)));
		Таблица_ID.Колонки.Добавить("ОбъектРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
		Таблица_ID.Колонки.Добавить("ВидРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("Таблица_ID", Таблица_ID);
	Запрос.УстановитьПараметр("Регистратор", Регистратор.Ссылка);
	Запрос.УстановитьПараметр("ЭтоОтменаПроведения", ЭтоОтменаПроведения);
	Запрос.УстановитьПараметр("ВидРемонтаДляВД", Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить());
	Запрос.УстановитьПараметр("ВидРемонтаДляВО", Константы.торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований.Получить());
	
	// Если по ремонту нет записей в РС общих данных, то отменяется проведение документа начала цепочки.
	// В этом случае в РС указывается флаг Удален, и также для удобства подставляем ОР и ВР.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица_ID.ID КАК ID,
	|	Таблица_ID.ОбъектРемонта КАК ОбъектРемонта,
	|	Таблица_ID.ВидРемонта КАК ВидРемонта
	|ПОМЕСТИТЬ Таблица_ID
	|ИЗ
	|	&Таблица_ID КАК Таблица_ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица_ID.ID КАК ID,
	|	Таблица_ID.ОбъектРемонта КАК ОбъектРемонта,
	|	Таблица_ID.ВидРемонта КАК ВидРемонта
	|ПОМЕСТИТЬ ВТ_ID
	|ИЗ
	|	Таблица_ID КАК Таблица_ID
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ВсеДокументыПоРемонтам.IDРемонта,
	|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта,
	|	ВЫБОР
	|		КОГДА НЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидДокументаНачалаЦепочки = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект)
	|			ТОГДА &ВидРемонтаДляВД
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидДокументаНачалаЦепочки = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВнешнееОснованиеДляРабот)
	|			ТОГДА &ВидРемонтаДляВО
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.торо_ВсеДокументыПоРемонтам КАК торо_ВсеДокументыПоРемонтам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО торо_ВсеДокументыПоРемонтам.IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|ГДЕ
	|	торо_ВсеДокументыПоРемонтам.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ID.ID КАК ID,
	|	ВТ_ID.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_ID.ВидРемонта КАК ВидРемонта
	|ПОМЕСТИТЬ СписокID
	|ИЗ
	|	ВТ_ID КАК ВТ_ID
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокID.ID КАК ID,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель ССЫЛКА Справочник.Контрагенты
	|				ТОГДА 3
	|			КОГДА СписокID.ОбъектРемонта.Подразделение = торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Исполнитель
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ) КАК ТипИсполнителя,
	|	3 КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ДанныеПоИсполнителям
	|ИЗ
	|	СписокID КАК СписокID
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.ИсполнителиПоРемонтам КАК торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам
	|		ПО СписокID.ID = торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.РемонтыОборудования_ID
	|			И (торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Ссылка.Проведен)
	|			И (НЕ(&ЭтоОтменаПроведения
	|					И торо_АктОВыполненииЭтапаРаботИсполнителиПоРемонтам.Ссылка = &Регистратор))
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокID.ID
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокID.ID,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_НарядНаВыполнениеРемонтныхРаботИсполнителиПоРемонтам.Исполнитель ССЫЛКА Справочник.Контрагенты
	|				ТОГДА 3
	|			КОГДА СписокID.ОбъектРемонта.Подразделение = торо_НарядНаВыполнениеРемонтныхРаботИсполнителиПоРемонтам.Исполнитель
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ),
	|	2
	|ИЗ
	|	СписокID КАК СписокID
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.ИсполнителиПоРемонтам КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнителиПоРемонтам
	|		ПО СписокID.ID = торо_НарядНаВыполнениеРемонтныхРаботИсполнителиПоРемонтам.РемонтыОборудования_ID
	|			И (торо_НарядНаВыполнениеРемонтныхРаботИсполнителиПоРемонтам.Ссылка.Проведен)
	|			И (НЕ(&ЭтоОтменаПроведения
	|					И торо_НарядНаВыполнениеРемонтныхРаботИсполнителиПоРемонтам.Ссылка = &Регистратор))
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокID.ID
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокID.ID,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА торо_ПлановыеИсполнителиРемонтов.Исполнитель ССЫЛКА Справочник.Контрагенты
	|				ТОГДА 3
	|			КОГДА СписокID.ОбъектРемонта.Подразделение = торо_ПлановыеИсполнителиРемонтов.Исполнитель
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ),
	|	1
	|ИЗ
	|	СписокID КАК СписокID
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеИсполнителиРемонтов КАК торо_ПлановыеИсполнителиРемонтов
	|		ПО СписокID.ID = торо_ПлановыеИсполнителиРемонтов.IDРемонта
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокID.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПоИсполнителям.ID КАК ID,
	|	МАКСИМУМ(ВТ_ДанныеПоИсполнителям.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ПриоритетыДанныхПоИсполнителям
	|ИЗ
	|	ВТ_ДанныеПоИсполнителям КАК ВТ_ДанныеПоИсполнителям
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеПоИсполнителям.ID
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриоритетыДанныхПоИсполнителям.ID КАК ID,
	|	ВТ_ПриоритетыДанныхПоИсполнителям.Приоритет КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеПоИсполнителям.ТипИсполнителя = 3
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СпособыВыполненияРемонтов.Подрядный)
	|		КОГДА ВТ_ДанныеПоИсполнителям.ТипИсполнителя = 2
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_СпособыВыполненияРемонтов.РемонтирующееПодразделение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.торо_СпособыВыполненияРемонтов.ЭксплуатирующееПодразделение)
	|	КОНЕЦ КАК СпособВыполненияРемонта
	|ПОМЕСТИТЬ ВТ_ТипИсполнителя
	|ИЗ
	|	ВТ_ПриоритетыДанныхПоИсполнителям КАК ВТ_ПриоритетыДанныхПоИсполнителям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеПоИсполнителям КАК ВТ_ДанныеПоИсполнителям
	|		ПО ВТ_ПриоритетыДанныхПоИсполнителям.ID = ВТ_ДанныеПоИсполнителям.ID
	|			И ВТ_ПриоритетыДанныхПоИсполнителям.Приоритет = ВТ_ДанныеПоИсполнителям.Приоритет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокID.ID КАК УникальныйИдентификатор,
	|	ЕСТЬNULL(торо_ОбщиеДанныеПоРемонтам.ДокументНачалаЦепочки, &Регистратор) КАК НачальныйДокумент,
	|	ЕСТЬNULL(торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта, СписокID.ОбъектРемонта) КАК ОбъектЭксплуатации,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта ЕСТЬ NULL
	|				ИЛИ торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА СписокID.ВидРемонта
	|		ИНАЧЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|	КОНЕЦ КАК ВидРемонта,
	|	ЕСТЬNULL(торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаНачалаПлан,
	|	ЕСТЬNULL(торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаОкончанияПлан,
	|	ЕСТЬNULL(торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаНачалаФакт,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.Завершен
	|			ТОГДА торо_СвернутыеФактическиеДатыРемонтов.ДатаОкончания
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаОкончанияФакт,
	|	ЕСТЬNULL(торо_ОбщиеДанныеПоРемонтам.ЕстьЗаявка, ЛОЖЬ) КАК ЕстьЗаявка,
	|	ЕСТЬNULL(торо_ОбщиеДанныеПоРемонтам.Завершен, ЛОЖЬ) КАК Завершен,
	|	ЕСТЬNULL(торо_ОбщиеДанныеПоРемонтам.ЕстьНаряд, ЛОЖЬ) КАК ЕстьНаряд,
	|	ЕСТЬNULL(торо_ОбщиеДанныеПоРемонтам.ЕстьАкт, ЛОЖЬ) КАК ЕстьАкт,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.IDРемонта ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Удален,
	|	ЕСТЬNULL(ВТ_ТипИсполнителя.СпособВыполненияРемонта, ЗНАЧЕНИЕ(Перечисление.торо_СпособыВыполненияРемонтов.РемонтирующееПодразделение)) КАК СпособВыполненияРемонта
	|ИЗ
	|	СписокID КАК СписокID
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО СписокID.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|		ПО СписокID.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СвернутыеФактическиеДатыРемонтов КАК торо_СвернутыеФактическиеДатыРемонтов
	|		ПО СписокID.ID = торо_СвернутыеФактическиеДатыРемонтов.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипИсполнителя КАК ВТ_ТипИсполнителя
	|		ПО СписокID.ID = ВТ_ТипИсполнителя.ID";
				   
	ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ДетальныеЗаписи.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.торо_ЗаказыНаРемонтВЕРП.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДетальныеЗаписи);
		МенеджерЗаписи.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
