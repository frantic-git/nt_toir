
#Область ПрограммныйИнтерфейс
// Возвращает список квалификаций сотрудника.
//
// Параметры:
//		Параметры - Структура - структура передаваемых параметров.		
//
// Возвращаемое значение:
//		СписокЗначений - список квалификаций сотрудника.
//
Функция ПолучитьСписокКвалификацийСотрудника(Параметры) Экспорт
	Запрос = Новый Запрос;
	ПараметрыОтбор = Параметры.Отбор;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Квалификация КАК Квалификация
	               |ИЗ
	               |	РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(&Дата, ) КАК торо_КвалификацияРемонтногоПерсоналаСрезПоследних
	               |ГДЕ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Сотрудник = &Сотрудник
	               |	И торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Удаленная = ЛОЖЬ";
	
	Если ПараметрыОтбор.Свойство("Основная") Тогда
		Запрос.Текст = Запрос.Текст + " И торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Основная = &Основная";
		Запрос.УстановитьПараметр("Основная", ПараметрыОтбор.Основная);
			
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Сотрудник", ПараметрыОтбор.Сотрудник);
	
	Если ПараметрыОтбор.Свойство("Дата") Тогда
		Если ПараметрыОтбор.Дата = Дата(1, 1, 1, 0, 0, 0) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(&Дата, )", "РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних");
		Иначе
			Запрос.УстановитьПараметр("Дата", ПараметрыОтбор.Дата);
		КонецЕсли;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(&Дата, )", "РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Список = Новый СписокЗначений;
	Пока РезультатЗапроса.Следующий() Цикл
		Список.Добавить(РезультатЗапроса.Квалификация);
	КонецЦикла;
	
	Возврат Список;
	
КонецФункции

// Возвращает список сотрудников с выбранной квалификацией.
//
// Параметры:
//		Параметры - Структура - структура передаваемых параметров.
//
// Возвращаемое значение:
//		СписокЗначений - список сотрудников.
//
Функция ПолучитьСотрудниковСКвалификацией(Параметры) Экспорт
	Запрос = Новый Запрос;
	ПараметрыОтбор = Параметры.Отбор;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(&Дата, ) КАК торо_КвалификацияРемонтногоПерсоналаСрезПоследних
	               |ГДЕ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Квалификация = &Квалификация
	               |	И торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Удаленная = ЛОЖЬ";
	
	Если ПараметрыОтбор.Свойство("СтрокаПоиска") И Не ПустаяСтрока(ПараметрыОтбор.СтрокаПоиска) Тогда
		Запрос.Текст = Запрос.Текст + " И торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Сотрудник.Наименование ПОДОБНО &Строка";
		ПараметрыОтбор.СтрокаПоиска = ПараметрыОтбор.СтрокаПоиска + "%";
		Запрос.УстановитьПараметр("Строка", ПараметрыОтбор.СтрокаПоиска);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Квалификация", ПараметрыОтбор.Квалификация);
	
	Если ПараметрыОтбор.Дата = Дата(1, 1, 1, 0, 0, 0) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(&Дата, )", "РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних");
	Иначе
		Запрос.УстановитьПараметр("Дата", ПараметрыОтбор.Дата);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Список = Новый СписокЗначений;
	Пока РезультатЗапроса.Следующий() Цикл
		Список.Добавить(РезультатЗапроса.Сотрудник);
	КонецЦикла;
	Возврат Список;
	
КонецФункции

// Возвращает первого из списка сотрудника с выбранной квалификацией на дату.
//
// Параметры:
//		КвалификацияСсылка - СправочникСсылка - ссылка на квалификацию.
//		Дата - Дата - дата, на которую необходимо отобрать сотрудников с квалификафией.  
//
// Возвращаемое значение:
//		СправочникСсылка - сотрудник с квалификацией.
//
Функция ПолучитьОдногоСотрудникаСКвалификацией(КвалификацияСсылка, Дата) Экспорт
	ПараметрыПолученийДанных = Новый Структура("Отбор");
	ПараметрыПолученийДанных.Вставить("Отбор", Новый Структура("Квалификация,Дата", КвалификацияСсылка, Дата));
	СписокСотрудников = ПолучитьСотрудниковСКвалификацией(ПараметрыПолученийДанных);
	Если СписокСотрудников.Количество() = 1 Тогда
		Возврат СписокСотрудников[0].Значение;
	Иначе
		Возврат Справочники.торо_КвалификацииРемонтногоПерсонала.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции	

// Возвращает квалификацию сотрудника на дату.
//
// Параметры:
//		СотрудникСсылка - СправочникСсылка - ссылка на сотрудника.
//		Дата - Дата - дата, на которую необходимо найти квалификацию сотрудника.  
//
// Возвращаемое значение:
//		СправочникСсылка - квалификация сотрудника.
//
Функция ПолучитьОднуОсновнуюКвалификациюСотрудника(СотрудникСсылка, Дата) Экспорт
	
	ПараметрыПолученияДанных = Новый Структура("Отбор");
	ПараметрыПолученияДанных.Вставить("Отбор", Новый Структура("Сотрудник,Дата,Основная", СотрудникСсылка, Дата, Истина));
	СписокКвалификаций = ПолучитьСписокКвалификацийСотрудника(ПараметрыПолученияДанных);
	Если СписокКвалификаций.Количество() = 1 Тогда
		Возврат СписокКвалификаций[0].Значение;
	Иначе
		Возврат Справочники.Сотрудники.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции
#КонецОбласти