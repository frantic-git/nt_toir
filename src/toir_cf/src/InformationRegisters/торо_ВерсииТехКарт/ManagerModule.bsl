#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает версию тех. карты на указанную дату, либо на текущую дату, если ДатаСреза не заполнена.
// Параметры:
//		ИдентификаторТехКарты - СправочникСсылка.торо_ИдентификаторыТехКарт - идентификатор тех. карты.
//		ДатаСреза - Дата - дата, на которую нужно получить версию.
// Возвращаемое значение:
//		СправочникСсылка.торо_ТехКарты - версия тех. карты. Если версии нет, то пустая ссылка.
Функция ПолучитьВерсиюТехКарты(ИдентификаторТехКарты, ДатаСреза = Неопределено) Экспорт
	
	Возврат торо_ТехнологическиеКартыПовтИсп.ПолучитьВерсиюТехКарты(ИдентификаторТехКарты, ДатаСреза);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПродолжительностиТехКарт(МассивИдентификаторов, ДатаСреза = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_ВерсииТехКартСрезПоследних.ИдентификаторТехКарты КАК ИдентификаторТехКарты,
	|	торо_ВерсииТехКартСрезПоследних.ТехКарта КАК ТехКарта,
	|	торо_ВерсииТехКартСрезПоследних.ТехКарта.НормаВремени КАК Продолжительность
	|ИЗ
	|	РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(&Период, ИдентификаторТехКарты В (&МассивИдентификаторов)) КАК торо_ВерсииТехКартСрезПоследних";
	
	Если ЗначениеЗаполнено(ДатаСреза) Тогда
		Запрос.УстановитьПараметр("Период", ДатаСреза);	
	Иначе
		Запрос.УстановитьПараметр("Период", ТекущаяДата());	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);

	Выборка = Запрос.Выполнить().Выбрать();
	
	СоответствиеПродолжительности = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СоответствиеПродолжительности.Вставить(Выборка.ИдентификаторТехКарты, Выборка.Продолжительность);
	КонецЦикла;
	
	Возврат СоответствиеПродолжительности;
	
КонецФункции

#КонецОбласти

#КонецЕсли