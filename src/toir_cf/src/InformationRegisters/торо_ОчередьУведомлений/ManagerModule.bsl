#Область ПрограммныйИнтерфейс
// Функция - Получить не отправленные уведомления
// Если значения параметров неопределено (по умолчанию), отбор осуществлен не будет.
//
// Параметры:
//  СпособУведомления - ПеречислениеСсылка.торо_СпособыУведомленияПользователей - Способ уведомления пользователя 
//							по которому будет осуществлен отбор.
//  Пользователь - СправочникСсылка.Пользователи - Пользователь по которому будет осуществлен отбор.
//  МаксимальноеКоличество - Число - ограничение на количество получаемых уведомлений.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Поля:
//		ID_Уведомления,
//		Пользователь,
//		Источник,
//		СпособУведомления,
//		ТемаПисьма,
//		ТелоПисьма,
//		АдресОтправления.
Функция ПолучитьНеОтправленныеУведомления(СпособУведомления = Неопределено,
										  Пользователь = Неопределено, 
										  МаксимальноеКоличество = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 100
	               |	торо_ОчередьУведомлений.ID_уведомления КАК ID_уведомления,
	               |	торо_ОчередьУведомлений.Пользователь КАК Пользователь,
	               |	торо_ОчередьУведомлений.Пользователь.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ,
	               |	торо_ОчередьУведомлений.Источник КАК Источник,
	               |	торо_ОчередьУведомлений.СпособУведомления КАК СпособУведомления,
	               |	торо_ОчередьУведомлений.ТемаПисьма КАК ТемаПисьма,
	               |	торо_ОчередьУведомлений.ТелоПисьма КАК ТелоПисьма,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(торо_ОчередьУведомлений.Пользователь) = ТИП(СТРОКА)
	               |			ТОГДА торо_ОчередьУведомлений.Пользователь
	               |		ИНАЧЕ ВложенныйЗапрос.Представление
	               |	КОНЕЦ КАК АдресОтправления
	               |ИЗ
	               |	РегистрСведений.торо_ОчередьУведомлений КАК торо_ОчередьУведомлений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			ПользователиКонтактнаяИнформация.Ссылка КАК Ссылка,
	               |			ПользователиКонтактнаяИнформация.Представление КАК Представление
	               |		ИЗ
	               |			Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	               |		ГДЕ
	               |			ПользователиКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)) КАК ВложенныйЗапрос
	               |		ПО торо_ОчередьУведомлений.Пользователь = ВложенныйЗапрос.Ссылка
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА НЕ &СпособУведомления = НЕОПРЕДЕЛЕНО
	               |				ТОГДА торо_ОчередьУведомлений.СпособУведомления = &СпособУведомления
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА НЕ &Пользователь = НЕОПРЕДЕЛЕНО
	               |				ТОГДА торо_ОчередьУведомлений.Пользователь = &Пользователь
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ";
			   
	Запрос.УстановитьПараметр("СпособУведомления", СпособУведомления);
	Запрос.УстановитьПараметр("Пользователь"     , Пользователь);
	
	Если НЕ ЗначениеЗаполнено(МаксимальноеКоличество) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 100", "");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 100", "ПЕРВЫЕ "+Формат(МаксимальноеКоличество,"ЧН=0; ЧГ=0"));
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Процедура - Удалить уведомления
//
// Параметры:
//  МассивВыполненныхУведомлений - Массив - Массив выполненных удаляемых уведомлений.
Процедура УдалитьУведомления(МассивВыполненныхУведомлений) Экспорт
	// по аналогии с 1С:Документооборот

	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого Уведомление Из МассивВыполненныхУведомлений Цикл
		
		Запись = РегистрыСведений.торо_ОчередьУведомлений.СоздатьМенеджерЗаписи();
		Запись.Пользователь      = Уведомление.Пользователь;
		Запись.ID_уведомления    = Уведомление.ID_уведомления;
		Запись.СпособУведомления = Уведомление.СпособУведомления;
		Запись.Источник          = Уведомление.Источник;
		Запись.Удалить();

	КонецЦикла; 
	
	
КонецПроцедуры

// Процедура - Заполнить описание ошибки
//
// Параметры:
//  МассивНеОтправленныхУведомлений	 - Массив - Массив не отправленных уведомлений.
Процедура ЗаполнитьОписаниеОшибки(МассивНеОтправленныхУведомлений) Экспорт
	// по аналогии с 1С:Документооборот

	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого Уведомление Из МассивНеОтправленныхУведомлений Цикл
		
		Запись = РегистрыСведений.торо_ОчередьУведомлений.СоздатьМенеджерЗаписи();
		Запись.ID_уведомления    = Уведомление.ID_уведомления;
		Запись.Пользователь      = Уведомление.Пользователь;
		Запись.СпособУведомления = Уведомление.СпособУведомления;
		Запись.Источник          = Уведомление.Источник;
		Запись.Прочитать();
		
		Запись.ОписаниеОшибки    = Уведомление.ОписаниеОшибки;
		Запись.Записать(Истина);

	КонецЦикла; 
	
	
КонецПроцедуры
#КонецОбласти