#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь) Тогда
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыМультиязычныхРеквизитов", Новый ОписаниеТипов(),,, Истина));
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		ЭтаФорма.ПараметрыМультиязычныхРеквизитов = Новый Структура;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("торо_НазначениеНаРемонтСУчетомРисков")Тогда
		Элементы.ТаблицаНастроек.Видимость                  = Ложь; 
		Элементы.ФормаОчиститьДанные.Доступность            = Ложь;
		Элементы.ФормаЗагрузитьИзКлассификатора.Доступность = Ложь;
		Элементы.ФормаОбновить.Доступность                  = Ложь;
	Иначе 
		ВозможностьРедактировать = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.торо_Последствия);
		Элементы.ФормаОчиститьДанные.Доступность            = ВозможностьРедактировать;
		Элементы.ФормаЗагрузитьИзКлассификатора.Доступность = ВозможностьРедактировать;
		Элементы.ФормаОбновить.Доступность                  = ВозможностьРедактировать;
		Элементы.ТаблицаНастроек.ТолькоПросмотр             = Не ВозможностьРедактировать;
		ЗаполнитьФормуДаннымиНаСервере();
	КонецЕсли; 
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте 
Процедура Подключаемый_ПриИзмененииОписания(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
 	КонецЕсли;
	
	ИмяКолонки = СтрЗаменить(Элемент.Имя,"ТаблицаНастроек","");
	ОбъектВоздействияСтроки = ТаблицаИменКолонок.НайтиСтроки(Новый Структура("ИмяКолонки", ИмяКолонки));
	Если ОбъектВоздействияСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КатегорияТяжести  = ТекущиеДанные.КатегорияТяжестиПоследствия;
	ОбъектВоздействия = ОбъектВоздействияСтроки[0].ОбъектВоздействия;
	
	СохранитьНастройкуНаСервере(ОбъектВоздействия, КатегорияТяжести, ТекущиеДанные[ИмяКолонки], ТекущиеДанные[ИмяКолонки+"Язык1"], ТекущиеДанные[ИмяКолонки+"Язык2"], Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытиеОписания(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКолонки = СтрЗаменить(Элемент.Имя,"ТаблицаНастроек","");
	ОбъектВоздействияСтроки = ТаблицаИменКолонок.НайтиСтроки(Новый Структура("ИмяКолонки", ИмяКолонки));
	Если ОбъектВоздействияСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ИмяРеквизита = "Описание";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ссылка",          ТекущиеДанные.КатегорияТяжестиПоследствия);
	ПараметрыФормы.Вставить("ИмяРеквизита",    "Описание");
	ПараметрыФормы.Вставить("ТекущиеЗначение", Элемент.ТекстРедактирования);
	ПараметрыФормы.Вставить("ТолькоПросмотр",  Элемент.ТолькоПросмотр);
	
	Представления = Новый Структура();
		
	Представления.Вставить(ИмяРеквизита, ТекущиеДанные[ИмяКолонки]);
	Представления.Вставить(ИмяРеквизита + "Язык1", ТекущиеДанные[ИмяКолонки + "Язык1"]);
	Представления.Вставить(ИмяРеквизита + "Язык2", ТекущиеДанные[ИмяКолонки + "Язык2"]);
		
	ПараметрыФормы.Вставить("ЗначенияРеквизитов", Представления);
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
	ДополнительныеПараметры.Вставить("ИмяКолонки", ИмяКолонки);
	ДополнительныеПараметры.Вставить("КатегорияТяжести", ТекущиеДанные.КатегорияТяжестиПоследствия);
	ДополнительныеПараметры.Вставить("ОбъектВоздействия", ОбъектВоздействияСтроки[0].ОбъектВоздействия);
	
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОткрытиеОписанияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("ОбщаяФорма.ВводНаРазныхЯзыках", ПараметрыФормы,,,,, Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьДанные(Команда)
	
	ТекстВопроса = "Данные регистра будут полностью удалены. Продолжить?";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПередОчисткойДанных", ЭтаФорма);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Да, НСтр("ru = 'Очистка данных регистра настроек'"), КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзКлассификатора(Команда)
	
	ТекстВопроса = "Данные регистра будут перезаполнены. Продолжить?";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаЗагрузитьИзКлассификатора", ЭтаФорма);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Да, НСтр("ru = 'Загрузка данных из классификатора'"), КодВозвратаДиалога.Да);

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьФормуДаннымиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ВопросПередОчисткойДанных(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОчиститьДанныеНаСервере();
	КонецЕсли; 	
КонецПроцедуры
 
&НаКлиенте 
Процедура ОбработкаОтветаЗагрузитьИзКлассификатора(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗагрузитьИзКлассификатораНаСервере();	
	КонецЕсли; 	
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура СохранитьНастройкуНаСервере(ОбъектВоздействия, КатегорияТяжести, Описание, ОписаниеЯзык1, ОписаниеЯзык2, Отказ)
	
	МенеджерЗаписи = РегистрыСведений.торо_Последствия.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ОбъектВоздействия = ОбъектВоздействия;
	МенеджерЗаписи.КатегорияТяжести  = КатегорияТяжести;
	МенеджерЗаписи.Прочитать();

	СтарыеОписания = Новый Структура("Описание, ОписаниеЯзык1, ОписаниеЯзык2", "", "", "");
		
	Если МенеджерЗаписи.Выбран() Тогда
		ЗаполнитьЗначенияСвойств(СтарыеОписания, МенеджерЗаписи);
	Иначе
		МенеджерЗаписи.ОбъектВоздействия = ОбъектВоздействия;
		МенеджерЗаписи.КатегорияТяжести  = КатегорияТяжести;
	КонецЕсли; 
	
	
	Если Не ЗначениеЗаполнено(Описание) И НЕ ЗначениеЗаполнено(ОписаниеЯзык1) И НЕ ЗначениеЗаполнено(ОписаниеЯзык2) Тогда
		
		Попытка
			МенеджерЗаписи.Удалить();
		Исключение
			
			ТекстСообщения = НСтр("ru = 'Не удалось удалить запись'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			
			торо_МультиязычностьСервер.ПереставитьЗначенияРеквизитаСУчетомЯызка(СтарыеОписания, "Описание");
			
			Описание = СтарыеОписания.Описание;
			ОписаниеЯзык1 = СтарыеОписания.ОписаниеЯзык1;
			ОписаниеЯзык2 = СтарыеОписания.ОписаниеЯзык2;
			
		КонецПопытки; 
		
	Иначе
		
		МенеджерЗаписи.Описание = Описание;
		МенеджерЗаписи.ОписаниеЯзык1 = ОписаниеЯзык1;
		МенеджерЗаписи.ОписаниеЯзык2 = ОписаниеЯзык2;
		
		торо_МультиязычностьСервер.ПереставитьЗначенияРеквизитаСУчетомЯызка(МенеджерЗаписи, "Описание");
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			
			ТекстСообщения = НСтр("ru = 'Не удалось выполнить запись'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
			торо_МультиязычностьСервер.ПереставитьЗначенияРеквизитаСУчетомЯызка(СтарыеОписания, "Описание");
			
			Описание = СтарыеОписания.Описание;
			ОписаниеЯзык1 = СтарыеОписания.ОписаниеЯзык1;
			ОписаниеЯзык2 = СтарыеОписания.ОписаниеЯзык2;
			
		КонецПопытки;
		
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуДаннымиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_Последствия.ОбъектВоздействия КАК ОбъектВоздействия,
	               |	торо_Последствия.КатегорияТяжести КАК КатегорияТяжести,
	               |	торо_Последствия.Описание КАК Описание,
	               |	торо_Последствия.ОписаниеЯзык1 КАК ОписаниеЯзык1,
	               |	торо_Последствия.ОписаниеЯзык2 КАК ОписаниеЯзык2
	               |ИЗ
	               |	РегистрСведений.торо_Последствия КАК торо_Последствия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_ОбъектыВоздействия.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.торо_ОбъектыВоздействия КАК торо_ОбъектыВоздействия
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_КатегорииТяжестиПоследствий.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.торо_КатегорииТяжестиПоследствий КАК торо_КатегорииТяжестиПоследствий
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	торо_КатегорииТяжестиПоследствий.РеквизитДопУпорядочивания";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[1].Пустой()
		ИЛИ РезультатЗапроса[2].Пустой() Тогда
		
		Если РезультатЗапроса[1].Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнен справочник <Объекты воздействия>'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли; 
		
		Если РезультатЗапроса[2].Пустой()  Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнен справочник <Категории тяжести последствий>'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли; 
		
		Возврат;
		
	КонецЕсли; 
	
	ВыборкаВоздействие = РезультатЗапроса[1].Выбрать();
	
	ОчиститьКолонки();
	СоздатьКолонки(ВыборкаВоздействие);
	
	ВыборкаКатегорииТяжести = РезультатЗапроса[2].Выбрать();
	ВыборкаНастройки        = РезультатЗапроса[0].Выбрать();
	
	Пока ВыборкаКатегорииТяжести.Следующий() Цикл
		
		ВыборкаНастройки.Сбросить();
		
		НС = ТаблицаНастроек.Добавить();
		НС.КатегорияТяжестиПоследствия = ВыборкаКатегорииТяжести.Ссылка;
		
		СтруктураОтбора = Новый Структура("КатегорияТяжести", ВыборкаКатегорииТяжести.Ссылка);
		
		Пока ВыборкаНастройки.НайтиСледующий(СтруктураОтбора) Цикл
			ИмяКолонкиСтроки = ТаблицаИменКолонок.НайтиСтроки(Новый Структура("ОбъектВоздействия", ВыборкаНастройки.ОбъектВоздействия));
			
			Если ИмяКолонкиСтроки.Количество() > 0 Тогда
				ИмяКолонки = ИмяКолонкиСтроки[0].ИмяКолонки;
				НС[ИмяКолонки] = ВыборкаНастройки.Описание;
				НС[ИмяКолонки+"Язык1"] = ВыборкаНастройки.ОписаниеЯзык1;
				НС[ИмяКолонки+"Язык2"] = ВыборкаНастройки.ОписаниеЯзык2;
				торо_МультиязычностьСервер.ПереставитьЗначенияРеквизитаСУчетомЯызка(НС, ИмяКолонки);
			КонецЕсли; 
			
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры
 
&НаСервере
Процедура ОчиститьКолонки()
	
	МассивУдаляемых = Новый Массив;
	
	Для каждого Реквизит Из ПолучитьРеквизиты("ТаблицаНастроек") Цикл
		
		Если Реквизит.Имя = "КатегорияТяжестиПоследствия" Тогда
			Продолжить;
		КонецЕсли; 
		
		МассивУдаляемых.Добавить(Реквизит.Путь + "." + Реквизит.Имя);
		
		НайденныйЭлемент = Элементы.Найти("ТаблицаНастроек" + Реквизит.Имя);
		Если НайденныйЭлемент <> Неопределено Тогда
			Элементы.Удалить(НайденныйЭлемент);
		КонецЕсли;
		
	КонецЦикла; 
	
	ТаблицаИменКолонок.Очистить();
	ТаблицаНастроек.Очистить();
	
	Если НЕ МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь) Тогда
		ЭтаФорма.ПараметрыМультиязычныхРеквизитов.Очистить();
	КонецЕсли;
	
	ИзменитьРеквизиты(, МассивУдаляемых);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКолонки(ВыборкаВоздействие)
	
	МассивДобавляемых = Новый Массив;
	СчИменКолонок = 0;
	
	Пока ВыборкаВоздействие.Следующий() Цикл
		ИмяКолонки = "Колонка" + Формат(СчИменКолонок, "ЧН=0; ЧГ=0");
		СчИменКолонок = СчИменКолонок + 1;
		
		НС = ТаблицаИменКолонок.Добавить();
		НС.ОбъектВоздействия = ВыборкаВоздействие.Ссылка;
		НС.ИмяКолонки        = ИмяКолонки;
		НС.Заголовок         = Строка(ВыборкаВоздействие.Ссылка);
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)), "ТаблицаНастроек", НС.Заголовок);
		МассивДобавляемых.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяКолонки+"Язык1", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)), "ТаблицаНастроек", НС.Заголовок);
		МассивДобавляемых.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяКолонки+"Язык2", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)), "ТаблицаНастроек", НС.Заголовок);
		МассивДобавляемых.Добавить(НовыйРеквизит);
	КонецЦикла; 
	
	ИзменитьРеквизиты(МассивДобавляемых);
	
	Для каждого Строка Из ТаблицаИменКолонок Цикл
		КолонкаВоздействие = Элементы.Добавить("ТаблицаНастроек" + Строка.ИмяКолонки, Тип("ПолеФормы"), Элементы.ТаблицаНастроек);
		КолонкаВоздействие.ПутьКДанным = "ТаблицаНастроек." + Строка.ИмяКолонки;
		КолонкаВоздействие.Вид = ВидПоляФормы.ПолеВвода;
		КолонкаВоздействие.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииОписания");
		
		Если НЕ МультиязычностьПовтИсп.КонфигурацияИспользуетТолькоОдинЯзык(Ложь) Тогда
			КолонкаВоздействие.КнопкаОткрытия = Истина;
			КолонкаВоздействие.УстановитьДействие("Открытие", "Подключаемый_ОткрытиеОписания");
			ЭтаФорма.ПараметрыМультиязычныхРеквизитов.Вставить(КолонкаВоздействие.Имя, КолонкаВоздействие.ПутьКДанным);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеНаСервере()
	
	НаборЗаписей = РегистрыСведений.торо_Последствия.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
	Для каждого Строка Из ТаблицаНастроек Цикл
		
		Для каждого ИмяКолонкиСтрока Из ТаблицаИменКолонок Цикл
			Строка[ИмяКолонкиСтрока.ИмяКолонки] = "";
			Строка[ИмяКолонкиСтрока.ИмяКолонки+"Язык1"] = "";
			Строка[ИмяКолонкиСтрока.ИмяКолонки+"Язык2"] = "";
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзКлассификатораНаСервере()

	РегистрыСведений.торо_Последствия.ЗагрузитьИзКлассификатора();	
	ЗаполнитьФормуДаннымиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытиеОписанияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	КатегорияТяжести = ДополнительныеПараметры.КатегорияТяжести;
	ОбъектВоздействия = ДополнительныеПараметры.ОбъектВоздействия;
	ИмяКолонки = ДополнительныеПараметры.ИмяКолонки;
	
	Для каждого Представление Из Результат.ЗначенияНаРазныхЯзыках Цикл
		ТекущиеДанные[ИмяКолонки + Представление.Суффикс] = Представление.ЗначениеРеквизита;
	КонецЦикла;
	
	Если Результат.Свойство("СтрокаНаТекущемЯзыке") Тогда
		ТекущиеДанные[ИмяКолонки] = Результат.СтрокаНаТекущемЯзыке;
	КонецЕсли;
	
	СохранитьНастройкуНаСервере(ОбъектВоздействия, КатегорияТяжести, ТекущиеДанные[ИмяКолонки], ТекущиеДанные[ИмяКолонки+"Язык1"], ТекущиеДанные[ИмяКолонки+"Язык2"], Ложь);
	
КонецПроцедуры

#КонецОбласти
