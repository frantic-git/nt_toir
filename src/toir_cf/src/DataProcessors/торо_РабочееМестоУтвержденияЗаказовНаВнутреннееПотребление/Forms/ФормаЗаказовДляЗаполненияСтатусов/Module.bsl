#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если КоличествоДокументовКЗаполнению() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("ДатаНачалаДня", НачалоДня(ТекущаяДата()));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЗаполнитьНаСервере() Тогда
		ПараметрЗакрытия = Новый Структура("Результат", "Успешно");
	Иначе
		ПараметрЗакрытия = Новый Структура("Результат", "Ошибка");
	КонецЕсли;
	
	Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокЗаказов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.Документ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция КоличествоДокументовКЗаполнению()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(ЗаказНаВнутреннееПотреблениеТоваров.Ссылка) КАК Количество
	               |ИЗ
	               |	Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотреблениеТоваров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	               |		ПО ЗаказНаВнутреннееПотреблениеТоваров.торо_IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	               |		ПО ЗаказНаВнутреннееПотреблениеТоваров.Ссылка = ВнутреннееПотреблениеТоваров.ЗаказНаВнутреннееПотребление
	               |ГДЕ
	               |	НЕ ЗаказНаВнутреннееПотреблениеТоваров.ПометкаУдаления
	               |	И ЗаказНаВнутреннееПотреблениеТоваров.ДатаОтгрузки >= &ДатаНачалаДня
	               |	И ЗаказНаВнутреннееПотреблениеТоваров.торо_СтатусУтверждения = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.ПустаяСсылка)
	               |	И (торо_ОбщиеДанныеПоРемонтам.IDРемонта ЕСТЬ NULL
	               |			ИЛИ НЕ торо_ОбщиеДанныеПоРемонтам.Завершен)
	               |	И (ВнутреннееПотреблениеТоваров.ЗаказНаВнутреннееПотребление ЕСТЬ NULL
	               |			ИЛИ ВнутреннееПотреблениеТоваров.ПометкаУдаления
	               |			ИЛИ НЕ ВнутреннееПотреблениеТоваров.Проведен)";
	
	Запрос.УстановитьПараметр("ДатаНачалаДня", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	    Возврат 0;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказНаВнутреннееПотреблениеТоваров.Ссылка КАК Документ
	               |ИЗ
	               |	Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотреблениеТоваров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	               |		ПО ЗаказНаВнутреннееПотреблениеТоваров.торо_IDРемонта = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	               |		ПО ЗаказНаВнутреннееПотреблениеТоваров.Ссылка = ВнутреннееПотреблениеТоваров.ЗаказНаВнутреннееПотребление
	               |ГДЕ
	               |	НЕ ЗаказНаВнутреннееПотреблениеТоваров.ПометкаУдаления
	               |	И ЗаказНаВнутреннееПотреблениеТоваров.ДатаОтгрузки >= &ДатаНачалаДня
	               |	И ЗаказНаВнутреннееПотреблениеТоваров.торо_СтатусУтверждения = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.ПустаяСсылка)
	               |	И (торо_ОбщиеДанныеПоРемонтам.IDРемонта ЕСТЬ NULL
	               |			ИЛИ НЕ торо_ОбщиеДанныеПоРемонтам.Завершен)
	               |	И (ВнутреннееПотреблениеТоваров.ЗаказНаВнутреннееПотребление ЕСТЬ NULL
	               |			ИЛИ ВнутреннееПотреблениеТоваров.ПометкаУдаления
	               |			ИЛИ НЕ ВнутреннееПотреблениеТоваров.Проведен)";
	
	Запрос.УстановитьПараметр("ДатаНачалаДня", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	    Возврат Истина;
	КонецЕсли;

	Попытка
		ВыборкаДокументов = РезультатЗапроса.Выбрать();
		Пока ВыборкаДокументов.Следующий() Цикл
		    ДокументОбъект = ВыборкаДокументов.Документ.ПолучитьОбъект();
			
			ВсеСтрокиОтменены = Истина;
			
			Для каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
			    Если СтрокаТЧ.Отменено Тогда
				    СтрокаТЧ.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияСтрокЗаказовНаВП.Отменено;
				Иначе
					СтрокаТЧ.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияСтрокЗаказовНаВП.НаУтверждении;
					ВсеСтрокиОтменены = Ложь;
				КонецЕсли;
			КонецЦикла;
			
			Если ВсеСтрокиОтменены Тогда
				ДокументОбъект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.Отклонен;
			Иначе
				ДокументОбъект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.НаУтверждении;
			КонецЕсли;
			
			ДокументОбъект.Записать();
		КонецЦикла;
	Исключение
		ШаблонСообщения = НСтр("ru = 'При заполнении реквизита ""Статус утверждения"" документа %1 произошла ошибка по причине: %2'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаДокументов.Документ, ОписаниеОшибки());
		
		ЗаписьЖурналаРегистрации("Заполнение статуса утверждения заказа на внутреннее потребление", УровеньЖурналаРегистрации.Ошибка, Метаданные.Документы.ЗаказНаВнутреннееПотребление,, ТекстСообщения);
		
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти