
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КонстантаОтладкаОбменов = Константы.торо_ОтладкаАСУТП_ЗагрузкаДанныхИзМакета;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ОповещаемыеЛицаАСУТП.ОповещаемоеЛицо КАК ОповещаемоеЛицо
	               |ИЗ
	               |	РегистрСведений.торо_ОповещаемыеЛицаАСУТП КАК торо_ОповещаемыеЛицаАСУТП";
	
	тзОповещаемыхЛиц = Запрос.Выполнить().Выгрузить();
	ОповещаемыеЛица.Загрузить(тзОповещаемыхЛиц);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтступВСекундахТекст = торо_ОбщегоНазначения.ПродолжительностьВЧасах(ПолучитьЗначениеКонстанты("торо_ОтступВСекундахАСУТП"));
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	нз = РегистрыСведений.торо_ОповещаемыеЛицаАСУТП.СоздатьНаборЗаписей();
	нз.Загрузить(ОповещаемыеЛица.Выгрузить());
	нз.Записать();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НачатьОбмен(Команда)
	НачатьОбменНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученныеДанные(Команда)
	ОбработатьПолученныеДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсё(Команда)
	ОчиститьВсёНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанные(Команда)
	ОчиститьДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСессии(Команда)
	ОчиститьСессииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСоответствияИзМакета(Команда)
	
	Если не ЗначениеЗаполнено(ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	
	#Если НЕ МобильныйКлиент Тогда
	
	экс = new COMОбъект("Excel.Application");
	экс.visible = Ложь;
	Книга = экс.Workbooks.open(ИмяФайла);
	
	Лист = Книга.Sheets(1);
	
	Версия = Лев(экс.Version,Найти(экс.Version,".")-1); 
	Если Версия = "8" тогда 
		ВсегоСтрок = экс.Cells.CurrentRegion.Rows.Count; 
	Иначе 
		ВсегоСтрок = экс.Cells(1,1).SpecialCells(11).Row; 
	КонецЕсли;	
	
	МасСтрок = Новый Массив;
	
	Для номСтроки = 2 по ВсегоСтрок Цикл
		струк = Новый Структура("НаименованиеОР, Код, Тег, Подключение, ОбъектРемонта, ТипСигнала, Показатель, ПараметрНаработки, Состояние, Отключить, Ответственный, Подразделение, Организация, ПричинаПростоя, ВидДефекта, ПоказательKPI, РаспространятьНаработкуНаПодчиненных, РаспространятьСостояниеНаПодчиненных");
		струк.НаименованиеОР = Лист.Cells(номСтроки, 1).value;
		струк.Код = Лист.Cells(номСтроки, 2).value;
		струк.Тег = Лист.Cells(номСтроки, 3).value;
		струк.Подключение = Лист.Cells(номСтроки, 4).value;
		струк.ОбъектРемонта = Лист.Cells(номСтроки, 5).value;
		струк.ТипСигнала = Лист.Cells(номСтроки, 6).value;
		струк.Показатель = Лист.Cells(номСтроки, 7).value;
		струк.ПараметрНаработки = Лист.Cells(номСтроки, 8).value;
		струк.Состояние = Лист.Cells(номСтроки, 9).value;
		струк.Отключить = Лист.Cells(номСтроки, 10).value;
		струк.Ответственный = Лист.Cells(номСтроки, 11).value;
		струк.Подразделение = Лист.Cells(номСтроки, 12).value;
		струк.Организация = Лист.Cells(номСтроки, 13).value;
		струк.ПричинаПростоя = Лист.Cells(номСтроки, 14).value;
		струк.ВидДефекта = Лист.Cells(номСтроки, 15).value;
		струк.ПоказательKPI = Лист.Cells(номСтроки, 16).value;
		струк.РаспространятьНаработкуНаПодчиненных = Лист.Cells(номСтроки, 17).value;
		струк.РаспространятьСостояниеНаПодчиненных = Лист.Cells(номСтроки, 18).value;
		
		МасСтрок.Добавить(струк);
	КонецЦикла;	
	
	Если МасСтрок.Количество() > 0 Тогда
		ЗагрузитьСоответствияИзМакетаНаСервере(МасСтрок);
	Иначе
		ТекстСообщения = НСтр("ru='Загружено 0 записей.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	экс.DisplayAlerts = 0;
	Книга.Close();
	экс.DisplayAlerts = 1;
	экс.Quit()	
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаписиВБД(Команда)
	ДЗвБД();
КонецПроцедуры

&НаКлиенте
Процедура ТЕСТ(Команда)
	ТЕСТНАС();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Фильтр = "Таблицы (*.xlsx;*.xls)|*.xlsx;*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
	ДиалогОткрытияФайла.ПолноеИмяФайла = ИмяФайла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИмяФайлаНачалоВыбораЗавершение", ЭтотОбъект);
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтступВСекундахТекстНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	торо_ЗаполнениеДокументовКлиент.ОткрытьФормуПодбораПродолжительности(ПолучитьЗначениеКонстанты("торо_ОтступВСекундахАСУТП"), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтступВСекундахТекстОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОтступВСекундахТекст = торо_ОбщегоНазначения.ПродолжительностьВЧасах(ВыбранноеЗначение);
	УстановитьЗначениеКонстанты(ВыбранноеЗначение, "торо_ОтступВСекундахАСУТП");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИмяФайлаНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() > 0 Тогда
		ИмяФайла = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура НачатьОбменНаСервере()
	торо_ПолучениеДанныхАСУТП.ПолучитьДанные();
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеНаСервере()
	нз = РегистрыСведений.торо_ДанныеАСУТП.СоздатьНаборЗаписей();
	нз.Записать();
	
	нз = РегистрыСведений.торо_СобытияИнтеграцииСАСУТП.СоздатьНаборЗаписей();
	нз.Записать();

КонецПроцедуры

&НаСервере
Процедура ОчиститьСессииНаСервере()
	нз = РегистрыСведений.торо_СеансыОбменаСАСУТП.СоздатьНаборЗаписей();
	нз.Записать();
КонецПроцедуры

&НаСервере
Процедура ОчиститьВсёНаСервере()
	ОчиститьДанныеНаСервере();
	ОчиститьСессииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьПолученныеДанныеНаСервере()
	торо_ОбработкаДанныхАСУТП.ОбработатьДанные();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьСоответствияИзМакетаНаСервере(МасСтрок)
	
	ТипСтрока = Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(100));
	тзИзФайла = Новый ТаблицаЗначений;
	тзИзФайла.Колонки.Добавить("НаименованиеОР", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Код", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Тег", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Подключение", ТипСтрока);
	тзИзФайла.Колонки.Добавить("ОбъектРемонта", ТипСтрока);
	тзИзФайла.Колонки.Добавить("ТипСигнала", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Показатель", ТипСтрока);
	тзИзФайла.Колонки.Добавить("ПараметрНаработки", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Состояние", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Отключить", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Ответственный", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Подразделение", ТипСтрока);
	тзИзФайла.Колонки.Добавить("Организация", ТипСтрока);
	тзИзФайла.Колонки.Добавить("ПричинаПростоя", ТипСтрока);
	тзИзФайла.Колонки.Добавить("ВидДефекта", ТипСтрока);
	тзИзФайла.Колонки.Добавить("ПоказательKPI", ТипСтрока);
	тзИзФайла.Колонки.Добавить("РаспространятьНаработкуНаПодчиненных", ТипСтрока);
	тзИзФайла.Колонки.Добавить("РаспространятьСостояниеНаПодчиненных", ТипСтрока);
	
	Для каждого текЭл Из МасСтрок Цикл
		нс = тзИзФайла.Добавить();
		ЗаполнитьЗначенияСвойств(нс, текЭл);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.НаименованиеОР КАК НаименованиеОР,
	               |	Таб.Код КАК Код,
	               |	Таб.Тег КАК Тег,
	               |	Таб.Подключение КАК Подключение,
	               |	Таб.ОбъектРемонта КАК ОбъектРемонта,
	               |	Таб.ТипСигнала КАК ТипСигнала,
	               |	Таб.Показатель КАК Показатель,
	               |	Таб.ПараметрНаработки КАК ПараметрНаработки,
	               |	Таб.Состояние КАК Состояние,
	               |	Таб.Отключить КАК Отключить,
	               |	Таб.Ответственный КАК Ответственный,
	               |	Таб.Подразделение КАК Подразделение,
	               |	Таб.Организация КАК Организация,
	               |	Таб.ПричинаПростоя КАК ПричинаПростоя,
	               |	Таб.ВидДефекта КАК ВидДефекта,
	               |	Таб.ПоказательKPI КАК ПоказательKPI,
	               |	Таб.РаспространятьНаработкуНаПодчиненных КАК РаспространятьНаработкуНаПодчиненных,
	               |	Таб.РаспространятьСостояниеНаПодчиненных КАК РаспространятьСостояниеНаПодчиненных
	               |ПОМЕСТИТЬ ДанныеИзФайла
	               |ИЗ
	               |	&Таб КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	таб.НаименованиеОР КАК НаименованиеОР,
	               |	таб.Тег КАК Тег,
	               |	таб.Подключение КАК тПодключение,
	               |	МАКСИМУМ(торо_ПодключенияКБазеДанных.Ссылка) КАК Подключение,
	               |	таб.ОбъектРемонта КАК тОбъектРемонта,
	               |	МАКСИМУМ(торо_ОбъектыРемонта.Ссылка) КАК ОбъектРемонта,
	               |	таб.ТипСигнала КАК тТипСигнала,
	               |	ВЫБОР
	               |		КОГДА таб.ТипСигнала = ""Показатель""
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_ТипыСигналовАСУТП.Показатель)
	               |		КОГДА таб.ТипСигнала = ""Состояние""
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_ТипыСигналовАСУТП.Состояние)
	               |		КОГДА таб.ТипСигнала = ""Наработка""
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_ТипыСигналовАСУТП.Наработка)
	               |		КОГДА таб.ТипСигнала = ""Дефект""
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_ТипыСигналовАСУТП.Дефект)
	               |		КОГДА таб.ТипСигнала = ""KPI""
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.торо_ТипыСигналовАСУТП.KPI)
	               |		ИНАЧЕ NULL
	               |	КОНЕЦ КАК ТипСигнала,
	               |	таб.Показатель КАК тПоказатель,
	               |	МАКСИМУМ(торо_ИзмеряемыеПоказателиОбъектовРемонта.Ссылка) КАК Показатель,
	               |	таб.ПараметрНаработки КАК тПараметрНаработки,
	               |	МАКСИМУМ(ПараметрыВыработкиОС.Ссылка) КАК ПараметрНаработки,
	               |	таб.Состояние КАК тСостояние,
	               |	МАКСИМУМ(торо_ВидыЭксплуатации.Ссылка) КАК Состояние,
	               |	таб.Отключить КАК тОтключить,
	               |	ВЫБОР
	               |		КОГДА таб.Отключить = ""Нет""
	               |			ТОГДА ЛОЖЬ
	               |		КОГДА таб.Отключить = ""Да""
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ NULL
	               |	КОНЕЦ КАК Отключить,
	               |	таб.Ответственный КАК тОтветственный,
	               |	МАКСИМУМ(Пользователи.Ссылка) КАК Ответственный,
	               |	таб.Подразделение КАК тПодразделение,
	               |	МАКСИМУМ(СтруктураПредприятия.Ссылка) КАК Подразделение,
	               |	таб.Организация КАК тОрганизация,
	               |	МАКСИМУМ(Организации.Ссылка) КАК Организация,
	               |	таб.ПричинаПростоя КАК тПричинаПростоя,
	               |	МАКСИМУМ(торо_ПричиныПростояОборудования.Ссылка) КАК ПричинаПростоя,
	               |	таб.ВидДефекта КАК тВидДефекта,
	               |	МАКСИМУМ(торо_ВидыДефектов.Ссылка) КАК ВидДефекта,
	               |	таб.ПоказательKPI КАК тПоказательKPI,
	               |	МАКСИМУМ(торо_ПоказателиKPI.Ссылка) КАК ПоказательKPI,
				   |	ВЫБОР
	               |		КОГДА таб.РаспространятьНаработкуНаПодчиненных = ""Нет""
	               |			ТОГДА ЛОЖЬ
	               |		КОГДА таб.РаспространятьНаработкуНаПодчиненных = ""Да""
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ NULL
	               |	КОНЕЦ КАК РаспространятьНаработкуНаПодчиненных,
				   |	ВЫБОР
	               |		КОГДА таб.РаспространятьСостояниеНаПодчиненных = ""Нет""
	               |			ТОГДА ЛОЖЬ
	               |		КОГДА таб.РаспространятьСостояниеНаПодчиненных = ""Да""
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ NULL
	               |	КОНЕЦ КАК РаспространятьСостояниеНаПодчиненных
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	ДанныеИзФайла КАК таб
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	               |		ПО таб.Код = торо_ОбъектыРемонта.Код
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	               |		ПО таб.Подразделение = СтруктураПредприятия.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	               |		ПО таб.Организация = Организации.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ПодключенияКБазеДанных КАК торо_ПодключенияКБазеДанных
	               |		ПО таб.Подключение = торо_ПодключенияКБазеДанных.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
	               |		ПО таб.Показатель = торо_ИзмеряемыеПоказателиОбъектовРемонта.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПараметрыВыработкиОС КАК ПараметрыВыработкиОС
	               |		ПО таб.ПараметрНаработки = ПараметрыВыработкиОС.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ВидыЭксплуатации КАК торо_ВидыЭксплуатации
	               |		ПО таб.Состояние = торо_ВидыЭксплуатации.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	               |		ПО таб.Ответственный = Пользователи.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ПричиныПростояОборудования КАК торо_ПричиныПростояОборудования
	               |		ПО таб.ПричинаПростоя = торо_ПричиныПростояОборудования.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеДефектыОборудования КАК торо_ВидыДефектов
	               |		ПО таб.ВидДефекта = торо_ВидыДефектов.Наименование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ПоказателиKPI КАК торо_ПоказателиKPI
	               |		ПО таб.ПоказательKPI = торо_ПоказателиKPI.Наименование
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	таб.ТипСигнала,
	               |	таб.ОбъектРемонта,
	               |	таб.Подключение,
	               |	таб.Тег,
	               |	таб.НаименованиеОР,
	               |	таб.Показатель,
	               |	таб.Состояние,
	               |	таб.ПараметрНаработки,
	               |	таб.ПричинаПростоя,
	               |	таб.Организация,
	               |	таб.Подразделение,
	               |	таб.Ответственный,
	               |	таб.Отключить,
	               |	таб.ВидДефекта,
	               |	таб.ПоказательKPI,
	               |	таб.РаспространятьНаработкуНаПодчиненных,
	               |	таб.РаспространятьСостояниеНаПодчиненных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.НаименованиеОР КАК НаименованиеОР,
	               |	Данные.Тег КАК Тег,
	               |	Данные.тПодключение КАК тПодключение,
	               |	Данные.Подключение КАК Подключение,
	               |	Данные.тОбъектРемонта КАК тОбъектРемонта,
	               |	Данные.ОбъектРемонта КАК ОбъектРемонта,
	               |	Данные.тТипСигнала КАК тТипСигнала,
	               |	Данные.ТипСигнала КАК ТипСигнала,
	               |	Данные.тПоказатель КАК тПоказатель,
	               |	Данные.Показатель КАК Показатель,
	               |	Данные.тПараметрНаработки КАК тПараметрНаработки,
	               |	Данные.ПараметрНаработки КАК ПараметрНаработки,
	               |	Данные.тСостояние КАК тСостояние,
	               |	Данные.Состояние КАК Состояние,
	               |	Данные.тОтключить КАК тОтключить,
	               |	Данные.Отключить КАК Отключить,
	               |	Данные.тОтветственный КАК тОтветственный,
	               |	Данные.Ответственный КАК Ответственный,
	               |	Данные.тПодразделение КАК тПодразделение,
	               |	Данные.Подразделение КАК Подразделение,
	               |	Данные.тОрганизация КАК тОрганизация,
	               |	Данные.Организация КАК Организация,
	               |	Данные.тПричинаПростоя КАК тПричинаПростоя,
	               |	Данные.ПричинаПростоя КАК ПричинаПростоя,
	               |	Данные.тВидДефекта КАК тВидДефекта,
	               |	Данные.ВидДефекта КАК ВидДефекта,
	               |	Данные.тПоказательKPI КАК тПоказательKPI,
	               |	Данные.ПоказательKPI КАК ПоказательKPI,
	               |	ВЫБОР
	               |		КОГДА Данные.Подключение ЕСТЬ NULL
	               |				ИЛИ Данные.ОбъектРемонта ЕСТЬ NULL
	               |				ИЛИ Данные.ТипСигнала ЕСТЬ NULL
	               |				ИЛИ Данные.Отключить ЕСТЬ NULL
	               |				ИЛИ Данные.Ответственный ЕСТЬ NULL
	               |				ИЛИ Данные.Подразделение ЕСТЬ NULL
	               |				ИЛИ Данные.Организация ЕСТЬ NULL
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Ошибка,
	               |	Данные.РаспространятьНаработкуНаПодчиненных КАК РаспространятьНаработкуНаПодчиненных,
	               |	Данные.РаспространятьСостояниеНаПодчиненных КАК РаспространятьСостояниеНаПодчиненных
	               |ПОМЕСТИТЬ ДанныеСФлагомОшибки
	               |ИЗ
	               |	Данные КАК Данные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеСФлагомОшибки.НаименованиеОР КАК НаименованиеОР,
	               |	ДанныеСФлагомОшибки.Тег КАК Тег,
	               |	ДанныеСФлагомОшибки.тПодключение КАК тПодключение,
	               |	ДанныеСФлагомОшибки.Подключение КАК Подключение,
	               |	ДанныеСФлагомОшибки.тОбъектРемонта КАК тОбъектРемонта,
	               |	ДанныеСФлагомОшибки.ОбъектРемонта КАК ОбъектРемонта,
	               |	ДанныеСФлагомОшибки.тТипСигнала КАК тТипСигнала,
	               |	ДанныеСФлагомОшибки.ТипСигнала КАК ТипСигнала,
	               |	ДанныеСФлагомОшибки.тПоказатель КАК тПоказатель,
	               |	ДанныеСФлагомОшибки.Показатель КАК Показатель,
	               |	ДанныеСФлагомОшибки.тПараметрНаработки КАК тПараметрНаработки,
	               |	ДанныеСФлагомОшибки.ПараметрНаработки КАК ПараметрНаработки,
	               |	ДанныеСФлагомОшибки.тСостояние КАК тСостояние,
	               |	ДанныеСФлагомОшибки.Состояние КАК Состояние,
	               |	ДанныеСФлагомОшибки.тОтключить КАК тОтключить,
	               |	ДанныеСФлагомОшибки.Отключить КАК Отключить,
	               |	ДанныеСФлагомОшибки.тОтветственный КАК тОтветственный,
	               |	ДанныеСФлагомОшибки.Ответственный КАК Ответственный,
	               |	ДанныеСФлагомОшибки.тПодразделение КАК тПодразделение,
	               |	ДанныеСФлагомОшибки.Подразделение КАК Подразделение,
	               |	ДанныеСФлагомОшибки.тОрганизация КАК тОрганизация,
	               |	ДанныеСФлагомОшибки.Организация КАК Организация,
	               |	ДанныеСФлагомОшибки.тПричинаПростоя КАК тПричинаПростоя,
	               |	ДанныеСФлагомОшибки.ПричинаПростоя КАК ПричинаПростоя,
	               |	ДанныеСФлагомОшибки.тВидДефекта КАК тВидДефекта,
	               |	ДанныеСФлагомОшибки.ВидДефекта КАК ВидДефекта,
	               |	ДанныеСФлагомОшибки.Ошибка КАК Ошибка,
	               |	ДанныеСФлагомОшибки.тПоказательKPI КАК тПоказательKPI,
	               |	ДанныеСФлагомОшибки.ПоказательKPI КАК ПоказательKPI,
	               |	ДанныеСФлагомОшибки.РаспространятьНаработкуНаПодчиненных КАК РаспространятьНаработкуНаПодчиненных,
	               |	ДанныеСФлагомОшибки.РаспространятьСостояниеНаПодчиненных КАК РаспространятьСостояниеНаПодчиненных
	               |ИЗ
	               |	ДанныеСФлагомОшибки КАК ДанныеСФлагомОшибки
	               |ГДЕ
	               |	ДанныеСФлагомОшибки.Ошибка = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеСФлагомОшибки.НаименованиеОР КАК НаименованиеОР,
	               |	ДанныеСФлагомОшибки.Тег КАК Тег,
	               |	ДанныеСФлагомОшибки.тПодключение КАК тПодключение,
	               |	ДанныеСФлагомОшибки.Подключение КАК Подключение,
	               |	ДанныеСФлагомОшибки.тОбъектРемонта КАК тОбъектРемонта,
	               |	ДанныеСФлагомОшибки.ОбъектРемонта КАК ОбъектРемонта,
	               |	ДанныеСФлагомОшибки.тТипСигнала КАК тТипСигнала,
	               |	ДанныеСФлагомОшибки.ТипСигнала КАК ТипСигнала,
	               |	ДанныеСФлагомОшибки.тПоказатель КАК тПоказатель,
	               |	ДанныеСФлагомОшибки.Показатель КАК Показатель,
	               |	ДанныеСФлагомОшибки.тПараметрНаработки КАК тПараметрНаработки,
	               |	ДанныеСФлагомОшибки.ПараметрНаработки КАК ПараметрНаработки,
	               |	ДанныеСФлагомОшибки.тСостояние КАК тСостояние,
	               |	ДанныеСФлагомОшибки.Состояние КАК Состояние,
	               |	ДанныеСФлагомОшибки.тОтключить КАК тОтключить,
	               |	ДанныеСФлагомОшибки.Отключить КАК Отключить,
	               |	ДанныеСФлагомОшибки.тОтветственный КАК тОтветственный,
	               |	ДанныеСФлагомОшибки.Ответственный КАК Ответственный,
	               |	ДанныеСФлагомОшибки.тПодразделение КАК тПодразделение,
	               |	ДанныеСФлагомОшибки.Подразделение КАК Подразделение,
	               |	ДанныеСФлагомОшибки.тОрганизация КАК тОрганизация,
	               |	ДанныеСФлагомОшибки.Организация КАК Организация,
	               |	ДанныеСФлагомОшибки.тПричинаПростоя КАК тПричинаПростоя,
	               |	ДанныеСФлагомОшибки.ПричинаПростоя КАК ПричинаПростоя,
	               |	ДанныеСФлагомОшибки.тВидДефекта КАК тВидДефекта,
	               |	ДанныеСФлагомОшибки.ВидДефекта КАК ВидДефекта,
	               |	ДанныеСФлагомОшибки.Ошибка КАК Ошибка,
	               |	ДанныеСФлагомОшибки.тПоказательKPI КАК тПоказательKPI,
	               |	ДанныеСФлагомОшибки.ПоказательKPI КАК ПоказательKPI,
	               |	ВЫБОР
	               |		КОГДА торо_СоответствияТеговАСУТПОбъектамТОИР.Подключение ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Дубль,
	               |	ДанныеСФлагомОшибки.РаспространятьНаработкуНаПодчиненных КАК РаспространятьНаработкуНаПодчиненных,
	               |	ДанныеСФлагомОшибки.РаспространятьСостояниеНаПодчиненных КАК РаспространятьСостояниеНаПодчиненных
	               |ИЗ
	               |	ДанныеСФлагомОшибки КАК ДанныеСФлагомОшибки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СоответствияТеговАСУТПОбъектамТОИР КАК торо_СоответствияТеговАСУТПОбъектамТОИР
	               |		ПО ДанныеСФлагомОшибки.НаименованиеОР = торо_СоответствияТеговАСУТПОбъектамТОИР.НаименованиеОР
	               |			И ДанныеСФлагомОшибки.Тег = торо_СоответствияТеговАСУТПОбъектамТОИР.Тег
	               |			И ДанныеСФлагомОшибки.Подключение = торо_СоответствияТеговАСУТПОбъектамТОИР.Подключение
	               |ГДЕ
	               |	ДанныеСФлагомОшибки.Ошибка = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Таб", тзИзФайла);
	
	масРезультатов = Запрос.ВыполнитьПакет();
	
	тзОшибок = масРезультатов[3].Выгрузить();
	масОшибок = Новый Массив;
	масДублей = Новый Массив;
	
	Если масРезультатов[4].пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Записывать = Ложь;
	тзДанные = масРезультатов[4].Выгрузить();
	
	нз = РегистрыСведений.торо_СоответствияТеговАСУТПОбъектамТОИР.СоздатьНаборЗаписей();
	нз.Прочитать();
	
	КоличествоНовыхЗаписей = 0;
	Для каждого текСтрока Из тзДанные Цикл
		
		Если текСтрока.Дубль Тогда
			масДублей.Добавить(текСтрока);
			Продолжить;
		КонецЕсли;
		
		Ошибка = Ложь;
		
		Если текСтрока.ТипСигнала = Перечисления.торо_ТипыСигналовАСУТП.Показатель Тогда
			Если Не ЗначениеЗаполнено(текСтрока.Показатель) Тогда
				Ошибка = Истина;
			КонецЕсли;
		ИначеЕсли текСтрока.ТипСигнала = Перечисления.торо_ТипыСигналовАСУТП.Состояние Тогда
			Если Не ЗначениеЗаполнено(текСтрока.Состояние) Или Не ЗначениеЗаполнено(текСтрока.причинаПростоя) Тогда
				Ошибка = Истина;
			КонецЕсли;
		ИначеЕсли текСтрока.ТипСигнала = Перечисления.торо_ТипыСигналовАСУТП.Наработка Тогда
			Если Не ЗначениеЗаполнено(текСтрока.ПараметрНаработки) Тогда
				Ошибка = Истина;
			КонецЕсли;
		ИначеЕсли текСтрока.ТипСигнала = Перечисления.торо_ТипыСигналовАСУТП.KPI Тогда
			Если Не ЗначениеЗаполнено(текСтрока.ПоказательKPI) Тогда
				Ошибка = Истина;
			КонецЕсли;
		ИначеЕсли текСтрока.ТипСигнала = Перечисления.торо_ТипыСигналовАСУТП.Дефект Тогда
			Если Не ЗначениеЗаполнено(текСтрока.ВидДефекта) Тогда
				Ошибка = Истина;
			КонецЕсли;
		Иначе
			Ошибка = Истина;
		КонецЕсли;
		
		Если Ошибка Тогда
			масОшибок.Добавить(текСтрока);
			Продолжить;
		КонецЕсли;
		
		нс = нз.Добавить();
		КоличествоНовыхЗаписей = КоличествоНовыхЗаписей + 1;
		ЗаполнитьЗначенияСвойств(нс, текСтрока);
		Записывать = Истина;
		
	КонецЦикла;
	
	Если Записывать Тогда
		нз.Записать();
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru='Загружено %1 записей.'");
	ТекстСообщения = СтрШаблон(ШаблонСообщения, КоличествоНовыхЗаписей);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ДЗвБД()
	
	торо_ПолучениеДанныхАСУТП.ГенераторЗаписей(Подключение, КоличествоЗаписей, Истина);
	
КонецПроцедуры

&НаСервере 
Процедура ТЕСТНАС()
	
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура УстановитьЗначениеКонстанты(ЗначениеК, имяК)
	Константы[имяК].Установить(ЗначениеК);
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьЗначениеКонстанты(имяК)
	Возврат Константы[имяК].Получить();
КонецФункции

#КонецОбласти
