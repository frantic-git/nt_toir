
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Список значений фиксирован, в ходе работы изменяются только пометки
	СписокВыбранныхВидовОборудования.Очистить();
	СписокВыбранныхВидовОборудования.Добавить("ОсновноеОборудование"   , "Основное оборудование"   , Истина);
	СписокВыбранныхВидовОборудования.Добавить("ЗависимоеОборудование"  , "Зависимое оборудование"  , Истина);
	СписокВыбранныхВидовОборудования.Добавить("ПодчиненноеОборудование", "Подчиненное оборудование", Истина);
	
	Если Параметры.Свойство("Заголовок", Заголовок) Тогда
		АвтоЗаголовок = Ложь;
	КонецЕсли; 
	
    Параметры.Свойство("IDОсновногоРемонта"   , IDОсновногоРемонта);
    Параметры.Свойство("ОР"                   , ОбъектРемонта);
    Параметры.Свойство("ВР"                   , ВидРемонта);
    Параметры.Свойство("ДокументИсточник"     , ДокументИсточник);
    Параметры.Свойство("ДатаНачалаРемонта"    , ДатаНачалаРемонта);
    Параметры.Свойство("ДатаОкончанияРемонта" , ДатаОкончанияРемонта);
	
	ОтборДатаНачала    = ДатаНачалаРемонта;
	ОтборДатаОкончания = ДатаОкончанияРемонта;
	
	ТекСтруктураИерархии = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	
	ОбновитьРемонтыНаСервере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РемонтыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Ремонты.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		СтрокаРемонтовОборудования = ПОЛУЧИТЬСТРУКТУРУ_СТРОКАРЕМОНТОВОБОРУДОВАНИЯ();
		ЗаполнитьЗначенияСвойств(СтрокаРемонтовОборудования, ТекущиеДанные);
		ОповеститьОВыборе(Новый Структура("СтрокаРемонтовОборудования, ДокументОснование", СтрокаРемонтовОборудования, ТекущиеДанные.ДокументОснование));
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВсеОборудование(Команда)
	
	Пометка = НЕ Элементы.ВсеОборудование.Пометка;
	
	Для каждого Кнопка Из Элементы.Группа5.ПодчиненныеЭлементы Цикл
		Кнопка.Пометка = Пометка;
		ЭлементСпискаЗначений = СписокВыбранныхВидовОборудования.НайтиПоЗначению(Кнопка.Имя);
		Если НЕ ЭлементСпискаЗначений = Неопределено Тогда
			
			ЭлементСпискаЗначений.Пометка = Пометка;
			
		КонецЕсли; 
	КонецЦикла; 
	
	ИзменитьВидимостьЭлементовВоВидамОборудования();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидОборудования(Команда)
	
	Кнопка = Элементы.Группа5.ПодчиненныеЭлементы.Найти(Команда.Имя);
	
	Если Кнопка = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	
	ЭлементСпискаЗначений = СписокВыбранныхВидовОборудования.НайтиПоЗначению(Команда.Имя);
	
	Если НЕ ЭлементСпискаЗначений = Неопределено Тогда
		
		ЭлементСпискаЗначений.Пометка = Кнопка.Пометка;
		
	КонецЕсли; 

	Если НЕ Кнопка.Пометка Тогда
		Элементы.ВсеОборудование.Пометка = Ложь;
	Иначе
		
		ЕстьНеПомеченныеКнопки = Ложь;
		
		Для каждого Кнопка Из Элементы.Группа5.ПодчиненныеЭлементы Цикл
			Если Кнопка.Имя = "ВсеОборудование" Тогда
				Продолжить;
			ИначеЕсли НЕ Кнопка.Пометка Тогда
				ЕстьНеПомеченныеКнопки = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		Элементы.ВсеОборудование.Пометка = Не ЕстьНеПомеченныеКнопки;

	КонецЕсли; 
	
	ИзменитьВидимостьЭлементовВоВидамОборудования();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОсновному(Команда)
	ОтборДатаНачала    = ДатаНачалаРемонта;
	ОтборДатаОкончания = ДатаОкончанияРемонта;
	ОбновитьРемонтыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ВозвращаемыйМассив = Новый Массив;
	
	Для каждого Строка Из Ремонты Цикл
		СтрокаРемонтовОборудования = ПОЛУЧИТЬСТРУКТУРУ_СТРОКАРЕМОНТОВОБОРУДОВАНИЯ();
		ЗаполнитьЗначенияСвойств(СтрокаРемонтовОборудования, Строка);
		ВозвращаемыйМассив.Добавить(Новый Структура("СтрокаРемонтовОборудования, ДокументОснование", СтрокаРемонтовОборудования, Строка.ДокументОснование));
	КонецЦикла; 
	
	ОповеститьОВыборе(ВозвращаемыйМассив);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	МассивВыделенных = Элементы.Ремонты.ВыделенныеСтроки;
	ВозвращаемыйМассив = Новый Массив;

	Для каждого ИдентификаторСтроки Из МассивВыделенных Цикл
		
		СтрокаРемонтовОборудования = ПОЛУЧИТЬСТРУКТУРУ_СТРОКАРЕМОНТОВОБОРУДОВАНИЯ();
		Строка = Ремонты.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		ЗаполнитьЗначенияСвойств(СтрокаРемонтовОборудования, Строка);
		ВозвращаемыйМассив.Добавить(Новый Структура("СтрокаРемонтовОборудования, ДокументОснование", СтрокаРемонтовОборудования, Строка.ДокументОснование));

	КонецЦикла;
	
	ОповеститьОВыборе(ВозвращаемыйМассив);

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьРемонтыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДатыОтбора(Команда)
	
	ОтборДатаНачала    = Дата("00010101");
	ОтборДатаОкончания = Дата("00010101");
	
	ОбновитьРемонтыНаСервере();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Изменить видимость элементов во видам оборудования
// Изменяет видимость элементов в зависимости от установленных отборов по видам оборудования
&НаКлиенте
Процедура ИзменитьВидимостьЭлементовВоВидамОборудования()
	
	ЭлементПодчиненное = СписокВыбранныхВидовОборудования.НайтиПоЗначению("ПодчиненноеОборудование");
	Элементы.Справочникторо_ОбъектыРемонтаНастройкаИерархии.Доступность = (Не ЭлементПодчиненное = Неопределено И ЭлементПодчиненное.Пометка);
	
	ОбновитьРемонтыНаСервере();
	
КонецПроцедуры

// Функция - ПОЛУЧИТЬСТРУКТУРУ СТРОКАРЕМОНТОВОБОРУДОВАНИЯ
// Возвращает пустую структуру для описания выбранноу строки ремонтов
// Возвращаемое значение:
// Структура  - 
//
&НаКлиенте
Функция ПОЛУЧИТЬСТРУКТУРУ_СТРОКАРЕМОНТОВОБОРУДОВАНИЯ()
	Возврат Новый Структура("ID,
							|ВидРемонтныхРабот,
							|ДатаНачала,
							|ДатаОкончания,
							|Завершен,
							|ОбъектРемонта,
							|ОбъектРемонтаВладелец,
							|ИнвНомер,
							|ТехНомер,
							|ЗаводскойНомер,
							|ОписаниеРемонта,
							|СпособВыполнения,
							|Исполнитель,
							|КритичностьДефекта, 
							|Подчиненный, 
							|Зависимый");
КонецФункции

&НаСервере
Процедура ОбновитьРемонтыНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	# Область ТекстЗапроса
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_РемонтыОсновногоЗависимогоОборудования.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта,
	|	торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаЗависимогоОбъекта КАК ВидРемонтаЗависимогоОбъекта,
	|	ИСТИНА КАК Зависимый
	|ПОМЕСТИТЬ ЗависимыеОбъектыРемонта
	|ИЗ
	|	РегистрСведений.торо_РемонтыОсновногоЗависимогоОборудования КАК торо_РемонтыОсновногоЗависимогоОборудования
	|ГДЕ
	|	&ЗависимоеОборудование
	|	И торо_РемонтыОсновногоЗависимогоОборудования.ОсновнойОбъектРемонта = &ОсновнойОбъектРемонта
	|	И (торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаОсновногоОбъекта = &ВидРемонта
	|			ИЛИ торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаОсновногоОбъекта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗависимыеОбъектыРемонта.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта,
	|	ЗависимыеОбъектыРемонта.ВидРемонтаЗависимогоОбъекта КАК ВидРемонтаЗависимогоОбъекта,
	|	ИСТИНА КАК Зависимый
	|ПОМЕСТИТЬ ЗависимыеПодчиненныеОбъектыРемонта
	|ИЗ
	|	ЗависимыеОбъектыРемонта КАК ЗависимыеОбъектыРемонта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ОбъектыРемонта.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	|ГДЕ
	|	&ПодчиненноеОборудование
	|	И торо_ОбъектыРемонта.Ссылка В(&МассивПодчиненных)
	|	И НЕ торо_ОбъектыРемонта.Ссылка В
	|				(ВЫБРАТЬ
	|					ЗависимыеОбъектыРемонта.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта
	|				ИЗ
	|					ЗависимыеОбъектыРемонта КАК ЗависимыеОбъектыРемонта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗависимыеПодчиненныеОбъектыРемонта.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта,
	|	МАКСИМУМ(ЗависимыеПодчиненныеОбъектыРемонта.Зависимый) КАК Зависимый
	|ПОМЕСТИТЬ ОбъектыЗависимые
	|ИЗ
	|	ЗависимыеПодчиненныеОбъектыРемонта КАК ЗависимыеПодчиненныеОбъектыРемонта
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗависимыеПодчиненныеОбъектыРемонта.СвязанныйОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗависимыеПодчиненныеОбъектыРемонта.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта,
	|	ЗависимыеПодчиненныеОбъектыРемонта.ВидРемонтаЗависимогоОбъекта КАК ВидРемонтаЗависимогоОбъекта,
	|	ЗависимыеПодчиненныеОбъектыРемонта.Зависимый КАК Зависимый,
	|	ВЫБОР
	|		КОГДА ОбъектыЗависимые.Зависимый
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подчиненный,
	|	ЛОЖЬ КАК Основной
	|ПОМЕСТИТЬ ВсеОбъектыРемонтаДляПолученияРемонтов
	|ИЗ
	|	ЗависимыеПодчиненныеОбъектыРемонта КАК ЗависимыеПодчиненныеОбъектыРемонта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыЗависимые КАК ОбъектыЗависимые
	|		ПО ЗависимыеПодчиненныеОбъектыРемонта.СвязанныйОбъектРемонта = ОбъектыЗависимые.СвязанныйОбъектРемонта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ОсновнойОбъектРемонта,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА
	|ГДЕ
	|	&ОсновноеОборудование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СвязанныйОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта КАК ID,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.ВидРемонта КАК ВидРемонта,
	|	торо_ЗаявкиПоРемонтамСрезПоследних.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ РемонтыЗаявокБезОтмененных
	|ИЗ
	|	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
	|			,
	|			ОбъектРемонта В
	|				(ВЫБРАТЬ
	|					ВсеОбъектыРемонтаДляПолученияРемонтов.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта
	|				ИЗ
	|					ВсеОбъектыРемонтаДляПолученияРемонтов КАК ВсеОбъектыРемонтаДляПолученияРемонтов)
	|			И НЕ IDРемонта = &IDОсновногоРемонта) КАК торо_ЗаявкиПоРемонтамСрезПоследних
	|ГДЕ
	|	НЕ торо_ЗаявкиПоРемонтамСрезПоследних.Отменен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID КАК ID,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК Регистратор,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.СпособВыполнения КАК СпособВыполнения,
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ ПлановыеРемонты
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	|			,
	|			(ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.торо_ПланГрафикРемонта)
	|				ИЛИ ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.торо_ЗакрытиеЗаявокИРемонтов))
	|				И ОбъектРемонтныхРабот В
	|					(ВЫБРАТЬ
	|						ВсеОбъектыРемонтаДляПолученияРемонтов.СвязанныйОбъектРемонта КАК СвязанныйОбъектРемонта
	|					ИЗ
	|						ВсеОбъектыРемонтаДляПолученияРемонтов КАК ВсеОбъектыРемонтаДляПолученияРемонтов)
	|				И НЕ ID = &IDОсновногоРемонта) КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	|ГДЕ
	|	НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен
	|	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеРемонты.ID КАК ID,
	|	ПлановыеРемонты.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	ПлановыеРемонты.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	ПлановыеРемонты.Регистратор КАК Регистратор,
	|	ПлановыеРемонты.СпособВыполнения КАК СпособВыполнения,
	|	ПлановыеРемонты.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ ВсеРемонтыПоУсловиям
	|ИЗ
	|	ПлановыеРемонты КАК ПлановыеРемонты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РемонтыЗаявокБезОтмененных КАК РемонтыЗаявокБезОтмененных
	|		ПО ПлановыеРемонты.ID = РемонтыЗаявокБезОтмененных.ID
	|ГДЕ
	|	РемонтыЗаявокБезОтмененных.ID ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РемонтыЗаявокБезОтмененных.ID,
	|	РемонтыЗаявокБезОтмененных.ОбъектРемонта,
	|	РемонтыЗаявокБезОтмененных.ВидРемонта,
	|	РемонтыЗаявокБезОтмененных.Регистратор,
	|	NULL,
	|	NULL
	|ИЗ
	|	РемонтыЗаявокБезОтмененных КАК РемонтыЗаявокБезОтмененных
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного,
	|	торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого КАК IDЗависимого
	|ПОМЕСТИТЬ ВсеВключенныеВОстановочные
	|ИЗ
	|	РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(
	|			,
	|			(IDЗависимого В
	|					(ВЫБРАТЬ
	|						ВсеРемонтыПоУсловиям.ID КАК ID
	|					ИЗ
	|						ВсеРемонтыПоУсловиям КАК ВсеРемонтыПоУсловиям)
	|				ИЛИ IDОсновного В
	|					(ВЫБРАТЬ
	|						ВсеРемонтыПоУсловиям.ID КАК ID
	|					ИЗ
	|						ВсеРемонтыПоУсловиям КАК ВсеРемонтыПоУсловиям))
	|				И НЕ Регистратор = &Регистратор) КАК торо_ОстановочныеРемонтыСрезПоследних
	|ГДЕ
	|	НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDОсновного,
	|	IDЗависимого
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеРемонтыПоУсловиям.ID КАК ID,
	|	ВсеРемонтыПоУсловиям.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	ВсеРемонтыПоУсловиям.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачалаРемонтныхРабот,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания КАК ДатаОкончанияРемонтныхРабот,
	|	ВсеРемонтыПоУсловиям.Регистратор КАК Регистратор,
	|	ВсеРемонтыПоУсловиям.СпособВыполнения КАК СпособВыполнения,
	|	ВсеРемонтыПоУсловиям.Исполнитель КАК Исполнитель,
	|	ЕСТЬNULL(торо_ВыявленныеДефекты.КритичностьДефекта, ЗНАЧЕНИЕ(Справочник.торо_КритичностьДефекта.ПустаяСсылка)) КАК КритичностьДефекта
	|ПОМЕСТИТЬ ИтоговаяТаблицаДоОтборовПоЗависимымИДатам
	|ИЗ
	|	ВсеРемонтыПоУсловиям КАК ВсеРемонтыПоУсловиям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|		ПО ВсеРемонтыПоУсловиям.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО ВсеРемонтыПоУсловиям.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеВключенныеВОстановочные КАК ВсеВключенныеВОстановочные
	|		ПО (ВсеРемонтыПоУсловиям.ID = ВсеВключенныеВОстановочные.IDОсновного
	|				ИЛИ ВсеРемонтыПоУсловиям.ID = ВсеВключенныеВОстановочные.IDЗависимого)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
	|		ПО ВсеРемонтыПоУсловиям.ID = торо_ВыявленныеДефекты.ID
	|ГДЕ
	|	ВсеВключенныеВОстановочные.IDОсновного ЕСТЬ NULL
	|	И ВсеВключенныеВОстановочные.IDЗависимого ЕСТЬ NULL
	|	И (торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала <= &ОтборДатаОкончания
	|			ИЛИ &ОтборДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|	И торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания >= &ОтборДатаНачала
	|	И НЕ торо_ОбщиеДанныеПоРемонтам.Отменен
	|	И НЕ торо_ОбщиеДанныеПоРемонтам.Завершен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ID КАК ID,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ДатаНачалаРемонтныхРабот КАК ДатаНачала,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ДатаОкончанияРемонтныхРабот КАК ДатаОкончания,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.Регистратор КАК ДокументОснование,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.СпособВыполнения КАК СпособВыполнения,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.Исполнитель КАК Исполнитель,
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.КритичностьДефекта КАК КритичностьДефекта,
	|	ВсеОбъектыРемонтаДляПолученияРемонтов.Зависимый КАК Зависимый,
	|	ВсеОбъектыРемонтаДляПолученияРемонтов.Подчиненный КАК Подчиненный,
	|	ВсеОбъектыРемонтаДляПолученияРемонтов.Основной КАК О
	|ИЗ
	|	ИтоговаяТаблицаДоОтборовПоЗависимымИДатам КАК ИтоговаяТаблицаДоОтборовПоЗависимымИДатам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеОбъектыРемонтаДляПолученияРемонтов КАК ВсеОбъектыРемонтаДляПолученияРемонтов
	|		ПО ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ОбъектРемонтныхРабот = ВсеОбъектыРемонтаДляПолученияРемонтов.СвязанныйОбъектРемонта
	|			И (НЕ ВсеОбъектыРемонтаДляПолученияРемонтов.Зависимый
	|				ИЛИ (НЕ &ОтборПоВидуРемонтаДляЗависимых
	|					ИЛИ ВсеОбъектыРемонтаДляПолученияРемонтов.Зависимый
	|						И (ИтоговаяТаблицаДоОтборовПоЗависимымИДатам.ВидРемонтныхРабот = ВсеОбъектыРемонтаДляПолученияРемонтов.ВидРемонтаЗависимогоОбъекта
	|							ИЛИ ВсеОбъектыРемонтаДляПолученияРемонтов.ВидРемонтаЗависимогоОбъекта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка))))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачала,
	|	ДатаОкончания";
	# КонецОбласти
	
	Запрос.УстановитьПараметр("IDОсновногоРемонта", IDОсновногоРемонта);
	
	МассивПодчиненных = Новый Массив;
	ЗначениеПодчиненные = СписокВыбранныхВидовОборудования.НайтиПоЗначению("ПодчиненноеОборудование");
	
	Если НЕ ЗначениеПодчиненные = Неопределено 
		И ЗначениеПодчиненные.Пометка Тогда
		
		ИерархияДляПолученияПодчиненных = ТекСтруктураИерархии;
		
		Если Не ЗначениеЗаполнено(ИерархияДляПолученияПодчиненных) Тогда
			ИерархияДляПолученияПодчиненных = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
		КонецЕсли; 
		
		МассивПодчиненных = торо_РаботаСИерархией20.ПолучитьМассивПодчиненныхОбъектов(ОбъектРемонта, ИерархияДляПолученияПодчиненных, Объект.Дата);
		
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("МассивПодчиненных", МассивПодчиненных);
	Запрос.УстановитьПараметр("ОтборПоВидуРемонтаДляЗависимых", ИСТИНА);
	Запрос.УстановитьПараметр("ВидРемонта", ВидРемонта);
	Запрос.УстановитьПараметр("ОсновнойОбъектРемонта", ОбъектРемонта);
	Запрос.УстановитьПараметр("Регистратор", ДокументИсточник);
	
	Запрос.УстановитьПараметр("ОтборДатаНачала", ОтборДатаНачала);
	Запрос.УстановитьПараметр("ОтборДатаОкончания", ОтборДатаОкончания);
	
	Для каждого ЭлементСписка Из СписокВыбранныхВидовОборудования Цикл
		Запрос.УстановитьПараметр(ЭлементСписка.Значение, ЭлементСписка.Пометка);
	КонецЦикла; 	
	
	РезультатЗапроса = Запрос.Выполнить();
	Ремонты.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

// Оповещение о закрытии, вызывается при выполнении команды "Настройка иерархии".
&НаКлиенте
Процедура НастройкаИерархииЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекСтруктураИерархии = ВыбранноеЗначение;
		ОбновитьРемонтыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти