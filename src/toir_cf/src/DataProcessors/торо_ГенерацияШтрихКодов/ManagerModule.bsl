#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция СгенерироватьШтрихкод(ТипШК, ШтрихКод) Экспорт 
	ПоследнийШК = Макс(ПолучитьПоследнийШтрихкод(ТипШК), ШтрихКод);
	Если ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN8 Тогда			// EAN8
		ШтрихКод = EAN8_13(ПоследнийШК, 8);
	ИначеЕсли ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN13 Тогда 		// EAN13
		ШтрихКод = EAN8_13(ПоследнийШК, 13);
	ИначеЕсли ТипШК = Перечисления.торо_ТипыШтрихКодов.Code128 Тогда 	// CODE 128 
		ШтрихКод = Code128(ПоследнийШК);
	КонецЕсли; 
	Возврат ШтрихКод;
КонецФункции

Функция СгенерироватьШтрихкодыМассово(ТипШК, КоличествоШК, ПоследнийШК = Неопределено) Экспорт  
	РезультатГенерации = Новый Массив;
	Если ПоследнийШК = Неопределено Тогда 
		ПоследнийШК = ПолучитьПоследнийШтрихкод(ТипШК);
	Иначе
		ПоследнийЗаписанныйШК = ПолучитьПоследнийШтрихкод(ТипШК);
		ПоследнийШК = Макс(ПоследнийЗаписанныйШК, ПоследнийШК);
	КонецЕсли;
	
	Если ТипШК = Перечисления.торо_ТипыШтрихКодов.Code128 Тогда
		
		Если ПоследнийШК <> "" Тогда 
			ШтрихКодЧислом = ПреобразоватьCode128ВДесятичноеЧисло(ПоследнийШК);
		Иначе
			ШтрихКодЧислом = 0;
		КонецЕсли;
		
		СчетчикГенерации = 0;
		Пока СчетчикГенерации <> КоличествоШК Цикл 
			ШтрихКодЧислом = ШтрихКодЧислом + 1;
			НовыйШтрихКод = ПреобразоватьДесятичноеЧислоВCode128(ШтрихКодЧислом);
			РезультатГенерации.Добавить(НовыйШтрихКод); 
			СчетчикГенерации = СчетчикГенерации + 1;
		КонецЦикла;
		
	ИначеЕсли ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN13 ИЛИ ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN8 Тогда 
		ДлинаШК = ?(ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN8, 8, 13);
		СчетчикГенерации = 0;  
		Если ПоследнийШК = "" Тогда 
			КодШК = 0;
		Иначе
			Если ДлинаШК = 13 Тогда
				// Убираем лидирующий разряд, равный 2
				КодШКСтрокой = ПолучитьКодШКИзСтроки(Прав(ПоследнийШК, ДлинаШК - 1), ДлинаШК - 1, Истина);
			Иначе
				КодШКСтрокой = ПолучитьКодШКИзСтроки(ПоследнийШК, ДлинаШК, Истина);
			КонецЕсли;
			КодШК = Число(КодШКСтрокой); 
		КонецЕсли;
		Пока СчетчикГенерации <> КоличествоШК Цикл 
			КодШК = КодШК + 1;
			Если СтрДлина(Строка(Формат(КодШК, "ЧГ="))) = ДлинаШК Тогда
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Все штрихкоды выбранного типа заняты.'"));
				Возврат РезультатГенерации;
			КонецЕсли;
			НовыйКодШКСтрокой = ?(ДлинаШК = 13, Формат(КодШК, "ЧЦ=11; ЧВН=; ЧГ=; ЧФ=2Ч"), Формат(КодШК, "ЧЦ=7; ЧВН=; ЧГ="));
			НовыйКодШКСтрокой = НовыйКодШКСтрокой + КонтрольныйСимволEAN(НовыйКодШКСтрокой, ДлинаШК);
			РезультатГенерации.Добавить(НовыйКодШКСтрокой);
			СчетчикГенерации = СчетчикГенерации + 1;
		КонецЦикла;
	КонецЕсли;
	Возврат РезультатГенерации;
КонецФункции

Процедура ОтрисоватьШтрихКод(ШтрихКод, ТипШК, ОбластьВывода) Экспорт
	
	Если ОбластьВывода = Неопределено Тогда 
		Макет = ПолучитьМакет("МакетВыводаШтрихКода");
		ОбластьВывода = Макет.ПолучитьОбласть("Строка|Колонка");
	КонецЕсли;

	Рисунок = ОбластьВывода.Рисунки.ШтрихКод;
	
	Эталон = ПолучитьМакет("МакетДляОпределенияКоэффициентовЕдиницИзмерения");
	
	КоличествоМиллиметровВПикселеВысота = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	КоличествоМиллиметровВПикселеШирина = Эталон.Рисунки.Квадрат100Пикселей.Ширина / 100;
	ШиринаШтрихкода = Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселеШирина);
	ВысотаШтрихкода = Окр(Рисунок.Высота / КоличествоМиллиметровВПикселеВысота);
	ШтрихКодРезультат = ПолучитьИзображениеШтрихкода(ШиринаШтрихкода, ВысотаШтрихкода, ШтрихКод, ТипШК);
	
	Рисунок.Картинка = ШтрихКодРезультат.Картинка;

КонецПроцедуры

Функция ПолучитьПоследнийШтрихкод(ТипШК, ИсключенныйШК = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(МАКСИМУМ(торо_ОбъектыРемонта.ШтрихКод), """") КАК ШтрихКод
	               |ИЗ
	               |	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	               |ГДЕ
	               |	торо_ОбъектыРемонта.ТипШтрихКода = &ТипШтрихКода
				   |	И &ДопУсловие";
	Запрос.УстановитьПараметр("ТипШтрихКода", ТипШК);
	Если ИсключенныйШК = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДопУсловие", "Истина"); 
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДопУсловие", "торо_ОбъектыРемонта.ШтрихКод <> &ШК");
		Запрос.УстановитьПараметр("ШК", ИсключенныйШК);
	КонецЕсли;
	РезЗапроса = Запрос.Выполнить();
	Если Не РезЗапроса.Пустой() Тогда
		Выборка = РезЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ШтрихКод;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция EAN8_13(ПоследнийШК, Тип)
	Если ПоследнийШК = "" Тогда
		ШтрихКод = ?(Тип = 13, "200000000001", "0000001");
		Возврат Штрихкод + КонтрольныйСимволEAN(ШтрихКод, Тип);
	Иначе
		Если Тип = 13 Тогда
			// Убираем лидирующий разряд, равный 2
			КодШКСтрокой = ПолучитьКодШКИзСтроки(Прав(ПоследнийШК, Тип - 1), Тип - 1, Истина);
		Иначе
			КодШКСтрокой = ПолучитьКодШКИзСтроки(ПоследнийШК, Тип, Истина);
		КонецЕсли;
		КодШК = Число(КодШКСтрокой) + 1; 
		Если СтрДлина(Строка(Формат(КодШК, "ЧГ="))) = Тип Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Все штрихкоды выбранного типа заняты.'"));
			Возврат "";
		КонецЕсли;
		НовыйКодШКСтрокой = ?(Тип = 13, Формат(КодШК, "ЧЦ=11; ЧВН=; ЧГ=; ЧФ=2Ч"), Формат(КодШК, "ЧЦ=7; ЧВН=; ЧГ="));
		Возврат НовыйКодШКСтрокой + КонтрольныйСимволEAN(НовыйКодШКСтрокой, Тип);
	КонецЕсли;
КонецФункции

Функция Code128(ПоследнийШК)
	Если ПоследнийШК <> "" Тогда 
		ШтрихКодЧислом = ПреобразоватьCode128ВДесятичноеЧисло(ПоследнийШК);
	Иначе
		ШтрихКодЧислом = 0;
	КонецЕсли;
	Возврат ПреобразоватьДесятичноеЧислоВCode128(ШтрихКодЧислом + 1);
КонецФункции

// Функция вычисляет контрольный символ кода EAN.
//
// Параметры:
//  Штрихкод - Строка - штрихкод (без контрольной цифры).
//  Тип      - Число - тип штрихкода (13 для EAN13, 8 для EAN8).
//
// Возвращаемое значение:
//  Строка - Контрольный символ штрихкода.
//
Функция КонтрольныйСимволEAN(ШтрихКод, Тип) 

	Четн   = 0;
	Нечетн = 0;

	КоличествоИтераций = ?(Тип = 13, 6, 4);

	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) И (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;

	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;

	КонтЦифра = 10 - (Четн + Нечетн) % 10;

	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));

КонецФункции

Функция ПолучитьКодШКИзСтроки(ШК, ДлинаШК, ЕстьКонтрольнаяСумма)

	Если ЕстьКонтрольнаяСумма Тогда 
		ШК = Лев(ШК, ДлинаШК - 1);
	КонецЕсли;
	
	КодШКСтрокой = "";
	Сч = 0;  
	ШаблонСравнения = "";
	Пока КодШКСтрокой = "" Цикл 
		Сч = Сч + 1; 
		ШаблонСравнения = ШаблонСравнения + "0";
		ПустыеСимволы = Лев(ШК, Сч);
		Если ПустыеСимволы <> ШаблонСравнения Тогда
			КодШКСтрокой = Прав(ШК, ДлинаШК - Сч);
		КонецЕсли;
	КонецЦикла;
	
	Возврат КодШКСтрокой;
КонецФункции

Функция ПреобразоватьCode128ВДесятичноеЧисло(Знач Значение)
	
	ДлинаСтроки = СтрДлина(Значение);
	
	Результат = 0;
	АлфавитКода = АлфавитCode128();
	ДлинаАлфавита = СтрДлина(АлфавитКода);
	
	Для НомерСимвола = 1 По ДлинаСтроки Цикл
		Результат = Результат * ДлинаАлфавита + Найти(АлфавитКода, Сред(Значение, НомерСимвола, 1)) - 1;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции 

Функция ПреобразоватьДесятичноеЧислоВCode128(Знач ДесятичноеЧисло, ДлинаЧисловойЧастиШК = 10) 
	
	Результат = "";
	
	СтрокаДополнения = "0";
	Для К = 1 По ДлинаЧисловойЧастиШК Цикл
	
		СтрокаДополнения = СтрокаДополнения + "0";
	
	КонецЦикла;
	
	АлфавитКода = АлфавитCode128();
	ДлинаАлфавита = СтрДлина(АлфавитКода);
	Пока ДесятичноеЧисло > 0 цикл
		ОстатокОтДеления = ДесятичноеЧисло % ДлинаАлфавита;
		ДесятичноеЧисло  = (ДесятичноеЧисло - ОстатокОтДеления) / ДлинаАлфавита;
		Результат        = Сред(АлфавитКода, ОстатокОтДеления + 1, 1) + Результат;
	КонецЦикла;
	
	
	Результат = Прав(СтрокаДополнения + Результат, ДлинаЧисловойЧастиШК);
		
	Возврат Результат;
		
КонецФункции 

Функция АлфавитCode128()
	Возврат "0123456789abcdefghijklmnopqrstuvwxyz";
КонецФункции

Функция ПолучитьКодТипаШК(ТипШК)
	Если ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN8 Тогда 
		Возврат 0;
	ИначеЕсли ТипШК = Перечисления.торо_ТипыШтрихКодов.EAN13 Тогда 
		Возврат 1;
	ИначеЕсли ТипШК = Перечисления.торо_ТипыШтрихКодов.Code128 Тогда   
		Возврат 4;
	Иначе
		Возврат 99;
	КонецЕсли;	
КонецФункции

Функция ПолучитьИзображениеШтрихкода(ШиринаШтрихкода, ВысотаШтрихкода, ЗначШтрихкод, ЗначТипШтрихкода)
		
	ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
	ПараметрыШтрихкода.Ширина = ШиринаШтрихкода;
	ПараметрыШтрихкода.Высота = ВысотаШтрихкода;
	ПараметрыШтрихкода.ТипКода = ПолучитьКодТипаШК(ЗначТипШтрихкода);
	ПараметрыШтрихкода.Штрихкод = ЗначШтрихкод;
	ПараметрыШтрихкода.ПрозрачныйФон = Истина;
	ПараметрыШтрихкода.ОтображатьТекст = Истина;
	ПараметрыШтрихкода.Масштабировать = Истина;
	ПараметрыШтрихкода.СохранятьПропорции = Истина;
	ПараметрыШтрихкода.ВертикальноеВыравнивание  = 2; 
	ПараметрыШтрихкода.ТипВходныхДанных = 0;

	РезультатШтрихкод = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	Если НЕ РезультатШтрихкод.Результат Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Ошибка генерации'"));
	КонецЕсли;
	
	Возврат РезультатШтрихкод;
	
КонецФункции

#КонецОбласти

#КонецЕсли