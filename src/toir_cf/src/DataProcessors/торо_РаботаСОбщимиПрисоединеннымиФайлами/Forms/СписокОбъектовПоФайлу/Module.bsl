#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы) Тогда
		ТекстСообщения = НСтр("ru = 'Нет прав для доступа к обработке!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	ИначеЕсли Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы) Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ПредопределяемыеТипы = Метаданные.ОпределяемыеТипы.ВладелецПрисоединенныхФайлов.Тип.Типы();
	ПредопределяемыеТипы.Удалить(25);
	ПредопределяемыеТипы.Удалить(13);
	ПредопределяемыеТипы.Удалить(6);
	
	СоставОпределяемогоТипа.ЗагрузитьЗначения(ПредопределяемыеТипы);
	Элементы.ДеревоОбъектовОбъект.ОграничениеТипа = Новый ОписаниеТипов(ПредопределяемыеТипы);

	Если Параметры.Свойство("Файл") И ЗначениеЗаполнено(Параметры.Файл) Тогда
		Файл = Параметры.Файл;
	    ЗаполнитьДерево();
		
		Элементы.Файл.КнопкаВыбора = Ложь;
		Элементы.Файл.КнопкаВыпадающегоСписка = Ложь;
		Элементы.Файл.РедактированиеТекста = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Объект") Тогда
		Для каждого ВерхнийУровень Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
			Если Не ТипЗнч(Параметры.Объект) = ВерхнийУровень.Объект Тогда
			    Продолжить;
			КонецЕсли;
			
			НайденнаяСтрока = Неопределено;
		    Для каждого НижнийУровень Из ВерхнийУровень.ПолучитьЭлементы() Цикл
			    Если Не Параметры.Объект = НижнийУровень.Объект Тогда
				    Продолжить;
				КонецЕсли;
				
				НайденнаяСтрока = НижнийУровень;
				Прервать;
			КонецЦикла;
		КонецЦикла;
		
		Если Не НайденнаяСтрока = Неопределено Тогда
		    Элементы.ДеревоОбъектов.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ДеревоОбъектов.ПолучитьЭлементы().Количество() > 0 Тогда
	    Для каждого ВерхнийУровень Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
		    Элементы.ДеревоОбъектов.Развернуть(ВерхнийУровень.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЕсли;
	
	УстановитьВнешнийВидФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписьОбщихПрисоединенныхФайлов" Тогда
	    ФайлПриИзменении(Элементы.Файл);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Или Не Модифицированность Тогда
	    Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемОбработчикОповещения", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Данные были изменены! При закрытии формы все данные будут утеряны. Записать изменения перед закрытием?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Нет);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФайлПриИзменении(Элемент)
	ДеревоОбъектов.ПолучитьЭлементы().Очистить();
	ЗаполнитьДерево();
	
	Для каждого ВерхнийУровень Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
	    Элементы.ДеревоОбъектов.Развернуть(ВерхнийУровень.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъект(Команда)
	Если Не ЗначениеЗаполнено(Файл) Тогда
	    Возврат;
	КонецЕсли;
	СоставОпределяемогоТипа.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДобавитьОбъектПослеВыбораТипа", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъектУказанногоТипа(Команда)
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или Не ЗначениеЗаполнено(Файл) Тогда
	    Возврат;
	КонецЕсли;
	
	ТипОбъекта = ?(ТипЗнч(ТекущиеДанные.Объект) = Тип("Тип"), ТекущиеДанные.Объект, ТипЗнч(ТекущиеДанные.Объект));
	
	ИмяФормыПоТипу = ПолучитьИмяФормыПоТипу(ТипОбъекта);
	ОткрытьФорму(ИмяФормыПоТипу,, Элементы.ДеревоОбъектов, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьНаСервере();
	Оповестить("ЗаписьОбщихПрисоединенныхФайлов");
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
	Оповестить("ЗаписьОбщихПрисоединенныхФайлов");
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловПоОбъекту(Команда)
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Объект, Файл", ТекущиеДанные.Объект, Файл);
	ОткрытьФорму("Обработка.торо_РаботаСОбщимиПрисоединеннымиФайлами.Форма.СписокФайловПоОбъекту", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоОбъектов

&НаКлиенте
Процедура ДеревоОбъектовПриАктивизацииСтроки(Элемент)
	УстановитьВнешнийВидФормы();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	
	ПредыдущееЗначениеВДереве = ТекущиеДанные.Объект;
	МассивТипов = Новый Массив();
	МассивТипов.Добавить(ТипЗнч(ТекущиеДанные.Объект));
	Элементы.ДеревоОбъектовОбъект.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Объект) Тогда
		ТекстСообщения = НСтр("ru = 'Объект должен быть заполнен!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Или Не ЗначениеЗаполнено(Файл) Тогда
	    Возврат;
	КонецЕсли;
	
	СтрокаДереваДляДобавления = Неопределено;
	УжеДобавлен = Ложь;
	
	Для каждого ВерхнийУровень Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
		Если Не ВерхнийУровень.Объект = ТипЗнч(ВыбранноеЗначение) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДереваДляДобавления = ВерхнийУровень;
		
		Для каждого НижнийУровень Из ВерхнийУровень.ПолучитьЭлементы() Цикл
		    Если НижнийУровень.Объект = ВыбранноеЗначение Тогда
			    УжеДобавлен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Прервать;
	КонецЦикла;
	
	Если УжеДобавлен Тогда
	    ШаблонСообщения = НСтр("ru = 'Объект <%1> уже был добавлен ранее!'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыбранноеЗначение);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	Если СтрокаДереваДляДобавления = Неопределено Тогда
	    СтрокаДереваДляДобавления = ДеревоОбъектов.ПолучитьЭлементы().Добавить();
		СтрокаДереваДляДобавления.ВерхнийУровень = Истина;
		СтрокаДереваДляДобавления.Объект = ТипЗнч(ВыбранноеЗначение);
		СтрокаДереваДляДобавления.ИндексКартинки = ПолучитьИндексКартинки(ТипЗнч(ВыбранноеЗначение));
	КонецЕсли;
	
	Элементы.ДеревоОбъектов.Развернуть(СтрокаДереваДляДобавления.ПолучитьИдентификатор());
	
	НоваяСтрокаОбъекта = СтрокаДереваДляДобавления.ПолучитьЭлементы().Добавить();
	НоваяСтрокаОбъекта.ВерхнийУровень = Ложь;
	НоваяСтрокаОбъекта.Объект = ВыбранноеЗначение;
	НоваяСтрокаОбъекта.ИндексКартинки = ПолучитьИндексКартинки(ВыбранноеЗначение);
	
	Элементы.ДеревоОбъектов.ТекущаяСтрока = НоваяСтрокаОбъекта.ПолучитьИдентификатор();
	
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	УдалитьСтрокуДерева();
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗакрытиемОбработчикОповещения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьНаСервере();
		Закрыть();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВнешнийВидФормы()
	Элементы.ДеревоОбъектовСписокФайловПоОбъекту.Доступность = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ВерхнийУровень Тогда
		Элементы.ДеревоОбъектовСписокФайловПоОбъекту.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъектПослеВыбораТипа(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	Если ВыбранноеЗначение = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	
	ИмяФормыПоТипу = ПолучитьИмяФормыПоТипу(ВыбранноеЗначение.Значение);
	ОткрытьФорму(ИмяФормыПоТипу,, Элементы.ДеревоОбъектов, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФормыПоТипу(Тип)
	ИмяОбъектаМетаданных = Метаданные.НайтиПоТипу(Тип).ПолноеИмя();
	ИмяФормыШаблон = НСтр("ru = '%1.ФормаВыбора'");
	ИмяФормы = СтрШаблон(ИмяФормыШаблон, ИмяОбъектаМетаданных);
	
	Возврат ИмяФормы;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИндексКартинки(Объект)
	ИмяФормыДляОбъекта = ПолучитьИмяФормыПоТипу(?(ТипЗнч(Объект) = Тип("Тип"), Объект, ТипЗнч(Объект)));
	ТипОбъектаМетаданных = Лев(ИмяФормыДляОбъекта, СтрНайти(ИмяФормыДляОбъекта, ".") - 1);
	
	ИндексКартинки = -1;
	
	Если ТипЗнч(Объект) = Тип("Тип") Тогда
		Если ТипОбъектаМетаданных = "Документ" Тогда
		    ИндексКартинки = 0;
		ИначеЕсли ТипОбъектаМетаданных = "Справочник" Тогда
		    ИндексКартинки = 1;
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "Документ" Тогда
	    Если Объект.Проведен Тогда
		    ИндексКартинки = 6;
		ИначеЕсли Объект.ПометкаУдаления Тогда
		    ИндексКартинки = 5;
		Иначе
		    ИндексКартинки = 4;
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "Справочник" Тогда
	    Если Объект.ПометкаУдаления Тогда
		    ИндексКартинки = 3;
		Иначе
		    ИндексКартинки = 2;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ИндексКартинки;
КонецФункции

&НаСервере
Процедура ЗаполнитьДерево()
	СписокОбъектов = ПолучитьСписокОбъектовПоФайлу(Файл);
	
	ОтсортированныйМассивОбъектов = СортироватьЭлементыДерева(СписокОбъектов);
	
	Для Каждого ТипОбъекта Из ОтсортированныйМассивОбъектов Цикл
	    ПервыйУровень = ДеревоОбъектов.ПолучитьЭлементы().Добавить();
		ПервыйУровень.Объект = ТипОбъекта.Ключ;
		ПервыйУровень.ВерхнийУровень = Истина;
		
		ИмяФормыДляОбъекта = ПолучитьИмяФормыПоТипу(ТипОбъекта.Ключ);
		ТипОбъектаМетаданных = Лев(ИмяФормыДляОбъекта, СтрНайти(ИмяФормыДляОбъекта, ".") - 1);
		
		Если ТипОбъектаМетаданных = "Документ" Тогда
		    ПервыйУровень.ИндексКартинки = 0;
		ИначеЕсли ТипОбъектаМетаданных = "Справочник" Тогда
		    ПервыйУровень.ИндексКартинки = 1;
		КонецЕсли;
		
		Для каждого ВладелецФайла Из ТипОбъекта.Значение Цикл
		    ВторойУровень = ПервыйУровень.ПолучитьЭлементы().Добавить();
			ВторойУровень.Объект = ВладелецФайла;
			ВторойУровень.ВерхнийУровень = Ложь;
			
			Если ТипОбъектаМетаданных = "Документ" Тогда
			    Если ВладелецФайла.Проведен Тогда
				    ВторойУровень.ИндексКартинки = 6;
				ИначеЕсли ВладелецФайла.ПометкаУдаления Тогда
				    ВторойУровень.ИндексКартинки = 5;
				Иначе
				    ВторойУровень.ИндексКартинки = 4;
				КонецЕсли;
			ИначеЕсли ТипОбъектаМетаданных = "Справочник" Тогда
			    Если ВладелецФайла.ПометкаУдаления Тогда
				    ВторойУровень.ИндексКартинки = 3;
				Иначе
				    ВторойУровень.ИндексКартинки = 2;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СортироватьЭлементыДерева(СписокОбъектов)
	СписокОбъектовДляИзменения = СписокОбъектов;
	
	СписокКлючей = Новый СписокЗначений;
	МассивКлючей = Новый Массив;
	Для Каждого ТипОбъекта Из СписокОбъектовДляИзменения Цикл
		МассивКлючей.Добавить(ТипОбъекта.Ключ);
	КонецЦикла;
	СписокКлючей.ЗагрузитьЗначения(МассивКлючей);
	СписокКлючей.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	
	МассивОР = Новый Массив;
	МассивСправочников = Новый Массив;
	МассивДокументов = Новый Массив;
	МассивЗаданий = Новый Массив;
	МассивВозврата = Новый Массив;
	
	Для Каждого ТипОбъекта Из СписокОбъектовДляИзменения Цикл
		Если Строка(ТипОбъекта.Ключ) = "Объект ремонта" Или Строка(ТипОбъекта.Ключ) = "Типовой объект ремонта" Тогда
			МассивОР.Добавить(ТипОбъекта);
			СписокОбъектовДляИзменения.Удалить(ТипОбъекта.Ключ);
			СписокКлючей.Удалить(СписокКлючей.НайтиПоЗначению(ТипОбъекта.Ключ));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Ключ Из СписокКлючей Цикл
		Для Каждого ТипОбъекта Из СписокОбъектовДляИзменения Цикл
			ИмяФормыДляОбъекта = ПолучитьИмяФормыПоТипу(ТипОбъекта.Ключ);
			ТипОбъектаМетаданных = Лев(ИмяФормыДляОбъекта, СтрНайти(ИмяФормыДляОбъекта, ".") - 1);
			
			Если ТипОбъектаМетаданных = "Справочник" И Ключ.Значение = ТипОбъекта.Ключ Тогда
				МассивСправочников.Добавить(ТипОбъекта);
			ИначеЕсли ТипОбъектаМетаданных = "Документ" И Ключ.Значение = ТипОбъекта.Ключ Тогда
				 МассивДокументов.Добавить(ТипОбъекта); 
			ИначеЕсли ТипОбъектаМетаданных = "БизнесПроцесс" И Ключ.Значение = ТипОбъекта.Ключ Тогда
				 МассивЗаданий.Добавить(ТипОбъекта); 
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ДополнитьМассивВозврата(МассивВозврата, МассивОР);
	ДополнитьМассивВозврата(МассивВозврата, МассивСправочников);
	ДополнитьМассивВозврата(МассивВозврата, МассивДокументов);
	ДополнитьМассивВозврата(МассивВозврата, МассивЗаданий);
	
	Возврат МассивВозврата;
КонецФункции

&НаСервере
Процедура ДополнитьМассивВозврата(МассивВозврата, МассивДополнения)
	Для Каждого Значение Из МассивДополнения Цикл
		МассивВозврата.Добавить(Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокОбъектовПоФайлу(Файл)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
	               |ИЗ
	               |	РегистрСведений.торо_ОбщиеПрисоединенныеФайлы КАК торо_ОбщиеПрисоединенныеФайлы
	               |ГДЕ
	               |	торо_ОбщиеПрисоединенныеФайлы.Файл = &Файл";
	
	Запрос.УстановитьПараметр("Файл", Файл);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ПодготовленныеДанные = Новый Соответствие();
	
	Для каждого СтрокаТаблицы Из РезультатЗапроса Цикл
	    ТипОбъекта = ТипЗнч(СтрокаТаблицы.ВладелецФайла);
		Если Не ЗначениеЗаполнено(ПодготовленныеДанные[ТипОбъекта]) Тогда
		    ПодготовленныеДанные[ТипОбъекта] = Новый Массив();
		КонецЕсли;
		
		ПодготовленныеДанные[ТипОбъекта].Добавить(СтрокаТаблицы.ВладелецФайла);
	КонецЦикла;
	
	Возврат ПодготовленныеДанные;
КонецФункции

&НаКлиенте
Процедура УдалитьСтрокуДерева()
	ТекущиеДанные = Элементы.ДеревоОбъектов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("СтрокаДерева", ТекущиеДанные);
	
	Если ТипЗнч(ТекущиеДанные.Объект) = Тип("Тип") Тогда
		ТекстВопроса = НСтр("ru = 'При удалении данной строки также будут удалены все подчиненные объекты. Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуДереваПослеВопроса", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Возврат;
	КонецЕсли;
	
	УдалитьСтрокуДереваПослеВопроса(КодВозвратаДиалога.Да, ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуДереваПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	СтрокаДерева = ДополнительныеПараметры.СтрокаДерева;
	Если ТипЗнч(СтрокаДерева.Объект) = Тип("Тип") Тогда
	    ДеревоОбъектов.ПолучитьЭлементы().Удалить(СтрокаДерева);
		Возврат;
	КонецЕсли;
	
	Родитель = СтрокаДерева.ПолучитьРодителя();
	ДеревоОбъектов.ПолучитьЭлементы()[ДеревоОбъектов.ПолучитьЭлементы().Индекс(Родитель)].ПолучитьЭлементы().Удалить(СтрокаДерева);
	Если Родитель.ПолучитьЭлементы().Количество() = 0 Тогда
	    ДеревоОбъектов.ПолучитьЭлементы().Удалить(Родитель);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	Если Не ЗначениеЗаполнено(Файл) Тогда
	    ТекстСообщения = НСтр("ru = 'Не выбран файл. Невозможно выполнить запись!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Файл.Установить(Файл);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Для каждого ВерхнийУровень Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
	    Для каждого НижнийУровень Из ВерхнийУровень.ПолучитьЭлементы() Цикл
		    НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Файл = Файл;
			НоваяЗапись.ВладелецФайла = НижнийУровень.Объект;
		КонецЦикла;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Модифицированность = Ложь;
КонецПроцедуры

#КонецОбласти