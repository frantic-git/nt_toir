#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы) Тогда
		ТекстСообщения = НСтр("ru = 'Нет прав для доступа к обработке!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	ИначеЕсли Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы) Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Объект") И ЗначениеЗаполнено(Параметры.Объект) Тогда
		ВыбранныйОбъект = Параметры.Объект;
		ЗаполнитьДерево();
		
		Элементы.ВыбранныйОбъект.КнопкаВыбора = Ложь;
		Элементы.ВыбранныйОбъект.КнопкаВыпадающегоСписка = Ложь;
		Элементы.ВыбранныйОбъект.РедактированиеТекста = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Файл") Тогда
		Для каждого ВерхнийУровень Из ДеревоФайлов.ПолучитьЭлементы() Цикл
			НайденнаяСтрока = Неопределено;
			Для каждого НижнийУровень Из ВерхнийУровень.ПолучитьЭлементы() Цикл
				Если Не Параметры.Файл = НижнийУровень.Файл Тогда
					Продолжить;
				КонецЕсли;
				
				НайденнаяСтрока = НижнийУровень;
				Прервать;
			КонецЦикла;
			
			Если Не НайденнаяСтрока = Неопределено Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не НайденнаяСтрока = Неопределено Тогда
			Элементы.ДеревоФайлов.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ДеревоФайлов.ПолучитьЭлементы().Количество() > 0 Тогда
		Для каждого ВерхнийУровень Из ДеревоФайлов.ПолучитьЭлементы() Цикл
			Элементы.ДеревоФайлов.Развернуть(ВерхнийУровень.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЕсли;
	
	УстановитьВнешнийВидФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписьОбщихПрисоединенныхФайлов" Тогда
		ВыбранныйОбъектПриИзменении(Элементы.ВыбранныйОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Или Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемОбработчикОповещения", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Данные были изменены! При закрытии формы все данные будут утеряны. Записать изменения перед закрытием?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Нет);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыбранныйОбъектПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(ВыбранныйОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДерево();
	
	Для каждого ВерхнийУровень Из ДеревоФайлов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоФайлов.Развернуть(ВерхнийУровень.ПолучитьИдентификатор());
	КонецЦикла;
	
	УстановитьВнешнийВидФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокОбъектовПоФайлу(Команда)
	ТекущиеДанные = Элементы.ДеревоФайлов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Объект, Файл", ПолучитьВладельцаФайла(ТекущиеДанные), ТекущиеДанные.Файл);
	ОткрытьФорму("Обработка.торо_РаботаСОбщимиПрисоединеннымиФайлами.Форма.СписокОбъектовПоФайлу", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрисоединенныеФайлы(Команда)
	ТекущиеДанные = Элементы.ДеревоФайлов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ВладелецФайла", ПолучитьВладельцаФайла(ТекущиеДанные));
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
	Оповестить("ЗаписьОбщихПрисоединенныхФайлов");
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьНаСервере();
	Оповестить("ЗаписьОбщихПрисоединенныхФайлов");
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоФайлов

&НаКлиенте
Процедура ДеревоФайловПриАктивизацииСтроки(Элемент)
	УстановитьВнешнийВидФормы();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоФайловПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	Если Не ЗначениеЗаполнено(ВыбранныйОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбора",, Элементы.ДеревоФайлов, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоФайловПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	
	Если Не Элементы.ДеревоФайловУдалить.Доступность Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ДеревоФайлов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("СтрокаДерева", ТекущиеДанные);
	
	Если ТекущиеДанные.ВерхнийУровень Тогда
		ТекстВопроса = НСтр("ru = 'При удалении данной строки также будут удалены все подчиненные файлы. Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуДереваПослеВопроса", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Возврат;
	КонецЕсли;
	
	УдалитьСтрокуДереваПослеВопроса(КодВозвратаДиалога.Да, ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоФайловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ДеревоФайлов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ВерхнийУровень Тогда
		Если ТекущиеДанные.Присоединенный Тогда
			РаботаСФайламиКлиент.ОткрытьФормуФайла(ТекущиеДанные.Файл);
		Иначе
			ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Файл);
			ОткрытьФорму("Справочник.Файлы.Форма.ФормаЭлемента", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоФайловОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УжеДобавлен = Ложь;
	
	Для каждого ВерхнийУровень Из ДеревоФайлов.ПолучитьЭлементы() Цикл
		Если Не ВерхнийУровень.Наименование = "Общие файлы" Тогда
			Продолжить;
		КонецЕсли;
		
		ГруппировкаОбщихФайловОбъекта = ВерхнийУровень;
		
		Для каждого НижнийУровень Из ВерхнийУровень.ПолучитьЭлементы() Цикл
			Если НижнийУровень.Файл = ВыбранноеЗначение Тогда
				УжеДобавлен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Прервать;
	КонецЦикла;
	
	Если УжеДобавлен Тогда
		ШаблонСообщения = НСтр("ru = 'Файл <%1> уже был добавлен ранее!'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыбранноеЗначение);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	Если ГруппировкаОбщихФайловОбъекта = Неопределено Тогда
		ГруппировкаОбщихФайловОбъекта = ДеревоФайлов.ПолучитьЭлементы().Добавить();
		ГруппировкаОбщихФайловОбъекта.Наименование = "Общие файлы";
		ГруппировкаОбщихФайловОбъекта.ИндексКартинки = 2;
		ГруппировкаОбщихФайловОбъекта.ВерхнийУровень = Истина;
		ГруппировкаОбщихФайловОбъекта.Присоединенный = Ложь;
	КонецЕсли;
	
	Элементы.ДеревоФайлов.Развернуть(ГруппировкаОбщихФайловОбъекта.ПолучитьИдентификатор());
	
	НоваяСтрокаФайла = ГруппировкаОбщихФайловОбъекта.ПолучитьЭлементы().Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрокаФайла, ЗаполнитьСтрокуОбщегоФайла(ВыбранноеЗначение));
	
	Элементы.ДеревоФайлов.ТекущаяСтрока = НоваяСтрокаФайла.ПолучитьИдентификатор();
	
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗакрытиемОбработчикОповещения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьНаСервере();
		Закрыть();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВнешнийВидФормы()
	Элементы.ДеревоФайловУдалить.Доступность = Ложь;
	Элементы.ДеревоФайловОткрытьПрисоединенныеФайлы.Доступность = Ложь;
	Элементы.ДеревоФайловОткрытьСписокОбъектовПоФайлу.Доступность = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоФайлов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.Присоединенный Тогда
		Если ТекущиеДанные.ВерхнийУровень Тогда
			Если ТекущиеДанные.Наименование = "Общие файлы" Тогда
				Элементы.ДеревоФайловУдалить.Доступность = Истина;
			ИначеЕсли СтрНайти(ТекущиеДанные.Наименование, "Типовой ОР") Тогда
				Элементы.ДеревоФайловОткрытьПрисоединенныеФайлы.Доступность = Истина;
			КонецЕсли;
		ИначеЕсли ТекущиеДанные.ТипФайла = "ОбъектОбщиеФайлы" Тогда
			Элементы.ДеревоФайловУдалить.Доступность = Истина;
			Элементы.ДеревоФайловОткрытьСписокОбъектовПоФайлу.Доступность = Истина;
		Иначе
			Элементы.ДеревоФайловОткрытьСписокОбъектовПоФайлу.Доступность = Истина
		КонецЕсли;
	Иначе
		Элементы.ДеревоФайловОткрытьПрисоединенныеФайлы.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево()
	ТиповойОР = Неопределено;
	Если ТипЗнч(ВыбранныйОбъект) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		ТиповойОР = ВыбранныйОбъект.ТиповойОР;
	КонецЕсли;
	
	СоответствиеФайлов = ПолучитьСписокФайловПоОбъекту(ВыбранныйОбъект);
	ДеревоФайлов.ПолучитьЭлементы().Очистить();
	
	Для каждого ГруппаФайлов Из СоответствиеФайлов Цикл
		НоваяГруппаФайлов = ДеревоФайлов.ПолучитьЭлементы().Добавить();
		НоваяГруппаФайлов.Наименование = ГруппаФайлов.Ключ;
		НоваяГруппаФайлов.ИндексКартинки = 2;
		НоваяГруппаФайлов.ВерхнийУровень = Истина;
		НоваяГруппаФайлов.Присоединенный = ?(ГруппаФайлов.Ключ = "Собственные файлы", Истина, Ложь);
		
		Для каждого Файл Из ГруппаФайлов.Значение Цикл
			НовыйФайл = НоваяГруппаФайлов.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовыйФайл, Файл);
			НовыйФайл.ВерхнийУровень = Ложь;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокФайловПоОбъекту(Объект)
	
	ТиповойОР = Неопределено;
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		ТиповойОР = Объект.ТиповойОР;
	КонецЕсли;
	
	ИмяСправочникаВладельца = Метаданные.НайтиПоТипу(ТипЗнч(Объект)).Имя;
	ИмяСправочника = "Справочник." + ИмяСправочникаВладельца + "ПрисоединенныеФайлы";
	Если Метаданные.Справочники.Найти(ИмяСправочникаВладельца + "ПрисоединенныеФайлы") = Неопределено Тогда
		ИмяСправочника = "Справочник.Файлы";
	КонецЕсли;
	
	ДатаУниверсальная = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("СекундДоМестногоВремени", МестноеВремя(ДатаУниверсальная, ЧасовойПоясСеанса()) - ДатаУниверсальная);
	Запрос.УстановитьПараметр("ТиповойОР", ТиповойОР);

	ЭтоДокумент = СоздатьВременныеТаблицыПолученияФайловДляДокумента(Запрос, Объект);
		
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ОбъектОбщиеФайлы"" КАК ТипФайла,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеПрисоединенныеФайлы.Файл.ПометкаУдаления = ИСТИНА
	|			ТОГДА ЕСТЬNULL(торо_ОбщиеПрисоединенныеФайлы.Файл.ИндексКартинки, 2) + 1
	|		ИНАЧЕ ЕСТЬNULL(торо_ОбщиеПрисоединенныеФайлы.Файл.ИндексКартинки, 2)
	|	КОНЕЦ КАК ИндексКартинки,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Размер КАК Размер,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Автор КАК Автор,
	|	ДОБАВИТЬКДАТЕ(торо_ОбщиеПрисоединенныеФайлы.Файл.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени) КАК ДатаИзменения,
	|	ЛОЖЬ КАК Присоединенный,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл КАК Файл,
	|   НЕОПРЕДЕЛЕНО КАК ОбъектРемонта
	|ИЗ
	|	РегистрСведений.торо_ОбщиеПрисоединенныеФайлы КАК торо_ОбщиеПрисоединенныеФайлы
	|ГДЕ
	|	торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ОбъектСобственныеФайлы"",
	|	ПрисоединенныеФайлы.Наименование,
	|	ВЫБОР
	|		КОГДА ПрисоединенныеФайлы.ПометкаУдаления = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ПрисоединенныеФайлы.ИндексКартинки, 2) + 1
	|		ИНАЧЕ ЕСТЬNULL(ПрисоединенныеФайлы.ИндексКартинки, 2)
	|	КОНЕЦ,
	|	ПрисоединенныеФайлы.Размер,
	|	ПрисоединенныеФайлы.Автор,
	|	ДОБАВИТЬКДАТЕ(ПрисоединенныеФайлы.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени),
	|	ИСТИНА,
	|	ПрисоединенныеФайлы.Ссылка,
	|   НЕОПРЕДЕЛЕНО КАК ОбъектРемонта
	|ИЗ
	|	&ИмяСправочника КАК ПрисоединенныеФайлы
	|ГДЕ
	|	ПрисоединенныеФайлы.ВладелецФайла = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ТиповойОбъектРемонта"",
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Наименование,
	|	ВЫБОР
	|		КОГДА торо_ОбщиеПрисоединенныеФайлы.Файл.ПометкаУдаления = ИСТИНА
	|			ТОГДА ЕСТЬNULL(торо_ОбщиеПрисоединенныеФайлы.Файл.ИндексКартинки, 2) + 1
	|		ИНАЧЕ ЕСТЬNULL(торо_ОбщиеПрисоединенныеФайлы.Файл.ИндексКартинки, 2)
	|	КОНЕЦ,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Размер,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Автор,
	|	ДОБАВИТЬКДАТЕ(торо_ОбщиеПрисоединенныеФайлы.Файл.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени),
	|	ЛОЖЬ,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл,
	|   торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла КАК ОбъектРемонта
	|ИЗ
	|	РегистрСведений.торо_ОбщиеПрисоединенныеФайлы КАК торо_ОбщиеПрисоединенныеФайлы
	|ГДЕ
	|	торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла = &ТиповойОР
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ТиповойОбъектРемонта"",
	|	торо_ТиповыеОРПрисоединенныеФайлы.Наименование,
	|	ВЫБОР
	|		КОГДА торо_ТиповыеОРПрисоединенныеФайлы.ПометкаУдаления = ИСТИНА
	|			ТОГДА ЕСТЬNULL(торо_ТиповыеОРПрисоединенныеФайлы.ИндексКартинки, 2) + 1
	|		ИНАЧЕ ЕСТЬNULL(торо_ТиповыеОРПрисоединенныеФайлы.ИндексКартинки, 2)
	|	КОНЕЦ,
	|	торо_ТиповыеОРПрисоединенныеФайлы.Размер,
	|	торо_ТиповыеОРПрисоединенныеФайлы.Автор,
	|	ДОБАВИТЬКДАТЕ(торо_ТиповыеОРПрисоединенныеФайлы.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени),
	|	ИСТИНА,
	|	торо_ТиповыеОРПрисоединенныеФайлы.Ссылка,
	|   торо_ТиповыеОРПрисоединенныеФайлы.ВладелецФайла КАК ОбъектРемонта
	|ИЗ
	|	Справочник.торо_ТиповыеОРПрисоединенныеФайлы КАК торо_ТиповыеОРПрисоединенныеФайлы
	|ГДЕ
	|	торо_ТиповыеОРПрисоединенныеФайлы.ВладелецФайла = &ТиповойОР
	|	
	|   &ЗапросДляДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипФайла УБЫВ
	|ИТОГИ ПО
	|	ТипФайла,
	|	ОбъектРемонта";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяСправочника", ИмяСправочника);
	
	Если ЭтоДокумент Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "= &ТиповойОР", "В (ВЫБРАТЬ Ссылка ИЗ ТиповыеОбъектыРемонтов)"); 
		
		ТекстЗамены = "ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|    ""ФайлыТК"",
		|    ФайлыТК.Наименование,
		|    ВЫБОР
		|    	КОГДА ФайлыТК.ПометкаУдаления = ИСТИНА
		|    		ТОГДА ЕСТЬNULL(ФайлыТК.ИндексКартинки, 2) + 1
		|    	ИНАЧЕ ЕСТЬNULL(ФайлыТК.ИндексКартинки, 2)
		|    КОНЕЦ,
		|    ФайлыТК.Размер,
		|    ФайлыТК.Автор,
		|    ДОБАВИТЬКДАТЕ(ФайлыТК.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени),
		|    ИСТИНА,
		|    ФайлыТК.Ссылка,
		|	 НЕОПРЕДЕЛЕНО
		|ИЗ
		|    ФайлыТК КАК ФайлыТК
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|    ""ОбъектРемонта"",
		|    ФайлыОбъектовРемонта.Наименование,
		|    ВЫБОР
		|    	КОГДА ФайлыОбъектовРемонта.ПометкаУдаления = ИСТИНА
		|    		ТОГДА ЕСТЬNULL(ФайлыОбъектовРемонта.ИндексКартинки, 2) + 1
		|    	ИНАЧЕ ЕСТЬNULL(ФайлыОбъектовРемонта.ИндексКартинки, 2)
		|    КОНЕЦ,
		|    ФайлыОбъектовРемонта.Размер,
		|    ФайлыОбъектовРемонта.Автор,
		|    ДОБАВИТЬКДАТЕ(ФайлыОбъектовРемонта.ДатаМодификацииУниверсальная, СЕКУНДА, &СекундДоМестногоВремени),
		|    ФайлыОбъектовРемонта.Присоединенный,
		|    ФайлыОбъектовРемонта.Ссылка,
		|	 ФайлыОбъектовРемонта.ОбъектРемонта
		|ИЗ
		|    ФайлыОбъектовРемонта КАК ФайлыОбъектовРемонта";
	Иначе
		ТекстЗамены = "";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЗапросДляДокумента", ТекстЗамены);
	
	ВыборкаПоТипуФайла = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СоответствиеВозврата = Новый Соответствие();
	
	Пока ВыборкаПоТипуФайла.Следующий() Цикл
		
		ВыборкаЗапроса = ВыборкаПоТипуФайла.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаЗапроса.Следующий() Цикл
			ВыборкаФайлов = ВыборкаЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
			МассивФайлов = Новый Массив();
			
			Пока ВыборкаФайлов.Следующий() Цикл
				СтруктураФайла = Новый Структура("Наименование, Автор, ИндексКартинки, ДатаИзменения, Размер, Файл, Присоединенный, ТипФайла");
				ЗаполнитьЗначенияСвойств(СтруктураФайла, ВыборкаФайлов);
				СтруктураФайла.Вставить("ДоступЗапрещен", СтруктураФайла.Наименование = Null);
				
				Если ВыборкаЗапроса.ТипФайла <> "ОбъектОбщиеФайлы" И СтруктураФайла.ДоступЗапрещен Тогда
					Продолжить;
				КонецЕсли;
				
				МассивФайлов.Добавить(СтруктураФайла);
			КонецЦикла;
			
			Если МассивФайлов.Количество() = 0 И Не ВыборкаЗапроса.ТипФайла = "ОбъектОбщиеФайлы" И Не ВыборкаЗапроса.ТипФайла = "ОбъектСобственныеФайлы" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВыборкаЗапроса.ТипФайла = "ОбъектОбщиеФайлы" Тогда
				ИмяГруппировки = "Общие файлы";
			ИначеЕсли ВыборкаЗапроса.ТипФайла = "ОбъектСобственныеФайлы" Тогда
				ИмяГруппировки = "Собственные файлы";    
			ИначеЕсли ВыборкаЗапроса.ТипФайла = "ФайлыТК" Тогда 
				ИмяГруппировки = "Файлы тех. карт";
			ИначеЕсли ВыборкаЗапроса.ТипФайла = "ТиповойОбъектРемонта" Тогда
				ИмяГруппировки = "%1 (Типовой ОР)";
				ИмяГруппировки = СтрШаблон(ИмяГруппировки, ВыборкаЗапроса.ОбъектРемонта); 
			ИначеЕсли ВыборкаЗапроса.ТипФайла = "ОбъектРемонта" Тогда
				ИмяГруппировки = "%1 (ОР)";
				ИмяГруппировки = СтрШаблон(ИмяГруппировки, ВыборкаЗапроса.ОбъектРемонта);
			КонецЕсли;
			
			СоответствиеВозврата[ИмяГруппировки] = МассивФайлов;
		КонецЦикла; 
	КонецЦикла;	
	
	Возврат СоответствиеВозврата;  
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьВременныеТаблицыПолученияФайловДляДокумента(Запрос, Объект)
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") 
		ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот")
		ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") 
		ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		Результат = Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РемонтныеРаботы.РемонтнаяРабота КАК ИД,
	|	ВЫБОР
	|		КОГДА РемонтыОборудования.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РемонтыОборудования.ДатаНачала
	|		ИНАЧЕ РемонтыОборудования.Ссылка.Дата
	|	КОНЕЦ КАК ДатаАктуальности,
	|	РемонтыОборудования.ID КАК ИДРемонта
	|ПОМЕСТИТЬ ИДТехКарт
	|ИЗ
	|	&ИмяТаблицыРемонтов КАК РемонтыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ИмяТаблицыРемонтныхРабот КАК РемонтныеРаботы
	|		ПО (РемонтыОборудования.Ссылка = &Объект)
	|			И РемонтыОборудования.Ссылка = РемонтныеРаботы.Ссылка
	|			И (РемонтныеРаботы.РемонтыОборудования_ID = РемонтыОборудования.ID)
	|ГДЕ
	|	РемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ИдентификаторыТехКарт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИД,
	|	ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ВерсииТехКарт.Период КАК Период,
	|	торо_ВерсииТехКарт.ИдентификаторТехКарты КАК ИдентификаторТехКарты,
	|	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта
	|ПОМЕСТИТЬ ВерсииТК
	|ИЗ
	|	РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	|ГДЕ
	|	торо_ВерсииТехКарт.ИдентификаторТехКарты В
	|			(ВЫБРАТЬ
	|				ИДТехКарт.ИД
	|			ИЗ
	|				ИДТехКарт)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторТехКарты,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВерсииТК.Период) КАК Период,
	|	ВерсииТК.ИдентификаторТехКарты КАК ИдентификаторТехКарты,
	|	ИДТехКарт.ИДРемонта КАК ИДРемонта
	|ПОМЕСТИТЬ АктуальныеТК
	|ИЗ
	|	ИДТехКарт КАК ИДТехКарт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВерсииТК КАК ВерсииТК
	|		ПО ИДТехКарт.ИД = ВерсииТК.ИдентификаторТехКарты
	|			И ИДТехКарт.ДатаАктуальности >= ВерсииТК.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВерсииТК.ИдентификаторТехКарты,
	|	ИДТехКарт.ИДРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторТехКарты,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ВерсииТехКарт.ТехКарта КАК ТехКарта,
	|	торо_ТехКартыПрисоединенныеФайлы.Ссылка КАК Ссылка,
	|	торо_ТехКартыПрисоединенныеФайлы.ПометкаУдаления КАК ПометкаУдаления,
	|	торо_ТехКартыПрисоединенныеФайлы.Наименование КАК Наименование,
	|	торо_ТехКартыПрисоединенныеФайлы.ДатаМодификацииУниверсальная КАК ДатаМодификацииУниверсальная,
	|	торо_ТехКартыПрисоединенныеФайлы.ИндексКартинки КАК ИндексКартинки,
	|	торо_ТехКартыПрисоединенныеФайлы.Автор КАК Автор,
	|	торо_ТехКартыПрисоединенныеФайлы.Размер КАК Размер
	|ПОМЕСТИТЬ ФайлыТК
	|ИЗ
	|	ВерсииТК КАК торо_ВерсииТехКарт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальныеТК КАК АктуальныеТК
	|		ПО (АктуальныеТК.Период = торо_ВерсииТехКарт.Период)
	|			И (АктуальныеТК.ИдентификаторТехКарты = торо_ВерсииТехКарт.ИдентификаторТехКарты)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКартыПрисоединенныеФайлы КАК торо_ТехКартыПрисоединенныеФайлы
	|		ПО торо_ВерсииТехКарт.ТехКарта = торо_ТехКартыПрисоединенныеФайлы.ВладелецФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|	&ТекстЗапросаОбъектыРемонтов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыРемонтов.Ссылка.ТиповойОР КАК Ссылка
	|ПОМЕСТИТЬ ТиповыеОбъектыРемонтов
	|ИЗ
	|	ОбъектыРемонтов КАК ОбъектыРемонтов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Наименование КАК Наименование,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.ПометкаУдаления КАК ПометкаУдаления,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Размер КАК Размер,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.ИндексКартинки КАК ИндексКартинки,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.Автор КАК Автор,
	|	торо_ОбщиеПрисоединенныеФайлы.Файл.ДатаМодификацииУниверсальная КАК ДатаМодификацииУниверсальная,
	|	ЛОЖЬ КАК Присоединенный,	
	|	торо_ОбщиеПрисоединенныеФайлы.Файл КАК Ссылка,
	|	торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла КАК ОбъектРемонта
	|ПОМЕСТИТЬ ФайлыОбъектовРемонта
	|ИЗ
	|	РегистрСведений.торо_ОбщиеПрисоединенныеФайлы КАК торо_ОбщиеПрисоединенныеФайлы
	|ГДЕ
	|	торо_ОбщиеПрисоединенныеФайлы.ВладелецФайла В
	|			(ВЫБРАТЬ
	|				ОбъектыРемонтов.Ссылка
	|			ИЗ
	|				ОбъектыРемонтов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.Наименование,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.ПометкаУдаления,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.Размер,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.ИндексКартинки,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.Автор,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.ДатаМодификацииУниверсальная,
	|	ИСТИНА КАК Присоединенный,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.Ссылка,
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.ВладелецФайла
	|ИЗ
	|	Справочник.торо_ОбъектыРемонтаПрисоединенныеФайлы КАК торо_ОбъектыРемонтаПрисоединенныеФайлы
	|ГДЕ
	|	торо_ОбъектыРемонтаПрисоединенныеФайлы.ВладелецФайла В
	|			(ВЫБРАТЬ
	|				ОбъектыРемонтов.Ссылка
	|			ИЗ
	|				ОбъектыРемонтов)";
	
	ТекстЗапросаОбъектыРемонтов = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РемонтыОборудования.ОбъектРемонта КАК Ссылка
	|ПОМЕСТИТЬ ОбъектыРемонтов
	|ИЗ
	|	&ИмяТаблицыРемонтов КАК РемонтыОборудования
	|ГДЕ
	|	РемонтыОборудования.Ссылка = &Объект
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	ТипДокумента = ТипЗнч(Объект);
	
	Если ТипДокумента = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда 
		
		ИмяТаблицыРемонтов = "Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования";
		ИмяТаблицыРемонтныхРабот = "Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы";
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда 
		
		ИмяТаблицыРемонтов = "Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования";
		ИмяТаблицыРемонтныхРабот = "Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы";
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		ИмяТаблицыРемонтов = "Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования";
		ИмяТаблицыРемонтныхРабот = "Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы";
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда 
		
		ИмяТаблицыРемонтов = "Документ.торо_НарядНаРегламентноеМероприятие.РегламентныеМероприятия";
		ИмяТаблицыРемонтныхРабот = "Документ.торо_НарядНаРегламентноеМероприятие.РемонтныеРаботы";
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		ИмяТаблицыРемонтов = "Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия";
		ИмяТаблицыРемонтныхРабот = "Документ.торо_АктОВыполненииРегламентногоМероприятия.РемонтныеРаботы";
	КонецЕсли;
	
	Если ТипДокумента = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		ТекстЗапросаОбъектыРемонтов = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта КАК Ссылка
		|ПОМЕСТИТЬ ОбъектыРемонтов
		|ИЗ
		|	&ИмяТаблицыРемонтов КАК РегламентныеМероприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
		|		ПО РегламентныеМероприятия.ОбъектРемонта = торо_МаршрутыРегламентныхМероприятий.СписокОбъектов
		|			И (РегламентныеМероприятия.Ссылка = &Объект)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
	КонецЕсли;
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаОбъектыРемонтов", ТекстЗапросаОбъектыРемонтов);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыРемонтов", ИмяТаблицыРемонтов);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыРемонтныхРабот", ИмяТаблицыРемонтныхРабот);
	
	Запрос.Выполнить(); 
	
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Функция ПолучитьВладельцаФайла(СтрокаФайла)
	Если СтрокаФайла.ВерхнийУровень И СтрокаФайла.Наименование = "Собственные файлы"
		Или СтрокаФайла.ТипФайла = "ОбъектСобственныеФайлы" Или СтрокаФайла.ТипФайла = "ОбъектОбщиеФайлы" Тогда
		Возврат ВыбранныйОбъект;
	Иначе
		Возврат ТиповойОР;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьСтрокуОбщегоФайла(ВыбранноеЗначение)
	СтруктураВозврата = Новый Структура("ВерхнийУровень, Наименование, Автор, ИндексКартинки, ДатаИзменения, Размер, Файл, Присоединенный, ТипФайла");
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, ВыбранноеЗначение);
	
	СтруктураВозврата.Файл = ВыбранноеЗначение;
	СтруктураВозврата.ИндексКартинки = ?(ВыбранноеЗначение.ПометкаУдаления, ВыбранноеЗначение.ИндексКартинки + 1, ВыбранноеЗначение.ИндексКартинки);
	СтруктураВозврата.ВерхнийУровень = Ложь;
	СтруктураВозврата.Присоединенный = Ложь;
	СтруктураВозврата.ТипФайла = "ОбъектОбщиеФайлы";
	СтруктураВозврата.ДатаИзменения = ВыбранноеЗначение.ДатаМодификацииУниверсальная + (МестноеВремя(ТекущаяДатаСеанса(), ЧасовойПоясСеанса()) - ТекущаяДатаСеанса());
	
	Возврат СтруктураВозврата;
КонецФункции

&НаКлиенте
Процедура УдалитьСтрокуДереваПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	СтрокаДерева = ДополнительныеПараметры.СтрокаДерева;
	Если СтрокаДерева.ВерхнийУровень Тогда
		ДеревоФайлов.ПолучитьЭлементы().Удалить(СтрокаДерева);
		Возврат;
	КонецЕсли;
	
	Родитель = СтрокаДерева.ПолучитьРодителя();
	ДеревоФайлов.ПолучитьЭлементы()[ДеревоФайлов.ПолучитьЭлементы().Индекс(Родитель)].ПолучитьЭлементы().Удалить(СтрокаДерева);
	Если Родитель.ПолучитьЭлементы().Количество() = 0 Тогда
		ДеревоФайлов.ПолучитьЭлементы().Удалить(Родитель);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	Если Не ЗначениеЗаполнено(ВыбранныйОбъект) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран объект. Невозможно выполнить запись!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.торо_ОбщиеПрисоединенныеФайлы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВладелецФайла.Установить(ВыбранныйОбъект);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Для каждого ВерхнийУровень Из ДеревоФайлов.ПолучитьЭлементы() Цикл
		Если Не ВерхнийУровень.Наименование = "Общие файлы" Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого НижнийУровень Из ВерхнийУровень.ПолучитьЭлементы() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Файл = НижнийУровень.Файл;
			НоваяЗапись.ВладелецФайла = ВыбранныйОбъект;
		КонецЦикла;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Модифицированность = Ложь;
КонецПроцедуры

#КонецОбласти