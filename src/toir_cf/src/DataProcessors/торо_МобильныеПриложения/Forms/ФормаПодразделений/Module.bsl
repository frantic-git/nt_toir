
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьТаблицу();
	
	ОбновляемоеРасстояниеПоУмолчанию = Константы.торо_ОбновляемоеРасстояниеПоУмолчанию.Получить();
	Если ОбновляемоеРасстояниеПоУмолчанию = 0 Тогда
		ОбновляемоеРасстояниеПоУмолчанию = 125;
		ОбновитьРасстояниеПоУмолчанию(ОбновляемоеРасстояниеПоУмолчанию);
	КонецЕсли;
	
	МетодКонтроляПрисутствияПоУмолчанию = Константы.торо_МетодКонтроляПрисутствияНаОбъектеПоУмолчанию.Получить();
	Если МетодКонтроляПрисутствияПоУмолчанию = Перечисления.торо_МетодыКонтроляПрисутствияНаОбъекте.ПустаяСсылка() Тогда
		 МетодКонтроляПрисутствияПоУмолчанию = Перечисления.торо_МетодыКонтроляПрисутствияНаОбъекте.НеКонтролировать;
		 ОбновитьМетодКонтроляПрисутствияПоУмолчанию(МетодКонтроляПрисутствияПоУмолчанию);
	КонецЕсли;
		
	ПогрешностьГеоконтроляПоУмолчанию = Константы.торо_ПогрешностьГеоконтроляПоУмолчанию.Получить();
	Если ПогрешностьГеоконтроляПоУмолчанию = 0 Тогда
		ПогрешностьГеоконтроляПоУмолчанию = 15;
		ОбновитьПогрешностьГеоконтроляПоУмолчанию(ПогрешностьГеоконтроляПоУмолчанию);
	КонецЕсли;
	
	РазмерПакета = Константы.торо_МобильноеПриложениеРазмерПакета.Получить();
	Если РазмерПакета = 0 Тогда
		РазмерПакета = 200;
		ОбновитьРазмерПакета(РазмерПакета);
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПометитьНаУдалениеНеиспользуемыеУзлы" Тогда
		ЗаполнитьТаблицу();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьТаблицу();
КонецПроцедуры

&НаКлиенте
Процедура МетодКонтроляПрисутствияПоУмолчаниюПриИзменении(Элемент)
	
	Если МетодКонтроляПрисутствияПоУмолчанию.Пустая() Тогда
		МетодКонтроляПрисутствияПоУмолчанию = ПредопределенноеЗначение("Перечисление.торо_МетодыКонтроляПрисутствияНаОбъекте.НеКонтролировать");
	КонецЕсли;
	
	ОбновитьМетодКонтроляПрисутствияПоУмолчанию(МетодКонтроляПрисутствияПоУмолчанию);
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеНеиспользуемыеУзлы(Команда)
	ОткрытьФорму("Обработка.торо_МобильныеПриложения.Форма.ФормаПометитьНаУдалениеНеиспользуемыеУзлы", Новый Структура("МобильноеПриложение", ПредопределенноеЗначение("Перечисление.торо_МобильноеПриложение.МобильныеБригады")), ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПервоначальнаяРегистрацияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПервоначальнаяРегистрацияНаСервере(ДополнительныеПараметры.Узел, ДополнительныеПараметры.Пользователь);
		Текст = "Регистрация завершена";
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Текст;
		Сообщение.Сообщить();
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбновляемоеРасстояниеПоУмолчаниюПриИзменении(Элемент)
	
	Если ОбновляемоеРасстояниеПоУмолчанию = 0 Тогда
		ОбновляемоеРасстояниеПоУмолчанию = 125;
	КонецЕсли;
	
	ОбновитьРасстояниеПоУмолчанию(ОбновляемоеРасстояниеПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура ПогрешностьГеоконтроляПоУмолчаниюПриИзменении(Элемент)
	
	Если ПогрешностьГеоконтроляПоУмолчанию = 0 Тогда
		ПогрешностьГеоконтроляПоУмолчанию = 15;
	КонецЕсли;
	
	ОбновитьПогрешностьГеоконтроляПоУмолчанию(ПогрешностьГеоконтроляПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерПакетаПриИзменении(Элемент)
	
	Если РазмерПакета = 0 Тогда
		РазмерПакета = 200;
	КонецЕсли;
	
	ОбновитьРазмерПакета(РазмерПакета);
	
КонецПроцедуры

&НаКлиенте
Процедура УзлыПодразделениеПриИзменении(Элемент)
	
	ТекДанные = Элементы.Узлы.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		ИзменитьРеквизитУзла(ТекДанные.Узел, "Подразделение", ТекДанные.Подразделение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УзлыОбновляемоеРасстояниеПриИзменении(Элемент)
	
	ТекДанные = Элементы.Узлы.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		ИзменитьРеквизитУзла(ТекДанные.Узел, "ОбновляемоеРасстояние", ТекДанные.ОбновляемоеРасстояние);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УзлыБригадаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Узлы.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		ИзменитьРеквизитУзла(ТекДанные.Узел, "Бригада", ТекДанные.Бригада);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УзлыМетодКонтроляПрисутствияПриИзменении(Элемент)
	
	ТекДанные = Элементы.Узлы.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		ИзменитьРеквизитУзла(ТекДанные.Узел, "МетодКонтроляПрисутствияНаОбъекте", ТекДанные.МетодКонтроляПрисутствия);
		УстановитьУсловноеОформление();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УзлыПогрешностьПриИзменении(Элемент)
	
	ТекДанные = Элементы.Узлы.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		ИзменитьРеквизитУзла(ТекДанные.Узел, "ПогрешностьГеоконтроля", ТекДанные.Погрешность);
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицу()
	
	Узлы.Очистить();
	
	ЭтотУзел = ПланыОбмена.mobileBrigades.ЭтотУзел();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	mobileBrigades.Ссылка КАК Узел,
	               |	торо_МобильныеПриложения.Наименование КАК Наименование,
	               |	mobileBrigades.ИмяУстройства КАК ИмяУстройства,
	               |	mobileBrigades.ДатаПоследнегоСоединения КАК ДатаПоследнегоСоединения,
	               |	mobileBrigades.ПоследнийПользователь КАК ПоследнийПользователь,
	               |	mobileBrigades.Подразделение КАК Подразделение,
	               |	mobileBrigades.ОбновляемоеРасстояние КАК ОбновляемоеРасстояние,
	               |	mobileBrigades.Бригада КАК Бригада,
	               |	mobileBrigades.МетодКонтроляПрисутствияНаОбъекте КАК МетодКонтроляПрисутствия,
	               |	mobileBrigades.ПогрешностьГеоконтроля КАК Погрешность,
	               |	ВЫБОР
	               |		КОГДА mobileBrigades.ПометкаУдаления
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Картинка
	               |ИЗ
	               |	ПланОбмена.mobileBrigades КАК mobileBrigades
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_МобильныеПриложения КАК торо_МобильныеПриложения
	               |		ПО mobileBrigades.Ссылка = торо_МобильныеПриложения.Узел
	               |ГДЕ
	               |	mobileBrigades.Ссылка <> &ЭтотУзел";
	
	Запрос.УстановитьПараметр("ЭтотУзел", ЭтотУзел);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НС = Узлы.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьРасстояниеПоУмолчанию(Расстояние)
	Константы.торо_ОбновляемоеРасстояниеПоУмолчанию.Установить(Расстояние);
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура ОбновитьПогрешностьГеоконтроляПоУмолчанию(Погрешность)
	Константы.торо_ПогрешностьГеоконтроляПоУмолчанию.Установить(Погрешность);
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура ОбновитьМетодКонтроляПрисутствияПоУмолчанию(Метод)
	Константы.торо_МетодКонтроляПрисутствияНаОбъектеПоУмолчанию.Установить(Метод);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьРазмерПакета(РазмерПакета)
	Константы.торо_МобильноеПриложениеРазмерПакета.Установить(РазмерПакета);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьРеквизитУзла(Узел, ИмяРеквизита, Значение)
	
	Объект = Узел.ПолучитьОбъект();
	Объект[ИмяРеквизита] = Значение;
	Объект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// 1.1 Нельзя ввести погрешность, если метод контроля заполнен и не является Геолокацией.
	   Элемент = УсловноеОформление.Элементы.Добавить();
	
	   // Оформляемые поля
	   ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	   ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УзлыПогрешность.Имя);
	   
	   // Отбор
       ГруппаОтбораИ = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	   ГруппаОтбораИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	   ОтборЭлемента = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	   ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Узлы.МетодКонтроляПрисутствия");
	   ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	   ОтборЭлемента = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	   ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Узлы.МетодКонтроляПрисутствия");
	   ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	   ОтборЭлемента.ПравоеЗначение = Перечисления.торо_МетодыКонтроляПрисутствияНаОбъекте.Геолокация;
	
	   // Оформление
	   Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(128, 128, 128));
	   Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	   // Использование
	   Элемент.Использование = Истина;
	   
	
	// 1.2 Нельзя ввести погрешность, если метод контроля не заполнен и метод по умолчанию не Геолокация.
	   Элемент = УсловноеОформление.Элементы.Добавить();
	   
	   // Оформляемые поля
	   ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	   ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УзлыПогрешность.Имя);
	   
	   // Отбор
	   ГруппаОтбораИ = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	   ГруппаОтбораИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	   ОтборЭлемента = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	   ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Узлы.МетодКонтроляПрисутствия");
	   ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	   ОтборЭлемента = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	   ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("МетодКонтроляПрисутствияПоУмолчанию");
	   ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	   ОтборЭлемента.ПравоеЗначение = Перечисления.торо_МетодыКонтроляПрисутствияНаОбъекте.Геолокация;
	
	   // Оформление
	   Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(128, 128, 128));
	   Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	   // Использование
	   Элемент.Использование = Истина;
	
		
	// 2. Если для узла метод контроля не выбран, то отображается значение из общей настройки. 
	   Элемент = УсловноеОформление.Элементы.Добавить();
	
	   // Оформляемые поля
	   ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	   ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УзлыМетодКонтроляПрисутствия.Имя);
	
	   // Отбор
	   ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	   ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Узлы.МетодКонтроляПрисутствия");
	   ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	   // Оформление
	   Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Строка(МетодКонтроляПрисутствияПоУмолчанию));
       Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(128, 128, 128));
				
	   // Использование
	   Элемент.Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПервоначальнаяРегистрация(Команда)
	
	ТекущиеДанные = Элементы.Узлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Узел) Тогда
		Текст      = "Процесс регистрации может занять некоторое время. Продолжить?";
		Оповещение = Новый ОписаниеОповещения("ПервоначальнаяРегистрацияЗавершение", ЭтотОбъект, Новый Структура("Узел, Пользователь", ТекущиеДанные.Узел, ТекущиеДанные.ПоследнийПользователь));	
		ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет,,, "Первоначальная регистрация");	
	Иначе
		Текст = "Не выбран узел, для которого необходимо выполнить первоначальную регистрацию!";
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Текст;
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПервоначальнаяРегистрацияНаСервере(Узел, ПоследнийПользователь)
	ПланыОбмена.mobileBrigades.ВыполнитьПервоначальнуюРегистрациюОбъектов(Узел, ПоследнийПользователь);
	ИзменитьРеквизитУзла(Узел, "РегистрацияНачальныхДанных", Истина);
КонецПроцедуры

#КонецОбласти
