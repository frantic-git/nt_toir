
#Область ПрограммныйИнтерфейс
// Возвращает версию обработки.
//
// Возвращаемое значение:
//		Строка - версия обработки.
//
Функция Версия_Session() Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат НСтр("ru = 'Ошибка подключения к защищенной обработке.'");
	КонецЕсли;
	
	Возврат Объект.Версия();
КонецФункции

// Возвращает ключ добавления.
//
// Параметры:
//		Приложение - Перечисление - тип мобильного приложения.
// Возвращаемое значение:
//		Строка - ключ пользователя для генерирования лицензии.
//
Функция ПолучитьКлючДобавления_Session(Приложение) Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Объект.ПолучитьКлючДобавления(Приложение);
КонецФункции

// Возвращает ключ продления.
//
// Параметры:
//		Приложение - Перечисление - тип мобильного приложения.
//		Таблица - Массив - массив уникальных идентификаторов.
// Возвращаемое значение:
//		Строка - ключ пользователя для генерирования лицензии.
//
Функция ПолучитьКлючПродления_Session(Приложение, Таблица) Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Объект.ПолучитьКлючПродления(Приложение, Таблица);
КонецФункции

// Ввод ключа лицензии.
//
// Параметры:
//		Ключ - Строка - ключ лицензии.
// Возвращаемое значение:
//		Булево - ложь, если введен неправильный ключ.
//
Функция ВвестиКлюч_Session(Ключ) Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Объект.ВвестиКлюч(Ключ);
КонецФункции
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Функция ПолучитьДатуОкончания_Session(Строка, ВДату = Истина) Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Объект.ПолучитьДатуОкончания(Строка, ВДату);
КонецФункции

// БРИГАДЫ
Функция ПолучитьЧислоМаксимальногоКоличестваУзловБригады_Session() Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Объект.ПолучитьЧислоМаксимальногоКоличестваУзловБригады();
КонецФункции

Функция ПроверитьДобавитьРегистрациюУстройстваБригады_Session(ШифрованныйЗапросКлиента, ИмяУстройства, ИмяПользователя) Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Объект.ПроверитьДобавитьРегистрациюУстройстваБригады(ШифрованныйЗапросКлиента, ИмяУстройства, ИмяПользователя);
КонецФункции

// МОНИТОР
Функция ПолучитьЧислоМаксимальногоКоличестваУзловМонитор_Session() Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Объект.ПолучитьЧислоМаксимальногоКоличестваУзловМонитор();
КонецФункции

Функция ПроверитьДобавитьРегистрациюУстройстваМонитор_Session(ШифрованныйЗапросКлиента, ИмяУстройства, ИмяПользователя) Экспорт
	Объект = ПолучитьЗащищенныйОбъект();
	Если Объект = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Объект.ПроверитьДобавитьРегистрациюУстройстваМонитор(ШифрованныйЗапросКлиента, ИмяУстройства, ИмяПользователя);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьЗащищенныйОбъект()
	Имя = "торо_ЗащитаМобильныеПриложения";
	Серия = "28DD";
	
	Если Не Метаданные.Обработки.Найти(Имя) = Неопределено Тогда
		Обработка = Обработки[Имя].Создать();
	Иначе
		Обработка = слкМенеджерЗащиты.СоздатьОбъект(Серия, имя);
	КонецЕсли;
	
	Возврат Обработка;
КонецФункции
#КонецОбласти

