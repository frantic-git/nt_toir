#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТекСтруктураИерархии") Тогда
		ТекСтруктураИерархии = Параметры.ТекСтруктураИерархии;
	КонецЕсли;
	
	Если Параметры.Свойство("МассивОР") Тогда
		Для каждого Элем Из Параметры.МассивОР Цикл
			МассивОР.Добавить(Элем);
		КонецЦикла;
	КонецЕсли;
	
	ИспользоватьКартинкиТОР = Константы.торо_ИспользоватьКартинкиТиповыхОбъектов.Получить();
	
	Элементы.ДеревоИерархии.ПутьКДаннымКартинкиСтроки = "ДеревоИерархии.Картинка";
	Если ИспользоватьКартинкиТОР Тогда 
		Элементы.ДеревоИерархии.ПутьКДаннымКартинкиСтроки = "ДеревоИерархии.КартинкаОтображаемая";
	КонецЕсли;
	
	торо_РаботаСИерархией20.ЗаполнитьПараметрыИерархии(ЭтаФорма);
	СтруктураПараметровИерархии.КонечныеЭлементыВДереве = Истина;
	ПустойРодитель = торо_РаботаСИерархией20.ПустойРодительПоСтруктуреИерархии(СтруктураПараметровИерархии);
	торо_РаботаСИерархией20КлиентСервер.НачатьЗаполнениеДереваИерархии(ДеревоИерархии, СтруктураПараметровИерархии, ПустойРодитель);
	
	Если ДеревоИерархии.ПолучитьЭлементы().Количество() > 0 Тогда
	    ДеревоПередРазворачиваниемНаСервере(ДеревоИерархии.ПолучитьЭлементы()[0].ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого Элемент из МассивОР Цикл
		ДостроитьДеревоДоЭлемента(Элемент.Значение);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоИерархии

&НаКлиенте
Процедура ДеревоИерархииПередРазворачиванием(Элемент, Строка, Отказ)
	
	торо_РаботаСИерархией20Клиент.ДеревоПередРазворачиванием(ДеревоИерархии, Строка, СтруктураПараметровИерархии);
	ДеревоПередРазворачиваниемНаСервере(Строка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьОперацию(Команда)
	
	МассивВыделенных = Новый массив;
	ОбойтиДерево(МассивВыделенных, ДеревоИерархии);
	Закрыть(МассивВыделенных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДостроитьДеревоДоЭлемента(ИскомаяСсылка)
	
	ДеревоРеквизит = ДеревоИерархии;
	ДеревоЭлемент = Элементы.ДеревоИерархии;
	
	МассивРодителей = Новый Массив;
	МассивРодителей.Добавить(ИскомаяСсылка);
	торо_РаботаСИерархией20.ЗаполнитьМассивРодителейОбъектаРемонта(ИскомаяСсылка, МассивРодителей, ТекСтруктураИерархии);
	
	ИндексРодителя = МассивРодителей.Количество() - 1;
	СтрокиДерева = ДеревоРеквизит.ПолучитьЭлементы()[0].ПолучитьЭлементы();
	
	Пока ИндексРодителя >= 0 Цикл
		СтрокаРодителя = Неопределено;
		Для каждого ТекСтрокаДерева из СтрокиДерева Цикл 
			Если ТекСтрокаДерева.Ссылка = МассивРодителей[ИндексРодителя] Тогда
				СтрокаРодителя = ТекСтрокаДерева;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаРодителя <> Неопределено Тогда
			ИдентификаторСтроки = СтрокаРодителя.ПолучитьИдентификатор();
			Если ИндексРодителя = 0 Тогда
				СтрокаРодителя.Выделить = Истина;
				СтрокаРодителя.Выбран = Истина;
				Возврат;
			Иначе
				ДеревоЭлемент.Развернуть(ИдентификаторСтроки, Ложь);
				СтрокиДерева = СтрокаРодителя.ПолучитьЭлементы();
			КонецЕсли;
		КонецЕсли;
		
		ИндексРодителя = ИндексРодителя-1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбойтиДерево(СписокВозврата, Узел)
	
	Для каждого ТекСтрока из Узел.ПолучитьЭлементы() Цикл
		Если ТекСтрока.Выделить = 1 и ТекСтрока.Выбран = Истина Тогда
			СписокВозврата.Добавить(ТекСтрока.Ссылка);
		КонецЕсли;
		ОбойтиДерево(СписокВозврата, ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоПередРазворачиваниемНаСервере(Строка)
	Если ИспользоватьКартинкиТОР Тогда
		торо_РаботаСИерархией20.ОбновитьКартинкиЭлементовДереваНаСервере(ДеревоИерархии, Строка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти