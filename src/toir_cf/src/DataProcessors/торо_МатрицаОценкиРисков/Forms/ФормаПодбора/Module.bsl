#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(КлючНазначенияИспользования) Тогда
		ТекстСообщения = НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ID_Ремонта", ID_Ремонта);
	
	Если НЕ Параметры.Свойство("ДатаОбнаружения", ДатаОбнаружения) Тогда
		
		Запрос = Новый Запрос;
		# Область ТекстЗапроса
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ВыявленныеДефектыСрезПоследних.Период КАК Период,
		|	торо_ВыявленныеДефектыСрезПоследних.КрайняяДопустимаяДатаЗавершенияРемонта КАК КрайняяДопустимаяДатаЗавершенияРемонта,
		|	торо_ВыявленныеДефектыСрезПоследних.Регистратор КАК ДокументИсточник
		|ИЗ
		|	РегистрСведений.торо_ВыявленныеДефекты.СрезПоследних(, ID = &ID_Ремонта) КАК торо_ВыявленныеДефектыСрезПоследних";
		# КонецОбласти
		Запрос.УстановитьПараметр("ID_Ремонта", ID_Ремонта);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Для выбранного ремонта нет документов Выявленные дефекты.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			Возврат;
		Иначе
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			Если ЗначениеЗаполнено(Выборка.КрайняяДопустимаяДатаЗавершенияРемонта) Тогда
				Элементы.Выбрать.Доступность = Ложь;
				ЭтаФорма.ТолькоПросмотр      = Истина;
			КонецЕсли; 
			
			ДатаОбнаружения  = Выборка.Период;
			ДокументИсточник = Выборка.ДокументИсточник;
			
		КонецЕсли;  
	КонецЕсли; 
	
	Если НЕ МультиязычностьСервер.ЭтоОсновнойЯзык() Тогда
		СуффиксТекущегоЯзыка = МультиязычностьСервер.СуффиксТекущегоЯзыка();
	КонецЕсли;
	
	ЗаполнитьТЗПоследствия();
	ЗаполнитьТЗСоответствиеВероятностиИменамКолонок();
	СоздатьРеквизитыИЭлементыФормы();
	
	Если ТЗСоответствиеОбъектовВоздействияИменамТаблиц.Количество() > 0 Тогда
		МассивВыбранныхЗначений = Новый Массив;
		Параметры.Свойство("МассивВыбранныхЗначений", МассивВыбранныхЗначений);
		ЗаполнитьТаблицыДаннымиДляВыбора(МассивВыбранныхЗначений);
	КонецЕсли; 
	
	УстановитьУсловноеОформление();
	
	Если Не ЗначениеЗаполнено(ТекущийПользователь) Тогда
		ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	КонецЕсли; 
	
	ЗапретитьРедактирование = НЕ (ПравоДоступа("Изменение", Метаданные.Документы.торо_ВыявленныеДефекты) 
	 									И ПравоДоступа("Изменение", Метаданные.Документы.торо_ЗаявкаНаРемонт));
	 
	ЭтаФорма.ТолькоПросмотр = ЭтаФорма.ТолькоПросмотр ИЛИ ЗапретитьРедактирование;
	Элементы.Выбрать.Доступность = НЕ ЭтаФорма.ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы.Количество() > 0 Тогда
		ГруппаОбъектыВоздействияПриСменеСтраницы(Элементы.ГруппаОбъектыВоздействия, Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы[0]);
	Иначе
		Элементы.ТЗВыбранныеЗначенияНазад.Доступность  = Ложь;
		Элементы.ТЗВыбранныеЗначенияВперед.Доступность = Ложь;
	КонецЕсли; 
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыборСтрокиТЗВыбораКатегорииРиска(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли; 
	
	ИмяТаблицы = Элемент.Имя;
	ИмяКолонки = Поле.Имя;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		
		МассивСтрокПоИмени = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяКолонки, "_");

		Если МассивСтрокПоИмени.Количество() > 2 Тогда
			
			ИмяВероятности = МассивСтрокПоИмени[2];
			
			// Если для пары категория тяжести и вероятность последствий не создана категория риска, выходим из процедуры.
			Если Не ЗначениеЗаполнено(ТекущиеДанные["Колонка_" + ИмяВероятности]) Тогда
				Возврат;
			КонецЕсли; 

			ВероятностьПоследствий = Неопределено;
			ОписаниеВероятности = "";
			
			Для каждого Строка Из ЭтаФорма[ИмяТаблицы] Цикл
				Для каждого СтрокаВероятность Из ТЗСоответствиеВероятностиИменамКолонок Цикл
					
					Строка[СтрокаВероятность.ИмяВыбран] = Ложь;
					
					Если СтрокаВероятность.ИмяКолонки = "Колонка_" + ИмяВероятности Тогда
						ВероятностьПоследствий = СтрокаВероятность.ВероятностьПоследствий;
						ОписаниеВероятности    = СтрокаВероятность.Описание;
					КонецЕсли;
					
				КонецЦикла; 
			КонецЦикла; 
			
			ТекущиеДанные["Выбран_" + ИмяВероятности] = Истина;
			
			// Добавить/изменить строку по выбранному объекту воздействия.
			ТекущийОбъектВоздействияСтроки = ТЗСоответствиеОбъектовВоздействияИменамТаблиц.НайтиСтроки(Новый Структура("ИмяТаблицы", ИмяТаблицы));
			
			Если ТекущийОбъектВоздействияСтроки.Количество() > 0 Тогда
				
				ТекущийОбъектВоздействия = ТекущийОбъектВоздействияСтроки[0].ОбъектВоздействия;
				
				
				МассивСтрок = ТЗВыбранныеЗначения.НайтиСтроки(Новый Структура("ОбъектВоздействия", ТекущийОбъектВоздействия));
				
				Если МассивСтрок.Количество() = 0 Тогда
					СтрокаРедактирования = ТЗВыбранныеЗначения.Добавить();
					СтрокаРедактирования.ОбъектВоздействия = ТекущийОбъектВоздействия;
				Иначе
					СтрокаРедактирования = МассивСтрок[0];
				КонецЕсли; 
				
				СтрокаРедактирования.КатегорияТяжести         = ТекущиеДанные.КатегорияТяжести;
				СтрокаРедактирования.ВероятностьПоследствий   = ВероятностьПоследствий;
				СтрокаРедактирования.КатегорияРиска           = ТекущиеДанные["Колонка_" + ИмяВероятности];
				СтрокаРедактирования.КритичностьДефекта       = ТекущиеДанные["Колонка_" + ИмяВероятности + "КритичностьДефекта"];
				
				
				// КДД.
				СтрокаРедактирования.КоличествоПериодовКДД    = ТекущиеДанные["Колонка_" + ИмяВероятности + "КоличествоПериодовКДД"];
				СтрокаРедактирования.ПериодичностьКДД         = ТекущиеДанные["Колонка_" + ИмяВероятности + "ПериодичностьКДД"];
				
				// ДН.
				СтрокаРедактирования.КоличествоПериодовДН     = ТекущиеДанные["Колонка_" + ИмяВероятности + "КоличествоПериодовДН"];
				СтрокаРедактирования.ПериодичностьДН          = ТекущиеДанные["Колонка_" + ИмяВероятности + "ПериодичностьДН"];
				
				// ДО.
				СтрокаРедактирования.КоличествоПериодовДО     = ТекущиеДанные["Колонка_" + ИмяВероятности + "КоличествоПериодовДО"];
				СтрокаРедактирования.ПериодичностьДО          = ТекущиеДанные["Колонка_" + ИмяВероятности + "ПериодичностьДО"];
				
				МассивНайденныхПоследствий = тзПоследствия.НайтиСтроки(Новый Структура("ОбъектВоздействия, КатегорияТяжести",
																		СтрокаРедактирования.ОбъектВоздействия, 
																		СтрокаРедактирования.КатегорияТяжести));
				
				Если МассивНайденныхПоследствий.Количество() > 0 Тогда
					МассивСтрокДляНадписи = Новый Массив;
					МассивСтрокДляНадписи.Добавить(ТекущийОбъектВоздействияСтроки[0].Заголовок);
					МассивСтрокДляНадписи.Добавить(":");
					МассивСтрокДляНадписи.Добавить(МассивНайденныхПоследствий[0].Описание);
					
					МассивСтрокДляНадписи.Добавить(" (");
					МассивСтрокДляНадписи.Добавить(СтрЗаменить(ОписаниеВероятности, Символы.ПС, " "));
					МассивСтрокДляНадписи.Добавить(")");

					Элементы["Надпись_" + ИмяТаблицы].Заголовок = СтрСоединить(МассивСтрокДляНадписи);
				КонецЕсли; 													
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли; 

	ПроставитьПризнакРезультатаВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗВыбораКатегорииРискаПриАктивизацииЯчейки(Элемент)
	Элемент.ВыделенныеСтроки.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаОбъектыВоздействияПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ПерваяСтраница    = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы[0];
	
	ОбщееЧислоСтраниц = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы.Количество();
	ПоследняяСтраница = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы[ОбщееЧислоСтраниц - 1];
	
	Элементы.ТЗВыбранныеЗначенияНазад.Доступность  = НЕ ПерваяСтраница = ТекущаяСтраница;
	Элементы.ТЗВыбранныеЗначенияВперед.Доступность = НЕ ПоследняяСтраница = ТекущаяСтраница;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	// Риски должны быть проставлены для всех объектов воздействия.
	Если не ТЗСоответствиеОбъектовВоздействияИменамТаблиц.Количество() = ТЗВыбранныеЗначения.Количество() Тогда
		ТекстСообщения = НСтр("ru = 'Не для всех объектов воздействия указаны риски. Выбор не может быть выполнен.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли; 
	
	МассивПодходящихСтрок = ТЗВыбранныеЗначения.НайтиСтроки(Новый Структура("РезультатВыбора",Истина)); 
	
	Если МассивПодходящихСтрок.Количество() > 0 Тогда
		
		ВыбраннаяСтрока = МассивПодходящихСтрок[0];
		
		СтруктураВыбора = Новый Структура("КритичностьДефекта, КрайняяДопустимаяДатаЗавершенияРемонта");
		ЗаполнитьЗначенияСвойств(СтруктураВыбора, ВыбраннаяСтрока);
		
        ДатаНачалаРемонта    = ДатаОбнаружения;
        ДатаОкончанияРемонта = СтруктураВыбора.КрайняяДопустимаяДатаЗавершенияРемонта;
		
		Если ЗначениеЗаполнено(ВыбраннаяСтрока.КоличествоПериодовДН)
			И ЗначениеЗаполнено(ВыбраннаяСтрока.ПериодичностьДН) Тогда
			ДатаНачалаРемонта = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ДатаНачалаРемонта, ВыбраннаяСтрока.ПериодичностьДН, ВыбраннаяСтрока.КоличествоПериодовДН); 
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ВыбраннаяСтрока.КоличествоПериодовДО)
			И ЗначениеЗаполнено(ВыбраннаяСтрока.ПериодичностьДО) Тогда
			ДатаОкончанияРемонта = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ДатаОбнаружения, ВыбраннаяСтрока.ПериодичностьДО, ВыбраннаяСтрока.КоличествоПериодовДО); 
		КонецЕсли; 
		
        СтруктураВыбора.Вставить("ДатаНачалаРемонта"   , ДатаНачалаРемонта);
        СтруктураВыбора.Вставить("ДатаОкончанияРемонта", ДатаОкончанияРемонта);
		
		// Сохранение результатов выбора.
		
		МассивСтруктур = Новый Массив;
		
		Для каждого Строка Из ТЗВыбранныеЗначения Цикл
			
			Структура = Новый Структура;
            Структура.Вставить("ID_Ремонта"                            , ID_Ремонта);
            Структура.Вставить("РемонтыОборудования_ID"                , ID_Ремонта);           
			Структура.Вставить("ОбъектВоздействия"                     , Строка.ОбъектВоздействия);
            Структура.Вставить("КатегорияРиска"                        , Строка.КатегорияРиска);
            Структура.Вставить("РезультатВыбора"                       , Строка.РезультатВыбора);

			МассивСтруктур.Добавить(Структура);
			
		КонецЦикла; 
		
		СтруктураВыбора.Вставить("РезультатыПодбораИзМатрицыОценкиРисков", МассивСтруктур);
		
		ОповеститьОВыборе(СтруктураВыбора);
	Иначе 
		ТекстСообщения = НСтр("ru = 'Не выбрано ни одной категории риска с заполненными данными для расчета'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Вперед(Команда)
	
	ТекущаяСтраница = Элементы.ГруппаОбъектыВоздействия.ТекущаяСтраница;
	
	Если Не ТекущаяСтраница = Неопределено Тогда
		
		ИндексСтраницы  = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница);
		
		Элементы.ГруппаОбъектыВоздействия.ТекущаяСтраница = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы[ИндексСтраницы + 1];
		
		ГруппаОбъектыВоздействияПриСменеСтраницы(Элементы.ГруппаОбъектыВоздействия,Элементы.ГруппаОбъектыВоздействия.ТекущаяСтраница);
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ТекущаяСтраница = Элементы.ГруппаОбъектыВоздействия.ТекущаяСтраница;
	
	Если Не ТекущаяСтраница = Неопределено Тогда
		
		ИндексСтраницы  = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы.Индекс(ТекущаяСтраница);
		
		Элементы.ГруппаОбъектыВоздействия.ТекущаяСтраница = Элементы.ГруппаОбъектыВоздействия.ПодчиненныеЭлементы[ИндексСтраницы - 1];
		
		ГруппаОбъектыВоздействияПриСменеСтраницы(Элементы.ГруппаОбъектыВоздействия,Элементы.ГруппаОбъектыВоздействия.ТекущаяСтраница);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКатегорииВероятности(Команда)
	ОткрытьФорму("Справочник.торо_КатегорииВероятности.Форма.ФормаСписка",,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКатегорииРиска(Команда)
	ОткрытьФорму("Справочник.торо_КатегорииРиска.Форма.ФормаСписка",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКатегорииТяжести(Команда)
	ОткрытьФорму("Справочник.торо_КатегорииТяжестиПоследствий.Форма.ФормаСписка",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбъектыВоздействия(Команда)
	ОткрытьФорму("Справочник.торо_ОбъектыВоздействия.Форма.ФормаСписка",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОписаниеПоследствий(Команда)
	ОткрытьФорму("РегистрСведений.торо_Последствия.Форма.ФормаСписка",, ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыДляСозданияЭлементовИРеквизитовФормы

&НаСервере
Процедура ЗаполнитьТЗПоследствия()
	
	тзПоследствия.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_Последствия.ОбъектВоздействия КАК ОбъектВоздействия,
	|	торо_Последствия.КатегорияТяжести КАК КатегорияТяжести,
	|	торо_Последствия.Описание КАК Описание,
	|	торо_Последствия.ОписаниеЯзык1 КАК ОписаниеЯзык1,
	|	торо_Последствия.ОписаниеЯзык2 КАК ОписаниеЯзык2
	|ИЗ
	|	РегистрСведений.торо_Последствия КАК торо_Последствия";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = тзПоследствия.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если СуффиксТекущегоЯзыка <> "" И ЗначениеЗаполнено(Выборка["Описание"+СуффиксТекущегоЯзыка]) Тогда
			НоваяСтрока.Описание = Выборка["Описание"+СуффиксТекущегоЯзыка];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЗСоответствиеВероятностиИменамКолонок()
	
	ТЗСоответствиеВероятностиИменамКолонок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_КатегорииВероятности.Ссылка КАК Ссылка,
	|	торо_КатегорииВероятности.Описание КАК Описание,
	|	торо_КатегорииВероятности.ОписаниеЯзык1 КАК ОписаниеЯзык1,
	|	торо_КатегорииВероятности.ОписаниеЯзык2 КАК ОписаниеЯзык2
	|ИЗ
	|	Справочник.торо_КатегорииВероятности КАК торо_КатегорииВероятности
	|ГДЕ
	|	НЕ торо_КатегорииВероятности.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	торо_КатегорииВероятности.РеквизитДопУпорядочивания";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Номер = 1;
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТЗСоответствиеВероятностиИменамКолонок.Добавить();
		НоваяСтрока.ВероятностьПоследствий = Выборка.Ссылка;
		НоваяСтрока.ИмяКолонки             = "Колонка_" + Формат(Номер, "ЧН=0; ЧГ=0");
		НоваяСтрока.ИмяВыбран              = "Выбран_"  + Формат(Номер, "ЧН=0; ЧГ=0");
		НоваяСтрока.Заголовок              = Строка(Выборка.Ссылка);
		НоваяСтрока.Описание	              = Выборка.Описание;
		
		Если СуффиксТекущегоЯзыка <> "" И ЗначениеЗаполнено(Выборка["Описание"+СуффиксТекущегоЯзыка]) Тогда
			НоваяСтрока.Описание = Выборка["Описание"+СуффиксТекущегоЯзыка];
		КонецЕсли;
		
		Номер = Номер+1;
	КонецЦикла; 	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыИЭлементыФормы()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ОбъектыВоздействия.Ссылка КАК Ссылка,
	|	торо_ОбъектыВоздействия.Описание КАК Описание,
	|	торо_ОбъектыВоздействия.ОписаниеЯзык1 КАК ОписаниеЯзык1,
	|	торо_ОбъектыВоздействия.ОписаниеЯзык2 КАК ОписаниеЯзык2
	|ИЗ
	|	Справочник.торо_ОбъектыВоздействия КАК торо_ОбъектыВоздействия
	|
	|УПОРЯДОЧИТЬ ПО
	|	торо_ОбъектыВоздействия.Код";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивРеквизитов = Новый Массив;
	
	// Добавление таблиц по ОБЪЕКТАМ ВОЗДЕЙСТВИЯ в виде реквизитов формы.
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Номер = 1;
		
		Пока Выборка.Следующий() Цикл
			ИмяТаблицы = "ТаблицаОбъектВоздействия" + Формат(Номер, "ЧН=0; ЧГ=0");
			ЗаголовокТаблицы = Строка(Выборка.Ссылка);
			
			РеквизитТаблица = Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений"),"", ЗаголовокТаблицы);
			МассивРеквизитов.Добавить(РеквизитТаблица);
			
			ДополнитьТаблицуОБЪЕКТЫВОЗДЕЙСТВИЯКолонками(ИмяТаблицы, МассивРеквизитов);
			
			НС = ТЗСоответствиеОбъектовВоздействияИменамТаблиц.Добавить();
			НС.ОбъектВоздействия = Выборка.Ссылка;
			НС.ИмяТаблицы        = ИмяТаблицы;
			НС.Заголовок         = ЗаголовокТаблицы;
			НС.Подсказка         = Выборка.Описание;
			
			Если СуффиксТекущегоЯзыка <> "" И ЗначениеЗаполнено(Выборка["Описание"+СуффиксТекущегоЯзыка]) Тогда
				НС.Подсказка = Выборка["Описание"+СуффиксТекущегоЯзыка];
			КонецЕсли;
			
			Номер = Номер + 1;
		КонецЦикла; 
		
	КонецЕсли; 
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Для каждого СтрокаСоответствия Из ТЗСоответствиеОбъектовВоздействияИменамТаблиц Цикл
		
		// Добавим страницу и таблицу значений на форму.
		
		Страница = Элементы.Добавить("Страница_" + СтрокаСоответствия.ИмяТаблицы, Тип("ГруппаФормы"), Элементы.ГруппаОбъектыВоздействия);
		Страница.Вид       = ВидГруппыФормы.Страница;
		Страница.Заголовок = СтрокаСоответствия.Заголовок;
		Страница.Подсказка = СтрокаСоответствия.Подсказка;
		Страница.ОтображениеПодсказки = ОтображениеПодсказки.Всплывающая;
		
		Надпись = Элементы.Добавить("Надпись_" + СтрокаСоответствия.ИмяТаблицы, Тип("ДекорацияФормы"), Страница);
		Надпись.Заголовок                = СтрокаСоответствия.Заголовок + ": <не выбрано>";
		Надпись.РастягиватьПоГоризонтали = Истина;
		Надпись.АвтоМаксимальнаяШирина   = Ложь;
		
		ТЗ = Элементы.Добавить(СтрокаСоответствия.ИмяТаблицы, Тип("ТаблицаФормы"), Страница);
		ТЗ.ПутьКДанным              = СтрокаСоответствия.ИмяТаблицы;
		ТЗ.МножественныйВыбор       = Ложь;
		ТЗ.ИзменятьСоставСтрок      = Ложь;
		ТЗ.ИзменятьПорядокСтрок     = Ложь;
		ТЗ.ТолькоПросмотр           = ЭтаФорма.ТолькоПросмотр;
		
		// Свойства внешнего вида настраиваются в ДобавитьЭлементыДляКолонокНаФорму.
		
		ТЗ.УстановитьДействие("Выбор"               , "ВыборСтрокиТЗВыбораКатегорииРиска");
		ТЗ.УстановитьДействие("ПриАктивизацииЯчейки", "ТЗВыбораКатегорииРискаПриАктивизацииЯчейки");
				
	КонецЦикла; 
	
	ДобавитьЭлементыДляКолонокНаФорму();
	
КонецПроцедуры	

&НаСервере
Процедура ДополнитьТаблицуОБЪЕКТЫВОЗДЕЙСТВИЯКолонками(ТаблицаФормыИмя, МассивРеквизитов)
	
	МассивСтруктурКолонок = Новый Массив;
	
	СтруктураКолонки = Новый Структура();
	СтруктураКолонки.Вставить("Имя"      , "КатегорияТяжести") ;
	СтруктураКолонки.Вставить("Заголовок", "Категория тяжести последствий");
	СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("СправочникСсылка.торо_КатегорииТяжестиПоследствий"));
	
	МассивСтруктурКолонок.Добавить(СтруктураКолонки);
	
	СтруктураКолонки = Новый Структура();
	СтруктураКолонки.Вставить("Имя"      , "Последствия") ;
	СтруктураКолонки.Вставить("Заголовок", "Последствия");
	СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	
	МассивСтруктурКолонок.Добавить(СтруктураКолонки);

	Для каждого СтрокаВероятность Из ТЗСоответствиеВероятностиИменамКолонок Цикл
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки) ;
		СтруктураКолонки.Вставить("Заголовок", СтрокаВероятность.Заголовок);
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("СправочникСсылка.торо_КатегорииРиска"));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяВыбран);
		СтруктураКолонки.Вставить("Заголовок", "Выбран");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("Булево"));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "КоличествоПериодовКДД") ;
		СтруктураКолонки.Вставить("Заголовок", "Количество периодов");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0, ДопустимыйЗнак.Неотрицательный)));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "ПериодичностьКДД");
		СтруктураКолонки.Вставить("Заголовок", "Периодичность");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "КоличествоПериодовДН") ;
		СтруктураКолонки.Вставить("Заголовок", "Количество периодов");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0, ДопустимыйЗнак.Неотрицательный)));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "ПериодичностьДН");
		СтруктураКолонки.Вставить("Заголовок", "Периодичность");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "КоличествоПериодовДО") ;
		СтруктураКолонки.Вставить("Заголовок", "Количество периодов");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0, ДопустимыйЗнак.Неотрицательный)));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "ПериодичностьДО");
		СтруктураКолонки.Вставить("Заголовок", "Периодичность");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
		СтруктураКолонки = Новый Структура();
		СтруктураКолонки.Вставить("Имя"      , СтрокаВероятность.ИмяКолонки + "КритичностьДефекта");
		СтруктураКолонки.Вставить("Заголовок", "КритичностьДефекта");
		СтруктураКолонки.Вставить("Тип"      , Новый ОписаниеТипов("СправочникСсылка.торо_КритичностьДефекта"));
		
		МассивСтруктурКолонок.Добавить(СтруктураКолонки);
		
	КонецЦикла; 
	
	Для каждого Колонка Из МассивСтруктурКолонок Цикл
		РеквизитФормы = Новый РеквизитФормы(Колонка.Имя, Колонка.Тип, ТаблицаФормыИмя, Колонка.Заголовок, Истина);
		МассивРеквизитов.Добавить(РеквизитФормы);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыДляКолонокНаФорму()
	
	// Добавленные колонки необходимо отобразить на форме.
	ШрифтЖирный = Новый Шрифт(,,ИСТИНА);

	ЭтаФорма.Ширина = ТЗСоответствиеВероятностиИменамКолонок.Количество() * 20;
	Элементы.ТЗВыбранныеЗначения.ВысотаВСтрокахТаблицы = ТЗСоответствиеОбъектовВоздействияИменамТаблиц.Количество()+1; 
	
	Для каждого СтрокаСоответствия Из ТЗСоответствиеОбъектовВоздействияИменамТаблиц Цикл
		
		ИмяРодительскогоЭлемента = СтрокаСоответствия.ИмяТаблицы;
		ЭлементРодитель = Элементы[ИмяРодительскогоЭлемента];
		
		ЭлементРодитель.ВысотаШапки               = 2;
		ЭлементРодитель.КоманднаяПанель.Видимость = Ложь; 
		ЭлементРодитель.ШрифтЗаголовка            = ШрифтЖирный;
		
		ЭлементРодитель.РастягиватьПоГоризонтали = Истина;
		ЭлементРодитель.ВариантУправленияВысотой=ВариантУправленияВысотойТаблицы.ПоСодержимому;
		
		ГруппаКолонок = Элементы.Добавить(ИмяРодительскогоЭлемента + "_" + "КатегорияТяжестиОписаниеПоследствий", Тип("ГруппаФормы"), ЭлементРодитель);
		ГруппаКолонок.Вид                           = ВидГруппыФормы.ГруппаКолонок;
		ГруппаКолонок.Группировка                   = ГруппировкаКолонок.Горизонтальная;
		ГруппаКолонок.ОтображатьВШапке              = Истина;
		ГруппаКолонок.Ширина                        = 25;
		ГруппаКолонок.Заголовок                     = "Категория вероятности / Категория тяжести последствий";
		ГруппаКолонок.ШрифтЗаголовка                = ШрифтЖирный;
		ГруппаКолонок.ФиксацияВТаблице              = ФиксацияВТаблице.Лево;
		ГруппаКолонок.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
		
		Колонка = Элементы.Добавить(ИмяРодительскогоЭлемента + "_" + "КатегорияТяжести", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.Вид                     = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным             = СтрокаСоответствия.ИмяТаблицы + ".КатегорияТяжести";
		Колонка.ОтображатьВШапке        = Ложь;
		Колонка.Ширина                  = 2;
		Колонка.Шрифт                   = ШрифтЖирный;
		Колонка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;	
		Колонка.ТолькоПросмотр = Истина;
		
		Колонка = Элементы.Добавить(ИмяРодительскогоЭлемента + "_" + "Последствия", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.Вид                = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным        = СтрокаСоответствия.ИмяТаблицы + ".Последствия";
		Колонка.ОтображатьВШапке   = Ложь;
		Колонка.МногострочныйРежим = Истина;
		Колонка.Ширина             = 23;
		Колонка.Шрифт              = ШрифтЖирный;
		Колонка.ТолькоПросмотр = Истина;				
		
		Для каждого ИмяКолонкиСтрока Из ТЗСоответствиеВероятностиИменамКолонок Цикл
			Колонка = Элементы.Добавить(ИмяРодительскогоЭлемента + "_" + ИмяКолонкиСтрока.ИмяКолонки + "_Период", Тип("ПолеФормы"), ЭлементРодитель);
			Колонка.Вид                           = ВидПоляФормы.ПолеВвода;
			Колонка.ПутьКДанным                   = СтрокаСоответствия.ИмяТаблицы + "." + ИмяКолонкиСтрока.ИмяКолонки + ".СтроковоеПредставлениеПериода";
			Колонка.ОтображатьВШапке              = Истина;
			Колонка.ОтображатьВПодвале            = Истина;
			Колонка.ТолькоПросмотр                = Истина;
			Колонка.АвтоМаксимальнаяШирина        = Ложь;
			Колонка.ГоризонтальноеПоложение       = ГоризонтальноеПоложениеЭлемента.Центр;
			Колонка.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
			Колонка.Заголовок                     = ИмяКолонкиСтрока.Заголовок;
			Колонка.Подсказка                     = ИмяКолонкиСтрока.Описание;
			Колонка.ШрифтЗаголовка                = ШрифтЖирный;
			Колонка.ШрифтПодвала                  = ШрифтЖирный;
			Колонка.РастягиватьПоГоризонтали      = Истина;
		КонецЦикла; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыДаннымиДляВыбора(МассивВыбранныхЗначений)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_КатегорииРиска.Ссылка КАК Ссылка,
	|	торо_КатегорииРиска.КатегорияВероятности КАК КатегорияВероятности,
	|	торо_КатегорииТяжестиПоследствий.Ссылка КАК КатегорияТяжестиПоследствий,
	|	торо_КатегорииРиска.Цвет КАК Цвет,
	|	торо_КатегорииРиска.ДатаПлановаяКрайняя_КоличествоПериодов КАК КоличествоПериодовКДД,
	|	торо_КатегорииРиска.ДатаПлановаяКрайняя_Период КАК ПериодичностьКДД,
	|	торо_КатегорииРиска.КритичностьДефекта КАК КритичностьДефекта,
	|	торо_КатегорииРиска.ДатаНачала_КоличествоПериодов КАК КоличествоПериодовДН,
	|	торо_КатегорииРиска.ДатаОкончания_КоличествоПериодов КАК КоличествоПериодовДО,
	|	торо_КатегорииРиска.ДатаНачала_Период КАК ПериодичностьДН,
	|	торо_КатегорииРиска.ДатаОкончания_Период КАК ПериодичностьДО
	|ИЗ
	|	Справочник.торо_КатегорииТяжестиПоследствий КАК торо_КатегорииТяжестиПоследствий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_КатегорииРиска КАК торо_КатегорииРиска
	|		ПО (торо_КатегорииРиска.КатегорияТяжестиПоследствий = торо_КатегорииТяжестиПоследствий.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	торо_КатегорииТяжестиПоследствий.РеквизитДопУпорядочивания
	|ИТОГИ ПО
	|	КатегорияТяжестиПоследствий";
	
	ВыборкаКатегорииТяжести = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого ТаблицаОбъектовВоздействия Из ТЗСоответствиеОбъектовВоздействияИменамТаблиц Цикл
		
		ВыборкаКатегорииТяжести.Сбросить();
		
		КоличествоСтрокВТаблице = 0;
		
		Пока ВыборкаКатегорииТяжести.Следующий() Цикл
			
			ТаблицаДляДобавления = ЭтаФорма[ТаблицаОбъектовВоздействия.ИмяТаблицы];
			
			НС = ТаблицаДляДобавления.Добавить();
			НС.КатегорияТяжести = ВыборкаКатегорииТяжести.КатегорияТяжестиПоследствий;
			
			СтрокиПоследствия = тзПоследствия.НайтиСтроки(Новый Структура("ОбъектВоздействия, КатегорияТяжести", ТаблицаОбъектовВоздействия.ОбъектВоздействия, ВыборкаКатегорииТяжести.КатегорияТяжестиПоследствий));
			
			Если СтрокиПоследствия.Количество() > 0 Тогда
				НС.Последствия = СтрокиПоследствия[0].Описание;
			КонецЕсли; 
			
			КоличествоСтрокВТаблице = КоличествоСтрокВТаблице + 1;
			
			Выборка = ВыборкаКатегорииТяжести.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				СтрокиИзСоответствия = ТЗСоответствиеВероятностиИменамКолонок.НайтиСтроки(Новый Структура("ВероятностьПоследствий", Выборка.КатегорияВероятности));
				
				Если СтрокиИзСоответствия.Количество() > 0 Тогда
					
					ИмяКолонки = СтрокиИзСоответствия[0].ИмяКолонки;
					
					НС[ИмяКолонки] = Выборка.Ссылка;
					
					СтрокаДляУсловногоОформления = ТЗТаблицаДляУсловногоОформления.Добавить();
					СтрокаДляУсловногоОформления.ИмяТаблицыОбъектВоздействия = ТаблицаОбъектовВоздействия.ИмяТаблицы;
					СтрокаДляУсловногоОформления.КатегорияРиска              = Выборка.Ссылка ;
					СтрокаДляУсловногоОформления.Цвет                        = Выборка.Цвет.Получить();
					СтрокаДляУсловногоОформления.ИмяКолонки                  = ИмяКолонки;
					
				КонецЕсли;
				
                НС[ИмяКолонки + "КритичностьДефекта"]    = Выборка.КритичностьДефекта;
                
                НС[ИмяКолонки + "ПериодичностьКДД"]      = Выборка.ПериодичностьКДД;
                НС[ИмяКолонки + "КоличествоПериодовКДД"] = Выборка.КоличествоПериодовКДД;
				
                НС[ИмяКолонки + "ПериодичностьДН"]       = Выборка.ПериодичностьДН;
                НС[ИмяКолонки + "КоличествоПериодовДН"]  = Выборка.КоличествоПериодовДН;
				
                НС[ИмяКолонки + "ПериодичностьДО"]       = Выборка.ПериодичностьДО;
                НС[ИмяКолонки + "КоличествоПериодовДО"]  = Выборка.КоличествоПериодовДО;

			КонецЦикла; 
			
		КонецЦикла;
		
		Элементы[ТаблицаОбъектовВоздействия.ИмяТаблицы].Высота = КоличествоСтрокВТаблице;
		
	КонецЦикла;
	
	ВосстановитьНастройкиВыбранныеЗначения(МассивВыбранныхЗначений);
	
КонецПроцедуры

#КонецОбласти

#Область ВосстановлениеНастроек

&НаСервере 
Процедура ПроставитьПризнакРезультатаВыбораСервер()
	
	МинимальнаяДата    = Неопределено;
	
	Для каждого Строка Из ТЗВыбранныеЗначения Цикл
		
		Строка.РезультатВыбора = Ложь;
		
		Если ЗначениеЗаполнено(Строка.КоличествоПериодовКДД)
			И ЗначениеЗаполнено(Строка.ПериодичностьКДД) Тогда
			
			Строка.КрайняяДопустимаяДатаЗавершенияРемонта = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ДатаОбнаружения, Строка.ПериодичностьКДД, Строка.КоличествоПериодовКДД);
			
			МинимальнаяДата = Строка.КрайняяДопустимаяДатаЗавершенияРемонта;
		Иначе
			Строка.КрайняяДопустимаяДатаЗавершенияРемонта = Дата("00010101");
		КонецЕсли; 
		
		
	КонецЦикла; 
	
	Если Не МинимальнаяДата = Неопределено Тогда
		
		Для каждого Строка Из ТЗВыбранныеЗначения Цикл
			
			Если Строка.КрайняяДопустимаяДатаЗавершенияРемонта = Дата("00010101")Тогда
				Продолжить;
			КонецЕсли; 
			
			Если МинимальнаяДата > Строка.КрайняяДопустимаяДатаЗавершенияРемонта Тогда
				МинимальнаяДата = Строка.КрайняяДопустимаяДатаЗавершенияРемонта;
			КонецЕсли; 
		КонецЦикла;  
		
		МассивСтрок = ТЗВыбранныеЗначения.НайтиСтроки(Новый Структура("КрайняяДопустимаяДатаЗавершенияРемонта", МинимальнаяДата));
		
		Если МассивСтрок.Количество() > 0 Тогда
			МассивСтрок[0].РезультатВыбора = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиВыбранныеЗначения(МассивВыбранныхЗначений)
	
	Для каждого Строка Из МассивВыбранныхЗначений Цикл
		
		СтрокаСоответствияОбъектовВоздействия = ТЗСоответствиеОбъектовВоздействияИменамТаблиц.НайтиСтроки(Новый Структура("ОбъектВоздействия", Строка.ОбъектВоздействия));
		Если СтрокаСоответствияОбъектовВоздействия.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСоответствияОбъектовВоздействия = СтрокаСоответствияОбъектовВоздействия[0];
		ИмяТаблицы = СтрокаСоответствияОбъектовВоздействия.ИмяТаблицы;
		
		КатегорияВероятности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.КатегорияРиска, "КатегорияВероятности");
		СтрокаИмяКолонкиВероятностиПоследствий = ТЗСоответствиеВероятностиИменамКолонок.НайтиСтроки(Новый Структура("ВероятностьПоследствий", КатегорияВероятности));
		Если  СтрокаИмяКолонкиВероятностиПоследствий.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКолонки = СтрокаИмяКолонкиВероятностиПоследствий[0].ИмяКолонки;
		ИмяКолонкиВыбран = СтрокаИмяКолонкиВероятностиПоследствий[0].ИмяВыбран;
		ОписаниеВероятности = СтрокаИмяКолонкиВероятностиПоследствий[0].Описание;
		
		СтрокиОбъектаВоздействияСРиском = ЭтаФорма[ИмяТаблицы].НайтиСтроки(Новый Структура(ИмяКолонки, Строка.КатегорияРиска));
		Если СтрокиОбъектаВоздействияСРиском.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки = СтрокиОбъектаВоздействияСРиском[0];
		ДанныеСтроки[ИмяКолонкиВыбран] = Истина;
		
		ЗаполнитьТаблицуВыбранныхЗначений(ИмяТаблицы, ИмяКолонки, ДанныеСтроки, СтрокаСоответствияОбъектовВоздействия, КатегорияВероятности, ОписаниеВероятности);
		
	КонецЦикла; 
	
	ПроставитьПризнакРезультатаВыбораСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВыбранныхЗначений(ИмяТаблицы, ИмяКолонки, ТекущиеДанные, ТекущийОбъектВоздействияСтрока, ВероятностьПоследствий, ОписаниеВероятности)
	
	ТекущийОбъектВоздействия = ТекущийОбъектВоздействияСтрока.ОбъектВоздействия;			
	
	МассивСтрок = ТЗВыбранныеЗначения.НайтиСтроки(Новый Структура("ОбъектВоздействия", ТекущийОбъектВоздействия));
	
	Если МассивСтрок.Количество() = 0 Тогда
		СтрокаРедактирования = ТЗВыбранныеЗначения.Добавить();
		СтрокаРедактирования.ОбъектВоздействия = ТекущийОбъектВоздействия;
	Иначе
		СтрокаРедактирования = МассивСтрок[0];
	КонецЕсли; 
	
	СтрокаРедактирования.КатегорияТяжести         = ТекущиеДанные.КатегорияТяжести;
	СтрокаРедактирования.ВероятностьПоследствий   = ВероятностьПоследствий;
	СтрокаРедактирования.КатегорияРиска           = ТекущиеДанные[ИмяКолонки];
	СтрокаРедактирования.КритичностьДефекта       = ТекущиеДанные[ИмяКолонки + "КритичностьДефекта"];
	
	СтрокаРедактирования.КоличествоПериодовКДД    = ТекущиеДанные[ИмяКолонки + "КоличествоПериодовКДД"];
	СтрокаРедактирования.ПериодичностьКДД         = ТекущиеДанные[ИмяКолонки + "ПериодичностьКДД"];
	
	СтрокаРедактирования.КоличествоПериодовДН     = ТекущиеДанные[ИмяКолонки + "КоличествоПериодовДН"];
	СтрокаРедактирования.ПериодичностьДН          = ТекущиеДанные[ИмяКолонки + "ПериодичностьДН"];
	
	СтрокаРедактирования.КоличествоПериодовДО     = ТекущиеДанные[ИмяКолонки + "КоличествоПериодовДО"];
	СтрокаРедактирования.ПериодичностьДО          = ТекущиеДанные[ИмяКолонки + "ПериодичностьДО"];
	
	МассивНайденныхПоследствий = тзПоследствия.НайтиСтроки(Новый Структура("ОбъектВоздействия, КатегорияТяжести",
															СтрокаРедактирования.ОбъектВоздействия, 
															СтрокаРедактирования.КатегорияТяжести));
	
	Если МассивНайденныхПоследствий.Количество() > 0 Тогда
		
		МассивСтрокДляНадписи = Новый Массив;
		МассивСтрокДляНадписи.Добавить(ТекущийОбъектВоздействияСтрока.Заголовок);
		МассивСтрокДляНадписи.Добавить(":");
		МассивСтрокДляНадписи.Добавить(МассивНайденныхПоследствий[0].Описание);
		
		МассивСтрокДляНадписи.Добавить(" (");
		МассивСтрокДляНадписи.Добавить(СтрЗаменить(ОписаниеВероятности, Символы.ПС, " "));
		МассивСтрокДляНадписи.Добавить(")");
		
		Элементы["Надпись_" + ИмяТаблицы].Заголовок = СтрСоединить(МассивСтрокДляНадписи);
		
	КонецЕсли; 													
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Выделение жирным выбранной категории риска.
	СписокИменТЗ = Новый СписокЗначений;
	
	Для каждого Строка Из ТЗСоответствиеОбъектовВоздействияИменамТаблиц Цикл
		
		ИмяТаблицы = Строка.ИмяТаблицы;
		СписокИменТЗ.Добавить(ИмяТаблицы);
		
		Для каждого СтрокаИмяКолонки Из ТЗСоответствиеВероятностиИменамКолонок Цикл
			
			Элемент = УсловноеОформление.Элементы.Добавить();
			
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "_" + СтрокаИмяКолонки.ИмяКолонки + "_Период");
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + "." + СтрокаИмяКолонки.ИмяВыбран);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = ИСТИНА;
			
			Шрифт = Новый Шрифт(Новый Шрифт,,,Истина,,Истина);
			Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Шрифт);

		КонецЦикла; 
				
	КонецЦикла; 
	
	ИменаКолонок = ТЗТаблицаДляУсловногоОформления.Выгрузить(,"ИмяКолонки");
	ИменаКолонок.Свернуть("ИмяКолонки");
	
	Для каждого стрИмяКолонки Из ИменаКолонок Цикл
		
		// Получим все ссылки для указания условного оформления в колонке.
		ДанныеДляОформленияОднойКолонки = ТЗТаблицаДляУсловногоОформления.Выгрузить().Скопировать(Новый Структура("ИмяКолонки", стрИмяКолонки.ИмяКолонки));
		
		ЦветаВКолонке = ДанныеДляОформленияОднойКолонки.Скопировать(,"Цвет");
		ЦветаВКолонке.Свернуть("Цвет");
		
		Для каждого стрЦвет Из ЦветаВКолонке Цикл
			
			МассивПодходящихКатегорийРисков = ДанныеДляОформленияОднойКолонки.Скопировать(Новый Структура("Цвет", стрЦвет.Цвет),"КатегорияРиска").ВыгрузитьКолонку("КатегорияРиска");
			
			СписокРисков = Новый СписокЗначений;
			СписокРисков.ЗагрузитьЗначения(МассивПодходящихКатегорийРисков);
			
			Для каждого ИмяТЗ Из СписокИменТЗ Цикл
				Элемент = УсловноеОформление.Элементы.Добавить();
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяТЗ.Значение + "_" + стрИмяКолонки.ИмяКолонки + "_Период");		
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяТЗ.Значение + "_" + стрИмяКолонки.ИмяКолонки + "_Критичность");		
				
				
				ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТЗ.Значение + "." + стрИмяКолонки.ИмяКолонки);
				ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				ОтборЭлемента.ПравоеЗначение = СписокРисков;
				
				Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", стрЦвет.Цвет);
				
				Элемент = УсловноеОформление.Элементы.Добавить();
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТЗВыбранныеЗначения");
				
				ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТЗВыбранныеЗначения.КатегорияРиска");//"ТЗВыбранныеЗначения.КатегорияРиска");
				ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				ОтборЭлемента.ПравоеЗначение = СписокРисков;
				
				Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", стрЦвет.Цвет);

			КонецЦикла; 
		
		КонецЦикла; 
				
	КонецЦикла; 
	
	// Выбранная строка отображается жирным шрифтом.
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТЗВыбранныеЗначения");		
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТЗВыбранныеЗначения.РезультатВыбора");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Шрифт = Новый Шрифт(Новый Шрифт,,,Истина,,Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Шрифт);
	
	
КонецПроцедуры

&НаКлиенте 
Процедура ПроставитьПризнакРезультатаВыбора()
	
	МинимальнаяДата    = Неопределено;
	
	Для каждого Строка Из ТЗВыбранныеЗначения Цикл
		
		Строка.РезультатВыбора = Ложь;
		
		Если ЗначениеЗаполнено(Строка.КоличествоПериодовКДД)
			И ЗначениеЗаполнено(Строка.ПериодичностьКДД) Тогда
			
			Строка.КрайняяДопустимаяДатаЗавершенияРемонта = ОбщегоНазначенияУТКлиентСервер.РассчитатьДатуОкончанияПериода(ДатаОбнаружения, Строка.ПериодичностьКДД, Строка.КоличествоПериодовКДД);
			
			МинимальнаяДата = Строка.КрайняяДопустимаяДатаЗавершенияРемонта;
		Иначе
			Строка.КрайняяДопустимаяДатаЗавершенияРемонта = Дата("00010101");
		КонецЕсли; 
		
		
	КонецЦикла; 
	
	Если Не МинимальнаяДата = Неопределено Тогда
		
		Для каждого Строка Из ТЗВыбранныеЗначения Цикл
			
			Если Строка.КрайняяДопустимаяДатаЗавершенияРемонта = Дата("00010101")Тогда
				Продолжить;
			КонецЕсли; 
			
			Если МинимальнаяДата > Строка.КрайняяДопустимаяДатаЗавершенияРемонта Тогда
				МинимальнаяДата = Строка.КрайняяДопустимаяДатаЗавершенияРемонта;
			КонецЕсли; 
		КонецЦикла;  
		
		МассивСтрок = ТЗВыбранныеЗначения.НайтиСтроки(Новый Структура("КрайняяДопустимаяДатаЗавершенияРемонта", МинимальнаяДата));
		
		Если МассивСтрок.Количество() > 0 Тогда
			МассивСтрок[0].РезультатВыбора = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

 




  
