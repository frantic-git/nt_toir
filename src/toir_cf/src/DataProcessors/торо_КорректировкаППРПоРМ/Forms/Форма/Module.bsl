#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДатаНачалаЛимита") Тогда
		Объект.ДатаНачалаЛимита = Параметры.ДатаНачалаЛимита;
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаОкончанияЛимита") Тогда
		Объект.ДатаОкончанияЛимита = Параметры.ДатаОкончанияЛимита;
	КонецЕсли;
	
	Если Параметры.Свойство("СтруктураПланаРемонтов") Тогда
		Для каждого Стр Из Параметры.СтруктураПланаРемонтов Цикл
			НС = Объект.ПланРемонтовКорректировка.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Стр);
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьОценкиРМ();
	
	Если Объект.ДатаНачалаЛимита <> Объект.ДатаОкончанияЛимита Тогда
		ДатаТек = Объект.ДатаНачалаЛимита;
		
		Пока ДатаТек <= Объект.ДатаОкончанияЛимита Цикл
			СписокГодов.Добавить(ДатаТек, Формат(ДатаТек, "ЧГ="));
			ДатаТек = ДатаТек + 1;
		КонецЦикла;
		
		ГодКорректировки = Формат(Объект.ДатаНачалаЛимита, "ЧГ=") + " - " + Формат(Объект.ДатаОкончанияЛимита, "ЧГ=");
		
		СписокГодов.Вставить(0,Формат(Объект.ДатаНачалаЛимита, "ЧГ=") + " - " + Формат(Объект.ДатаОкончанияЛимита, "ЧГ="));
		Элементы.ГодКорректировки.СписокВыбора.Очистить();
		Для Каждого ЭлементСписка Из СписокГодов Цикл
			Элементы.ГодКорректировки.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	Иначе
		ГодКорректировки = Объект.ДатаНачалаЛимита;
		Элементы.ГодКорректировки.КнопкаВыпадающегоСписка = Ложь;
	КонецЕсли;
	
	Объект.ПланРемонтовКорректировка.Сортировать("Удалить Возр,СпособВыполнения Убыв, РентабельностьРемонта Возр,СуммаРемонта Убыв, ОбъектРемонтныхРабот Возр, ВидРемонтныхРабот Возр, ДатаНач Возр");
	
	ЗаполнитьСпискиДоступныхОтборов();
	
	ПересчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СписокОрганизаций.Количество() = 1 Тогда
		ОтборОрганизация = СписокОрганизаций[0].Значение;
		ОтборОрганизацияПриИзменении(ОтборОрганизация);
	КонецЕсли;
	
	УстановитьОтборСписка();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	ВремМассив = ТаблицаНаправлений.НайтиСтроки(Новый Структура("Организация", ОтборОрганизация));
	
	Если ВремМассив.Количество() > 0 Тогда
		ИскомоеНаправление = ВремМассив[0].Направление;
		ОтборНаправление = ИскомоеНаправление;
		ОтборНаправлениеПриИзменении(ОтборНаправление);
	Иначе
		УстановитьОтборСписка();
		ПересчитатьСумму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЕстьОрганизации = Ложь;
	Для каждого Строка из СписокОрганизаций Цикл
		Если ЗначениеЗаполнено(Строка.Значение) Тогда
			ЕстьОрганизации = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьОрганизации Тогда
		СтруктураОтбора = Новый Структура("Ссылка", СписокОрганизаций);
		ПараметрыФормы = Новый Структура("Отбор", СтруктураОтбора);
		ОткрытьФорму("Справочник.Организации.ФормаВыбора", ПараметрыФормы, Элемент, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаправлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	СписокНаправлений = Новый СписокЗначений;
	ЕстьНаправления = Ложь;
	Для каждого Строка из ТаблицаНаправлений Цикл
		Если ЗначениеЗаполнено(Строка.Направление) Тогда
			Если ОтборОрганизация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") ИЛИ Строка.Организация = ОтборОрганизация Тогда
				СписокНаправлений.Добавить(Строка.Направление);
			КонецЕсли; 
			ЕстьНаправления = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьНаправления Тогда
		СтруктураОтбора = Новый Структура("Ссылка", СписокНаправлений);
		ПараметрыФормы = Новый Структура("Отбор", СтруктураОтбора);		
		ОткрытьФорму("Справочник.торо_НаправленияОбъектовРемонтныхРабот.ФормаВыбора",ПараметрыФормы,Элемент, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаправлениеПриИзменении(Элемент)
	
	УстановитьОтборСписка();
	ПересчитатьСумму();

КонецПроцедуры

&НаКлиенте
Процедура ГодКорректировкиПриИзменении(Элемент)
	
	Попытка 
		ГодКорректировки = Число(ГодКорректировки);
	Исключение
	КонецПопытки;
	
	УстановитьОтборСписка();
	ПересчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодКорректировкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Число") Тогда
		СтандартнаяОбработка = Ложь;
		ГодКорректировки = ВыбранноеЗначение;
		
		СтруктураОтбора = Новый Структура(Элементы.ПланРемонтовКорректировка.ОтборСтрок);
		Если СтруктураОтбора.Свойство("Год") Тогда
			СтруктураОтбора.Удалить("Год");
		КонецЕсли;
		Элементы.ПланРемонтовКорректировка.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
		
		ПересчитатьСумму();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПланРемонтовКорректировка
&НаКлиенте
Процедура ПланРемонтовКорректировкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПланРемонтовКорректировкаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПланРемонтовКорректировкаУдалитьПриИзменении(Элемент)
	ТекДанные = Элементы.ПланРемонтовКорректировка.ТекущиеДанные;
	
	СуммаОстаток = СуммаОстаток + ?(ТекДанные.Удалить,-1,1) * ТекДанные.СуммаРемонта;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Выбрать(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Перенести данные по ремонтам в документ ППР?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для каждого ТекСтрока из Объект.ПланРемонтовКорректировка Цикл
		ТекСтрока.Удалить = Истина;
	КонецЦикла;
	ПересчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для каждого ТекСтрока из Объект.ПланРемонтовКорректировка Цикл
		ТекСтрока.Удалить = Ложь;
	КонецЦикла;
	ПересчитатьСумму();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПересчитатьСумму()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(торо_ПлановыеРемонтныеРаботыСрезПоследних.СтоимостьРемонта) КАК СтоимостьРемонта
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
	|			,
	|			НЕ ID В (&СписокID)
	|				И ВЫБОР
	|					КОГДА &Филиал = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ОбъектРемонтныхРабот.Организация = &Филиал
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &Направление = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ОбъектРемонтныхРабот.Направление = &Направление
	|				КОНЕЦ) КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	|ГДЕ
	|	торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен = ЛОЖЬ
	|	И торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен = ЛОЖЬ
	|	И ГОД(торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот) >= &ГодНач
	|	И ГОД(торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот) <= &ГодКон";
	
	Запрос.УстановитьПараметр("ГодНач", ?(ТипЗнч(ГодКорректировки) = Тип("Строка"), Объект.ДатаНачалаЛимита, ГодКорректировки));
	Запрос.УстановитьПараметр("ГодКон", ?(ТипЗнч(ГодКорректировки) = Тип("Строка"), Объект.ДатаОкончанияЛимита, ГодКорректировки));
	Запрос.УстановитьПараметр("Направление", ?(ТипЗнч(ОтборНаправление) <> Тип("Строка") И ЗначениеЗаполнено(ОтборНаправление), ОтборНаправление, Неопределено));
	Запрос.УстановитьПараметр("Филиал", ?(ТипЗнч(ОтборОрганизация) <> Тип("Строка") И ЗначениеЗаполнено(ОтборОрганизация), ОтборОрганизация, Неопределено));
	
	СтруктураПоиска = Новый Структура;
	Если ТипЗнч(ОтборОрганизация) <> Тип("Строка") И ЗначениеЗаполнено(ОтборОрганизация) Тогда
		СтруктураПоиска.Вставить("Организация", ОтборОрганизация);
	КонецЕсли;
	Если ТипЗнч(ОтборНаправление) <> Тип("Строка") И ЗначениеЗаполнено(ОтборНаправление) Тогда
		СтруктураПоиска.Вставить("Направление", ОтборНаправление);
	КонецЕсли;
	
	Если ТипЗнч(ГодКорректировки) <> Тип("Строка") Тогда
		СтруктураПоиска.Вставить("Год", ГодКорректировки);
	КонецЕсли;

	ВремТаб = Объект.ПланРемонтовКорректировка.Выгрузить(СтруктураПоиска);
	
	Запрос.УстановитьПараметр("СписокID",ВремТаб.ВыгрузитьКолонку("ID"));
	
	СтруктураПоиска.Вставить("Удалить",Ложь);
	СтруктураПоиска.Вставить("Отменен",Ложь);
	СтруктураПоиска.Вставить("Замещен",Ложь);
	ВремТаб = Объект.ПланРемонтовКорректировка.Выгрузить(СтруктураПоиска);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.СтоимостьРемонта <> Null Тогда
		СуммаОстаток = Выборка.СтоимостьРемонта;
	Иначе
		СуммаОстаток = 0;
	КонецЕсли;
	
	СуммаОстаток = СуммаОстаток + ВремТаб.Итог("СуммаРемонта");
	
	ПолучитьСуммуЛимита();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСуммуЛимита()
	
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних.Лимит) КАК Лимит,
	|	торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних.СпособВыполнения КАК СпособВыполнения
	|ИЗ
	|	РегистрСведений.торо_ГодовыеЛимитыРемонтныхРабот.СрезПоследних(
	|			,
	|			ВЫБОР
	|					КОГДА &Направление = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Направление = &Направление
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &Филиал = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Организация = &Филиал
	|				КОНЕЦ
	|				И ГОД(Период) >= &ГодНач
	|				И ГОД(Период) <= &ГодКон) КАК торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних.СпособВыполнения";
	
	Запрос.УстановитьПараметр("ГодНач", ?(ТипЗнч(ГодКорректировки) = Тип("Строка"), Объект.ДатаНачалаЛимита, ГодКорректировки));
	Запрос.УстановитьПараметр("ГодКон", ?(ТипЗнч(ГодКорректировки) = Тип("Строка"), Объект.ДатаОкончанияЛимита, ГодКорректировки));
	Запрос.УстановитьПараметр("Направление", ?(ТипЗнч(ОтборНаправление) <> Тип("Строка") И ЗначениеЗаполнено(ОтборНаправление), ОтборНаправление, Неопределено));
	Запрос.УстановитьПараметр("Филиал", ?(ТипЗнч(ОтборОрганизация) <> Тип("Строка") И ЗначениеЗаполнено(ОтборОрганизация), ОтборОрганизация, Неопределено));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СуммаЛимитПодрядный = 0;
	СуммаЛимитХозспособ = 0;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.СпособВыполнения = Перечисления.СпособыСтроительства.Подрядный Тогда
			СуммаЛимитПодрядный = Выборка.Лимит;
		Иначе
			СуммаЛимитХозспособ = Выборка.Лимит;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиДоступныхОтборов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних.Организация КАК Организация,
	|	торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних.Направление КАК Направление
	|ИЗ
	|	РегистрСведений.торо_ГодовыеЛимитыРемонтныхРабот.СрезПоследних(
	|			,
	|			ГОД(Период) >= &ГодНач
	|				И ГОД(Период) <= &ГодКон) КАК торо_ГодовыеЛимитыРемонтныхРаботСрезПоследних";
	
	Запрос.УстановитьПараметр("ГодНач", Объект.ДатаНачалаЛимита);
	Запрос.УстановитьПараметр("ГодКон", Объект.ДатаОкончанияЛимита);
	
	Таб = Запрос.Выполнить().Выгрузить();
	Таб.Свернуть("Организация,Направление");
	ТаблицаНаправлений.Загрузить(Таб);
	
	ТабОрг = Таб.Скопировать(,"Организация");
	ТабОрг.Свернуть("Организация");
	
	СписокОрганизаций.ЗагрузитьЗначения(ТабОрг.ВыгрузитьКолонку("Организация"));
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОценкиРМ()
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Таб.ID,
	|	Таб.ВидРемонтныхРабот,
	|	Таб.ОбъектРемонтныхРабот,
	|	Таб.датаНач,
	|	Таб.датаКон,
	|	Таб.СпособВыполнения,
	|	Таб.Исполнитель,
	|	Таб.СуммаРемонта,
	|	Таб.Отменен,
	|	Таб.Удалить,
	|	Таб.ГраничныйРемонт,
	|	Таб.Замещен
	|ПОМЕСТИТЬ ИсходнаяТаб
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаб.ID,
	|	ИсходнаяТаб.ВидРемонтныхРабот,
	|	ИсходнаяТаб.ОбъектРемонтныхРабот,
	|	ИсходнаяТаб.датаНач,
	|	ИсходнаяТаб.датаКон,
	|	ИсходнаяТаб.СпособВыполнения,
	|	ИсходнаяТаб.Исполнитель,
	|	ИсходнаяТаб.СуммаРемонта,
	|	ИсходнаяТаб.Отменен,
	|	ИсходнаяТаб.ГраничныйРемонт,
	|	ИсходнаяТаб.Замещен,
	|	торо_ОценкаРМПлановыхРемонтов.ВероятностьВыходаИзСтроя,
	|	торо_ОценкаРМПлановыхРемонтов.Ущерб,
	|	торо_ОбъектыРемонта.Родитель,
	|	торо_ОбъектыРемонта.Организация,
	|	торо_ОбъектыРемонта.Направление,
	|	ВЫБОР
	|		КОГДА ИсходнаяТаб.СуммаРемонта = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(торо_ОценкаРМПлановыхРемонтов.ВероятностьВыходаИзСтроя, 0) / 100 * ЕСТЬNULL(торо_ОценкаРМПлановыхРемонтов.Ущерб, 0) / ИсходнаяТаб.СуммаРемонта
	|	КОНЕЦ КАК РентабельностьРемонта,
	|	ВЫБОР
	|		КОГДА ИсходнаяТаб.СуммаРемонта = 0
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(торо_ОценкаРМПлановыхРемонтов.ВероятностьВыходаИзСтроя, 0) / 100 * ЕСТЬNULL(торо_ОценкаРМПлановыхРемонтов.Ущерб, 0) = 0
	|			ТОГДА ИСТИНА
	|		КОГДА ИсходнаяТаб.Отменен
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Удалить,
	|	ГОД(ИсходнаяТаб.датаНач) КАК Год
	|ИЗ
	|	ИсходнаяТаб КАК ИсходнаяТаб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОценкаРМПлановыхРемонтов КАК торо_ОценкаРМПлановыхРемонтов
	|		ПО (торо_ОценкаРМПлановыхРемонтов.ID = ИсходнаяТаб.ID)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	|		ПО (торо_ОбъектыРемонта.Ссылка = ИсходнаяТаб.ОбъектРемонтныхРабот)";
	Запрос.УстановитьПараметр("Таб", Объект.ПланРемонтовКорректировка.Выгрузить());
	
	Объект.ПланРемонтовКорректировка.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
    КонецЕсли;
	
	ВыбратьФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФрагмент()
    МассивПередачи = Новый Массив;
	Для каждого СтрокаТЧ Из Объект.ПланРемонтовКорректировка Цикл
		СтруктураДанных = Новый Структура("ID, Отменен", СтрокаТЧ.ID, СтрокаТЧ.Удалить);
        МассивПередачи.Добавить(СтруктураДанных);
    КонецЦикла;
    
    Оповестить("КорректировкаППРПоЛимитам", МассивПередачи);
    Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСписка()
	
	СтруктураОтбора = Новый Структура;
	Если ЗначениеЗаполнено(ГодКорректировки) Тогда
		СтруктураОтбора.Вставить("Год", ГодКорректировки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборНаправление) И ТипЗнч(ОтборНаправление) <> Тип("Строка") Тогда
		СтруктураОтбора.Вставить("Направление", ОтборНаправление);
	КонецЕсли;

	Если ЗначениеЗаполнено(ОтборОрганизация) И ТипЗнч(ОтборОрганизация) <> Тип("Строка") Тогда
		СтруктураОтбора.Вставить("Организация", ОтборОрганизация);
	КонецЕсли;
	
	Элементы.ПланРемонтовКорректировка.ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если НЕ ТипЗнч(ОтборОрганизация) = Тип("Строка") Тогда
		ПараметрыПолученияДанных.Отбор.Вставить("Ссылка", СписокОрганизаций);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если НЕ ТипЗнч(ОтборОрганизация) = Тип("Строка") Тогда
		ПараметрыПолученияДанных.Отбор.Вставить("Ссылка", СписокОрганизаций);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаправлениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если НЕ ТипЗнч(ОтборНаправление) = Тип("Строка") Тогда
		СписокОтбора = Новый СписокЗначений;
		Для каждого Строка из ТаблицаНаправлений Цикл
			Если ЗначениеЗаполнено(Строка.Направление) Тогда
				Если ОтборОрганизация = "<По всем организациям>" ИЛИ Строка.Организация = ОтборОрганизация Тогда
					СписокОтбора.Добавить(Строка.Направление);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;		
		ПараметрыПолученияДанных.Отбор.Вставить("Ссылка", СписокОтбора);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаправлениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если НЕ ТипЗнч(ОтборНаправление) = Тип("Строка") Тогда
		СписокОтбора = Новый СписокЗначений;
		Для каждого Строка из ТаблицаНаправлений Цикл
			Если ЗначениеЗаполнено(Строка.Направление) Тогда
				Если ОтборОрганизация = "<По всем организациям>" ИЛИ Строка.Организация = ОтборОрганизация Тогда
					СписокОтбора.Добавить(Строка.Направление);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
		ПараметрыПолученияДанных.Отбор.Вставить("Ссылка", СписокОтбора);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти