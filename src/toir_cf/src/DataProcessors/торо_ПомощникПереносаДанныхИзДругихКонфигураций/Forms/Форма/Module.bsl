#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("КонфигурацияИсточник") Тогда
	    ТекстСообщения = НСтр("ru='Обработка не предназначена для непосредственного использования'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
		Возврат;
	КонецЕсли;
	
	КонфигурацияИсточник = Параметры.КонфигурацияИсточник;
	УстановитьЗаголовкиЭлементовФормы(КонфигурацияИсточник);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Элементы.ГруппаШагЗагрузкаДанных.Доступность = Ложь;
	Элементы.ДекорацияШагЗагрузкиДанных.Доступность = Ложь;
	Элементы.СтраницыИндикаторов_ЗагрузкаДанных.Доступность = Ложь;
	Элементы.ОписаниеЗагрузкиДанных.Доступность = Ложь;
	Элементы.ГруппаОписаниеОшибкиЗагрузкиДанных.Доступность = Ложь;
	
	Элементы.ГруппаШагЗагрузкаКлючейМП.Доступность = Ложь;
	Элементы.ГруппаШагЗагрузкаНастроек.Доступность = Ложь;
	
	Если КонфигурацияИсточник = "ТОИР13" Тогда
	    Элементы.ГруппаШагЗагрузкаКлючейМП.Видимость = Ложь;
		Элементы.ГруппаШагЗагрузкаНастроек.Видимость = Ложь;
		
		Элементы.ДекорацияШагЗагрузкиДанных.Заголовок = "Загрузка данных";
		Элементы.ГруппаЗагрузкаПравил.Видимость = Ложь;
	Иначе
		Элементы.ОписаниеЗагрузкиДанных.Заголовок = "Выполняется чтение файла с данными из источника (справочники, документы, регистры и т.д.), загрузка и запись их в систему. В архиве должен быть файл Message_20_30.xml.";
	КонецЕсли;
	
	СброситьОформлениеФормы();
	
	ИсточникПравил = ПолучитьИсточникПравилОбмена();
	
	ИзменитьРежимОбработки();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбработчикОповещенияОПрогрессе_Перенос20_30" Тогда
		ОбработчикОповещенияОПрогрессе(Параметр, Неопределено);
	ИначеЕсли ИмяСобытия = "ОбработчикОкончанияФоновогоЗадания_Перенос20_30" Тогда
		ОбработчикОкончанияФоновогоЗадания(Параметр, Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Или Не ЗначениеЗаполнено(IDЗадания) Тогда
	    Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Отказ = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемПослеВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Выполняется загрузка данных. Если прервать процесс, данные не будут сохранены. Закрыть форму?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыДиалога = Новый Структура();
	ПараметрыДиалога.Вставить("РежимДиалога", РежимДиалогаВыбораФайла.Открытие);
	
	Если КонфигурацияИсточник = "ТОИР13" Тогда
		ПараметрыДиалога.Вставить("Заголовок", НСтр("ru = 'Выберите путь к файлу с данными"));
		ПараметрыДиалога.Вставить("Фильтр",    НСтр("ru = 'xml-файл") + " (*.xml)|*.xml");
	ИначеЕсли КонфигурацияИсточник = "ТОИР20" Тогда
		ПараметрыДиалога.Вставить("Заголовок", НСтр("ru = 'Выберите путь к архиву с файлами"));
		ПараметрыДиалога.Вставить("Фильтр",    НСтр("ru = 'ZIP-файл") + " (*.zip)|*.zip");
	КонецЕсли;
		
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяСвойства", Элемент.Имя);
	ДополнительныеПараметры.Вставить("ПараметрыДиалога", ПараметрыДиалога);
	
	Оповещение = Новый ОписаниеОповещения("ОбработчикВыбораДанныхЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстПредупреждения = НСтр("ru = 'Для данной операции необходимо установить расширение для веб-клиента 1С:Предприятие.'");
	
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение, ТекстПредупреждения, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	Если Не ЗначениеЗаполнено(ИмяФайлаДанных) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран файл с данными! Загрузка не может быть выполнена.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	    Возврат;
	КонецЕсли;
	
	СброситьОформлениеФормы();
	
	Элементы.ИмяФайлаДанных.Доступность = Ложь;
	Элементы.ЗагрузитьДанные.Доступность = Ложь;
	
	ДанныеЗадания = ПодготовитьДанныеДляФоновогоЗадания();
	ПараметрыЗапуска = ПодготовитьПараметрыДляФоновогоЗадания(ДанныеЗадания);
	
	РезультатВыполнения = ПолучитьОписаниеСтруктурыВыполненияФЗ();
	РезультатВыполнения.ЗагрузкаДанных.Статус = "Выполняется";
	УстновитьОформлениеФормы();
	
	ПараметрыФормы = Новый Структура("ДанныеЗадания, ПараметрыЗапуска, РезультатВыполнения, ЭтоКлиент, ИмяФайлаДанных", ДанныеЗадания, ПараметрыЗапуска, РезультатВыполнения, ЭтоКлиент, ИмяФайлаДанных);
	ОткрытьФорму("Обработка.торо_ПомощникПереносаДанныхИзДругихКонфигураций.Форма.ФормаВыполнения", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПравила(Команда)
	Если Не ЗначениеЗаполнено(ПолучитьУзелПланаОбмена()) Тогда
		ТекстСообщения = НСтр("ru = 'Не создан узел плана обмена. Загрузка правил невозможна!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	    Возврат;
	КонецЕсли;
	
	Если ИсточникПравил = "ЗагруженныеИзФайла" Тогда
	    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Заголовок = НСтр("ru = 'Выберите путь к архиву с правилами");
		Диалог.Фильтр = НСтр("ru = 'ZIP-файл") + " (*.zip)|*.zip";
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьПравилаЗавершение", ЭтотОбъект);
		Диалог.Показать(ОписаниеОповещения);
	ИначеЕсли ИсточникПравил = "ТиповыеИзКонфигурации" Тогда
		Отказ = Ложь;
		ЗагрузитьПравилаНаСервере(Отказ, Ложь)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсточникПравилПриИзменении(Команда)
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаКлиенте(Команда)
	
	Если Не ЭтоКлиент Тогда
		ЭтоКлиент = Истина;
		ИзменитьРежимОбработки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаСервере(Команда)
	
	Если ЭтоКлиент Тогда
		ЭтоКлиент = Ложь;
		ИзменитьРежимОбработки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФоновыеЗадания

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(IDЗадания)
    ДлительныеОперации.ОтменитьВыполнениеЗадания(IDЗадания);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеСтруктурыВыполненияФЗ()
	Возврат Обработки.торо_ПомощникПереносаДанныхИзДругихКонфигураций.ПолучитьОписаниеСтруктурыВыполненияФЗ();
КонецФункции

#Область ПараметрыФоновыхЗаданий

&НаКлиенте
Функция ПодготовитьДанныеДляФоновогоЗадания()
	СтруктураПараметров = Новый Структура("НаименованиеЗадания, ВыполняемыйМетод, ВариантЗадания,
											|ПодключитьОбработчикОповещенияОПрогрессе, ОбработчикОповещенияОПрогрессе,
											|ПодключитьОбработчикЗавершения, ОбработчикЗавершения, ПрогрессПроцентВыполнения,
											|ЗакрыватьФормуВыполненияПриЗавершении, ЗапускатьВыполнениеАвтоматически, ЗакрыватьФормуВладельцаПриВыполнении");
	
	СтруктураПараметров.ВариантЗадания = "ЗагрузитьИзТОИР";
	СтруктураПараметров.ПодключитьОбработчикЗавершения = Истина;
	СтруктураПараметров.ОбработчикЗавершения = "ОбработчикОкончанияФоновогоЗадания";
	СтруктураПараметров.ЗапускатьВыполнениеАвтоматически = Истина;
	
	СтруктураПараметров.НаименованиеЗадания = "Загрузить данные из других версий конфигурации ТОИР";
	СтруктураПараметров.ВыполняемыйМетод = "Обработки.торо_ПомощникПереносаДанныхИзДругихКонфигураций.ЗагрузитьДанные";
	СтруктураПараметров.ПодключитьОбработчикОповещенияОПрогрессе = Истина;
	СтруктураПараметров.ОбработчикОповещенияОПрогрессе = "ОбработчикОповещенияОПрогрессе";
	СтруктураПараметров.ЗакрыватьФормуВладельцаПриВыполнении = Ложь;
	СтруктураПараметров.ПрогрессПроцентВыполнения = Ложь;
	
	Возврат СтруктураПараметров;
КонецФункции

&НаКлиенте
Функция ПодготовитьПараметрыДляФоновогоЗадания(ДанныеЗадания)
	// Если поместить файл во временное хранилище и передать в ФЗ адрес через параметры, то в ФЗ не получится
	// получить данные из ВХ, будет Неопределено. Поэтому передаем как двоичные данные.
	СтруктураПараметров = Новый Структура("ИмяФайлаДанных, КонфигурацияИсточник, ЭтоКлиент", ИмяФайлаДанных, КонфигурацияИсточник, ЭтоКлиент);
	
	// В режиме "На клиента" архив в виде двоичных данных записывается в структуру параметров в форме выполнения
	
	Возврат СтруктураПараметров;
КонецФункции

#КонецОбласти

#Область ОбработчикиОповещенийФоновыхЗаданий

&НаКлиенте 
Процедура ОбработчикОповещенияОПрогрессе(Результат, ДополнительныеПараметры) Экспорт
	Попытка
		РезультатВыполнения = Результат;
		УстновитьОформлениеФормы();
	Исключение
		ОписаниеОшибки = Нстр("ru = 'Ошибка при обработке оповещения о прогрессе выполнения фонового задания по причине:'") + Символы.ПС + Символы.ПС + ОписаниеОшибки();
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОкончанияФоновогоЗадания(Результат, ДополнительныеПараметры) Экспорт
	Попытка
		Если Результат = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		РезультатВыполнения = Результат;
		Если Не ЗначениеЗаполнено(РезультатВыполнения)
			Или Не ТипЗнч(РезультатВыполнения) = Тип("Структура") Тогда
			ОписаниеОшибки = Нстр("ru = 'При получении результата выполнения фонового задания произашла ошибка, см. журнал регистрации.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
		КонецЕсли;
		
		Если РезультатВыполнения.Свойство("ТекстОшибки") Тогда
		    ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыполнения.ТекстОшибки);
		КонецЕсли;
		
		УстновитьОформлениеФормы();
		Элементы.ГруппаЗагрузкаПравил.Доступность = Истина;
		
		Элементы.ИмяФайлаДанных.Доступность = Истина;
		Элементы.ЗагрузитьДанные.Доступность = Истина;
		IDЗадания = Неопределено;
		
		ОбновитьИнтерфейс();
	Исключение
		ОписаниеОшибки = Нстр("ru = 'Ошибка при обработке оповещения об окончании выполнения фонового задания по причине:'") + Символы.ПС + Символы.ПС + ОписаниеОшибки();
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
	КонецПопытки;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПланыОбмена

&НаКлиенте
Процедура ЗагрузитьПравилаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	АдресВременногоХранилища = "";
	
	Попытка
		Если ЭтоКлиент Тогда
		    ДвоичныеДанные = Новый ДвоичныеДанные(ВыбранныеФайлы[0]);
			АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
		КонецЕсли;
	Исключение
		ОписаниеОшибки = Нстр("ru = 'Ошибка при чтении файла правил обмена по причине:'") + Символы.ПС + Символы.ПС + ОписаниеОшибки();
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
	КонецПопытки;
	
	ЗагрузитьПравилаНаСервере(Отказ, Истина, ВыбранныеФайлы[0], АдресВременногоХранилища);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПравилаНаСервере(Отказ, ИзФайла = Истина, ИмяФайла = "", АдресВременногоХранилища = "")
	Если Не ИзФайла Тогда
		Обработки.торо_ПомощникПереносаДанныхИзДругихКонфигураций.ЗагрузитьПравилаДляОбменаДанными(Отказ, Перечисления.ВидыПравилДляОбменаДанными.ПравилаКонвертацииОбъектов, Перечисления.ИсточникиПравилДляОбменаДанными.МакетКонфигурации, "ПравилаОбмена", "ПравилаОбменаКорреспондента",, АдресВременногоХранилища);
	Иначе
		Обработки.торо_ПомощникПереносаДанныхИзДругихКонфигураций.ЗагрузитьПравилаДляОбменаДанными(Отказ, Перечисления.ВидыПравилДляОбменаДанными.ПравилаКонвертацииОбъектов, Перечисления.ИсточникиПравилДляОбменаДанными.Файл,,, ИмяФайла, АдресВременногоХранилища);
	КонецЕсли;
	
	Если Отказ Тогда
		ТекстСообщения = НСтр("ru='При загрузке правил обмена произошла ошибка. Подробности см. в журнале регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИсточникПравилОбмена()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПравилаДляОбменаДанными.ИмяПланаОбмена КАК ИмяПланаОбмена,
	               |	ПравилаДляОбменаДанными.ВидПравил КАК ВидПравил,
	               |	ПравилаДляОбменаДанными.ИсточникПравил КАК ИсточникПравил,
	               |	ПравилаДляОбменаДанными.ИмяФайлаПравил КАК ИмяФайлаПравил
	               |ИЗ
	               |	РегистрСведений.ПравилаДляОбменаДанными КАК ПравилаДляОбменаДанными
				   |ГДЕ
				   |	ВидПравил = ЗНАЧЕНИЕ(Перечисление.ВидыПравилДляОбменаДанными.ПравилаКонвертацииОбъектов)
				   |	И ИмяПланаОбмена = ""ОбменТОИР20ТОИР30""";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	    Возврат "ТиповыеИзКонфигурации";
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Не Выборка.Следующий() Тогда
	    Возврат "ТиповыеИзКонфигурации";
	КонецЕсли;
	
	Возврат ?(Выборка.ИсточникПравил = Перечисления.ИсточникиПравилДляОбменаДанными.МакетКонфигурации, "ТиповыеИзКонфигурации", "ЗагруженныеИзФайла");
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьУзелПланаОбмена()
	Возврат Обработки.торо_ПомощникПереносаДанныхИзДругихКонфигураций.ПолучитьУзелПланаОбмена(Ложь);
КонецФункции

#КонецОбласти

&НаСервере
Процедура УстановитьЗаголовкиЭлементовФормы(КонфигурацияИсточник)
	Если КонфигурацияИсточник = "ТОИР13" Тогда
		ЭтаФорма.Заголовок = "Помощник переноса данных из конфигурации ТОИР Управление ремонтами и обслуживанием оборудования, редакция 1.3";
		Элементы.Декорация1.Заголовок = "Помощник позволяет загрузить данные из конфигурации ТОИР Управление ремонтами и обслуживанием оборудования, редакция 1.3";
	ИначеЕсли КонфигурацияИсточник = "ТОИР20" Тогда
		ЭтаФорма.Заголовок = "Помощник переноса данных из конфигурации 1С:ТОИР Управление ремонтами и обслуживанием оборудования КОРП, редакция 2.0";
		Элементы.Декорация1.Заголовок = "Помощник позволяет загрузить данные из конфигурации 1С:ТОИР Управление ремонтами и обслуживанием оборудования КОРП, редакция 2.0";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораДанныхЗавершение(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ИмяСвойства = ДополнительныеПараметры.ИмяСвойства;
	
	ПараметрыДиалога = ДополнительныеПараметры.ПараметрыДиалога;
	Диалог = Новый ДиалогВыбораФайла(ПараметрыДиалога.РежимДиалога);
	ЗаполнитьЗначенияСвойств(Диалог, ПараметрыДиалога);
	
	Диалог.ПолноеИмяФайла = ЭтотОбъект[ИмяСвойства];
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьДанныеЗавершениеОтображенияДиалогаВыбораФайла", ЭтотОбъект, ДополнительныеПараметры);
	Диалог.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДанныеЗавершениеОтображенияДиалогаВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаДанных = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура УстновитьОформлениеФормы()
	Если Не ЗначениеЗаполнено(РезультатВыполнения)
		Или Не ТипЗнч(РезультатВыполнения) = Тип("Структура") Тогда
		СброситьОформлениеФормы();
	 	Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Свойство("ЗагрузкаДанных") И ЗначениеЗаполнено(РезультатВыполнения.ЗагрузкаДанных) Тогда
		Элементы.ДекорацияШагЗагрузкиДанных.Доступность = Истина;
		Элементы.СтраницыИндикаторов_ЗагрузкаДанных.Доступность = Истина;
		Элементы.ОписаниеЗагрузкиДанных.Доступность = Истина;
		Элементы.ГруппаОписаниеОшибкиЗагрузкиДанных.Доступность = Истина;
		Элементы.ГруппаЗагрузкаПравил.Доступность = Ложь;
	    Элементы.ГруппаОписаниеОшибкиЗагрузкиДанных.Видимость = (РезультатВыполнения.ЗагрузкаДанных.Статус = "Ошибка" Или РезультатВыполнения.ЗагрузкаДанных.Статус = "Файл не найден");
		
		Если РезультатВыполнения.ЗагрузкаДанных.Статус = "Выполняется" Тогда
			Элементы.СтраницыИндикаторов_ЗагрузкаДанных.ТекущаяСтраница = Элементы.СтраницаИндикатораВыполнения_ЗагрузкаДанных;
			Элементы.ГруппаЗагрузкаДанныхРезультат.ЦветФона = Новый Цвет(255, 255, 255);
		ИначеЕсли РезультатВыполнения.ЗагрузкаДанных.Статус = "Ошибка" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаДанных.ТекущаяСтраница = Элементы.СтраницаИндикатораОшибки_ЗагрузкаДанных;
			Элементы.ГруппаЗагрузкаДанныхРезультат.ЦветФона = Новый Цвет(255, 196, 187);
		ИначеЕсли РезультатВыполнения.ЗагрузкаДанных.Статус = "Выполнено успешно" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаДанных.ТекущаяСтраница = Элементы.СтраницаИндикатораУспешногоВыполнения_ЗагрузкаДанных;
			Элементы.ГруппаЗагрузкаДанныхРезультат.ЦветФона = Новый Цвет(171, 255, 162);
		ИначеЕсли РезультатВыполнения.ЗагрузкаДанных.Статус = "Файл не найден" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаДанных.ТекущаяСтраница = Элементы.СтраницаИндикатораПредупреждения_ЗагрузкаДанных;
			Элементы.ГруппаЗагрузкаДанныхРезультат.ЦветФона = Новый Цвет(253, 255, 164);
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатВыполнения.Свойство("ЗагрузкаКлючейМП") И ЗначениеЗаполнено(РезультатВыполнения.ЗагрузкаКлючейМП) Тогда
		Элементы.ГруппаШагЗагрузкаКлючейМП.Доступность = Истина;
	    Элементы.ГруппаОписаниеОшибкиЗагрузкиКлючей.Видимость = (РезультатВыполнения.ЗагрузкаКлючейМП.Статус = "Ошибка" Или РезультатВыполнения.ЗагрузкаКлючейМП.Статус = "Файл не найден");
		
		Если РезультатВыполнения.ЗагрузкаКлючейМП.Статус = "Выполняется" Тогда
			Элементы.СтраницыИндикаторов_ЗагрузкаКлючей.ТекущаяСтраница = Элементы.СтраницаИндикатораВыполнения_ЗагрузкаКлючей;
			Элементы.ГруппаЗагрузкаКлючейРезультат.ЦветФона = Новый Цвет(255, 255, 255);
		ИначеЕсли РезультатВыполнения.ЗагрузкаКлючейМП.Статус = "Ошибка" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаКлючей.ТекущаяСтраница = Элементы.СтраницаИндикатораОшибки_ЗагрузкаКлючей;
			Элементы.ГруппаЗагрузкаКлючейРезультат.ЦветФона = Новый Цвет(255, 196, 187);
		ИначеЕсли РезультатВыполнения.ЗагрузкаКлючейМП.Статус = "Выполнено успешно" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаКлючей.ТекущаяСтраница = Элементы.СтраницаИндикатораУспешногоВыполнения_ЗагрузкаКлючей;
			Элементы.ГруппаЗагрузкаКлючейРезультат.ЦветФона = Новый Цвет(171, 255, 162);
		ИначеЕсли РезультатВыполнения.ЗагрузкаКлючейМП.Статус = "Файл не найден" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаКлючей.ТекущаяСтраница = Элементы.СтраницаИндикатораПредупреждения_ЗагрузкаКлючей;
			Элементы.ГруппаЗагрузкаКлючейРезультат.ЦветФона = Новый Цвет(253, 255, 164);
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатВыполнения.Свойство("ЗагрузкаНастроек") И ЗначениеЗаполнено(РезультатВыполнения.ЗагрузкаНастроек) Тогда
		Элементы.ГруппаШагЗагрузкаНастроек.Доступность = Истина;
	    Элементы.ГруппаОписаниеОшибкиЗагрузкиНастроек.Видимость = (РезультатВыполнения.ЗагрузкаНастроек.Статус = "Ошибка" Или РезультатВыполнения.ЗагрузкаНастроек.Статус = "Файл не найден");
		
		Если РезультатВыполнения.ЗагрузкаНастроек.Статус = "Выполняется" Тогда
			Элементы.СтраницыИндикаторов_ЗагрузкаНастроек.ТекущаяСтраница = Элементы.СтраницаИндикатораВыполнения_ЗагрузкаНастроек;
			Элементы.ГруппаЗагрузкаНастроекРезультат.ЦветФона = Новый Цвет(255, 255, 255);
		ИначеЕсли РезультатВыполнения.ЗагрузкаНастроек.Статус = "Ошибка" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаНастроек.ТекущаяСтраница = Элементы.СтраницаИндикатораОшибки_ЗагрузкаНастроек;
			Элементы.ГруппаЗагрузкаНастроекРезультат.ЦветФона = Новый Цвет(255, 196, 187);
		ИначеЕсли РезультатВыполнения.ЗагрузкаНастроек.Статус = "Выполнено успешно" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаНастроек.ТекущаяСтраница = Элементы.СтраницаИндикатораУспешногоВыполнения_ЗагрузкаНастроек;
			Элементы.ГруппаЗагрузкаНастроекРезультат.ЦветФона = Новый Цвет(171, 255, 162);
		ИначеЕсли РезультатВыполнения.ЗагрузкаНастроек.Статус = "Файл не найден" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаНастроек.ТекущаяСтраница = Элементы.СтраницаИндикатораПредупреждения_ЗагрузкаНастроек;
			Элементы.ГруппаЗагрузкаНастроекРезультат.ЦветФона = Новый Цвет(253, 255, 164);
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатВыполнения.Свойство("ЗагрузкаИсторииСистемыВзаимодействия") И ЗначениеЗаполнено(РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия) Тогда
		Элементы.ГруппаШагЗагрузкаИсторииСистемыВзаимодействий.Доступность = Истина;
	    Элементы.ГруппаОписаниеОшибкиЗагрузкиИсторииСистемыВзаимодействий.Видимость = (РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия.Статус = "Ошибка" Или РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия.Статус = "Файл не найден");
		
		Если РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия.Статус = "Выполняется" Тогда
			Элементы.СтраницыИндикаторов_ЗагрузкаИсторииСистемыВзаимодействий.ТекущаяСтраница = Элементы.СтраницаИндикатораВыполнения_ЗагрузкаИсторииСистемыВзаимодействий;
			Элементы.ГруппаЗагрузкаИсторииСистемыВзаимодействийРезультат.ЦветФона = Новый Цвет(255, 255, 255);
		ИначеЕсли РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия.Статус = "Ошибка" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаИсторииСистемыВзаимодействий.ТекущаяСтраница = Элементы.СтраницаИндикатораОшибки_ЗагрузкаИсторииСистемыВзаимодействий;
			Элементы.ГруппаЗагрузкаИсторииСистемыВзаимодействийРезультат.ЦветФона = Новый Цвет(255, 196, 187);
		ИначеЕсли РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия.Статус = "Выполнено успешно" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаИсторииСистемыВзаимодействий.ТекущаяСтраница = Элементы.СтраницаИндикатораУспешногоВыполнения_ЗагрузкаИсторииСистемыВзаимодействий;
			Элементы.ГруппаЗагрузкаИсторииСистемыВзаимодействийРезультат.ЦветФона = Новый Цвет(171, 255, 162);
		ИначеЕсли РезультатВыполнения.ЗагрузкаИсторииСистемыВзаимодействия.Статус = "Файл не найден" Тогда
		    Элементы.СтраницыИндикаторов_ЗагрузкаИсторииСистемыВзаимодействий.ТекущаяСтраница = Элементы.СтраницаИндикатораПредупреждения_ЗагрузкаИсторииСистемыВзаимодействий;
			Элементы.ГруппаЗагрузкаИсторииСистемыВзаимодействийРезультат.ЦветФона = Новый Цвет(253, 255, 164);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СброситьОформлениеФормы()
	Элементы.ДекорацияШагЗагрузкиДанных.Доступность = Ложь;
	Элементы.СтраницыИндикаторов_ЗагрузкаДанных.Доступность = Ложь;
	Элементы.ОписаниеЗагрузкиДанных.Доступность = Ложь;
	Элементы.ГруппаОписаниеОшибкиЗагрузкиДанных.Доступность = Ложь;
	Элементы.ГруппаЗагрузкаПравил.Доступность = Истина;
	
	Элементы.СтраницыИндикаторов_ЗагрузкаДанных.ТекущаяСтраница = Элементы.СтраницаНачальногоИндикатора_ЗагрузкаДанных;
	Элементы.ГруппаОписаниеОшибкиЗагрузкиДанных.Видимость = Ложь;
	Элементы.ГруппаЗагрузкаДанныхРезультат.ЦветФона = Новый Цвет(255, 255, 255);

    Элементы.ГруппаШагЗагрузкаКлючейМП.Доступность = Ложь;
	Элементы.СтраницыИндикаторов_ЗагрузкаКлючей.ТекущаяСтраница = Элементы.СтраницаНачальногоИндикатора_ЗагрузкаКлючей;
	Элементы.ГруппаОписаниеОшибкиЗагрузкиКлючей.Видимость = Ложь;
	Элементы.ГруппаЗагрузкаКлючейРезультат.ЦветФона = Новый Цвет(255, 255, 255);

	Элементы.ГруппаШагЗагрузкаНастроек.Доступность = Ложь;
	Элементы.СтраницыИндикаторов_ЗагрузкаНастроек.ТекущаяСтраница = Элементы.СтраницаНачальногоИндикатора_ЗагрузкаНастроек;
	Элементы.ГруппаОписаниеОшибкиЗагрузкиНастроек.Видимость = Ложь;
	Элементы.ГруппаЗагрузкаНастроекРезультат.ЦветФона = Новый Цвет(255, 255, 255);

	Элементы.ГруппаШагЗагрузкаИсторииСистемыВзаимодействий.Доступность = Ложь;
	Элементы.СтраницыИндикаторов_ЗагрузкаИсторииСистемыВзаимодействий.ТекущаяСтраница = Элементы.СтраницаНачальногоИндикатора_ЗагрузкаИсторииСистемыВзаимодействий;
	Элементы.ГруппаОписаниеОшибкиЗагрузкиИсторииСистемыВзаимодействий.Видимость = Ложь;
	Элементы.ГруппаЗагрузкаИсторииСистемыВзаимодействийРезультат.ЦветФона = Новый Цвет(255, 255, 255);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПослеВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	КонецЕсли;
	
	ОтменитьВыполнениеЗадания(IDЗадания);
	IDЗадания = Неопределено;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВЖурналРегистрации(Команда)
	Если Команда.Имя = "ОткрытьЖР_ЗагрузкаДанных" Тогда
	    НазваниеШага = "ЗагрузкаДанных";
	ИначеЕсли Команда.Имя = "ОткрытьЖР_ЗагрузкаКлючейМП" Тогда
	    НазваниеШага = "ЗагрузкаКлючейМП";
	ИначеЕсли Команда.Имя = "ОткрытьЖР_ЗагрузкаНастроек" Тогда
	    НазваниеШага = "ЗагрузкаНастроек";
	ИначеЕсли Команда.Имя = "ОткрытьЖР_ЗагрузкаИсторииСистемыВзаимодействия" Тогда
	    НазваниеШага = "ЗагрузкаИсторииСистемыВзаимодействия";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СобытиеЖурналаРегистрации", ПолучитьСобытияЖурналаРегистрации(НазваниеШага));
	ПараметрыФормы.Вставить("ДатаНачала", РезультатВыполнения[НазваниеШага].ДатаЗапускаФЗ);
	ПараметрыФормы.Вставить("ДатаОкончания", ТекущаяДата());
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСобытияЖурналаРегистрации(НазваниеШага)
	Возврат Обработки.торо_ПомощникПереносаДанныхИзДругихКонфигураций.ПолучитьСобытияЖурналаРегистрации(НазваниеШага);
КонецФункции

&НаСервере
Процедура ИзменитьРежимОбработки()
	
	Элементы.ИмяФайлаДанных.Подсказка = ?(ЭтоКлиент, НСтр("ru = 'Имя файла данных на локальном компьютере.'"), НСтр("ru = 'Имя файла данных на сервере.'"));
	ЭтаФорма.Команды.Найти("ЗагрузитьПравила").Подсказка = ?(ЭтоКлиент, НСтр("ru = 'Имя файла правил на локальном компьютере.'"), НСтр("ru = 'Имя файла правил на сервере.'"));
	
	Элементы.ФормаНаКлиенте.Пометка = ЭтоКлиент;
	Элементы.ФормаНаСервере.Пометка = Не ЭтоКлиент;
	
	Элементы.РежимРаботы.Заголовок = ?(ЭтоКлиент, НСтр("ru = 'Режим работы (на клиенте)'"), НСтр("ru = 'Режим работы (на сервере)'"));
	
КонецПроцедуры

#КонецОбласти