
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если КлючНазначенияИспользования = "торо_ГрафикРегламентныхМероприятийТОиР" Тогда
		
		Элементы.ЗапрашиватьВидМероприятий.Видимость = Истина;	
		Элементы.ТолькоГрафикиМероприятий.Видимость = Истина;
		
		ЗапрашиватьВидМероприятий = Истина;
		ТолькоГрафикиМероприятий = Истина;
		
		СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		СвойстваСписка.ТекстЗапроса = ТекстЗапросаУчаствующихВПланированииСписковРМ();;
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
		
	ИначеЕсли КлючНазначенияИспользования = "торо_УстановкаКоэффициентовРемонтныхОсобенностей" Тогда	
		
		Элементы.ПанельНастроекПодбора.Видимость = Ложь;
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОбъектов

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Выбрать(Неопределено);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)

	ВыбранныеЗначения = Элементы.Список.ВыделенныеСтроки;
	
	СвойстваСписковОбъектов = ПредварительнаяОбработкаИПроверкаВыбранныхДанных(ВыбранныеЗначения, УчитыватьИерархиюЭлементов);
	
	Если СвойстваСписковОбъектов.ЕстьПредварительныеОшибки Тогда
		// Сообщение об ошибке уже было показано.
		Возврат;
	КонецЕсли;	
	
	Если СвойстваСписковОбъектов.ВыбраныПомеченныеНаУдаление Тогда
		
		ПараметрыОповещения = Новый Структура();
		ПараметрыОповещения.Вставить("СпискиОбъектов", СвойстваСписковОбъектов.СпискиОбъектов);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СписокВыборПродолжение", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Выбраны данные помеченные на удаление. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ВыбратьЗначения(СвойстваСписковОбъектов.СпискиОбъектов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СписокВыборПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	ВыбратьЗначения(ДополнительныеПараметры.СпискиОбъектов);
			
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначения(СпискиОбъектов)
	
	Если КлючНазначенияИспользования = "торо_ГрафикРегламентныхМероприятийТОиР" Тогда
		// Результатом подбора является соответствие, где ключ - список объектов РМ,
		// значение - массив видов мероприятий. 
		
		СоответствиеСписковОбъектовВидам  = СоответствиеСписковОбъектовРМВидамМероприятий(СпискиОбъектов, ТолькоГрафикиМероприятий);
		
		Для Каждого СписокОбъектов Из СпискиОбъектов Цикл 
			
			Если СоответствиеСписковОбъектовВидам.Получить(СписокОбъектов) = Неопределено Тогда 
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Для списка объектов ""%1"" не заполнены нормативы планирования!'"), СписокОбъектов);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЦикла;	
		
		Если СоответствиеСписковОбъектовВидам.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;	
		
		Если ЗапрашиватьВидМероприятий Тогда
			
			ПараметрыФормы = Новый Структура; 
			ПараметрыФормы.Вставить("ВходныеДанные", СоответствиеСписковОбъектовВидам); 
			ПараметрыФормы.Вставить("ТолькоГрафикиМероприятий", ТолькоГрафикиМероприятий);
			ПараметрыФормы.Вставить("КлючНазначенияИспользования", КлючНазначенияИспользования);
			ПараметрыФормы.Вставить("ФормаВладелецСтрокой", "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораСписковОРДляГрафикаРегламентныхМероприятий");
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборВидовМероприятий", ЭтотОбъект);
			ОткрытьФорму("Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораВидовРемонтаМероприятийИЦепочек", 
				ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);	
			
			Возврат;
		Иначе
			
			Результат = Новый Структура;
			Результат.Вставить("СоответствиеОбъектовРемонта", СоответствиеСписковОбъектовВидам);
		КонецЕсли;
	
	ИначеЕсли КлючНазначенияИспользования = "торо_УстановкаКоэффициентовРемонтныхОсобенностей" Тогда	
		// Результатом подбора является массив списков объектов РМ.
		
		Результат = СпискиОбъектов;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборВидовМероприятий(СоответствиеСписковОбъектовВидам, ДополнительныеПараметры) Экспорт
	
	Если СоответствиеСписковОбъектовВидам = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("СоответствиеОбъектовРемонта", СоответствиеСписковОбъектовВидам); 
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаУчаствующихВПланированииСписковРМ()

	Возврат  "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ 
	|	торо_СписокОбъектовРегламентногоМероприятия.Ссылка КАК Ссылка,
	|	торо_СписокОбъектовРегламентногоМероприятия.Родитель КАК Родитель,
	|	торо_СписокОбъектовРегламентногоМероприятия.Наименование КАК Наименование,
	|	торо_СписокОбъектовРегламентногоМероприятия.ИндивидуальноеОбслуживаниеОР КАК ИндивидуальноеОбслуживаниеОР,
	|	ВЫРАЗИТЬ(торо_СписокОбъектовРегламентногоМероприятия.Комментарий КАК СТРОКА(500)) КАК Комментарий,
	|	торо_СписокОбъектовРегламентногоМероприятия.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель
	|ИЗ
	|	Справочник.торо_СписокОбъектовРегламентногоМероприятия КАК торо_СписокОбъектовРегламентногоМероприятия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
	|		ПО торо_СписокОбъектовРегламентногоМероприятия.Ссылка = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА торо_СписокОбъектовРегламентногоМероприятия.ЭтоГруппа
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ торо_РегламентныеМероприятияИСпискиОбъектов.НеУчаствуетВПланировании = ЛОЖЬ
	|		КОНЕЦ";
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПредварительнаяОбработкаИПроверкаВыбранныхДанных(ВыбранныеЗначения, УчитыватьИерархиюЭлементов)
	
	Результат = Новый Структура;
	Результат.Вставить("СпискиОбъектов", Новый Массив);
	Результат.Вставить("ВыбраныПомеченныеНаУдаление", Ложь);
	Результат.Вставить("ЕстьПредварительныеОшибки", Ложь);
	
	Если Не УчитыватьИерархиюЭлементов Тогда
		РеквизитыСпискаОбъектов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВыбранныеЗначения, "ЭтоГруппа"); 
		
		Для Каждого СписокОбъектов Из ВыбранныеЗначения Цикл
			
			ЭтоГруппа = РеквизитыСпискаОбъектов.Получить(СписокОбъектов);
			
			Если ЭтоГруппа = Истина Тогда
				ТекстСообщения = НСтр("ru = 'Подбор групп запрещен! Чтобы выбрать все элементы из группы установите флаг ""Учитывать иерархию элементов"".'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				
				Результат.ЕстьПредварительныеОшибки = Истина;
				Возврат Результат;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_СписокОбъектовРегламентногоМероприятия.Ссылка КАК СписокОбъектов,
	|	торо_СписокОбъектовРегламентногоМероприятия.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ ВТ_СпискиОбъектов
	|ИЗ
	|	Справочник.торо_СписокОбъектовРегламентногоМероприятия КАК торо_СписокОбъектовРегламентногоМероприятия
	|ГДЕ
	|	торо_СписокОбъектовРегламентногоМероприятия.ЭтоГруппа = ЛОЖЬ
	|	И &УсловныйОтбор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СписокОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_СпискиОбъектов.СписокОбъектов КАК СписокОбъектов
	|ПОМЕСТИТЬ ВТ_БезОбъектовРемонта
	|ИЗ
	|	ВТ_СпискиОбъектов КАК ВТ_СпискиОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
	|		ПО ВТ_СпискиОбъектов.СписокОбъектов = торо_МаршрутыРегламентныхМероприятий.СписокОбъектов
	|ГДЕ
	|	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СписокОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_СпискиОбъектов.СписокОбъектов КАК СписокОбъектов
	|ПОМЕСТИТЬ ВТ_БезНормативов
	|ИЗ
	|	ВТ_СпискиОбъектов КАК ВТ_СпискиОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_РегламентныеМероприятияИСпискиОбъектов КАК торо_РегламентныеМероприятияИСпискиОбъектов
	|		ПО ВТ_СпискиОбъектов.СписокОбъектов = торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов
	|ГДЕ
	|	торо_РегламентныеМероприятияИСпискиОбъектов.СписокОбъектов ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СписокОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СпискиОбъектов.СписокОбъектов КАК СписокОбъектов,
	|	ВТ_СпискиОбъектов.ПометкаУдаления КАК ПометкаУдаления,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_БезНормативов.СписокОбъектов ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтсутствуютНормативы,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_БезОбъектовРемонта.СписокОбъектов ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтсутствуютОбъектыРемонта,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_СпискиОбъектов.СписокОбъектов) КАК СписокОбъектовПредставление
	|ИЗ
	|	ВТ_СпискиОбъектов КАК ВТ_СпискиОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БезОбъектовРемонта КАК ВТ_БезОбъектовРемонта
	|		ПО ВТ_СпискиОбъектов.СписокОбъектов = ВТ_БезОбъектовРемонта.СписокОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БезНормативов КАК ВТ_БезНормативов
	|		ПО ВТ_СпискиОбъектов.СписокОбъектов = ВТ_БезНормативов.СписокОбъектов"; 
	
	Запрос.УстановитьПараметр("ВыбранныеЗначения", ВыбранныеЗначения);
	
	Если УчитыватьИерархиюЭлементов Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловныйОтбор", "торо_СписокОбъектовРегламентногоМероприятия.Ссылка В ИЕРАРХИИ(&ВыбранныеЗначения)");
	Иначе	
	    Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловныйОтбор", "торо_СписокОбъектовРегламентногоМероприятия.Ссылка В (&ВыбранныеЗначения)");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		Если Выборка.ОтсутствуютОбъектыРемонта Тогда
			
			Результат.ЕстьПредварительныеОшибки = Истина;
			
			ШаблонСообщения = НСтр("ru = 'В список объектов регл. мероприятия ""%1"" не входит ни одного объекта ремонта!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.СписокОбъектовПредставление);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Если Выборка.ОтсутствуютНормативы Тогда
			
			Результат.ЕстьПредварительныеОшибки = Истина;
			
			ШаблонСообщения = НСтр("ru = 'Для списка объектов регл. мероприятия ""%1"" не заданы нормативы планирования!'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.СписокОбъектовПредставление);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли; 
		
		Если Выборка.ПометкаУдаления Тогда
			Результат.ВыбраныПомеченныеНаУдаление = Истина;	
		КонецЕсли; 
		
		Результат.СпискиОбъектов.Добавить(Выборка.СписокОбъектов);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоответствиеСписковОбъектовРМВидамМероприятий(СпискиОбъектов, ТолькоГрафикиМероприятий)
	
	ПараметрыПолучения = Новый Структура();
	ПараметрыПолучения.Вставить("ТолькоГрафикиМероприятий", ТолькоГрафикиМероприятий);
	
	Возврат Обработки.торо_ПодборОбъектовРемонтныхРабот.СоответствиеСписковОбъектовРМВидамМероприятий(СпискиОбъектов, ПараметрыПолучения); 	
	
КонецФункции

#КонецОбласти
