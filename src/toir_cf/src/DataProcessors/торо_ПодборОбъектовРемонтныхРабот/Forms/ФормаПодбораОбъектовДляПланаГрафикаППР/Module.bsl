
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(КлючНазначенияИспользования) Тогда
		ТекстСообщения = НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("СтруктураИерархии") И ЗначениеЗаполнено(Параметры.СтруктураИерархии) Тогда
		ТекСтруктураИерархии = Параметры.СтруктураИерархии;
	Иначе
		ТекСтруктураИерархии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнаяСтруктураИерархии",
			Истина);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ТекСтруктураИерархии) Тогда
		ТекСтруктураИерархии = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	КонецЕсли;
	
	Если Параметры.Свойство("ВернутьИерархию") Тогда
		ВернутьИерархию = Параметры.ВернутьИерархию;
	КонецЕсли;

	ЗаполнитьПараметрыНазначенияИспользования(Параметры);
	
	ЗапрашиватьВидРемонтныхРабот 		= Истина;
	ЗапрашиватьВидПараметровНаработки 	= Истина;
	
	ЭтаФорма.ОрганизацияДляОтбора = ?(Параметры.Свойство("Организация"), Параметры.Организация, Справочники.Организации.ПустаяСсылка());
	ЭтаФорма.ПодразделениеДляОтбора = ?(Параметры.Свойство("Подразделение"), Параметры.Подразделение, Справочники.СтруктураПредприятия.ПустаяСсылка());
	ЭтаФорма.НеУчаствуетВПланировании = ?(Параметры.Свойство("НеУчаствуетВПланировании"), Параметры.НеУчаствуетВПланировании, Ложь);
	ЭтаФорма.РазрешитьВыборФМ = ?(Параметры.Свойство("РазрешитьВыборФМ"), Параметры.РазрешитьВыборФМ, Истина);
	
	Элементы.ОрганизацияДляОтбора.Видимость = ЗначениеЗаполнено(ЭтаФорма.ОрганизацияДляОтбора);
	Элементы.ПодразделениеДляОтбора.Видимость = ЗначениеЗаполнено(ЭтаФорма.ПодразделениеДляОтбора);
	
	ДополнительныеОтборы = Новый Массив;
	Если ЗначениеЗаполнено(ОрганизацияДляОтбора) Тогда
		СтруктураОтбора = Новый Структура("Ключ, Значение", "Организация", ОрганизацияДляОтбора);
		ДополнительныеОтборы.Добавить(СтруктураОтбора);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПодразделениеДляОтбора) Тогда
		СтруктураОтбора = Новый Структура("Ключ, Значение, ВидСравнения", "Подразделение", ПодразделениеДляОтбора, ВидСравненияКомпоновкиДанных.ВИерархии);
		ДополнительныеОтборы.Добавить(СтруктураОтбора);
	КонецЕсли;
	Если НеУчаствуетВПланировании = Истина Тогда 
		СтруктураОтбора = Новый Структура("Ключ, Значение", "НеУчаствуетВПланировании", Ложь);
		ДополнительныеОтборы.Добавить(СтруктураОтбора);
	КонецЕсли;
	
	Если Параметры.Свойство("СписокОР") Тогда
		СтруктураОтбора = Новый Структура("Ключ, Значение, ВидСравнения", "Ссылка", Параметры.СписокОР, ВидСравненияКомпоновкиДанных.ВСписке);
		ДополнительныеОтборы.Добавить(СтруктураОтбора);
	КонецЕсли; 
	
	Если Параметры.Свойство("ЕстьИзмеряемыеПоказатели") Тогда
		СтруктураОтбора = Новый Структура("Ключ, Значение", "ЕстьИзмеряемыеПоказатели", Истина);
		ОтборПоНормативам.Добавить(СтруктураОтбора);
	КонецЕсли; 
	
	Если Параметры.Свойство("ЕстьПараметрыНаработки") Тогда
		СтруктураОтбора = Новый Структура("Ключ, Значение", "ЕстьПараметрыНаработки", Истина);
		ОтборПоНормативам.Добавить(СтруктураОтбора);
	КонецЕсли; 
	
	Если Параметры.Свойство("ЕстьНормативы") Тогда
		СтруктураОтбора = Новый Структура("Ключ, Значение", "ЕстьНормативы", Истина);
		ОтборПоНормативам.Добавить(СтруктураОтбора);
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоОдномуНормативу") Тогда
		
		СтруктураОтбора = Новый Структура("Ключ, Значение", "ЕстьНормативы", Истина);
		ОтборПоНормативам.Добавить(СтруктураОтбора);
		
		СтруктураОтбора = Новый Структура("Ключ, Значение", "ЕстьИзмеряемыеПоказатели", Истина);
		ОтборПоНормативам.Добавить(СтруктураОтбора);
		
		СтруктураОтбора = Новый Структура("Ключ, Значение", "ЕстьПараметрыНаработки", Истина);
		ОтборПоНормативам.Добавить(СтруктураОтбора);
				
	КонецЕсли;
		
	ФОИспользоватьДокументыЖЦОборудования = ПолучитьФункциональнуюОпцию("торо_ИспользоватьДокументыПринятияИСписанияОборудования");
	ПолучатьСтатусыВУчетеДляДерева = ФОИспользоватьДокументыЖЦОборудования;
	
	Если Не ФОИспользоватьДокументыЖЦОборудования Тогда
		Элементы.СтатусВУчете.Видимость = Ложь;
	КонецЕсли;
	
	Если ФОИспользоватьДокументыЖЦОборудования Тогда
		ИсключитьНепринятые = (ВидПодбора = "ВидПараметровНаработки"
						  ИЛИ ВидПодбора = "СостоянияОР"
						  ИЛИ ВидПодбора = "ВводНачальныхДанных");

		МассивСтатусов = торо_СтатусыОРВУчете.СписокСтатусовДляПодбора(ИсключитьНепринятые);
		СписокСтатусов.ЗагрузитьЗначения(МассивСтатусов);
	КонецЕсли;
	
	// Сейчас не используется, т.к. в прежней форме не работало. 
	// Но потенциально может использоваться как 
	// "ДатаСреза" для построения дерева, списка и отбора данных.
	Если Параметры.Свойство("ДатаДокумента") Тогда
		ДатаДокумента = Параметры.ДатаДокумента;
	КонецЕсли;
		
	ОбработатьИзменениеИерархииНаСервере();
	
	Если Параметры.Свойство("ЗапретитьИзменениеИерархии") И Параметры.ЗапретитьИзменениеИерархии = Истина Тогда
		Элементы.ФормаНастройкаИерархии.Доступность = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтключитьОтображениеГрупп") И Параметры.ОтключитьОтображениеГрупп = Истина Тогда
		СкрытьГруппыПриОткрытии = Истина
	КонецЕсли;
	
	Если Параметры.Свойство("ВыбиратьГруппу") Тогда
		Если Параметры.ВыбиратьГруппу = Истина Тогда
			ВариантУчетаИерархииЭлементов = Перечисления.торо_ВариантыУчетаИерархииЭлементовПриПодборе.УчитыватьИерархию;
			ВыборГруппы = Истина;
		Иначе
			ВариантУчетаИерархииЭлементов = Перечисления.торо_ВариантыУчетаИерархииЭлементовПриПодборе.НеУчитыватьИерархию;
			ВыборГруппы = Ложь;
		КонецЕсли;
	Иначе
		ВариантУчетаИерархииЭлементов = Перечисления.торо_ВариантыУчетаИерархииЭлементовПриПодборе.НеУчитыватьИерархию;
		ВыборГруппы = Ложь;
	КонецЕсли;    
	
	Элементы.СтраницыФормы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	ИспользоватьКартинкиТОР = Константы.торо_ИспользоватьКартинкиТиповыхОбъектов.Получить();
	Если ИспользоватьКартинкиТОР Тогда 
		Элементы.Дерево.ПутьКДаннымКартинкиСтроки = "Дерево.КартинкаОтображаемая";
		Элементы.ДеревоПолное.ПутьКДаннымКартинкиСтроки = "ДеревоПолное.КартинкаОтображаемая";
	Иначе 
		Элементы.Дерево.ПутьКДаннымКартинкиСтроки = "Дерево.Картинка";
		Элементы.ДеревоПолное.ПутьКДаннымКартинкиСтроки = "ДеревоПолное.Картинка";
	КонецЕсли;    
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	торо_РаботаСИерархией20Клиент.УстановитьДоступностьКомандФормы(ЭтаФорма);
	УправлениеФормой();
	
	Если Параметры.КлючНазначенияИспользования = "ИзППР" Тогда
		торо_РаботаСИерархией20КлиентСервер.УстановитьСостояниеИерархическогоПросмотра(ЭтаФорма, Ложь);
		торо_РаботаСИерархией20Клиент.УправлениеОтборомВСписке(ЭтаФорма,,, Неопределено, НеОтображатьГруппы);
	КонецЕсли;
	
	Если СкрытьГруппыПриОткрытии Тогда
		УстановитьОтображениеГрупп();
	КонецЕсли;
	
	ЭтаФорма.Элементы.НеОтображатьГруппы.Доступность = Не ЭтаФорма.Элементы.ФормаИерархическийПросмотр.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаПометкаУдаленияОР" Тогда
		торо_РаботаСИерархией20Клиент.ОбработкаОповещенияОбИзмененииПометкиУдаленияОбъектаРемонта(ЭтаФорма, Параметр);
		Если ИспользоватьКартинкиТОР Тогда
			ОбновитьКартинкиЭлементовПолногоДереваНаСервере();
			ОбновитьКартинкиЭлементовДереваНаСервере();
		КонецЕсли; 		
	ИначеЕсли ИмяСобытия = "ЗаписанОбъектРемонта" Тогда
		торо_РаботаСИерархией20Клиент.ОбработкаОповещенияОЗаписиОбъектаРемонта(ЭтаФорма, Параметр);
		Если ИспользоватьКартинкиТОР Тогда
			ОбновитьКартинкиЭлементовПолногоДереваНаСервере();
			ОбновитьКартинкиЭлементовДереваНаСервере();
		КонецЕсли; 
	ИначеЕсли ИмяСобытия = "ИзмененПорядокОбъектаРемонта" Тогда
		Если Параметр.СтруктураИерархии = ТекСтруктураИерархии Тогда
			торо_НастройкаПорядкаЭлементовКлиент.ИзменитьПорядокЭлементаВДереве(ЭтаФорма, Параметр);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзмененаСтруктураИерархииОР" Тогда
		Если Параметр = Неопределено ИЛИ Параметр = ТекСтруктураИерархии Тогда
			торо_РаботаСИерархией20Клиент.ОбновитьДеревоИерархии(ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыборОбъектаРемонта();	
	
КонецПроцедуры

&НаКлиенте
Процедура НеОтображатьГруппы(Команда)
	УстановитьОтображениеГрупп();
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьНаВидДерева(Команда)
	
	Если ТекущийЭлемент = Элементы.Дерево Тогда
		ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Иначе
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Ссылка) <> Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если КореньПолногоДерева <> ТекущиеДанные.Ссылка Тогда
		КореньПолногоДерева = ТекущиеДанные.Ссылка;
		торо_РаботаСИерархией20КлиентСервер.ПостроитьДеревоСКонечнымиЭлементами(ДеревоПолное, СтруктураПараметровИерархии, КореньПолногоДерева, ПолучатьСтатусыВУчетеДляДерева, СписокСтатусов, ДополнительныеОтборы);
		СтандартныеПодсистемыКлиент.РазвернутьУзлыДерева(ЭтаФорма, "ДеревоПолное",,Истина);
	КонецЕсли;
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаДеревоПолное;
	
	Если ИспользоватьКартинкиТОР Тогда
		ОбновитьКартинкиЭлементовПолногоДереваНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьНаОбычныйВид(Команда)
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОбычныйВид;
	
	Если ИспользоватьКартинкиТОР Тогда
		ОбновитьКартинкиЭлементовДереваНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПолноеДерево(Команда)
	
	торо_РаботаСИерархией20КлиентСервер.ПостроитьДеревоСКонечнымиЭлементами(ДеревоПолное, СтруктураПараметровИерархии, КореньПолногоДерева, ПолучатьСтатусыВУчетеДляДерева, СписокСтатусов, ДополнительныеОтборы);
	СтандартныеПодсистемыКлиент.РазвернутьУзлыДерева(ЭтаФорма, "ДеревоПолное",,Истина);
	Если ИспользоватьКартинкиТОР Тогда
		ОбновитьКартинкиЭлементовПолногоДереваНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархическийПросмотр(Команда)
	торо_РаботаСИерархией20Клиент.ИерархическийПросмотр(ЭтаФорма, НЕ ВключенИерархическийПросмотр);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаполнитьПоНормативамПриИзменении(Элемент)
	
	ОбновитьДоступностьФлагов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	торо_РаботаСИерархией20Клиент.УправлениеОтборомВСписке(ЭтаФорма,,,,НеОтображатьГруппы);
	торо_РаботаСИерархией20Клиент.УстановитьДоступностьКомандДереваПриАктивизацииСтроки(ЭтаФорма, Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередРазворачиванием(Элемент, Строка, Отказ)
		
	торо_РаботаСИерархией20Клиент.ДеревоПередРазворачиванием(Дерево, Строка, СтруктураПараметровИерархии, ПолучатьСтатусыВУчетеДляДерева, СписокСтатусов, ДополнительныеОтборы);
	Если ИспользоватьКартинкиТОР Тогда
		ОбновитьКартинкиЭлементовДереваНаСервере(Строка);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломИзменения(Элемент, Отказ)
	
	торо_РаботаСИерархией20Клиент.ПередНачаломИзменения(Элемент, Отказ, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборОбъектаРемонта();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПолноеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборОбъектаРемонта();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		торо_РаботаСИерархией20Клиент.ВыделитьРодителяВДереве(ЭтаФорма, ТекущиеДанные);
	КонецЕсли;
	
	торо_РаботаСИерархией20Клиент.УстановитьДоступностьКомандСпискаПриАктивизацииСтроки(ЭтаФорма, Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	торо_РаботаСИерархией20Клиент.ПередНачаломИзменения(Элемент, Отказ, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("Массив") Тогда
		ВыбранноеЗначение = Элементы.Список.ТекущиеДанные.Ссылка;
	Иначе
		ВыбранноеЗначение = ВыбраннаяСтрока;
	КонецЕсли;
	торо_РаботаСИерархией20Клиент.СписокВыбор(Элемент, ВыбранноеЗначение, Поле, СтандартнаяОбработка, ЭтаФорма);
	
	// Если кликнули не на элемент с подчиненными, то СтандартнаяОбработка сброшена не будет,
	// и можно реализовывать выбор элемента.
	Если СтандартнаяОбработка Тогда
		СтандартнаяОбработка = Ложь;
		ВыборОбъектаРемонта();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ИспользоватьКартинкиТОР = Константы.торо_ИспользоватьКартинкиТиповыхОбъектов.Получить();
	торо_РаботаСИерархией20.СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки, ИспользоватьКартинкиТОР);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаВыборкаЗначения

&НаКлиенте
Процедура ВыборОбъектаРемонта()
	
	УчтываетсяИерархияЭлементов = ЗначениеЗаполнено(ВариантУчетаИерархииЭлементов)
		И ВариантУчетаИерархииЭлементов <> ПредопределенноеЗначение("Перечисление.торо_ВариантыУчетаИерархииЭлементовПриПодборе.НеУчитыватьИерархию");
	
	МассивВыбранныхСтрок = торо_РаботаСИерархией20Клиент.ПолучитьМассивДанныхВыделенныхСтрок(ЭтаФорма,,ВыборГруппы,УчтываетсяИерархияЭлементов, УчтываетсяИерархияЭлементов ИЛИ РазрешитьВыборФМ);
	
	Если МассивВыбранныхСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если УчтываетсяИерархияЭлементов И НЕ ВыборГруппы Тогда
		
		МассивВыбранныхСтрок = торо_РаботаСИерархией20.ДополнитьОтобратьМассивВыбранныхСтрок(МассивВыбранныхСтрок, ВариантУчетаИерархииЭлементов, ТекСтруктураИерархии, Ложь,,СписокСтатусов, ДополнительныеОтборы, РазрешитьВыборФМ);
		
		Если МассивВыбранныхСтрок.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

	КонецЕсли;
	
	НаличиеДанныхПомеченныхНаУдаление = Ложь;

	Для Каждого ДанныеСтр Из МассивВыбранныхСтрок Цикл
		
		Если торо_РаботаСИерархией20КлиентСервер.ЭтоОбычнаяГруппаПоКартинке(ДанныеСтр.ИндексКартинки) И НЕ ВыборГруппы Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя выбрать группу!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли типЗнч(ДанныеСтр.Ссылка) = Тип("СправочникСсылка.торо_СтруктурыОР") Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя выбирать корень!'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ДанныеСтр.ПометкаУдаления = Истина Тогда
			НаличиеДанныхПомеченныхНаУдаление = Истина;
			Прервать;
		КонецЕсли;
	
	КонецЦикла;
	
	ДопПараметры = Новый Структура("МассивВыбранныхСтрок", МассивВыбранныхСтрок);
	
	Если НаличиеДанныхПомеченныхНаУдаление Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыборЗначенияПослеПроверкиПометкиУдаления", ЭтотОбъект, ДопПараметры);
		ТекстВопроса = НСтр("ru = 'Выбраны данные помеченные на удаление. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ВыборЗначенияПослеПроверкиПометкиУдаления(КодВозвратаДиалога.Да, ДопПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначенияПослеПроверкиПометкиУдаления(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	МассивВыбранныхСтрок = ДополнительныеПараметры.МассивВыбранныхСтрок;

	МассивОР = Новый массив;
	Для каждого ТекДанные из МассивВыбранныхСтрок Цикл
		МассивОР.Добавить(ТекДанные.Ссылка);
	КонецЦикла;
	
	Если Элементы.НастройкаПодбораВидаРемонтов.Видимость Тогда
		ПодборСтраница_НастройкаПодбораВидаРемонтов(МассивОР);
	ИначеЕсли Элементы.НастройкаПодбораВидаПараметровНаработки.Видимость Тогда
		ПодборСтраница_НастройкаПодбораВидаПараметровНаработки(МассивОР);
	ИначеЕсли Элементы.НастройкаПодбораКонтролируемыхПоказателей.Видимость Тогда
		ПодборСтраница_НастройкаПодбораКонтролируемыхПоказателей(МассивОР);
	ИначеЕсли Элементы.НастройкаПодбораВводНачальныхДанных.Видимость Тогда
		ПодборСтраница_НастройкаПодбораВводНачальныхДанных(МассивОР);
	ИначеЕсли Элементы.НастройкаПодбораСостоянияОР.Видимость Тогда
		ПодборСтраница_НастройкаПодбораСостоянияОР(МассивОР);
	ИначеЕсли Элементы.НастройкаПодбораТиповойОР.Видимость Тогда
		ПодборСтраница_НастройкаПодбораТиповойОР(МассивОР);
	Иначе
		ВыполнитьОповещениеОВыборе(МассивОР);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодборСтраница_НастройкаПодбораВидаРемонтов(МассивОР)
	
	СоответствиеОР = ПолучитьСоответствиеОРИВидовРемонта(МассивОР, ТолькоВидыРемонтовППР, Истина);
	
	ОбъектыРемонтовБезНормативов = Новый Массив;
	Для Каждого ОбъектРемонта Из МассивОР Цикл 
		
		Если СоответствиеОР.Получить(ОбъектРемонта) = Неопределено Тогда
			
			ОбъектыРемонтовБезНормативов.Добавить(ОбъектРемонта); 
			
			Если Не КлючНазначенияИспользования = "торо_КалькуляторРЦ" Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Для объекта ремонта ""%1"" не заполнены нормативы планирования!'"), ОбъектРемонта);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	
	Если ЗапрашиватьВидРемонтныхРабот И СоответствиеОР.Количество() > 0 Тогда
				
		ПодбиратьЦепочкиРемонтов = КлючНазначенияИспользования = "торо_ПланГрафикРемонта";  
		
		ПараметрыФормы = Новый Структура; 
		ПараметрыФормы.Вставить("ВходныеДанные", СоответствиеОР);
		ПараметрыФормы.Вставить("ПодбиратьЦепочкиРемонтов", ПодбиратьЦепочкиРемонтов);
		ПараметрыФормы.Вставить("ТолькоВидыРемонтовППР", ТолькоВидыРемонтовППР); 
		ПараметрыФормы.Вставить("КлючНазначенияИспользования", КлючНазначенияИспользования);
		ПараметрыФормы.Вставить("ФормаВладелецСтрокой", "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораОбъектовДляПланаГрафикаППР");
		
		ПараметрыОповещения = Новый Структура();
		ПараметрыОповещения.Вставить("ОбъектыРемонтовБезНормативов", ОбъектыРемонтовБезНормативов);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборВидовРемонта", ЭтотОбъект, ПараметрыОповещения);
		
		ОткрытьФорму("Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораВидовРемонтаМероприятийИЦепочек", 
			ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);	
			
		Возврат;
	КонецЕсли;
	
	Если КлючНазначенияИспользования = "торо_КалькуляторРЦ" Тогда
		
		Для Каждого ОбъектРемонта Из ОбъектыРемонтовБезНормативов Цикл	
			СоответствиеОР.Вставить(ОбъектРемонта, Новый Массив);	
		КонецЦикла;
		
	ИначеЕсли СоответствиеОР.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
			
	ВыполнитьОповещениеОВыборе(СоответствиеОР);

КонецПроцедуры

&НаКлиенте
Процедура ПодборСтраница_НастройкаПодбораВидаПараметровНаработки(МассивОР)
	
	ДопПоляДляСтруктурыВозврата = Новый Структура;
	ДопПоляДляСтруктурыВозврата.Вставить("ДатаСнятия", ДатаСнятияПоказателей);
	ДопПоляДляСтруктурыВозврата.Вставить("ПроставлятьПлановуюНаработку", ПроставлятьПлановуюНаработку);
	ДопПоляДляСтруктурыВозврата.Вставить("УчитыватьПростои", УчитыватьПростоиОР);

	СоответствиеОР = ПолучитьСоответствиеОРИПараметровНаработки(МассивОР);
	
	Если СоответствиеОР.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Для выбранных объектов ремонта не заданы параметры наработки.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ЗапрашиватьВидПараметровНаработки Тогда
		ОбщийСписокПараметровНаработки = ПолучитьСписокРазличныхЗначенийИзСоответствия(СоответствиеОР);
		
		ДопПараметры = Новый Структура("СоответствиеОР, ДопПоляДляСтруктурыВозврата", СоответствиеОР, ДопПоляДляСтруктурыВозврата);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораИзСпискаЗначенийБезПродолжения", ЭтотОбъект, ДопПараметры);
		ТекстЗаголовкаОкна = НСтр("ru = 'Выберите виды параметров наработки'");
		ОбщийСписокПараметровНаработки.ПоказатьОтметкуЭлементов(ОписаниеОповещения, ТекстЗаголовкаОкна);
		
	Иначе
		ВыполнитьОповещениеОВыборе(СоответствиеОР, ДопПоляДляСтруктурыВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСтраница_НастройкаПодбораКонтролируемыхПоказателей(МассивОР)
	
	СоответствиеОР = ПолучитьСоответствиеОРИКонтролируемыхПоказателей(МассивОР);
	
	Если СоответствиеОР.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Для выбранных объектов ремонта не заданы контролируемые показатели.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ЗапрашиватьКонтролируемыеПоказатели Тогда
		ОбщийСписокПоказателей = ПолучитьСписокРазличныхЗначенийИзСоответствия(СоответствиеОР);
		
		ДопПараметры = Новый Структура("СоответствиеОР", СоответствиеОР);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораИзСпискаЗначенийБезПродолжения", ЭтотОбъект, ДопПараметры);
		ТекстЗаголовкаОкна = НСтр("ru = 'Выберите виды контролируемых показателей'");
		ОбщийСписокПоказателей.ПоказатьОтметкуЭлементов(ОписаниеОповещения, ТекстЗаголовкаОкна);
		
	Иначе
		ВыполнитьОповещениеОВыборе(СоответствиеОР);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСтраница_НастройкаПодбораВводНачальныхДанных(МассивОР)
	
	ДопПоляДляСтруктурыВозврата = Новый Структура;
	ДопПоляДляСтруктурыВозврата.Вставить("ЗаполнитьПоНормативам", ЗаполнитьПоНормативам);
	
	Если ЗаполнитьПоНормативам Тогда
		ДопПоляДляСтруктурыВозврата.Вставить("ЗапрашиватьВидРемонтныхРабот", ВводДанныхЗапрашиватьВидРемонтныхРабот);
		ДопПоляДляСтруктурыВозврата.Вставить("ЗапрашиватьВидПараметровНаработки", ВводДанныхЗапрашиватьВидПараметровНаработки);
		ДопПоляДляСтруктурыВозврата.Вставить("ЗапрашиватьВидИзмеряемыхПоказателей", ВводДанныхЗапрашиватьВидИзмеряемыхПоказателей);
		
		СоответствиеОР_ВидыРемонта = ПолучитьСоответствиеОРИВидовРемонта(МассивОР);
		ДопПоляДляСтруктурыВозврата.Вставить("СоответствиеОР_ВидыРемонта", СоответствиеОР_ВидыРемонта);
		
		СоответствиеОР_ПараметрыНаработки = ПолучитьСоответствиеОРИПараметровНаработки(МассивОР);
		ДопПоляДляСтруктурыВозврата.Вставить("СоответствиеОР_ПараметрыНаработки", СоответствиеОР_ПараметрыНаработки);
		
		СоответствиеОР_ИзмеряемыеПоказатели = ПолучитьСоответствиеОРИКонтролируемыхПоказателей(МассивОР);
		ДопПоляДляСтруктурыВозврата.Вставить("СоответствиеОР_ИзмеряемыеПоказатели", СоответствиеОР_ИзмеряемыеПоказатели);
	КонецЕсли;
	
	ВыполнитьОповещениеОВыборе(МассивОР, ДопПоляДляСтруктурыВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСтраница_НастройкаПодбораСостоянияОР(МассивОР)
	
	ДопПоляДляСтруктурыВозврата = Новый Структура;
	ДопПоляДляСтруктурыВозврата.Вставить("ДатаНачала", ДатаНачалаУмолчание);
	ДопПоляДляСтруктурыВозврата.Вставить("ДатаОкончания", ДатаОкончанияУмолчание);
	
	ВыполнитьОповещениеОВыборе(МассивОР, ДопПоляДляСтруктурыВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСтраница_НастройкаПодбораТиповойОР(МассивОР)
	
	ДопПоляДляСтруктурыВозврата = Новый Структура;
	ДопПоляДляСтруктурыВозврата.Вставить("ИзменитьНаправлениеИИзготовителя", ИзменитьНаправлениеИИзготовителя);
	
	ВыполнитьОповещениеОВыборе(МассивОР, ДопПоляДляСтруктурыВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораИзСпискаЗначенийБезПродолжения(СписокЗначенийСПометками, ДопПараметры) Экспорт
	
	Если СписокЗначенийСПометками = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеОР = ДопПараметры.СоответствиеОР;
	
	ДопПоляДляСтруктурыВозврата = Неопределено;
	ДопПараметры.Свойство("ДопПоляДляСтруктурыВозврата", ДопПоляДляСтруктурыВозврата);
	
	ОтфильтрованноеСоответствиеОР = ОтфильтроватьСоответствиеОРПоМассивуВыбранныхЗначений(СоответствиеОР, СписокЗначенийСПометками);
	
	ВыполнитьОповещениеОВыборе(ОтфильтрованноеСоответствиеОР, ДопПоляДляСтруктурыВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборВидовРемонта(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат; 
	КонецЕсли;
	
	Если КлючНазначенияИспользования = "торо_КалькуляторРЦ" Тогда
		Для Каждого ОбъектРемонта Из ДополнительныеПараметры.ОбъектыРемонтовБезНормативов Цикл	
			Результат.Вставить(ОбъектРемонта, Новый Массив);	
		КонецЦикла;	
	КонецЕсли;
		
	ВыполнитьОповещениеОВыборе(Результат);
	
КонецПроцедуры

#КонецОбласти

// Оповещение о закрытии, вызывается при выполнении команды "Настройка иерархии".
&НаКлиенте
Процедура НастройкаИерархииЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекСтруктураИерархии = ВыбранноеЗначение;
		ОбработатьИзменениеИерархииНаСервере();
		торо_РаботаСИерархией20Клиент.ОбработатьИзменениеИерархииНаКлиенте(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеИерархииНаСервере()
	
	торо_РаботаСИерархией20.ОбработатьИзменениеИерархииНаСервере(ЭтаФорма, Список, Дерево, ФОИспользоватьДокументыЖЦОборудования, СписокСтатусов,,ДополнительныеОтборы, ОтборПоНормативам);
	
	КореньПолногоДерева = Неопределено;
	ДеревоПолное.ПолучитьЭлементы().Очистить();
	
	Если ИспользоватьКартинкиТОР Тогда
		ОбновитьКартинкиЭлементовДереваНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыНазначенияИспользования(Параметры)
	
	ВидПодбора = "";
	
	Если Параметры.КлючНазначенияИспользования      = "торо_ПланГрафикРемонта" 
		ИЛИ Параметры.КлючНазначенияИспользования   = "торо_КалькуляторРЦ" Тогда 
		
		ВидПодбора = "ВидРемонтныхРабот";
		
	ИначеЕсли Параметры.КлючНазначенияИспользования = "торо_УчетКонтролируемыхПоказателей" Тогда 
		
		ВидПодбора = "КонтролируемыеПоказатели";
		
	ИначеЕсли Параметры.КлючНазначенияИспользования = "торо_УчетНаработкиОборудования"
		ИЛИ Параметры.КлючНазначенияИспользования   = "торо_УстановкаПроизвольногоЗначенияНаработки" Тогда 
		
		ВидПодбора = "ВидПараметровНаработки"; 	
		
		Если Параметры.Свойство("ДатаСнятияПоказателей") И ЗначениеЗаполнено(Параметры.ДатаСнятияПоказателей) Тогда
			ДатаСнятияПоказателей = Параметры.ДатаСнятияПоказателей;
		Иначе
			ДатаСнятияПоказателей = ТекущаяДата();
		КонецЕсли;
		
	ИначеЕсли Параметры.КлючНазначенияИспользования = "торо_ВводНачальныхДанных" Тогда 
		
		ВидПодбора = "ВводНачальныхДанных";
		
	ИначеЕсли Параметры.КлючНазначенияИспользования = "торо_СостоянияОбъектовРемонта" Тогда 
		
		ВидПодбора = "СостоянияОР";
		
		Если Параметры.Свойство("ВидОперации") И Параметры.ВидОперации = Перечисления.торо_ВидыОперацийОтклоненияВРаботеОборудования.ВидЭксплуатации Тогда
			Элементы.ДатаНачалаУмолчание.Заголовок = НСтр("ru = 'Дата изменения состояния:'");
			Элементы.ДатаОкончанияУмолчание.Видимость = Ложь;
		КонецЕсли;	
		
	ИначеЕсли Параметры.КлючНазначенияИспользования = "торо_ТиповыеОР" Тогда
		
		ВидПодбора = "ТиповыеОР";
		ИзменитьНаправлениеИИзготовителя = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	Если ВидПодбора = "ВидРемонтныхРабот" Тогда 
		Элементы.НастройкаПодбораВидаРемонтов.Видимость = Истина;
	ИначеЕсли ВидПодбора = "ВидПараметровНаработки" Тогда 		
		Элементы.НастройкаПодбораВидаПараметровНаработки.Видимость = Истина;
	ИначеЕсли ВидПодбора = "КонтролируемыеПоказатели" Тогда 		
		Элементы.НастройкаПодбораКонтролируемыхПоказателей.Видимость = Истина;
	ИначеЕсли ВидПодбора = "ВводНачальныхДанных" Тогда 		
		Элементы.НастройкаПодбораВводНачальныхДанных.Видимость = Истина;
		ОбновитьДоступностьФлагов();
	ИначеЕсли ВидПодбора = "СостоянияОР" Тогда
		Элементы.НастройкаПодбораСостоянияОР.Видимость = Истина;
	ИначеЕсли ВидПодбора = "ТиповыеОР" Тогда
		Элементы.НастройкаПодбораТиповойОР.Видимость = Истина;
	КонецЕсли;
	
	Элементы.ТолькоВидыРемонтовППР.Видимость = Ложь;
	Если КлючНазначенияИспользования = "торо_ПланГрафикРемонта" Тогда
		Элементы.ТолькоВидыРемонтовППР.Видимость = Истина;
		ТолькоВидыРемонтовППР = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьФлагов()
	
	Элементы.ВводДанныхЗапрашиватьВидПараметровНаработки.Доступность = ЗаполнитьПоНормативам;
	Элементы.ВводДанныхЗапрашиватьВидИзмеряемыхПоказателей.Доступность = ЗаполнитьПоНормативам;
	Элементы.ВводДанныхЗапрашиватьВидРемонтныхРабот.Доступность = ЗаполнитьПоНормативам;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСоответствиеОРИВидовРемонта(МассивОР, ТолькоВидыРемонтовППР = Ложь, ПодбиратьЦепочкиРемонтов = Ложь)
	
	ПараметрыПолучения = Новый Структура();
	ПараметрыПолучения.Вставить("ТолькоВидыРемонтовППР", ТолькоВидыРемонтовППР);
	ПараметрыПолучения.Вставить("ПодбиратьЦепочкиРемонтов", ПодбиратьЦепочкиРемонтов);                             
	
	Возврат Обработки.торо_ПодборОбъектовРемонтныхРабот.СоответствиеОбъектовРемонтаВидамРемонтаИЦепочкам(МассивОР, ПараметрыПолучения);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСоответствиеОРИПараметровНаработки(МассивОР)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.Показатель КАК Показатель
	|ИЗ
	|	РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних(, ОбъектРемонта В (&МассивОР)) КАК торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних
	|ИТОГИ ПО
	|	ОбъектРемонта";
	
	Запрос.УстановитьПараметр("МассивОР", МассивОР);
	
	ВыборкаОР = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОбъектРемонта");
	
	СоответствиеОР = Новый Соответствие;
	
	Пока ВыборкаОР.Следующий() Цикл
		МассивПоказателейНаработки = Новый массив;
		ВыборкаПараметровНаработки = ВыборкаОР.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаПараметровНаработки.Следующий() Цикл
			МассивПоказателейНаработки.Добавить(ВыборкаПараметровНаработки.Показатель);
		КонецЦикла;
		
		СоответствиеОР.Вставить(ВыборкаОР.ОбъектРемонта, МассивПоказателейНаработки);
	КонецЦикла;
	
	Возврат СоответствиеОР;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСоответствиеОРИКонтролируемыхПоказателей(МассивОР)

	СоответствиеОР = Новый Соответствие;
	ТаблицаПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(МассивОР,,Ложь);
	
	Для каждого СтрокаТаблицы из ТаблицаПоказателей Цикл
		ЗначениеСоответствия = СоответствиеОР[СтрокаТаблицы.ОбъектРемонта];
		Если ЗначениеСоответствия = Неопределено Тогда
			ЗначениеСоответствия = Новый Массив;
		КонецЕсли;
		
		ЗначениеСоответствия.Добавить(СтрокаТаблицы.Показатель);
		СоответствиеОР.Вставить(СтрокаТаблицы.ОбъектРемонта, ЗначениеСоответствия);
	КонецЦикла;
	
	Возврат СоответствиеОР;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСписокРазличныхЗначенийИзСоответствия(СоответствиеОР)
	
	ОбщийСписок = Новый СписокЗначений;
	Для каждого КлючИЗначение из СоответствиеОР Цикл
		Для каждого ЭлементМассива из КлючИЗначение.Значение Цикл
			Если ОбщийСписок.НайтиПоЗначению(ЭлементМассива) = Неопределено Тогда
				ОбщийСписок.Добавить(ЭлементМассива,,Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ОбщийСписок.СортироватьПоЗначению();

	Возврат ОбщийСписок;
	
КонецФункции

&НаКлиенте
Функция ОтфильтроватьСоответствиеОРПоМассивуВыбранныхЗначений(СоответствиеОР, СписокЗначенийСПометками)
	
	ОтфильтрованноеСоответствиеОР = Новый Соответствие;
	
	ВыбранныеЗначения = Новый Массив;
	Для каждого ЭлементСписка из СписокЗначенийСПометками Цикл
		Если ЭлементСписка.Пометка Тогда
			ВыбранныеЗначения.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ВыбранныеЗначения.Количество() = 0 Тогда
		Возврат ОтфильтрованноеСоответствиеОР;
	КонецЕсли;
	
	Для каждого КлючИЗначение из СоответствиеОР Цикл
		ОтобранныеЗначения = Новый Массив;
		Для каждого ЭлементМассива из КлючИЗначение.Значение Цикл
			Если ВыбранныеЗначения.Найти(ЭлементМассива) <> Неопределено Тогда
				ОтобранныеЗначения.Добавить(ЭлементМассива);
			КонецЕсли;
		КонецЦикла;
		
		Если ОтобранныеЗначения.Количество() > 0 Тогда
			ОтфильтрованноеСоответствиеОР.Вставить(КлючИЗначение.Ключ, ОтобранныеЗначения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОтфильтрованноеСоответствиеОР;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьОповещениеОВыборе(МассивОР, ДопПоляДляСтруктурыВозврата = Неопределено)
	
	Если МассивОР.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	стрПараметров = Новый Структура;
	
	Если ТипЗнч(МассивОР) = Тип("Соответствие") Тогда
		стрПараметров.Вставить("СоответствиеОбъектовРемонта", МассивОР);
	Иначе
		стрПараметров.Вставить("ОбъектРемонта", МассивОР);
	КонецЕсли;
		
	Если ВернутьИерархию Тогда
		стрПараметров.Вставить("Иерархия", ТекСтруктураИерархии);
	КонецЕсли;
	
	Если ДопПоляДляСтруктурыВозврата <> Неопределено Тогда
		Для каждого КлючИЗначение из ДопПоляДляСтруктурыВозврата Цикл
			стрПараметров.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ОповеститьОВыборе(стрПараметров);
	
КонецПроцедуры

&НаСервере 
Процедура ОбновитьКартинкиЭлементовПолногоДереваНаСервере()
	торо_РаботаСИерархией20.ОбновитьКартинкиЭлементовПолногоДереваНаСервере(ДеревоПолное);
КонецПроцедуры

&НаСервере 
Процедура ОбновитьКартинкиЭлементовДереваНаСервере(ИдентификаторСтроки = 0)
	торо_РаботаСИерархией20.ОбновитьКартинкиЭлементовДереваНаСервере(Дерево, ИдентификаторСтроки);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображениеГрупп()
	НеОтображатьГруппы = Не НеОтображатьГруппы;
	Элементы.НеОтображатьГруппы.Пометка = НеОтображатьГруппы;
	
	торо_РаботаСИерархией20Клиент.УправлениеОтборомВСписке(ЭтаФорма,,,, НеОтображатьГруппы);
	торо_РаботаСИерархией20Клиент.УстановитьДоступностьКомандДереваПриАктивизацииСтроки(ЭтаФорма, Элементы.Дерево.ТекущиеДанные);
КонецПроцедуры

#КонецОбласти
