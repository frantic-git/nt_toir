
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВосстановитьНастройки();
	
	ФормаВладелецСтрокой = Параметры.ФормаВладелецСтрокой;
	
	Если ФормаВладелецСтрокой = "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораОбъектовДляПланаГрафикаППР"
		ИЛИ ФормаВладелецСтрокой = "Документ.торо_ПланГрафикРемонта.Форма.ФормаДокумента" Тогда
		
		ПодборДляОбъектовРемонта = Истина;
		
		ИспользоватьПланированиеПоЖесткимРемЦиклам = ПолучитьФункциональнуюОпцию("торо_ИспользоватьПланированиеПоЖесткимРемЦиклам");	
		
		ПодбиратьЦепочкиРемонтов = ИспользоватьПланированиеПоЖесткимРемЦиклам И Параметры.ПодбиратьЦепочкиРемонтов;
		ТолькоВидыРемонтовППР = Параметры.ТолькоВидыРемонтовППР;
	
	ИначеЕсли ФормаВладелецСтрокой = "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораСписковОРДляГрафикаРегламентныхМероприятий"
		ИЛИ ФормаВладелецСтрокой = "Документ.торо_ГрафикРегламентныхМероприятийТОиР.Форма.ФормаДокумента" Тогда
		// В дальнейшем ОбъектРемонта - это список объектов РМ, ВидРемонта - вид мероприятия.
		
		ПодборДляСписковОбъектовРМ = Истина;
		
		ТолькоГрафикиМероприятий = Параметры.ТолькоГрафикиМероприятий;	
	Иначе
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьДеревоВидовРемонтов(Параметры.ВходныеДанные);
		
	УправлениеФормой(); 
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОтображатьТолькоВиды Тогда 
		
		Элементы.СтраницыВариантыОтображения.ТекущаяСтраница = Элементы.ТолькоВиды;
		
		ЗаполнитьВидыРемонтов();
	КонецЕсли;
	
	РазвернутьВсе(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Настройки = Новый Структура();                               
	Настройки.Вставить("ОтображатьТолькоВиды", ОтображатьТолькоВиды);
	
	Результат = Новый Структура();
	Результат.Вставить("ФормаПодбораВидовРемонтаМероприятийИЦепочек", Настройки);
	
	СохранитьНастройки(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтображатьТолькоВидыПриИзменении(Элемент)
	
	Если ОтображатьТолькоВиды Тогда 
		
		Элементы.СтраницыВариантыОтображения.ТекущаяСтраница = Элементы.ТолькоВиды;
		
		ЗаполнитьВидыРемонтов();
	Иначе
		
		Элементы.СтраницыВариантыОтображения.ТекущаяСтраница = Элементы.ГруппировкаПоОбъектамИВидам;

		ОбновитьПометкиВДеревеПоТаблицеВидовРемонта();
	КонецЕсли;		

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыРемонтовДерево

&НаКлиенте
Процедура ВидыРемонтовДеревоПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ВидыРемонтовДерево.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВидыРемонтовКонтекстноеМенюГруппаФлажкиПоРемонту.Доступность = ТекущиеДанные.ЭтоВидРемонта;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыРемонтовДеревоПометкаПриИзменении(Элемент)

    ТекущиеДанные = Элементы.ВидыРемонтовДерево.ТекущиеДанные;
	
	ТекущиеДанные.Пометка = ?(ТекущиеДанные.Пометка = 2, 0, ТекущиеДанные.Пометка);

	Если ТекущиеДанные.ЭтоОбъектРемонта Тогда
		
		Для Каждого ПодчиненныйЭлемент Из ТекущиеДанные.ПолучитьЭлементы() Цикл
			ПодчиненныйЭлемент.Пометка = ТекущиеДанные.Пометка;
		КонецЦикла;
		
	ИначеЕсли ТекущиеДанные.ЭтоВидРемонта Тогда
		
		ОбновитьПометкуРодителя(ТекущиеДанные);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ВидыРемонтовДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ВидыРемонтовДеревоОбъектВидРемонта Тогда
		ПоказатьЗначение(, ТекущиеДанные.ОбъектВидРемонта);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВиды

&НаКлиенте
Процедура ВидыРемонтовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле = Элементы.ВидыРемонтовВидРемонта Тогда
		ПоказатьЗначение(, ТекущиеДанные.ВидРемонта);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Если ОтображатьТолькоВиды Тогда
		ОбновитьПометкиВДеревеПоТаблицеВидовРемонта();
	КонецЕсли;	
	
	СоответствиеОбъектовРемонта = Новый Соответствие();
	
	Для Каждого СтрокаОбъектРемонта Из ВидыРемонтовДерево.ПолучитьЭлементы() Цикл
		
		МассивВидовРемонта = Новый Массив;
		
		Для Каждого СтрокаВидРемонта Из СтрокаОбъектРемонта.ПолучитьЭлементы() Цикл
			Если СтрокаВидРемонта.Пометка = 1 Тогда
				МассивВидовРемонта.Добавить(СтрокаВидРемонта.ОбъектВидРемонта);
			КонецЕсли;
		КонецЦикла; 
		
		СоответствиеОбъектовРемонта.Вставить(СтрокаОбъектРемонта.ОбъектВидРемонта, МассивВидовРемонта);
	КонецЦикла;		
	
	Если ФормаВладелецСтрокой = "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораОбъектовДляПланаГрафикаППР"
		ИЛИ ФормаВладелецСтрокой = "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораСписковОРДляГрафикаРегламентныхМероприятий" Тогда
		
		Закрыть(СоответствиеОбъектовРемонта);
		
	ИначеЕсли ФормаВладелецСтрокой = "Документ.торо_ПланГрафикРемонта.Форма.ФормаДокумента"
		ИЛИ ФормаВладелецСтрокой = "Документ.торо_ГрафикРегламентныхМероприятийТОиР.Форма.ФормаДокумента" Тогда		
		
		Результат = Новый Структура();
		Результат.Вставить("СоответствиеОбъектовРемонта", СоответствиеОбъектовРемонта);
		Результат.Вставить("УдалятьОтсутствующиеВиды", Истина);
		
		ОповеститьОВыборе(Результат);	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Для Каждого ЭлементДерева Из ВидыРемонтовДерево.ПолучитьЭлементы() Цикл
		Элементы.ВидыРемонтовДерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	Для Каждого ЭлементДерева Из ВидыРемонтовДерево.ПолучитьЭлементы() Цикл
		Элементы.ВидыРемонтовДерево.Свернуть(ЭлементДерева.ПолучитьИдентификатор());
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьФлажки(0);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьФлажки(1);		

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиПоРемонту(Команда)
		
	ТекущиеДанные = Элементы.ВидыРемонтовДерево.ТекущиеДанные;
	
	УстановитьСнятьФлажкиПоРемонту(0, ТекущиеДанные.ОбъектВидРемонта); 	
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиПоРемонту(Команда)
	
	ТекущиеДанные = Элементы.ВидыРемонтовДерево.ТекущиеДанные;
	
	УстановитьСнятьФлажкиПоРемонту(1, ТекущиеДанные.ОбъектВидРемонта); 	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоВидовРемонтов(ВходныеДанные)
	
	ПроверятьВидРемонтаВоВходныхДанных = Ложь;
	
	Если ФормаВладелецСтрокой = "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораОбъектовДляПланаГрафикаППР"
		ИЛИ ФормаВладелецСтрокой = "Обработка.торо_ПодборОбъектовРемонтныхРабот.Форма.ФормаПодбораСписковОРДляГрафикаРегламентныхМероприятий" Тогда
		// Входные данные - соответствие. Ключ - объект ремонта / список объектов РМ, значение - виды ремонта / мероприятий. Получение нормативов уже выполнено.
		
		ВидыРемонтаОбъектов = ВходныеДанные;
		
	ИначеЕсли ФормаВладелецСтрокой = "Документ.торо_ПланГрафикРемонта.Форма.ФормаДокумента" 
		ИЛИ ФормаВладелецСтрокой = "Документ.торо_ГрафикРегламентныхМероприятийТОиР.Форма.ФормаДокумента" Тогда
		// Входные данные - соответствие. Ключ - объект ремонта / список объектов РМ, значение - виды ремонта / мероприятий только добавленные в документ.
		
		ПроверятьВидРемонтаВоВходныхДанных = Истина;		
		
		
		Объекты = Новый Массив;
		Для Каждого КлючИЗначение Из ВходныеДанные Цикл
			Объекты.Добавить(КлючИЗначение.Ключ);	
		КонецЦикла; 
		
		Если ПодборДляОбъектовРемонта Тогда 
			
			ПараметрыПолучения = Новый Структура;
			ПараметрыПолучения.Вставить("ТолькоВидыРемонтовППР", ТолькоВидыРемонтовППР);
			ПараметрыПолучения.Вставить("ПодбиратьЦепочкиРемонтов", ПодбиратьЦепочкиРемонтов);
			
			ВидыРемонтаОбъектов = Обработки.торо_ПодборОбъектовРемонтныхРабот.СоответствиеОбъектовРемонтаВидамРемонтаИЦепочкам(Объекты, ПараметрыПолучения);
			
		Иначе 
			
			ПараметрыПолучения = Новый Структура;
			ПараметрыПолучения.Вставить("ТолькоГрафикиМероприятий", ТолькоГрафикиМероприятий);
			
			ВидыРемонтаОбъектов = Обработки.торо_ПодборОбъектовРемонтныхРабот.СоответствиеСписковОбъектовРМВидамМероприятий(Объекты, ПараметрыПолучения);
		КонецЕсли; 
	КонецЕсли;	
	
		
		
	Для Каждого КлючИЗначение Из ВидыРемонтаОбъектов Цикл
		
		ЭлементыОбъектыРемонта = ВидыРемонтовДерево.ПолучитьЭлементы();
		
		НовыйОбъектРемонта = ЭлементыОбъектыРемонта.Добавить();
		НовыйОбъектРемонта.ОбъектВидРемонта = КлючИЗначение.Ключ;
		НовыйОбъектРемонта.ЭтоОбъектРемонта = Истина;
		
		Если ТипЗнч(НовыйОбъектРемонта.ОбъектВидРемонта) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
			НовыйОбъектРемонта.НомерКартинки = 0;
		ИначеЕсли ТипЗнч(НовыйОбъектРемонта.ОбъектВидРемонта) = Тип("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
			НовыйОбъектРемонта.НомерКартинки = 9;
		КонецЕсли;
		
		ЭлементыВидыРемонта = НовыйОбъектРемонта.ПолучитьЭлементы();	
		
		Если ПроверятьВидРемонтаВоВходныхДанных Тогда
			ВидыРемонтаИзДокумента = ВходныеДанные.Получить(КлючИЗначение.Ключ);
		КонецЕсли;	
		
		Для Каждого ВидРемонта Из КлючИЗначение.Значение Цикл
			
			НовыйВидРемонта = ЭлементыВидыРемонта.Добавить();
			НовыйВидРемонта.ОбъектВидРемонта = ВидРемонта;
			НовыйВидРемонта.ЭтоВидРемонта = Истина;
			
			Если ПроверятьВидРемонтаВоВходныхДанных Тогда
				НовыйВидРемонта.Пометка = ?(ВидыРемонтаИзДокумента.Найти(ВидРемонта) = Неопределено, 0, 1);
			Иначе	
				НовыйВидРемонта.Пометка = 1;
			КонецЕсли;
			
			Если ТипЗнч(ВидРемонта) = Тип("СправочникСсылка.торо_ВидыРемонтов") Тогда
				НовыйВидРемонта.НомерКартинки = 7;
			ИначеЕсли ТипЗнч(ВидРемонта) = Тип("СправочникСсылка.торо_ЦепочкиРемонта") Тогда
				НовыйВидРемонта.НомерКартинки = 15;	
			КонецЕсли;	
		КонецЦикла;
		
		Если ПроверятьВидРемонтаВоВходныхДанных Тогда
			// Проверим все ли виды ремонта из входных данных добавлены.
			
			ЭлементыВидыРемонта = НовыйОбъектРемонта.ПолучитьЭлементы();
			
			Для Каждого ВидРемонта Из ВидыРемонтаИзДокумента Цикл
				
				ВидРемонтаДобавлен = Ложь;
				Для Каждого СтрокаВидРемонта Из ЭлементыВидыРемонта Цикл
					Если СтрокаВидРемонта.ОбъектВидРемонта = ВидРемонта Тогда
						ВидРемонтаДобавлен = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				
				Если Не ВидРемонтаДобавлен Тогда
					
					НовыйВидРемонта = ЭлементыВидыРемонта.Добавить();
					НовыйВидРемонта.ОбъектВидРемонта = ВидРемонта;
					НовыйВидРемонта.ЭтоВидРемонта = Истина;
					НовыйВидРемонта.Пометка = 1;
					
					Если ТипЗнч(ВидРемонта) = Тип("СправочникСсылка.торо_ВидыРемонтов") Тогда
						НовыйВидРемонта.НомерКартинки = 7;
					ИначеЕсли ТипЗнч(ВидРемонта) = Тип("СправочникСсылка.торо_ЦепочкиРемонта") Тогда
						НовыйВидРемонта.НомерКартинки = 15;	
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		
		ОбновитьПометкуПоПодчиненным(НовыйОбъектРемонта);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьВидыРемонтов()
	
	ВидыРемонтов.Очистить();
	
	СтруктураОтбора = Новый Структура("ВидРемонта");
	
	Для Каждого СтрокаОбъектРемонта Из ВидыРемонтовДерево.ПолучитьЭлементы() Цикл
		
		Для Каждого СтрокаВидРемонта Из СтрокаОбъектРемонта.ПолучитьЭлементы() Цикл
			
			СтруктураОтбора.ВидРемонта = СтрокаВидРемонта.ОбъектВидРемонта;
			
			ВидыРемонтовОтбор = ВидыРемонтов.НайтиСтроки(СтруктураОтбора);
			Если ВидыРемонтовОтбор.Количество() = 0 Тогда
				
				НоваяСтрока = ВидыРемонтов.Добавить();
				НоваяСтрока.ВидРемонта = СтрокаВидРемонта.ОбъектВидРемонта;
				НоваяСтрока.НомерКартинки = СтрокаВидРемонта.НомерКартинки;
				НоваяСтрока.Пометка = СтрокаВидРемонта.Пометка; 
				
			Иначе
				
				ВидыРемонтовОтбор[0].Пометка = ВидыРемонтовОтбор[0].Пометка И СтрокаВидРемонта.Пометка;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;		
	
	ВидыРемонтов.Сортировать("ВидРемонта");
	
КонецПроцедуры	

&НаСервере
Процедура УправлениеФормой()

	Если ПодборДляОбъектовРемонта Тогда
		
		Если ПодбиратьЦепочкиРемонтов Тогда
			ЭтаФорма.Заголовок = НСтр("ru = 'Выберите виды / цепочки ремонтов'");
			Элементы.ВидыРемонтовДеревоОбъектВидРемонта.Заголовок = НСтр("ru = 'Объект ремонта / вид (цепочка) ремонта'");
			Элементы.ВидыРемонтовВидРемонта.Заголовок = НСтр("ru = 'Вид (цепочка) ремонта'"); 
			Элементы.ОтображатьТолькоВиды.Заголовок = НСтр("ru = 'Отображать только виды и цепочки ремонтов'"); 
		Иначе
			ЭтаФорма.Заголовок = НСтр("ru = 'Выберите виды ремонтов'"); 
			Элементы.ВидыРемонтовДеревоОбъектВидРемонта.Заголовок = НСтр("ru = 'Объект ремонта / вид ремонта'");
			Элементы.ВидыРемонтовВидРемонта.Заголовок = НСтр("ru = 'Вид ремонта'");
			Элементы.ОтображатьТолькоВиды.Заголовок = НСтр("ru = 'Отображать только виды ремонтов'"); 
		КонецЕсли;     
		
	ИначеЕсли ПодборДляСписковОбъектовРМ Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Выберите виды мероприятий'");
		Элементы.ВидыРемонтовДеревоОбъектВидРемонта.Заголовок = НСтр("ru = 'Список объектов / вид мероприятия'");
		Элементы.ВидыРемонтовВидРемонта.Заголовок = НСтр("ru = 'Вид мероприятия'");
		Элементы.ОтображатьТолькоВиды.Заголовок = НСтр("ru = 'Отображать только виды мероприятий'"); 
	КонецЕсли;		
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьСнятьФлажки(Пометка)
	
	Если ОтображатьТолькоВиды Тогда
				
		Для Каждого Строка Из ВидыРемонтов Цикл
			Строка.Пометка = Пометка;
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаОбъектРемонта Из ВидыРемонтовДерево.ПолучитьЭлементы() Цикл
			
			СтрокаОбъектРемонта.Пометка = Пометка;
			
			Для Каждого СтрокаВидРемонта Из СтрокаОбъектРемонта.ПолучитьЭлементы() Цикл
				СтрокаВидРемонта.Пометка = Пометка;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли; 

КонецПроцедуры	

&НаКлиенте
Процедура УстановитьСнятьФлажкиПоРемонту(Пометка, ВидРемонта)
	
	СтрокиДерева = ВидыРемонтовДерево.ПолучитьЭлементы();
	Для Каждого СтрокаОбъектРемонта Из СтрокиДерева Цикл
		
		Для Каждого СтрокаВидРемонта Из СтрокаОбъектРемонта.ПолучитьЭлементы() Цикл
			
			Если СтрокаВидРемонта.ОбъектВидРемонта = ВидРемонта Тогда
				СтрокаВидРемонта.Пометка = Пометка;
			КонецЕсли;
		КонецЦикла; 
		
		ОбновитьПометкуРодителя(СтрокаВидРемонта);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте 
Процедура ОбновитьПометкуРодителя(СтрокаВидРемонта)
	
	СтрокаОбъектРемонта = СтрокаВидРемонта.ПолучитьРодителя(); 
	СтрокиВидыРемонта = СтрокаОбъектРемонта.ПолучитьЭлементы();
	
	СуммаПометок = 0;
	Для Каждого ПодчиненнаяСтрока Из СтрокиВидыРемонта Цикл
		СуммаПометок = СуммаПометок + ПодчиненнаяСтрока.Пометка;	
	КонецЦикла;	
	
	Если СуммаПометок = 0 Тогда
		СтрокаОбъектРемонта.Пометка = 0;
	ИначеЕсли СуммаПометок / СтрокиВидыРемонта.Количество() = 1 Тогда
		СтрокаОбъектРемонта.Пометка = 1; 
	Иначе
		СтрокаОбъектРемонта.Пометка = 2;
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере 
Процедура ОбновитьПометкуПоПодчиненным(СтрокаОбъектРемонта)
	
	СтрокиВидыРемонта = СтрокаОбъектРемонта.ПолучитьЭлементы();
	
	СуммаПометок = 0;
	Для Каждого ПодчиненнаяСтрока Из СтрокиВидыРемонта Цикл
		СуммаПометок = СуммаПометок + ПодчиненнаяСтрока.Пометка;	
	КонецЦикла;	
	
	Если СуммаПометок = 0 Тогда
		СтрокаОбъектРемонта.Пометка = 0;
	ИначеЕсли СуммаПометок / СтрокиВидыРемонта.Количество() = 1 Тогда
		СтрокаОбъектРемонта.Пометка = 1; 
	Иначе
		СтрокаОбъектРемонта.Пометка = 2;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПометкиВДеревеПоТаблицеВидовРемонта() 

	Для Каждого Строка Из ВидыРемонтов Цикл
		УстановитьСнятьФлажкиПоРемонту(Строка.Пометка, Строка.ВидРемонта);
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура СохранитьНастройки(Настройки)
	
	ИдентификаторПользователя = Пользователи.ТекущийПользователь().УникальныйИдентификатор();
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Обработка.торо_ПодборОбъектовРемонтныхРабот", ИдентификаторПользователя, Настройки);
	
КонецПроцедуры

&НаСервере
Функция ВосстановитьНастройки()
	
	ИдентификаторПользователя = Пользователи.ТекущийПользователь().УникальныйИдентификатор();
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Обработка.торо_ПодборОбъектовРемонтныхРабот", ИдентификаторПользователя);
	
	Если ТипЗнч(Настройки) = Тип("Структура") И Настройки.Свойство("ФормаПодбораВидовРемонтаМероприятийИЦепочек") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки.ФормаПодбораВидовРемонтаМероприятийИЦепочек);
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти