#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВосстановитьНастройки();
	
	УстановитьПараметрыСписков();
	УстановитьПараметрСпискаМероприятий();
	
	УстановитьУсловноеОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если Не ЗавершениеРаботы Тогда
		СохранитьНастройки();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборОрганизацияПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПодразделениеПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборОбъектРемонтаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРемонтаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборКритичностьПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура КритичностьПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборСтатусДефектаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура СтатусДефектаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборСтатусАнализаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура СтатусАнализаПриИзменении(Элемент)
	УстановитьПараметрыСписков();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокАнализНачат
&НаКлиенте
Процедура СписокАнализНачатПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.СписокАнализНачат.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		УстановитьПараметрСпискаМероприятий(ТекущиеДанные.Анализ);
	Иначе
		УстановитьПараметрСпискаМероприятий(Неопределено);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СписокАнализНачатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокАнализНачат.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И Поле.Имя = "СписокАнализНачатОбъектРемонта" И ЗначениеЗаполнено(ТекущиеДанные.ОбъектРемонта) Тогда
		ПоказатьЗначение(, ТекущиеДанные.ОбъектРемонта);
	ИначеЕсли ТекущиеДанные <> Неопределено И Поле.Имя = "СписокАнализНачатОтказавшийЭлемент" И ЗначениеЗаполнено(ТекущиеДанные.ОтказавшийЭлемент) Тогда
		ПоказатьЗначение(, ТекущиеДанные.ОтказавшийЭлемент);
	ИначеЕсли ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Анализ) И 
		(Поле.Имя = "СписокАнализНачатАнализ" ИЛИ Поле.Имя = "СписокАнализНачатСтатусАнализа" ИЛИ Поле.Имя = "СписокАнализНачатМероприятияЗавершены") Тогда
		ПоказатьЗначение(, ТекущиеДанные.Анализ);
	ИначеЕсли ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ВыявленныйДефект) Тогда
		ПоказатьЗначение(, ТекущиеДанные.ВыявленныйДефект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокАнализНеНачат
&НаКлиенте
Процедура СписокАнализНеНачатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокАнализНеНачат.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И Поле.Имя = "СписокАнализНеНачатОбъектРемонта" И ЗначениеЗаполнено(ТекущиеДанные.ОбъектРемонта) Тогда
		ПоказатьЗначение(, ТекущиеДанные.ОбъектРемонта);
	ИначеЕсли ТекущиеДанные <> Неопределено И Поле.Имя = "СписокАнализНеНачатОтказавшийЭлемент" И ЗначениеЗаполнено(ТекущиеДанные.ОтказавшийЭлемент) Тогда
		ПоказатьЗначение(, ТекущиеДанные.ОтказавшийЭлемент);
	ИначеЕсли ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ВыявленныйДефект) Тогда
		ПоказатьЗначение(, ТекущиеДанные.ВыявленныйДефект);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокМероприятий
&НаКлиенте
Процедура СписокМероприятийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.СписокМероприятий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Задание) Тогда
		ПоказатьЗначение(, ТекущиеДанные.Задание);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура НачатьАнализ(Команда)
 
	ТекущиеДанные = Элементы.СписокАнализНеНачат.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		СоответствиеИД = Новый Соответствие;
		СоответствиеИД.Вставить(ТекущиеДанные.ID, ТекущиеДанные.ВыявленныйДефект);
		
		СтруктураПараметров = Новый Структура("Основание", СоответствиеИД);
		
		СтруктураЗаполнения = Новый Структура("ЗначенияЗаполнения", СтруктураПараметров); 
		ОткрытьФорму("Документ.торо_АнализКоренныхПричин.Форма.ФормаДокумента", СтруктураЗаполнения); 
	
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрыСписков()
	
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
		УстановленнаяДатаНачала = Дата(1,1,1,0,0,0);
	Иначе
		УстановленнаяДатаНачала = НачалоПериода;
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда
		УстановленнаяДатаОкончания = Дата(3999,12,31,23,59,59);
	Иначе
		УстановленнаяДатаОкончания = КонецПериода;
	КонецЕсли; 
	
	Если ИспользоватьОтборПодразделение Тогда
		Если ПоказыватьРемонтыПодчиненных Тогда
			Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
				МассивПодчиненныхПодразделений = Новый Массив;
			Иначе
				МассивПодчиненныхПодразделений = ПолучитьПодчиненныеПодразделения(Подразделение);
			КонецЕсли;
		Иначе
			МассивПодчиненныхПодразделений = Новый Массив;	
			МассивПодчиненныхПодразделений.Добавить(Подразделение);
		КонецЕсли;
	КонецЕсли;
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ДатаНачала", УстановленнаяДатаНачала);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", УстановленнаяДатаОкончания);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("Подразделение", МассивПодчиненныхПодразделений);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ОбъектРемонта", ОбъектРемонта);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("СтатусАнализа", СтатусАнализа);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("Критичность", Критичность);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("СтатусДефекта", СтатусДефекта);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборКритичность", ИспользоватьОтборКритичность);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборОбъектРемонта", ИспользоватьОтборОбъектРемонта);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборОрганизация", ИспользоватьОтборОрганизация);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПодразделение", ИспользоватьОтборПодразделение);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборСтатусАнализа", ИспользоватьОтборСтатусАнализа);
	СписокАнализНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборСтатусДефекта", ИспользоватьОтборСтатусДефекта);
	
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ДатаНачала", УстановленнаяДатаНачала);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", УстановленнаяДатаОкончания);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("Подразделение", МассивПодчиненныхПодразделений);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ОбъектРемонта", ОбъектРемонта);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("Критичность", Критичность);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("СтатусДефекта", СтатусДефекта);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборКритичность", ИспользоватьОтборКритичность);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборОбъектРемонта", ИспользоватьОтборОбъектРемонта);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборОрганизация", ИспользоватьОтборОрганизация);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПодразделение", ИспользоватьОтборПодразделение);
	СписокАнализНеНачат.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборСтатусДефекта", ИспользоватьОтборСтатусДефекта);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрСпискаМероприятий(Ссылка = Неопределено)
	Если Ссылка = Неопределено Тогда
		Ссылка = Документы.торо_АнализКоренныхПричин.ПустаяСсылка();
	КонецЕсли; 
	СписокМероприятий.Параметры.УстановитьЗначениеПараметра("Анализ", Ссылка);
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	СохраненнаяНастройка = Новый Структура;
	СохраненнаяНастройка.Вставить("НачалоПериода", НачалоПериода);
	СохраненнаяНастройка.Вставить("КонецПериода", КонецПериода);
	СохраненнаяНастройка.Вставить("Организация", Организация);
	СохраненнаяНастройка.Вставить("Подразделение", Подразделение);
	СохраненнаяНастройка.Вставить("ОбъектРемонта", ОбъектРемонта);
	СохраненнаяНастройка.Вставить("СтатусАнализа", СтатусАнализа);
	СохраненнаяНастройка.Вставить("Критичность", Критичность);
	СохраненнаяНастройка.Вставить("СтатусДефекта", СтатусДефекта);
	СохраненнаяНастройка.Вставить("ПоказыватьРемонтыПодчиненных", ПоказыватьРемонтыПодчиненных);
	СохраненнаяНастройка.Вставить("ИспользоватьОтборКритичность", ИспользоватьОтборКритичность);
	СохраненнаяНастройка.Вставить("ИспользоватьОтборОбъектРемонта", ИспользоватьОтборОбъектРемонта);
	СохраненнаяНастройка.Вставить("ИспользоватьОтборОрганизация", ИспользоватьОтборОрганизация);
	СохраненнаяНастройка.Вставить("ИспользоватьОтборПодразделение", ИспользоватьОтборПодразделение);
	СохраненнаяНастройка.Вставить("ИспользоватьОтборСтатусАнализа", ИспользоватьОтборСтатусАнализа);
	СохраненнаяНастройка.Вставить("ИспользоватьОтборСтатусДефекта", ИспользоватьОтборСтатусДефекта);
	
	СохраненнаяНастройка.Вставить("РежимВыделенияСтрок", РежимВыделенияСтрок);
	СохраненнаяНастройка.Вставить("ТаблицаКритичности", ТаблицаКритичности.Выгрузить());
	СохраненнаяНастройка.Вставить("ТаблицаПриоритетностиОР", ТаблицаПриоритетностиОР.Выгрузить());
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Обработка.торо_ПроведениеАнализаКоренныхПричинДефектов", Пользователи.ТекущийПользователь().УникальныйИдентификатор(), СохраненнаяНастройка);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	
	ЗначениеНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Обработка.торо_ПроведениеАнализаКоренныхПричинДефектов", Пользователи.ТекущийПользователь().УникальныйИдентификатор());
	
	Если ТипЗнч(ЗначениеНастроек) = Тип("Структура") Тогда
		
		НачалоПериода = ЗначениеНастроек.НачалоПериода;
		КонецПериода = ЗначениеНастроек.КонецПериода;
		Организация = ЗначениеНастроек.Организация;
		Подразделение = ЗначениеНастроек.Подразделение;
		ОбъектРемонта = ЗначениеНастроек.ОбъектРемонта;
		СтатусАнализа = ЗначениеНастроек.СтатусАнализа;
		Критичность = ЗначениеНастроек.Критичность;
		СтатусДефекта = ЗначениеНастроек.СтатусДефекта;
		ИспользоватьОтборКритичность = ЗначениеНастроек.ИспользоватьОтборКритичность;
		ИспользоватьОтборОбъектРемонта = ЗначениеНастроек.ИспользоватьОтборОбъектРемонта;
		ИспользоватьОтборОрганизация = ЗначениеНастроек.ИспользоватьОтборОрганизация;
		ИспользоватьОтборПодразделение = ЗначениеНастроек.ИспользоватьОтборПодразделение;
		ИспользоватьОтборСтатусАнализа = ЗначениеНастроек.ИспользоватьОтборСтатусАнализа;
		ИспользоватьОтборСтатусДефекта = ЗначениеНастроек.ИспользоватьОтборСтатусДефекта;
		
		Если ЗначениеНастроек.Свойство("ПоказыватьРемонтыПодчиненных") Тогда
			ПоказыватьРемонтыПодчиненных = ЗначениеНастроек.ПоказыватьРемонтыПодчиненных;
		КонецЕсли;
		
		Если ЗначениеНастроек.Свойство("РежимВыделенияСтрок") Тогда
			РежимВыделенияСтрок = ЗначениеНастроек.РежимВыделенияСтрок;
			ТаблицаКритичности.Загрузить(ЗначениеНастроек.ТаблицаКритичности);
			ТаблицаПриоритетностиОР.Загрузить(ЗначениеНастроек.ТаблицаПриоритетностиОР);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнаяОрганизация");
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновноеПодразделение");
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура АнализыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "Начатые" Тогда
		Элементы.ГруппаСтатусаАнализа.Видимость = Истина;
	Иначе	
		Элементы.ГруппаСтатусаАнализа.Видимость = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НастройкиРМ(Команда)
	СтруктураПараметров = Новый Структура("НачалоПериода, КонецПериода, ПоказыватьРемонтыПодчиненных, РежимВыделенияСтрок", НачалоПериода, КонецПериода, ПоказыватьРемонтыПодчиненных, РежимВыделенияСтрок); 
	
	ДобавитьНастройкиЦвета(СтруктураПараметров);
	
	ОткрытьФорму("Обработка.торо_ПроведениеАнализаКоренныхПричинДефектов.Форма.ФормаНастроек", СтруктураПараметров, ЭтаФорма, ,,,,РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ФормаНастроекПроведенияАнализа" Тогда
		НачалоПериода = Параметр.НачалоПериода;
		КонецПериода = Параметр.КонецПериода;
		ПоказыватьРемонтыПодчиненных = Параметр.ПоказыватьРемонтыПодчиненных;
		
		РежимВыделенияСтрок = Параметр.РежимВыделенияСтрок;
		УстановитьУсловноеОформление();
		
		УстановитьПараметрыСписков();		
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПодчиненныеПодразделения(Исполнитель)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Подразделения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК Подразделения
	|ГДЕ
	|	Подразделения.Ссылка В ИЕРАРХИИ(&Ссылка)";
	Запрос.УстановитьПараметр("Ссылка", Исполнитель);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса.ВыгрузитьКолонку("Ссылка");
КонецФункции

&НаСервере
Процедура ДобавитьНастройкиЦвета(СтруктураПараметров)
	
	Если РежимВыделенияСтрок = "По критичности дефекта" Тогда
		СтруктураПараметров.Вставить("ТаблицаКритичности", ПоместитьВоВременноеХранилище(ТаблицаКритичности.Выгрузить(), ЭтаФорма.УникальныйИдентификатор));
	ИначеЕсли РежимВыделенияСтрок = "По критичности объекта ремонта" Тогда
		СтруктураПараметров.Вставить("ТаблицаПриоритетностиОР", ПоместитьВоВременноеХранилище(ТаблицаПриоритетностиОР.Выгрузить(), ЭтаФорма.УникальныйИдентификатор));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Если РежимВыделенияСтрок = "По критичности дефекта" Тогда
		Для каждого Стр Из ТаблицаКритичности Цикл
			
			ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
			
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле         = Новый ПолеКомпоновкиДанных("СписокАнализНеНачат");
			
			ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокАнализНеНачат.Критичность");
			ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение = Стр.Критичность;
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Стр.Цвет);
			
			ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
			
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле         = Новый ПолеКомпоновкиДанных("СписокАнализНачат");
			
			ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокАнализНачат.Критичность");
			ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение = Стр.Критичность;
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Стр.Цвет);
			
			
		КонецЦикла;
		
	ИначеЕсли РежимВыделенияСтрок = "По критичности объекта ремонта" Тогда
		
		Для каждого Стр Из ТаблицаПриоритетностиОР Цикл
			
			ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
			
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле         = Новый ПолеКомпоновкиДанных("СписокАнализНеНачат");
			
			ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокАнализНеНачат.ПриоритетОР");
			ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение = Стр.Приоритет;
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Стр.Цвет);
			
			ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
			
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле         = Новый ПолеКомпоновкиДанных("СписокАнализНачат");
			
			ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокАнализНачат.ПриоритетОР");
			ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение = Стр.Приоритет;
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Стр.Цвет);
			
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти








