&НаКлиенте
Перем ВыполняетсяЗакрытие;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ЗаполнитьПредустановленныеОписания();
	
	ЗагрузитьНастройки();
	
	УстановитьВидимостьИДоступность();
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройки.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//УстановитьСтраницыИОписания();
	Элементы.ПерейтиНаГлавнуюСтраницу.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		СохранитьСтатусыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Или ИмяСобытия = "Запись_Склады" Тогда
			УстановитьВидимостьИДоступность();
			//УстановитьСтраницыИОписания();
	КонецЕсли;
		
	Если ИмяСобытия = "Запись_МножествоВидовНоменклатуры" Тогда
			УстановитьВидимостьИДоступность();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиНаГлавнуюСтраницу(Команда)
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройки.Имя);
	Заголовок = НСтр("ru = 'Помощник заполнения настроек и справочников'");
	Элементы.ПерейтиНаГлавнуюСтраницу.Видимость = Ложь;
	
	//Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОсновная;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	МассивРеквизитов = МассивРеквизитовФормы(Элементы.ОсновнаяПанель.ТекущаяСтраница.Имя);
	
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		ЭтаФорма[Реквизит] = Ложь;
	КонецЦикла;
	
	//УстановитьСтраницыИОписания();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция МассивРеквизитовФормы(ИмяСтраницы = Неопределено)
	
	Массив = Новый Массив;
	
	// Страница основные настройки.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаОсновныеНастройки" Тогда
		
		Массив.Добавить("ОтметкаОрганизации");
		Массив.Добавить("ОтметкаСтруктураПредприятия");
		Массив.Добавить("ОтметкаГрафикиРаботы");
		Массив.Добавить("ОтметкаНастройкиПользователейИПрав");
		Массив.Добавить("ОтметкаГруппыДоступа");
		Массив.Добавить("ОтметкаВводНачальныхДанных");
		Массив.Добавить("ОтметкаГруппаОборудованиеИНормативы");
		Массив.Добавить("ОтметкаГруппаПоказателиЭксплуатации");
		Массив.Добавить("ОтметкаНастройкаПараметровПодсистемыТОиР");
		
	КонецЕсли;
	
	// Страница настройки оборудования и нормативов.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаОсновныеНастройкиОборудованияИНормативов" Тогда
		
		Массив.Добавить("ОтметкаТехнологическиеОперации");
		Массив.Добавить("ОтметкаТехнологическиеКарты");
		Массив.Добавить("ОтметкаНаправления");
		
		Массив.Добавить("ОтметкаВидыРемонтов");
		Массив.Добавить("ОтметкаСпособыПланированияРемонтныхРабот");
		
		Массив.Добавить("ОтметкаСпискиОбъектовРегламентныхМероприятий");
		Массив.Добавить("ОтметкаСтруктураИерархииОР");
		Массив.Добавить("ОтметкаОбъектыРемонта");
		Массив.Добавить("ОтметкаТиповыеОР");
		
	КонецЕсли;
	
	// Страница настройки показателей эксплуатации
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаОсновныеНастройкиПоказателейЭксплуатации" Тогда
		
		Массив.Добавить("ОтметкаИзмеряемыеПоказатели");
		Массив.Добавить("ОтметкаПараметрыНаработки");
		Массив.Добавить("ОтметкаВидыДефектов");
		Массив.Добавить("ОтметкаПричиныДефектов");
		Массив.Добавить("ОтметкаКритичностьДефектов");
		Массив.Добавить("ОтметкаТиповыеДефектыОборудования");
		
		Массив.Добавить("ОтметкаУсловияВыявленияДефектов");
		Массив.Добавить("ОтметкаВидыЭксплуатации");
		
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПредустановленныеОписания()
	
	// Страница основные настройки.
	
	ОписаниеГруппаНоменклатура			= НСтр("ru = 'Настройки учета номенклатуры должны выполняться с учетом особенностей всех подсистем.'");
	ОписаниеГруппаЗапасыИЗакупки		= НСтр("ru = 'Задание параметров позволит управлять закупками и доставкой, складскими запасами и автоматизировать операции складского учета.'");
	ОписаниеГруппаМаркетингИПродажи		= НСтр("ru = 'Задание параметров позволит планировать маркетинговые мероприятия и анализировать рынок, управлять процессами продаж, включая ценообразование и взаиморасчеты с клиентами.'");
	ОписаниеГруппаПроизводство			= НСтр("ru = 'Задание параметров позволит планировать и контролировать выполнение производственных операций, формировать первичные документы производственного учета, а так же рассчитывать потребности в ресурсах.'");
	ОписаниеГруппаРемонты				= НСтр("ru = 'Задание параметров позволит планировать и контролировать выполнение ремонтно-профилактических работ, а так же рассчитывать потребности в материальных и трудовых ресурсах на их выполнение.'");
	
	ПредустановленныеОписания.Добавить("ГруппаНоменклатура", ОписаниеГруппаНоменклатура);
	ПредустановленныеОписания.Добавить("ГруппаЗапасыИЗакупки", ОписаниеГруппаЗапасыИЗакупки);
	ПредустановленныеОписания.Добавить("ГруппаМаркетингИПродажи", ОписаниеГруппаМаркетингИПродажи);
	ПредустановленныеОписания.Добавить("ГруппаПроизводство", ОписаниеГруппаПроизводство);
	ПредустановленныеОписания.Добавить("ГруппаРемонты", ОписаниеГруппаРемонты);
	
	Для Каждого Элемент Из ПредустановленныеОписания Цикл
		Элемент.Представление = СтрЗаменить(Элемент.Представление, символы.ПС, "");
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступность()
	Элементы.ЭлементИзмеряемыеПоказатели.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетКонтролируемыхПоказателей");
	Элементы.ЭлементПараметрыНаработки.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетНаработкиОборудования");
	Элементы.ЭлементВидыЭксплуатации.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетСостоянияОборудования");
	Элементы.ЭлементВидыДефектов.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	Элементы.ЭлементПричиныДефектов.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	Элементы.ЭлементКритичностьДефектов.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	Элементы.ЭлементУсловияВыявленияДефектов.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	Элементы.ЭлементТиповыеДефектыОборудования.Видимость = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования") Или ПолучитьФункциональнуюОпцию("торо_ИспользоватьВнешниеОснованияДляРабот");
	
	Если Не Элементы.ЭлементИзмеряемыеПоказатели.Видимость И Не Элементы.ЭлементПараметрыНаработки.Видимость
		И Не Элементы.ЭлементВидыЭксплуатации.Видимость И Не Элементы.ЭлементВидыДефектов.Видимость
		И Не Элементы.ЭлементПричиныДефектов.Видимость И Не Элементы.ЭлементКритичностьДефектов.Видимость
		И Не Элементы.ЭлементУсловияВыявленияДефектов.Видимость И Не Элементы.ЭлементТиповыеДефектыОборудования.Видимость Тогда
		Элементы.ГруппаПоказателиЭксплуатации.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ЭлементТиповыеОР.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьТиповыеОР");
	Элементы.ЭлементСпискиОбъектовРегламентныхМероприятий.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьРегламентныеМероприятия");
	Элементы.ЭлементНаправления.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьНаправленияОР");
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраниц(ИмяСтраницы)
	
	НоваяСтраница = Элементы[ИмяСтраницы];
	
	НоваяСтраница.Видимость = Истина;
	Элементы.ОсновнаяПанель.ТекущаяСтраница = НоваяСтраница;
	
	Для Каждого Элемент Из Элементы.ОсновнаяПанель.ПодчиненныеЭлементы Цикл
		Если Элемент = НоваяСтраница Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент.Видимость = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикиРаботы(Команда)
	
	ОткрытьФорму("Справочник.Календари.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыЭксплуатации(Команда)
	ОткрытьФорму("Справочник.торо_ВидыЭксплуатации.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПользователейИПрав(Команда)
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияБСП.Форма.НастройкиПользователейИПрав", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникЗаполненияОборудованияИНормативов(Команда)
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройкиОборудованияИНормативов.Имя);
	Заголовок = НСтр("ru = 'Помощник заполнения настроек и справочников / 2.1. Настройки учета оборудования и нормативов'");
	Элементы.ПерейтиНаГлавнуюСтраницу.Видимость = Истина;
	
	//Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОстальные;
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникЗаполненияПоказателейЭксплуатации(Команда)
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройкиПоказателейЭксплуатации.Имя);
	Заголовок = НСтр("ru = 'Помощник заполнения настроек и справочников / 2.2. Настройки учета показателей эксплуатации'");
	Элементы.ПерейтиНаГлавнуюСтраницу.Видимость = Истина;
КонецПроцедуры

&НаСервере
Процедура СохранитьСтатусыНаСервере()
	
	Настройки = Константы.торо_СтатусыОбъектовПомощникаЗаполненияНастроекИСправочников.Получить().Получить();
	
	Если ТипЗнч(Настройки) <> Тип("Соответствие") Тогда
		Настройки = Новый Соответствие;
	КонецЕсли;
	
	Массив = МассивРеквизитовФормы();
	
	Для Каждого Элемент из Массив Цикл
		Настройки.Вставить(Элемент, ЭтаФорма[Элемент]);
	КонецЦикла;
	
	Константы.торо_СтатусыОбъектовПомощникаЗаполненияНастроекИСправочников.Установить(Новый ХранИлищеЗначения(Настройки));
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	СохраненныеНастройки = Константы.торо_СтатусыОбъектовПомощникаЗаполненияНастроекИСправочников.Получить().Получить();
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Соответствие") Тогда
		
		Массив = МассивРеквизитовФормы();
		
		Для Каждого Элемент из Массив Цикл
			ЭтаФорма[Элемент] = ?(СохраненныеНастройки[Элемент] = Неопределено, Ложь, СохраненныеНастройки[Элемент]);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

ВыполняетсяЗакрытие = Ложь;

#КонецОбласти
