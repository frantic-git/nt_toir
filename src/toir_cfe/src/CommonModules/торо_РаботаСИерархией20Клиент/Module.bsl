&ИзменениеИКонтроль("СоздатьОбъектРемонтаСОткрытиемФормы")
Процедура проф_СоздатьОбъектРемонтаСОткрытиемФормы(ФормаСписка, Копирование, Группа, ТекущийРодитель, ТекущаяСсылка, ИндексКартинки, ЭтоФМ = Ложь) Экспорт
	
	Если торо_ОбщегоНазначенияКлиентПовтИсп.ЕстьПраво("ИнтерактивноеДобавление", "Справочники", "торо_ОбъектыРемонта") Тогда
		Если Не Копирование Тогда
			
			ПараметрыФормы = Новый Структура("СтруктураИерархии, РодительИерархии", ФормаСписка.ТекСтруктураИерархии, ТекущийРодитель);
			ЗначенияЗаполнения = Новый Структура("РодительИерархии", ТекущийРодитель);
			
			Если ЭтоФМ Тогда
				ЗначенияЗаполнения.Вставить("ТипОбъекта", ПредопределенноеЗначение("Перечисление.торо_ТипыОбъектовRCM.ФункциональноеМесто"));
			КонецЕсли;	
			
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
				
			Если Группа Тогда
				ПараметрыФормы.Вставить("ЭтоГруппа", Истина);
				ОткрытьФорму("Справочник.торо_ОбъектыРемонта.ФормаГруппы", ПараметрыФормы,	ФормаСписка);
			Иначе 
				#Вставка
				//++ Проф-ИТ, #251, Карпов Д.Ю., 15.09.2023 
				ПараметрыФормы.Вставить("СсылкаРодитель", ТекущийРодитель);	
				//-- Проф-ИТ, #251, Карпов Д.Ю., 15.09.2023
				#КонецВставки
				ОткрытьФорму("Справочник.торо_ОбъектыРемонта.ФормаОбъекта", ПараметрыФормы, ФормаСписка);
			КонецЕсли;
			
		Иначе
			
			Если ТипЗнч(ТекущаяСсылка) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
				
				Если торо_РаботаСИерархией20КлиентСервер.ЭтоОбъектСПодчиненнымиПоКартинке(ИндексКартинки) Тогда
					ДопПараметры = Новый Структура;
					ДопПараметры.Вставить("Форма", ФормаСписка);
					ДопПараметры.Вставить("СтруктураИерархии", ФормаСписка.ТекСтруктураИерархии);
					ДопПараметры.Вставить("РодительИерархии", ТекущийРодитель);
					ДопПараметры.Вставить("ЗначениеКопирования", ТекущаяСсылка);
					ДопПараметры.Вставить("ЭтоГруппа", Группа);
					
					ОписаниеОповещения = Новый ОписаниеОповещения("Скопировать_ПослеВопросаОПодчиненных", ЭтотОбъект, ДопПараметры);
					ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Скопировать какие-либо объекты ремонта, входящие в состав выбранного?'"), РежимДиалогаВопрос.ДаНет);
					
				Иначе 
					СоздатьОбъектРемонтаКопированием(ФормаСписка, ТекущаяСсылка, Группа, ФормаСписка.ТекСтруктураИерархии, ТекущийРодитель);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&ИзменениеИКонтроль("ПередНачаломДобавленияВПолноеДерево")
Процедура проф_ПередНачаломДобавленияВПолноеДерево(Отказ, Копирование, Форма, Группа, ИмяЭлементаДерево = "ДеревоПолное") Экспорт

	Отказ = Истина;
	
	Если Форма.СтруктураПараметровИерархии.СтроитсяАвтоматически ИЛИ Копирование И НЕ Форма.СтруктураПараметровИерархии.РазрешенВводНовыхОР Тогда
		Возврат;
	КонецЕсли; 
	
	ДеревоЭлемент = Форма.Элементы[ИмяЭлементаДерево];
	
	ТекущиеДанныеДерева = ДеревоЭлемент.ТекущиеДанные;
	
	Если ТекущиеДанныеДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Копирование Тогда
		ТекущийРодитель = ТекущиеДанныеДерева.Ссылка;
		#Удаление
		ТекущаяСсылка = Неопределено; 
		#КонецУдаления 		
		#Вставка
		//++ Проф-ИТ, #251, Карпов Д.Ю., 15.09.2023
		ТекущаяСсылка = ТекущиеДанныеДерева.Ссылка;
		//-- Проф-ИТ, #251, Карпов Д.Ю., 15.09.2023
		#КонецВставки
	Иначе
		ТекущаяСсылка = ТекущиеДанныеДерева.Ссылка;
		СтрокаРодителя = ТекущиеДанныеДерева.ПолучитьРодителя();
		ТекущийРодитель = ?(СтрокаРодителя = Неопределено, Неопределено, СтрокаРодителя.Ссылка);
	КонецЕсли;
	
	Если Форма.СтруктураПараметровИерархии.РазрешенВводНовыхОР ИЛИ Группа Тогда
		СоздатьОбъектРемонтаСОткрытиемФормы(Форма, Копирование, Группа, ТекущийРодитель, ТекущаяСсылка, ТекущиеДанныеДерева.Картинка);
	Иначе
		ВыбратьИерархиюИзКоторойДобавитьОР(Форма, ТекущаяСсылка, ИмяЭлементаДерево);
	КонецЕсли;
	
КонецПроцедуры
