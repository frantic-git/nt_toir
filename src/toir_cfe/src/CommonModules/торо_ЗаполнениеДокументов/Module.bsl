&ИзменениеИКонтроль("торо_ЗаменитьПрефиксВДокументеПередЗаписью")
Процедура проф_торо_ЗаменитьПрефиксВДокументеПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения)

	#Вставка
	//++ Проф-ИТ, #163, Соловьев А.А., 25.08.2023
	Если Источник.ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;	
	//-- Проф-ИТ, #163, Соловьев А.А., 25.08.2023
	#КонецВставки
	Если Источник.Номер = "" Тогда 
		Возврат; // Это новый документ, номер и так будет установлен правильно.
	КонецЕсли; 

	СтруктураСвойств = Новый Структура("Организация");
	ЗаполнитьЗначенияСвойств(СтруктураСвойств, Источник);

	Если СтруктураСвойств.Организация <> Неопределено Тогда

		Если Источник.Организация = Источник.Ссылка.Организация Тогда 
			Возврат; // Организация не изменилась.
		КонецЕсли; 

		НомерДок = Источник.Номер;
		Позиция = СтрНайти(НомерДок, "-");
		Если Позиция > 3 Тогда	
			// Номер не соответствует шаблону (скорее всего вводился руками).
			Возврат; 
		КонецЕсли; 

		Префикс = ПолучитьПрефиксОрганизации(СтруктураСвойств.Организация);
		Источник.УстановитьНовыйНомер(Префикс);

	КонецЕсли;

КонецПроцедуры

//++ Проф-ИТ, #98, Башинская А.Ю., 14.09.2023

// Представление наименования ОР исходя из кастроек константы "торо_ПредставлениеОРДляПечати".
//
// Параметры:
//  ОбъектРемонта - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта.
//
// Возвращаемое значение:
//  Строка - представление для печати.
//
Функция проф_ПолучитьПредоставленияОРДляПечати(ОбъектРемонта) Экспорт 
	
	СтрОбъектРемонта = "ОбъектРемонта";
	ПредставлениеОбъектаРемонта = Неопределено;
	
	Попытка					
		ПредставлениеОбъектаРемонта = проф_ПредставлениеОбъектаОР(ОбъектРемонта);		
	Исключение
		#Если Клиент Тогда
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ПоказатьПредупреждение(Неопределено, ИнформацияОбОшибке.Причина.Описание);
		#КонецЕсли
	КонецПопытки;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА торо_СтатусыОбъектовРемонтаВУчете.СтатусОР = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыОРВУчете.ПринятоКУчету)
	               |				ТОГДА торо_СтатусыОбъектовРемонтаВУчете.Период
	               |		КОНЕЦ) КАК ДатаПринятияКУчету,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА торо_СтатусыОбъектовРемонтаВУчете.СтатусОР = ЗНАЧЕНИЕ(Перечисление.торо_СтатусыОРВУчете.СнятоСУчета)
	               |				ТОГДА торо_СтатусыОбъектовРемонтаВУчете.Период
	               |		КОНЕЦ) КАК ДатаСнятияСУчета,
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта КАК ОбъектРемонта
	               |ПОМЕСТИТЬ ПоследниеДатыСтатусов
	               |ИЗ
	               |	РегистрСведений.торо_СтатусыОбъектовРемонтаВУчете КАК торо_СтатусыОбъектовРемонтаВУчете
	               |ГДЕ
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта = &ОбъектРемонта
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоследниеДатыСтатусов.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_СтатусыОбъектовРемонтаВУчете.Период КАК ДатаВводаВЭксплуатацию,
	               |	торо_СтатусыОбъектовРемонтаВУчете.Регистратор КАК РегистраторПринятияКУчету,
	               |	ВЫБОР
	               |		КОГДА НЕ ПоследниеДатыСтатусов.ДатаСнятияСУчета ЕСТЬ NULL 
	               |				И ПоследниеДатыСтатусов.ДатаПринятияКУчету < ПоследниеДатыСтатусов.ДатаСнятияСУчета
	               |			ТОГДА торо_СтатусыОбъектовРемонтаВУчете1.Период
	               |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	               |	КОНЕЦ КАК ДатаСнятияСУчета,
	               |	ВЫБОР
	               |		КОГДА НЕ ПоследниеДатыСтатусов.ДатаСнятияСУчета ЕСТЬ NULL 
	               |				И ПоследниеДатыСтатусов.ДатаПринятияКУчету < ПоследниеДатыСтатусов.ДатаСнятияСУчета
	               |			ТОГДА торо_СтатусыОбъектовРемонтаВУчете1.Регистратор
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Документ.торо_ВыбытиеОбъектаРемонта.ПустаяСсылка)
	               |	КОНЕЦ КАК РегистраторСнятияСУчета
	               |ИЗ
	               |	ПоследниеДатыСтатусов КАК ПоследниеДатыСтатусов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыОбъектовРемонтаВУчете КАК торо_СтатусыОбъектовРемонтаВУчете
	               |		ПО ПоследниеДатыСтатусов.ДатаПринятияКУчету = торо_СтатусыОбъектовРемонтаВУчете.Период
	               |			И ПоследниеДатыСтатусов.ОбъектРемонта = торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтатусыОбъектовРемонтаВУчете КАК торо_СтатусыОбъектовРемонтаВУчете1
	               |		ПО ПоследниеДатыСтатусов.ДатаСнятияСУчета = торо_СтатусыОбъектовРемонтаВУчете1.Период
	               |			И ПоследниеДатыСтатусов.ОбъектРемонта = торо_СтатусыОбъектовРемонтаВУчете1.ОбъектРемонта";
	
	Запрос.УстановитьПараметр(СтрОбъектРемонта, ОбъектРемонта);
	Запрос.УстановитьПараметр("ТекущаяДата",   ТекущаяДатаСеанса());
	Результат = Запрос.Выполнить();
	ДатаСнятияСУчета = Дата(1, 1, 1);
	Если Не Результат.Пустой() Тогда  
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаСнятияСУчета = Выборка.ДатаСнятияСУчета;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(торо_ТекущееСостояниеОРСрезПоследних.ВидЭксплуатации, ЗНАЧЕНИЕ(Справочник.торо_ВидыЭксплуатации.ПустаяСсылка)) КАК ВидЭксплуатации
	|ИЗ
	|	РегистрСведений.торо_ТекущееСостояниеОР.СрезПоследних(&ТекущаяДата, ОбъектРемонта = &ОбъектРемонта) КАК торо_ТекущееСостояниеОРСрезПоследних";
	Запрос.УстановитьПараметр(СтрОбъектРемонта, ОбъектРемонта);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Заголовок1 = "";
	Если Выборка.Следующий() И НЕ ЗначениеЗаполнено(ДатаСнятияСУчета) Тогда
		Если Выборка.ВидЭксплуатации = Справочники.торо_ВидыЭксплуатации.ПустаяСсылка() Тогда
			Заголовок1 = Заголовок1 + НСтр("ru = ' [Вид эксплуатации не установлен]'");
		Иначе
			Заголовок1 = Заголовок1 + " [" + Выборка.ВидЭксплуатации + "]";
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ОбщиеДанныеПоРемонтам.ЕстьНаряд КАК ЕстьНаряд,
		|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта
		|ПОМЕСТИТЬ ВтОбщиеДанныеПоРемонтам
		|ИЗ
		|	РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
		|ГДЕ
		|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта = &ОбъектРемонта
		|	И торо_ОбщиеДанныеПоРемонтам.Завершен = ЛОЖЬ
		|	И торо_ОбщиеДанныеПоРемонтам.ЕстьНаряд = ИСТИНА
		|	И торо_ОбщиеДанныеПоРемонтам.Отменен = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_ОбщиеДанныеПоРемонтам.ЕстьНаряд,
		|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта
		|ИЗ
		|	РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
		|ГДЕ
		|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта = &ОбъектРемонта
		|	И торо_ОбщиеДанныеПоРемонтам.Завершен = ЛОЖЬ
		|	И торо_ОбщиеДанныеПоРемонтам.ЕстьНаряд = ЛОЖЬ
		|			И торо_ОбщиеДанныеПоРемонтам.ВидДокументаНачалаЦепочки = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект)
		|	И торо_ОбщиеДанныеПоРемонтам.Отменен = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВтОбщиеДанныеПоРемонтам.ЕстьНаряд) КАК ЕстьНаряд
		|ИЗ
		|	ВтОбщиеДанныеПоРемонтам КАК ВтОбщиеДанныеПоРемонтам
		|
		|СГРУППИРОВАТЬ ПО
		|	ВтОбщиеДанныеПоРемонтам.ОбъектРемонта";	
	
		
	Запрос.УстановитьПараметр(СтрОбъектРемонта, ОбъектРемонта);
	Выборка = Запрос.Выполнить().Выбрать();  
	Заголовок2 = "";
	Если Выборка.Следующий() Тогда
		Если Выборка.ЕстьНаряд = 1 Тогда
			Заголовок2 = Заголовок2 + НСтр("ru = ' [Выполняется ремонт]'");
		Иначе
			Заголовок2 = Заголовок2 + НСтр("ru = ' [Выявлен дефект]'");
		КонецЕсли;			
	КонецЕсли;
    ПредставлениеОбъектаРемонта = ПредставлениеОбъектаРемонта + " " + Заголовок1 + Заголовок2;
	
	Возврат ПредставлениеОбъектаРемонта;
	
КонецФункции

Функция проф_ПредставлениеОбъектаОР(ОбъектРемонта)
	
	ЗначениеКонстантыОР = Константы.торо_НаименованиеОРДляПечати.Получить();
		
	Если НЕ ЗначениеЗаполнено(ЗначениеКонстантыОР)
	ИЛИ ЗначениеКонстантыОР = Перечисления.торо_ПредставлениеОРДляПечати.НаименованиеОР Тогда
		Возврат СокрЛП(ОбъектРемонта);
	КонецЕсли;	
		
	Если ЗначениеКонстантыОР = Перечисления.торо_ПредставлениеОРДляПечати.НаименованиеОР_КодОР Тогда
		Возврат СокрЛП(ОбъектРемонта) + " (" + СокрЛП(ОбъектРемонта.Код) +")";
	КонецЕсли;	
		
	Если ЗначениеКонстантыОР = Перечисления.торо_ПредставлениеОРДляПечати.НаименованиеОР_ИнвНомОР Тогда
		Возврат СокрЛП(ОбъектРемонта) + " (" + СокрЛП(ОбъектРемонта.ИнвентарныйНомер) +")";
	КонецЕсли;
	
	Если ЗначениеКонстантыОР = Перечисления.торо_ПредставлениеОРДляПечати.ПолноеНаименованиеОР Тогда
		Возврат торо_РаботаСИерархией20.ПолноеНаименованиеОР(ОбъектРемонта);
	КонецЕсли;	
		
	Если ЗначениеКонстантыОР = Перечисления.торо_ПредставлениеОРДляПечати.НаименованиеОР_ТехнНомОР Тогда
		Возврат СокрЛП(ОбъектРемонта) + " (" + СокрЛП(ОбъектРемонта.ТехНомер) +")";
	КонецЕсли;	
		
	Если ЗначениеКонстантыОР = Перечисления.торо_ПредставлениеОРДляПечати.КакВСистеме Тогда 
		Возврат СокрЛП(ОбъектРемонта);
	КонецЕсли;	
	
КонецФункции	

//-- Проф-ИТ, #98, Башинская А.Ю., 14.09.2023
