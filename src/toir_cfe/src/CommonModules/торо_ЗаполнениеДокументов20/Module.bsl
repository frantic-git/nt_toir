
&ИзменениеИКонтроль("ЗаполнитьШапкуДокумента")
Процедура проф_ЗаполнитьШапкуДокумента(Основание, ДокументОбъект)

	ДокОснование = Неопределено;

	Если ТипЗнч(Основание) = Тип("Соответствие") Тогда
		Для каждого ДокОснование Из Основание Цикл
			ДокументОбъект.Организация = ДокОснование.Значение.Организация;
			ДокументОбъект.Подразделение = ДокОснование.Значение.Подразделение;	
			Прервать;
		КонецЦикла; 
	ИначеЕсли Основание <> Неопределено И НЕ ТипЗнч(Основание) = Тип("Структура") Тогда 
		ДокументОбъект.Организация = Основание.Организация;
		ДокументОбъект.Подразделение = Основание.Подразделение;
		ДокОснование = Основание;
	КонецЕсли;

	Если (ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктПриемкиОборудования") 
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АнализКоренныхПричин")
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия"))
		И (ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") 
		ИЛИ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот")
		ИЛИ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		ИЛИ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие")) Тогда
		ДокументОбъект.Комиссия = ДокОснование.Комиссия;
	КонецЕсли;

	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АнализКоренныхПричин") Тогда

		ДокументОбъект.Статус = Перечисления.торо_СтатусыДокументовАнализаПричин.Зарегистрирован;

	КонецЕсли; 

	
	#Вставка
	//++ Проф-ИТ, #238, Башинская А.Ю., 28.08.2023 	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") 
	И Не ЗначениеЗаполнено(ДокументОбъект.проф_СтатусСогласования) Тогда  
		ДокументОбъект.проф_СтатусСогласования = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.проф_Новый;
	КонецЕсли; 	
	#КонецВставки
	торо_ЗаполнениеДокументов.ЗаполнитьСтандартныеРеквизитыШапкиПоУмолчанию(ДокументОбъект);

КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьРемонтыОборудования")
Процедура проф_ЗаполнитьРемонтыОборудования(Основание, ДокументОбъект, Параметры)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	#Область ТекстЗапроса	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_ТабДокументовОснований.Ключ КАК ID,
	|	ВТ_ТабДокументовОснований.Значение КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ТабДокументовОснований
	|ИЗ
	|	&ТаблицаДокументовОснований КАК ВТ_ТабДокументовОснований
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта КАК ID,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаНачала КАК ДатаНачала,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДатаОкончания КАК ДатаОкончания,
	|	торо_АктуальныеПлановыеДатыРемонтов.КрайняяДатаЗавершения КАК КрайняяДатаЗавершения,
	|	ВТ_ТабДокументовОснований.Ссылка КАК Ссылка,
	|	торо_АктуальныеПлановыеДатыРемонтов.ДокументНачалаЦепочки КАК ДокументНачалаЦепочки,
	|	торо_ОбщиеДанныеПоРемонтам.ОбъектРемонта КАК ОбъектРемонта,
	|	ВЫБОР
	|		КОГДА НЕ торо_ОбщиеДанныеПоРемонтам.ВидРемонта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|			ТОГДА торо_ОбщиеДанныеПоРемонтам.ВидРемонта
	|		КОГДА торо_ОбщиеДанныеПоРемонтам.ВидДокументаНачалаЦепочки = ЗНАЧЕНИЕ(Перечисление.торо_ВидыДокументовНачалаЦепочкиРемонтов.ВыявленныйДефект)
	|			ТОГДА &ВидРемонтаНаОснованииВыявленныхДефектов
	|		ИНАЧЕ &ВидРемонтаНаОснованииВнешнихОснований
	|	КОНЕЦ КАК ВидРемонтныхРабот,
	|	торо_ОбщиеДанныеПоРемонтам.Завершен КАК Завершен
	|ПОМЕСТИТЬ ТаблицаПлановыхДат
	|ИЗ
	|	ВТ_ТабДокументовОснований КАК ВТ_ТабДокументовОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктуальныеПлановыеДатыРемонтов КАК торо_АктуальныеПлановыеДатыРемонтов
	|		ПО ВТ_ТабДокументовОснований.ID = торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОбщиеДанныеПоРемонтам КАК торо_ОбщиеДанныеПоРемонтам
	|		ПО ВТ_ТабДокументовОснований.ID = торо_ОбщиеДанныеПоРемонтам.IDРемонта
	|ГДЕ
	|	НЕ торо_ОбщиеДанныеПоРемонтам.Отменен
	|	И НЕ торо_ОбщиеДанныеПоРемонтам.Замещен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	торо_АктуальныеПлановыеДатыРемонтов.IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ЗаявкиПоРемонтам.IDРемонта КАК IDРемонта
	|ПОМЕСТИТЬ ВТ_ЗаявкиПоРемонту
	|ИЗ
	|	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
	|			,
	|			IDРемонта В
	|				(ВЫБРАТЬ
	|					ВТ_ТабДокументовОснований.ID
	|				ИЗ
	|					ВТ_ТабДокументовОснований КАК ВТ_ТабДокументовОснований)) КАК торо_ЗаявкиПоРемонтам
	|ГДЕ
	|	НЕ торо_ЗаявкиПоРемонтам.Отменен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ЗаявкиПоРемонтам.IDРемонта КАК IDРемонта
	|ПОМЕСТИТЬ ВТ_ОтмененнаяЗаявкаОснование
	|ИЗ
	|	РегистрСведений.торо_ЗаявкиПоРемонтам КАК торо_ЗаявкиПоРемонтам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабДокументовОснований КАК ВТ_ТабДокументовОснований
	|		ПО торо_ЗаявкиПоРемонтам.ДокументЗаявка = ВТ_ТабДокументовОснований.Ссылка
	|			И торо_ЗаявкиПоРемонтам.IDРемонта = ВТ_ТабДокументовОснований.ID
	|ГДЕ
	|	торо_ЗаявкиПоРемонтам.Отменен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПлановыхДат.ID КАК ID,
	|	ТаблицаПлановыхДат.Ссылка КАК ДокументИсточник,
	|	ТаблицаПлановыхДат.Ссылка КАК ДокументОснование,
	|	ТаблицаПлановыхДат.ОбъектРемонта КАК ОбъектРемонта,
	|	ТаблицаПлановыхДат.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	ЕСТЬNULL(торо_СвернутыеФактическиеДатыРемонтов.ДатаНачала, ТаблицаПлановыхДат.ДатаНачала) КАК ДатаНачала,
	|	ЕСТЬNULL(торо_СвернутыеФактическиеДатыРемонтов.ДатаОкончания, ТаблицаПлановыхДат.ДатаОкончания) КАК ДатаОкончания,
	|	ТаблицаПлановыхДат.КрайняяДатаЗавершения КАК КрайняяДопустимаяДатаЗавершенияРемонта,
	|	торо_ГарантийностьРемонтов.Гарантийный КАК ГарантийныйРемонт,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение, ЕСТЬNULL(торо_ВнешниеОснования.Описание, """")) КАК СТРОКА(1000)) КАК ОписаниеРемонта,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранениеЯзык1, ЕСТЬNULL(торо_ВнешниеОснования.ОписаниеЯзык1, """")) КАК СТРОКА(1000)) КАК ОписаниеРемонтаЯзык1,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранениеЯзык2, ЕСТЬNULL(торо_ВнешниеОснования.ОписаниеЯзык2, """")) КАК СТРОКА(1000)) КАК ОписаниеРемонтаЯзык2,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.Высота, ЕСТЬNULL(торо_ВнешниеОснования.Высота, 0)) КАК ЧИСЛО(20, 2)) КАК Высота,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.Долгота, ЕСТЬNULL(торо_ВнешниеОснования.Долгота, 0)) КАК ЧИСЛО(20, 14)) КАК Долгота,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(торо_ВыявленныеДефектыСписокДефектов.Широта, ЕСТЬNULL(торо_ВнешниеОснования.Широта, 0)) КАК ЧИСЛО(20, 14)) КАК Широта,
	|	торо_ВыявленныеДефектыСписокДефектов.КритичностьДефекта КАК КритичностьДефекта,      
	#Вставка
	//++ Проф-ИТ, #266, Башинская А.Ю., 25.09.2023 
	|	торо_ВидыДефектов.проф_ВидРемонта КАК проф_ВидРемонта,	
	#КонецВставки
	|	ТаблицаПлановыхДат.Завершен КАК Завершен,
	|	торо_ОстановочныеРемонты.IDОсновного КАК IDОсновного
	|ИЗ
	|	ТаблицаПлановыхДат КАК ТаблицаПлановыхДат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_СвернутыеФактическиеДатыРемонтов КАК торо_СвернутыеФактическиеДатыРемонтов
	|		ПО ТаблицаПлановыхДат.ID = торо_СвернутыеФактическиеДатыРемонтов.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефектыСписокДефектов
	|		ПО ТаблицаПлановыхДат.ID = торо_ВыявленныеДефектыСписокДефектов.ID
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВнешниеОснованияДляРабот КАК торо_ВнешниеОснования
	|		ПО ТаблицаПлановыхДат.ID = торо_ВнешниеОснования.ID
	|			И ТаблицаПлановыхДат.Ссылка = торо_ВнешниеОснования.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОстановочныеРемонты КАК торо_ОстановочныеРемонты
	|		ПО ТаблицаПлановыхДат.ID = торо_ОстановочныеРемонты.IDЗависимого
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаявкиПоРемонту КАК ВТ_ЗаявкиПоРемонту
	|		ПО ТаблицаПлановыхДат.ID = ВТ_ЗаявкиПоРемонту.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтмененнаяЗаявкаОснование КАК ВТ_ОтмененнаяЗаявкаОснование
	|		ПО ТаблицаПлановыхДат.ID = ВТ_ОтмененнаяЗаявкаОснование.IDРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ГарантийностьРемонтов.СрезПоследних КАК торо_ГарантийностьРемонтов
	|		ПО ТаблицаПлановыхДат.ID = торо_ГарантийностьРемонтов.IDРемонта  
	#Вставка      
	//++ Проф-ИТ, #266, Башинская А.Ю., 25.09.2023 
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ВидыДефектов КАК торо_ВидыДефектов
	|		ПО торо_ВыявленныеДефектыСписокДефектов.ВидДефекта = торо_ВидыДефектов.ссылка  
	#КонецВставки
	|ГДЕ
	|	ВТ_ОтмененнаяЗаявкаОснование.IDРемонта ЕСТЬ NULL
	|	И (&ВводНесколькихЗаявокПоРемонту
	|			ИЛИ ВТ_ЗаявкиПоРемонту.IDРемонта ЕСТЬ NULL)
	|	И (НЕ &ОтборПоОрганизацииИПодразделению
	|			ИЛИ ТаблицаПлановыхДат.ОбъектРемонта.Организация = &Организация
	|				И ТаблицаПлановыхДат.ОбъектРемонта.Подразделение = &Подразделение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачала,
	|	ОбъектРемонта";

	#КонецОбласти

	Если Параметры <> Неопределено И Параметры.Свойство("ОрганизацияДляОтбора") И Параметры.Свойство("ПодразделениеДляОтбора") Тогда
		Запрос.УстановитьПараметр("ОтборПоОрганизацииИПодразделению", Истина);
		Запрос.УстановитьПараметр("Организация", Параметры.ОрганизацияДляОтбора);
		Запрос.УстановитьПараметр("Подразделение", Параметры.ПодразделениеДляОтбора);
	Иначе	
		Запрос.УстановитьПараметр("ОтборПоОрганизацииИПодразделению", Ложь);
		Запрос.УстановитьПараметр("Организация", Неопределено);
		Запрос.УстановитьПараметр("Подразделение", Неопределено);
	КонецЕсли; 

	ВводНесколькихЗаявокПоРемонту = Константы.торо_РазрешитьВводНесколькихСметПоРемонту.Получить();
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") И Не ВводНесколькихЗаявокПоРемонту Тогда
		Запрос.УстановитьПараметр("ВводНесколькихЗаявокПоРемонту", Ложь);
	Иначе
		Запрос.УстановитьПараметр("ВводНесколькихЗаявокПоРемонту", Истина);
	КонецЕсли;

	Запрос.УстановитьПараметр("ТаблицаДокументовОснований", ПолучитьТаблицуДокументовОснований(Основание));	
	Запрос.УстановитьПараметр("ВидРемонтаНаОснованииВыявленныхДефектов", Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить());
	Запрос.УстановитьПараметр("ВидРемонтаНаОснованииВнешнихОснований", Константы.торо_ВидРемонтаПриВводеНаОснованииВнешнихОснований.Получить());

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	ИмяТЧРемонтов = торо_Ремонты.ПолучитьИмяТЧРемонтов(ДокументОбъект.Ссылка);

	Попытка
		ТаблицаРемонтов = ДокументОбъект[ИмяТЧРемонтов];
	Исключение
		// Сюда может попасть из обработки подбора ремонтов. Запись в ЖР не требуется.
		ТаблицаРемонтов = ДокументОбъект["РемонтыОборудования"];
	КонецПопытки;

	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРемонтов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.торо_АктОВыполненииЭтапаРабот") Тогда
			НоваяСтрока.ИДДефекта = Выборка.ID;
		КонецЕсли;   
		#Вставка      
		//++ Проф-ИТ, #266, Башинская А.Ю., 25.09.2023 
		Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт")
		И ТипЗнч(Выборка.ДокументОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") 
		И ЗначениеЗаполнено(Выборка.проф_ВидРемонта) Тогда
			НоваяСтрока.ВидРемонтныхРабот = Выборка.проф_ВидРемонта;
		КонецЕсли;  
		#КонецВставки
	КонецЦикла;
	
КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьЗатратыПоОснованию")
Процедура проф_ЗаполнитьЗатратыПоОснованию(ДокументОбъект, Основания)

	// TODO: заполнять только для одной ремонтной работы

	Если ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") 
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие")
		И ТипЗнч(ДокументОбъект.Ссылка) <> Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Возврат;
	КонецЕсли;

	СоответствиеИсполнителейПоОснованию = Новый Соответствие;
	СоответствиеИсполнителейПоНормам = Новый Соответствие;
	СоответствиеМатериаловПоОснованию = Новый Соответствие;
	СоответствиеМатериаловПоНормам = Новый Соответствие;

	ТаблицаДанныхОЦепочках = ПолучитьТаблицуИнформацииОЦепочкеРемонтов(Основания);

	Для каждого СтрокаДанныхЦепочки из ТаблицаДанныхОЦепочках Цикл
		Если ЗначениеЗаполнено(СтрокаДанныхЦепочки.Наряд) ИЛИ ЗначениеЗаполнено(СтрокаДанныхЦепочки.Заявка) Тогда 
			СоответствиеИсполнителейПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
		Иначе
			СоответствиеИсполнителейПоНормам.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
		КонецЕсли;

		Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот")
			И ЗначениеЗаполнено(СтрокаДанныхЦепочки.Наряд) И ЗначениеЗаполнено(СтрокаДанныхЦепочки.Заявка) Тогда
			#Удаление //++ Проф-ИТ, #365, Соловьев А.А., 21.11.2023
			СоответствиеМатериаловПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
			#КонецУдаления
			#Вставка
			СоответствиеМатериаловПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.Заявка);
			#КонецВставки //-- Проф-ИТ, #365, Соловьев А.А., 21.11.2023
			СоответствиеМатериаловПоНормам.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
		Иначе
			Если ЗначениеЗаполнено(СтрокаДанныхЦепочки.Заявка) Тогда
				#Удаление //++ Проф-ИТ, #365, Соловьев А.А., 21.11.2023
				СоответствиеМатериаловПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
				#КонецУдаления
				#Вставка
				СоответствиеМатериаловПоОснованию.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.Заявка);
				#КонецВставки //-- Проф-ИТ, #365, Соловьев А.А., 21.11.2023
			Иначе
				СоответствиеМатериаловПоНормам.Вставить(СтрокаДанныхЦепочки.ID, СтрокаДанныхЦепочки.ДокументОснование);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьЗатратыПоОснованию_Исполнители(ДокументОбъект, СоответствиеИсполнителейПоОснованию, СоответствиеИсполнителейПоНормам);
	ЗаполнитьЗатратыПоОснованию_Материалы(ДокументОбъект, СоответствиеМатериаловПоОснованию, СоответствиеМатериаловПоНормам);
	ЗаполнитьЗатратыПоОснованию_ЗапчастиПодрядчики(ДокументОбъект, Основания);
	ЗаполнитьЗатратыПоОснованию_ИнструментыМерыБезопасности(ДокументОбъект, Основания)

КонецПроцедуры

&ИзменениеИКонтроль("ПолучитьТаблицуИнформацииОЦепочкеРемонтов")
Функция проф_ПолучитьТаблицуИнформацииОЦепочкеРемонтов(СоответствиеОснований)

	// Для заполнения затрат по основаниям или нормативам нас инетерсует: 
	// - есть ли в цепочке документов наряд (для заполнения исполнителей);
	// - естьли в цепочке документов заявка (для заполнения исполнителей и материальных затрат).
	// С чего цепочка началась - по большому счету не важно. Если нет ни заявки, ни наряда, 
	// то должно выполниться заполнения по нормам. Поэтому рассматриваем только описанные случаи.

	МассивТиповДокументовИсточников = Новый Массив;
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ВыявленныеДефекты"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ПланГрафикРемонта"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ЗаявкаНаРемонт"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР"));
	МассивТиповДокументовИсточников.Добавить(Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие"));

	ТаблицаРемонтов = Новый ТаблицаЗначений();
	ТаблицаРемонтов.Колонки.Добавить("ID", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(36)));
	ТаблицаРемонтов.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТиповДокументовИсточников));

	Для каждого КлючИЗначение из СоответствиеОснований Цикл
		НоваяСтрока = ТаблицаРемонтов.Добавить();
		НоваяСтрока.ID = КлючИЗначение.Ключ;
		НоваяСтрока.ДокументОснование = КлючИЗначение.Значение;
	КонецЦикла;

	// При заполнении затрат на основании наряд в цепочке может быть только в том случае, если 
	// сам документ-основание является нарядом. Заявка в цепочке может быть, если сам докумен-основание
	// является заявкой, либо если документ-основание является нарядом, созданным на основании заявки.

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРемонтов.ID КАК ID,
	|	ТаблицаРемонтов.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаРемонтов
	|ИЗ
	|	&ТаблицаРемонтов КАК ТаблицаРемонтов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРемонтов.ID КАК ID,
	|	ТаблицаРемонтов.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ТаблицаРемонтов.ДокументОснование ССЫЛКА Документ.торо_НарядНаВыполнениеРемонтныхРабот
	|				ИЛИ ТаблицаРемонтов.ДокументОснование ССЫЛКА Документ.торо_НарядНаРегламентноеМероприятие
	|			ТОГДА ТаблицаРемонтов.ДокументОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Наряд
	|ПОМЕСТИТЬ ТаблицаСНарядами
	|ИЗ
	|	ТаблицаРемонтов КАК ТаблицаРемонтов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Наряд,
	|	ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСНарядами.ID КАК ID,
	|	ТаблицаСНарядами.ДокументОснование КАК ДокументОснование,
	|	ТаблицаСНарядами.Наряд КАК Наряд,
	|	ВЫБОР
	|		КОГДА ТаблицаСНарядами.ДокументОснование ССЫЛКА Документ.торо_ЗаявкаНаРемонт
	|			ТОГДА ТаблицаСНарядами.ДокументОснование
	|		КОГДА НЕ торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник ЕСТЬ NULL
	|				И торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник ССЫЛКА Документ.торо_ЗаявкаНаРемонт
	|			ТОГДА торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ДокументИсточник
	#Вставка //++ Проф-ИТ, #365, Соловьев А.А., 21.11.2023
	|		КОГДА торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования.ДокументОснование ССЫЛКА Документ.торо_ЗаявкаНаРемонт
	|			ТОГДА торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования.ДокументОснование
	#КонецВставки //-- Проф-ИТ, #365, Соловьев А.А., 21.11.2023
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Заявка
	|ИЗ
	|	ТаблицаСНарядами КАК ТаблицаСНарядами
	#Вставка //++ Проф-ИТ, #365, Соловьев А.А., 21.11.2023
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.ДокументыОснования КАК торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования
	|		ПО ТаблицаСНарядами.Наряд = торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования.Ссылка
	#КонецВставки //-- Проф-ИТ, #365, Соловьев А.А., 21.11.2023
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования
	|		ПО ТаблицаСНарядами.Наряд = торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.Ссылка
	|			И ТаблицаСНарядами.ID = торо_НарядНаВыполнениеРемонтныхРаботРемонтыОборудования.ID";

	Запрос.УстановитьПараметр("ТаблицаРемонтов", ТаблицаРемонтов);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;

КонецФункции

