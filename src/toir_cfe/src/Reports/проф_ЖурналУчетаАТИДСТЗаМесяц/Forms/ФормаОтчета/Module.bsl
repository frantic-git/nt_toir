
//++ Проф-ИТ, #127, Башинская А., 25.08.2023

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
   
   ПериодОтчета.Вариант = ВариантСтандартногоПериода.Месяц;
   ПериодОтчета.ДатаНачала = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
   ПериодОтчета.ДатаОкончания = КонецМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()); 
   
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
   СформироватьНаСервере();
КонецПроцедуры 

&НаКлиенте
Процедура Печать(Команда)
   
   Идентификатор = "ИД_ПечатьЖурналУчетаЗаявочныхРемонтовЗаМесяц";
	   
   КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(Идентификатор);
   ОписаниеПечатнойФормы = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, Идентификатор);
   ОписаниеПечатнойФормы.ТабличныйДокумент = ПолучитьДокументДляПечати();
   
   УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, , ЭтаФорма);
   
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНаСервере() 
   Отказ = Ложь;
   
   Если НЕ ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) Тогда
	   ОбщегоНазначения.СообщитьПользователю("Не заполнен период отчета!", , , , Отказ = Истина);
   КонецЕсли;
   Если НЕ Отказ Тогда	
	   ВывестиОтчет();
   КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиОтчет()
   
   Табл = ТЧОтчет; 
   Табл.Очистить();
   ЭтаОбработка = РеквизитФормыВЗначение("Отчет");
   Макет = ЭтаОбработка.ПолучитьМакет("Макет");
   ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	   
   Запрос = Новый Запрос;
   Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ПериодОтчета.ДатаНачала));
   Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОтчета.ДатаОкончания));   
   Запрос.Текст = ТекстЗапросаПечатьЖурналУчетаАТИДСТЗаМесяц(ОбъектРемонта, Запрос);        
   РезультатЗапроса = Запрос.ВыполнитьПакет();  
   
   ВыборкаОбъектыРемонта = РезультатЗапроса[8].Выбрать();
   ВыборкаНаработка = РезультатЗапроса[7].Выбрать();
	  
   Если ВыборкаОбъектыРемонта.Количество() > 0 Тогда	
	   Табл.Вывести(ОбластьШапка); 
   КонецЕсли;
   
   Пока ВыборкаОбъектыРемонта.Следующий() Цикл
	   ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
	   ОбластьСтрока.Параметры.Заполнить(ВыборкаОбъектыРемонта); 
	   ОбластьСтрока.Параметры.Наименование = ВыборкаОбъектыРемонта.Наименование + " " + ВыборкаОбъектыРемонта.Марка;
	   ОбластьСтрока.Параметры.Пробег = "";
	   ОбластьСтрока.Параметры.Наработка = "";
	   
	   Отбор = Новый Структура;
	   Отбор.Вставить("ОбъектРемонта", ВыборкаОбъектыРемонта.ОбъектРемонта);
	   Отбор.Вставить("ID", ВыборкаОбъектыРемонта.ID);
	   
	   ЗаполнитьПробегИНаработку(Отбор, ВыборкаНаработка, ОбластьСтрока);	   
	   
	   ЗаполнитьПараметрыОбластиСтрока(ВыборкаОбъектыРемонта, ОбластьСтрока);
	   										   										   
	   Табл.Вывести(ОбластьСтрока); 
		   
   КонецЦикла;
		   
КонецПроцедуры 

&НаСервере
Функция ТекстЗапросаПечатьЖурналУчетаАТИДСТЗаМесяц(ОбъектРемонта, Запрос)
	
	ТекстЗапроса = 
				   "ВЫБРАТЬ
				   |	торо_НаработкаОбъектовРемонтаОбороты.ОбъектРемонта КАК ОбъектРемонта,
				   |	торо_НаработкаОбъектовРемонтаОбороты.Показатель КАК Показатель,
				   |	торо_НаработкаОбъектовРемонтаОбороты.Период КАК Период,
				   |	СУММА(торо_НаработкаОбъектовРемонтаОбороты.НаработкаОборот) КАК НаработкаОборот,
				   |	торо_НаработкаОбъектовРемонтаОбороты.Регистратор КАК Регистратор
				   |ПОМЕСТИТЬ ВТ_Наработка
				   |ИЗ
				   |	РегистрНакопления.торо_НаработкаОбъектовРемонта.Обороты(, &ДатаОкончания, Регистратор, ) КАК торо_НаработкаОбъектовРемонтаОбороты
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	торо_НаработкаОбъектовРемонтаОбороты.ОбъектРемонта,
				   |	торо_НаработкаОбъектовРемонтаОбороты.Показатель,
				   |	торо_НаработкаОбъектовРемонтаОбороты.Регистратор,
				   |	торо_НаработкаОбъектовРемонтаОбороты.Период
				   |
				   |ИНДЕКСИРОВАТЬ ПО
				   |	ОбъектРемонта,
				   |	Период,
				   |	Показатель
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта КАК ОбъектРемонта,
				   |	торо_ВыявленныеДефектыСписокДефектов.ID КАК ID,
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.Наименование, """") КАК Наименование,
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Марка, """") КАК проф_Марка,
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.ЗаводскойНомер, """") КАК ЗаводскойНомер,
				   |	ЕСТЬNULL(торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачала,
				   |	ЕСТЬNULL(торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот, """") КАК ВидРемонтныхРабот,
				   |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка КАК ЗаявкаНаРемонт,
				   |	СУММА(ВЫРАЗИТЬ(торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.ВремяРаботы / 3600 КАК ЧИСЛО(12, 2))) КАК ФактТрудоемкость
				   |ПОМЕСТИТЬ ВТ_Предв
				   |ИЗ
				   |	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
				   |		ПО торо_ВыявленныеДефектыСписокДефектов.Ссылка = торо_ВыявленныеДефекты.Ссылка
				   |			И (торо_ВыявленныеДефекты.ПометкаУдаления = ЛОЖЬ)
				   |			И (торо_ВыявленныеДефекты.Проведен)
				   |			И (&ОбъектРемонта)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
				   |		ПО торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
				   |		ПО (торо_ЗаявкаНаРемонтРемонтыОборудования.ID = торо_ВыявленныеДефектыСписокДефектов.ID)
				   |			И (торо_ОбъектыРемонта.Ссылка = торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта)
				   |			И (торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка.Проведен)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.ТрудовыеЗатраты КАК торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты
				   |		ПО торо_ВыявленныеДефектыСписокДефектов.ID = торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.РемонтыОборудования_ID
				   |			И (торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Ссылка.Проведен)
				   |ГДЕ
				   |	НАЧАЛОПЕРИОДА(торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала, МЕСЯЦ) = &ДатаНачала
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта,
				   |	торо_ВыявленныеДефектыСписокДефектов.ID,
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.ИнвентарныйНомер, """"),
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.Наименование, """"),
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Марка, """"),
				   |	ЕСТЬNULL(торо_ОбъектыРемонта.ЗаводскойНомер, """"),
				   |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка,
				   |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала,
				   |	ЕСТЬNULL(торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот, """")
				   |
				   |ИНДЕКСИРОВАТЬ ПО
				   |	ОбъектРемонта,
				   |	ДатаНачала
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_Предв.ОбъектРемонта КАК ОбъектРемонта,
				   |	ВТ_Предв.ID КАК ID,
				   |	ВТ_Предв.ИнвентарныйНомер КАК ИнвентарныйНомер,
				   |	ВТ_Предв.Наименование КАК Наименование,
				   |	ВТ_Предв.проф_Марка КАК проф_Марка,
				   |	ВТ_Предв.ЗаводскойНомер КАК ЗаводскойНомер,
				   |	ВТ_Предв.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
				   |	ВТ_Предв.ДатаНачала КАК ДатаНачала,
				   |	ВТ_Предв.ФактТрудоемкость КАК ФактТрудоемкость,
				   |	ВТ_Предв.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				   |	СУММА(РАЗНОСТЬДАТ(ЕСТЬNULL(торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)), ЕСТЬNULL(торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)), ЧАС)) КАК ВремяПростояФакт
				   |ПОМЕСТИТЬ ВТ_ПредвСВременем
				   |ИЗ
				   |	ВТ_Предв КАК ВТ_Предв
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
				   |		ПО (торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID = ВТ_Предв.ID)
				   |			И ВТ_Предв.ОбъектРемонта = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_Предв.ОбъектРемонта,
				   |	ВТ_Предв.ID,
				   |	ВТ_Предв.ИнвентарныйНомер,
				   |	ВТ_Предв.Наименование,
				   |	ВТ_Предв.ЗаявкаНаРемонт,
				   |	ВТ_Предв.проф_Марка,
				   |	ВТ_Предв.ЗаводскойНомер,
				   |	ВТ_Предв.ДатаНачала,
				   |	ВТ_Предв.ФактТрудоемкость,
				   |	ВТ_Предв.ВидРемонтныхРабот
				   |
				   |ИНДЕКСИРОВАТЬ ПО
				   |	ОбъектРемонта,
				   |	ID
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_Предв.ОбъектРемонта КАК ОбъектРемонта,
				   |	ВТ_Предв.ID КАК ID,
				   |	ВТ_Предв.ИнвентарныйНомер КАК ИнвентарныйНомер,
				   |	ВТ_Предв.Наименование КАК Наименование,
				   |	ВТ_Предв.проф_Марка КАК проф_Марка,
				   |	ВТ_Предв.ЗаводскойНомер КАК ЗаводскойНомер,
				   |	ВТ_Предв.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
				   |	ВТ_Предв.ДатаНачала КАК ДатаНачала,
				   |	ВТ_Предв.ФактТрудоемкость КАК ФактТрудоемкость,
				   |	ВТ_Предв.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				   |	ВТ_Предв.ВремяПростояФакт КАК ВремяПростояФакт,
				   |	СУММА(РАЗНОСТЬДАТ(ЕСТЬNULL(торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)), ЕСТЬNULL(торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)), ЧАС)) КАК ВремяПростояПлан
				   |ПОМЕСТИТЬ ВТ_ПредвИтог
				   |ИЗ
				   |	ВТ_ПредвСВременем КАК ВТ_Предв
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
				   |		ПО (торо_ЗаявкаНаРемонтРемонтыОборудования.ID = ВТ_Предв.ID)
				   |			И ВТ_Предв.ОбъектРемонта = торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта
				   |			И (торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка.Проведен)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_Предв.ОбъектРемонта,
				   |	ВТ_Предв.ID,
				   |	ВТ_Предв.ИнвентарныйНомер,
				   |	ВТ_Предв.Наименование,
				   |	ВТ_Предв.ЗаявкаНаРемонт,
				   |	ВТ_Предв.проф_Марка,
				   |	ВТ_Предв.ЗаводскойНомер,
				   |	ВТ_Предв.ДатаНачала,
				   |	ВТ_Предв.ФактТрудоемкость,
				   |	ВТ_Предв.ВремяПростояФакт,
				   |	ВТ_Предв.ВидРемонтныхРабот
				   |
				   |ИНДЕКСИРОВАТЬ ПО
				   |	ОбъектРемонта,
				   |	ID
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_Предв.ОбъектРемонта КАК ОбъектРемонта,
				   |	ВТ_Предв.ID КАК ID,
				   |	ВТ_Предв.ИнвентарныйНомер КАК ИнвентарныйНомер,
				   |	ВТ_Предв.Наименование КАК Наименование,
				   |	ВТ_Предв.проф_Марка КАК проф_Марка,
				   |	ВТ_Предв.ЗаводскойНомер КАК ЗаводскойНомер,
				   |	ВТ_Предв.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
				   |	ВТ_Предв.ДатаНачала КАК ДатаНачала,
				   |	ВТ_Предв.ФактТрудоемкость КАК ФактТрудоемкость,
				   |	ВТ_Предв.ВремяПростояФакт КАК ВремяПростояФакт,
				   |	ВТ_Предв.ВремяПростояПлан КАК ВремяПростояПлан,
				   |	ВТ_Предв.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				   |	СУММА(ВЫРАЗИТЬ(торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ВремяРаботы / 3600 КАК ЧИСЛО(12, 2))) КАК ПланТрудоемкость
				   |ПОМЕСТИТЬ ВТ_Итог
				   |ИЗ
				   |	ВТ_ПредвИтог КАК ВТ_Предв
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
				   |		ПО (торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID = ВТ_Предв.ID)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_Предв.ОбъектРемонта,
				   |	ВТ_Предв.ID,
				   |	ВТ_Предв.ИнвентарныйНомер,
				   |	ВТ_Предв.Наименование,
				   |	ВТ_Предв.ЗаявкаНаРемонт,
				   |	ВТ_Предв.проф_Марка,
				   |	ВТ_Предв.ЗаводскойНомер,
				   |	ВТ_Предв.ДатаНачала,
				   |	ВТ_Предв.ФактТрудоемкость,
				   |	ВТ_Предв.ВремяПростояФакт,
				   |	ВТ_Предв.ВремяПростояПлан,
				   |	ВТ_Предв.ВидРемонтныхРабот
				   |
				   |ИНДЕКСИРОВАТЬ ПО
				   |	ОбъектРемонта,
				   |	ID
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_Итог.ОбъектРемонта КАК ОбъектРемонта,
				   |	ВТ_Итог.ID КАК ID,
				   |	ВТ_Итог.ИнвентарныйНомер КАК ИнвентарныйНомер,
				   |	ВТ_Итог.Наименование КАК Наименование,
				   |	ВТ_Итог.проф_Марка КАК проф_Марка,
				   |	ВТ_Итог.ЗаводскойНомер КАК ЗаводскойНомер,
				   |	ВТ_Итог.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
				   |	ВТ_Итог.ДатаНачала КАК ДатаНачала,
				   |	ВТ_Итог.ФактТрудоемкость КАК ФактТрудоемкость,
				   |	ВТ_Итог.ВремяПростояФакт КАК ВремяПростояФакт,
				   |	ВТ_Итог.ВремяПростояПлан КАК ВремяПростояПлан,
				   |	ВТ_Итог.ПланТрудоемкость КАК ПланТрудоемкость,
				   |	ВТ_Итог.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				   |	МАКСИМУМ(ВТ_НаработкаПробег.Период) КАК ПериодПробег,
				   |	ВТ_НаработкаПробег.Показатель КАК Показатель,
				   |	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодНаработки,
				   |	"""" КАК ПоказательНаработки
				   |ПОМЕСТИТЬ ВТ_ИтогПробегИНаработки
				   |ИЗ
				   |	ВТ_Итог КАК ВТ_Итог
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Наработка КАК ВТ_НаработкаПробег
				   |		ПО ВТ_Итог.ОбъектРемонта = ВТ_НаработкаПробег.ОбъектРемонта
				   |			И (ВТ_НаработкаПробег.Показатель.Наименование = ""Пробег"")
				   |			И ВТ_Итог.ДатаНачала >= ВТ_НаработкаПробег.Период
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_Итог.ОбъектРемонта,
				   |	ВТ_Итог.ID,
				   |	ВТ_Итог.ИнвентарныйНомер,
				   |	ВТ_Итог.Наименование,
				   |	ВТ_Итог.ЗаявкаНаРемонт,
				   |	ВТ_Итог.проф_Марка,
				   |	ВТ_Итог.ЗаводскойНомер,
				   |	ВТ_Итог.ДатаНачала,
				   |	ВТ_Итог.ФактТрудоемкость,
				   |	ВТ_Итог.ВремяПростояФакт,
				   |	ВТ_Итог.ВремяПростояПлан,
				   |	ВТ_Итог.ПланТрудоемкость,
				   |	ВТ_Итог.ВидРемонтныхРабот,
				   |	ВТ_НаработкаПробег.Показатель
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	ВТ_Итог.ОбъектРемонта,
				   |	ВТ_Итог.ID,
				   |	ВТ_Итог.ИнвентарныйНомер,
				   |	ВТ_Итог.Наименование,
				   |	ВТ_Итог.проф_Марка,
				   |	ВТ_Итог.ЗаводскойНомер,
				   |	ВТ_Итог.ЗаявкаНаРемонт,
				   |	ВТ_Итог.ДатаНачала,
				   |	ВТ_Итог.ФактТрудоемкость,
				   |	ВТ_Итог.ВремяПростояФакт,
				   |	ВТ_Итог.ВремяПростояПлан,
				   |	ВТ_Итог.ПланТрудоемкость,
				   |	ВТ_Итог.ВидРемонтныхРабот,
				   |	ДАТАВРЕМЯ(1, 1, 1),
				   |	"""",
				   |	МАКСИМУМ(ВТ_НаработкаПробег.Период),
				   |	ВТ_НаработкаПробег.Показатель
				   |ИЗ
				   |	ВТ_Итог КАК ВТ_Итог
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Наработка КАК ВТ_НаработкаПробег
				   |		ПО ВТ_Итог.ОбъектРемонта = ВТ_НаработкаПробег.ОбъектРемонта
				   |			И (ВТ_НаработкаПробег.Показатель.Наименование = ""Моточасы"")
				   |			И ВТ_Итог.ДатаНачала >= ВТ_НаработкаПробег.Период
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_Итог.ОбъектРемонта,
				   |	ВТ_Итог.ID,
				   |	ВТ_Итог.ИнвентарныйНомер,
				   |	ВТ_Итог.Наименование,
				   |	ВТ_Итог.ЗаявкаНаРемонт,
				   |	ВТ_Итог.проф_Марка,
				   |	ВТ_Итог.ЗаводскойНомер,
				   |	ВТ_Итог.ДатаНачала,
				   |	ВТ_Итог.ФактТрудоемкость,
				   |	ВТ_Итог.ВремяПростояФакт,
				   |	ВТ_Итог.ВремяПростояПлан,
				   |	ВТ_Итог.ПланТрудоемкость,
				   |	ВТ_Итог.ВидРемонтныхРабот,
				   |	ВТ_НаработкаПробег.Показатель
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_ИтогПробегИНаработки.ОбъектРемонта КАК ОбъектРемонта,
				   |	ВТ_ИтогПробегИНаработки.ID КАК ID,
				   |	ВТ_ИтогПробегИНаработки.ИнвентарныйНомер КАК ИнвентарныйНомер,
				   |	ВТ_ИтогПробегИНаработки.Наименование КАК Наименование,
				   |	ВТ_ИтогПробегИНаработки.проф_Марка КАК проф_Марка,
				   |	ВТ_ИтогПробегИНаработки.ЗаводскойНомер КАК ЗаводскойНомер,
				   |	ВТ_ИтогПробегИНаработки.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
				   |	ВТ_ИтогПробегИНаработки.ДатаНачала КАК ДатаНачала,
				   |	ВТ_ИтогПробегИНаработки.ФактТрудоемкость КАК ФактТрудоемкость,
				   |	ВТ_ИтогПробегИНаработки.ВремяПростояФакт КАК ВремяПростояФакт,
				   |	ВТ_ИтогПробегИНаработки.ВремяПростояПлан КАК ВремяПростояПлан,
				   |	ВТ_ИтогПробегИНаработки.ПланТрудоемкость КАК ПланТрудоемкость,
				   |	ВТ_ИтогПробегИНаработки.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				   |	МАКСИМУМ(ЕСТЬNULL(ВТ_ИтогПробегИНаработки.ПериодПробег, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодПробег,
				   |	МАКСИМУМ(ЕСТЬNULL(ВТ_ИтогПробегИНаработки.Показатель, 0)) КАК Показатель,
				   |	МАКСИМУМ(ЕСТЬNULL(ВТ_ИтогПробегИНаработки.ПериодНаработки, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодНаработки,
				   |	МАКСИМУМ(ЕСТЬNULL(ВТ_ИтогПробегИНаработки.ПоказательНаработки, 0)) КАК ПоказательНаработки
				   |ПОМЕСТИТЬ ВТ_ИтогСНаработками
				   |ИЗ
				   |	ВТ_ИтогПробегИНаработки КАК ВТ_ИтогПробегИНаработки
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_ИтогПробегИНаработки.ЗаводскойНомер,
				   |	ВТ_ИтогПробегИНаработки.ОбъектРемонта,
				   |	ВТ_ИтогПробегИНаработки.ДатаНачала,
				   |	ВТ_ИтогПробегИНаработки.ВидРемонтныхРабот,
				   |	ВТ_ИтогПробегИНаработки.Наименование,
				   |	ВТ_ИтогПробегИНаработки.ID,
				   |	ВТ_ИтогПробегИНаработки.ЗаявкаНаРемонт,
				   |	ВТ_ИтогПробегИНаработки.проф_Марка,
				   |	ВТ_ИтогПробегИНаработки.ИнвентарныйНомер,
				   |	ВТ_ИтогПробегИНаработки.ФактТрудоемкость,
				   |	ВТ_ИтогПробегИНаработки.ВремяПростояФакт,
				   |	ВТ_ИтогПробегИНаработки.ВремяПростояПлан,
				   |	ВТ_ИтогПробегИНаработки.ПланТрудоемкость
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_ИтогСНаработками.ОбъектРемонта КАК ОбъектРемонта,
				   |	СУММА(ЕСТЬNULL(торо_УчетНаработкиОборудованияНаработкаОбъектов.НовоеЗначение, 0)) КАК Пробег,
				   |	ВТ_ИтогСНаработками.ID КАК ID,
				   |	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ПараметрыВыработкиОС.ЕдиницаИзмерения, """")) КАК ЕдиницаИзмерения,
				   |	торо_УчетНаработкиОборудованияНаработкаОбъектов1.НовоеЗначение КАК Моточасы,
				   |	ПараметрыВыработкиОС1.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМоточасы
				   |ИЗ
				   |	ВТ_ИтогСНаработками КАК ВТ_ИтогСНаработками
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Наработка КАК ВТ_НаработкаПробег
				   |		ПО ВТ_ИтогСНаработками.ОбъектРемонта = ВТ_НаработкаПробег.ОбъектРемонта
				   |			И ВТ_ИтогСНаработками.ПериодПробег = ВТ_НаработкаПробег.Период
				   |			И ВТ_ИтогСНаработками.Показатель = ВТ_НаработкаПробег.Показатель
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования.НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
				   |		ПО (ВТ_НаработкаПробег.Регистратор = торо_УчетНаработкиОборудованияНаработкаОбъектов.Ссылка)
				   |			И (ВТ_НаработкаПробег.ОбъектРемонта = торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект)
				   |			И (ВТ_НаработкаПробег.Показатель = торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПараметрыВыработкиОС КАК ПараметрыВыработкиОС
				   |		ПО (ВТ_НаработкаПробег.Показатель = ПараметрыВыработкиОС.Ссылка)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Наработка КАК ВТ_НаработкаМоточасы
				   |		ПО ВТ_ИтогСНаработками.ОбъектРемонта = ВТ_НаработкаМоточасы.ОбъектРемонта
				   |			И ВТ_ИтогСНаработками.ПериодНаработки = ВТ_НаработкаМоточасы.Период
				   |			И ВТ_ИтогСНаработками.ПоказательНаработки = ВТ_НаработкаМоточасы.Показатель
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования.НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов1
				   |		ПО (ВТ_НаработкаМоточасы.Регистратор = торо_УчетНаработкиОборудованияНаработкаОбъектов1.Ссылка)
				   |			И (ВТ_НаработкаМоточасы.ОбъектРемонта = торо_УчетНаработкиОборудованияНаработкаОбъектов1.Объект)
				   |			И (ВТ_НаработкаМоточасы.Показатель = торо_УчетНаработкиОборудованияНаработкаОбъектов1.Показатель)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПараметрыВыработкиОС КАК ПараметрыВыработкиОС1
				   |		ПО (ВТ_НаработкаМоточасы.Показатель = ПараметрыВыработкиОС1.Ссылка)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_ИтогСНаработками.ОбъектРемонта,
				   |	ВТ_ИтогСНаработками.ID,
				   |	ПараметрыВыработкиОС.Ссылка,
				   |	торо_УчетНаработкиОборудованияНаработкаОбъектов1.НовоеЗначение,
				   |	ПараметрыВыработкиОС1.ЕдиницаИзмерения,
				   |	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ПараметрыВыработкиОС.ЕдиницаИзмерения, """"))
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	ОбъектРемонта
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_Итог.ОбъектРемонта КАК ОбъектРемонта,
				   |	ВТ_Итог.ID КАК ID,
				   |	ВТ_Итог.ИнвентарныйНомер КАК ИнвентарныйНомер,
				   |	ВТ_Итог.Наименование КАК Наименование,
				   |	ПРЕДСТАВЛЕНИЕ(ВТ_Итог.проф_Марка) КАК Марка,
				   |	ВТ_Итог.ЗаводскойНомер КАК ЗаводскойНомер,
				   |	ВТ_Итог.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт,
				   |	ВТ_Итог.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				   |	ВТ_Итог.ДатаНачала КАК Дата,
				   |	ЕСТЬNULL(ВТ_Итог.ФактТрудоемкость, 0) КАК ФактТрудоемкость,
				   |	ЕСТЬNULL(ВТ_Итог.ВремяПростояФакт, 0) КАК ВремяПростояФакт,
				   |	ЕСТЬNULL(ВТ_Итог.ВремяПростояПлан, 0) КАК ВремяПростояПлан,
				   |	ЕСТЬNULL(ВТ_Итог.ПланТрудоемкость, 0) КАК ПланТрудоемкость
				   |ИЗ
				   |	ВТ_Итог КАК ВТ_Итог";
	
   Если ЗначениеЗаполнено(ОбъектРемонта) Тогда 
	   ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								 "&ОбъектРемонта",
								 "торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта = &ОбъектРемонта");
	   Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);  
   Иначе
	   ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОбъектРемонта", "ИСТИНА");
   КонецЕсли;
   
   Возврат ТекстЗапроса;
   
КонецФункции	

&НаСервере
Функция ПолучитьДокументДляПечати()
   
   Табл = Новый ТабличныйДокумент;
   Табл.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
   
   ЭтаОбработка = РеквизитФормыВЗначение("Отчет");
   Макет = ЭтаОбработка.ПолучитьМакет("МакетПечать");
   ОбластьШапкаДокумента = Макет.ПолучитьОбласть("ОбластьШапкаДокумента"); 
   ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");  
   
   ОбластьШапкаДокумента.Параметры.текДата = Формат(ТекущаяДатаСеанса(), "ДФ='«dd» MMMM гггг'' г.'''");
   ОбластьШапкаДокумента.Параметры.месяц = Формат(ПериодОтчета.ДатаНачала, "ДФ='MMMM'");
   ОбластьШапкаДокумента.Параметры.год = Формат(ПериодОтчета.ДатаНачала, "ДФ=yyyy");

   Табл.Вывести(ОбластьШапкаДокумента); 
	   
   Запрос = Новый Запрос;
   Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ПериодОтчета.ДатаНачала)); 
   Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОтчета.ДатаОкончания));
   Запрос.Текст = ТекстЗапросаПечатьЖурналУчетаАТИДСТЗаМесяц(ОбъектРемонта, Запрос);	   
   РезультатЗапроса = Запрос.ВыполнитьПакет();  
   
   ВыборкаОбъектыРемонта = РезультатЗапроса[8].Выбрать();
   ВыборкаНаработка = РезультатЗапроса[7].Выбрать();
	   
   Если ВыборкаОбъектыРемонта.Количество() > 0 Тогда
	   Табл.Вывести(ОбластьШапкаТаблицы); 
   КонецЕсли;
   
   Пока ВыборкаОбъектыРемонта.Следующий() Цикл
	   ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
	   ОбластьСтрока.Параметры.Заполнить(ВыборкаОбъектыРемонта); 
	   ОбластьСтрока.Параметры.Наименование = ВыборкаОбъектыРемонта.Наименование + " " + ВыборкаОбъектыРемонта.Марка; 
	   ОбластьСтрока.Параметры.Пробег = "";	   
	   ОбластьСтрока.Параметры.Наработка = "";	
	   
	   Отбор = Новый Структура;
	   Отбор.Вставить("ОбъектРемонта", ВыборкаОбъектыРемонта.ОбъектРемонта);
	   Отбор.Вставить("ID", ВыборкаОбъектыРемонта.ID);
	   
	   ЗаполнитьПробегИНаработку(Отбор, ВыборкаНаработка, ОбластьСтрока);
	   
	   ЗаполнитьПараметрыОбластиСтрока(ВыборкаОбъектыРемонта, ОбластьСтрока);
	   		   					   
	   Если Табл.ПроверитьВывод(ОбластьСтрока) = Ложь Тогда
		   Табл.ВывестиГоризонтальныйРазделительСтраниц(); 
		   Табл.Вывести(ОбластьШапкаТаблицы);
		   Табл.Вывести(ОбластьСтрока);
	   Иначе
		   Табл.Вывести(ОбластьСтрока);
	   КонецЕсли;
										   
   КонецЦикла;
   
   Возврат Табл;
   
КонецФункции

&НаСервере
Процедура ЗаполнитьПробегИНаработку(Отбор, ВыборкаНаработка, ОбластьСтрока)
   
	Пока ВыборкаНаработка.НайтиСледующий(Отбор) Цикл         	
		ОбластьСтрока.Параметры.Пробег = ОбластьСтрока.Параметры.Пробег
			+ ?(ЗначениеЗаполнено(ВыборкаНаработка.Пробег),
				Строка(ВыборкаНаработка.Пробег) + ", км",
				"")
			+ Символы.ПС;
		ОбластьСтрока.Параметры.Наработка = ОбластьСтрока.Параметры.Наработка
			+ ?(ЗначениеЗаполнено(ВыборкаНаработка.Моточасы),
				Строка(ВыборкаНаработка.Моточасы) + ", ч",
				"")
			+ Символы.ПС;
	КонецЦикла;										   
	ВыборкаНаработка.Сбросить();		
   
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПараметрыОбластиСтрока(ВыборкаОбъектыРемонта, ОбластьСтрока)
	
	ШаблонСтроки = "%1%2";
	ЛитералЧ = ", ч";
	
	Если ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ПланТрудоемкость) Тогда
		ОбластьСтрока.Параметры.ПланТрудоемкость = СтрШаблон(ШаблонСтроки, ВыборкаОбъектыРемонта.ПланТрудоемкость, ЛитералЧ);
	Иначе
		ОбластьСтрока.Параметры.ПланТрудоемкость = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ФактТрудоемкость) Тогда
		ОбластьСтрока.Параметры.ФактТрудоемкость = СтрШаблон(ШаблонСтроки, ВыборкаОбъектыРемонта.ФактТрудоемкость, ЛитералЧ);		
	Иначе
		ОбластьСтрока.Параметры.ФактТрудоемкость = "";
	КонецЕсли;
												   
	Если ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ВремяПростояПлан) Тогда
		ОбластьСтрока.Параметры.ВремяПростояПлан = СтрШаблон(ШаблонСтроки, ВыборкаОбъектыРемонта.ВремяПростояПлан, ЛитералЧ);	
	Иначе
		ОбластьСтрока.Параметры.ВремяПростояПлан = "";	
	КонецЕсли;

	Если ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ВремяПростояФакт) Тогда
		ОбластьСтрока.Параметры.ВремяПростояФакт = СтрШаблон(ШаблонСтроки, ВыборкаОбъектыРемонта.ВремяПростояФакт, ЛитералЧ); 	
	Иначе
		ОбластьСтрока.Параметры.ВремяПростояФакт = "";	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ПланТрудоемкость)
	ИЛИ ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ФактТрудоемкость) Тогда
		ОбластьСтрока.Параметры.РазностьТрудоемкость = СтрШаблон(ШаблонСтроки,
			ВыборкаОбъектыРемонта.ПланТрудоемкость - ВыборкаОбъектыРемонта.ФактТрудоемкость, ЛитералЧ);
	Иначе
		ОбластьСтрока.Параметры.РазностьТрудоемкость = "";	
	КонецЕсли;
 
	Если ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ВремяПростояПлан)
	ИЛИ ЗначениеЗаполнено(ВыборкаОбъектыРемонта.ВремяПростояФакт) Тогда
		ОбластьСтрока.Параметры.РазностьПростоя = СтрШаблон(ШаблонСтроки,
			ВыборкаОбъектыРемонта.ВремяПростояПлан - ВыборкаОбъектыРемонта.ВремяПростояФакт, ЛитералЧ);
	Иначе
		ОбластьСтрока.Параметры.РазностьПростоя = "";	
	КонецЕсли;
		
КонецПроцедуры	

#КонецОбласти  

//-- Проф-ИТ, #127, Башинская А., 25.08.2023