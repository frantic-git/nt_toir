#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ Проф-ИТ, #166, Башинская А., 25.08.2023	
	
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтрДатаОкончания = "ДатаОкончания";

	Если НЕ слкМенеджерЗащиты.ПроверитьЛицензиюСеанса("28DD")
	И НЕ слкМенеджерЗащиты.ПроверитьЛицензиюСеанса("5DD5") Тогда
		ТекстОшибки = НСтр("ru='Лицензия не обнаружена! Формирование отчета невозможно.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ТекущаяИерархия = торо_ОтчетыСервер.ПолучитьЗначениеСтруктурыИерархии(КомпоновщикНастроек);
	
	торо_ОтчетыСервер.УстановитьЗапросыНаборовДанныхИерархииОР(СхемаКомпоновкиДанных, ТекущаяИерархия,
																СтрДатаОкончания, "НаборДанныхНоменклатура");
	
	НаборДанныхНоменклатура = СхемаКомпоновкиДанных.НаборыДанных.НаборДанныхНоменклатура;
	
	ЗапросНабораДанныхНоменклатуры = НаборДанныхНоменклатура.Элементы.НаборДанныхНомен.Запрос;
	ЗапросНаборДанныхКвалиф = НаборДанныхНоменклатура.Элементы.НаборДанныхКвалиф.Запрос;
	торо_ОтчетыСервер.УстановитьПолеОбъектИерархии(ЗапросНабораДанныхНоменклатуры,
		"СНулевымиЗначениями.ОбъектРемонтаНоменклатура", ТекущаяИерархия);
	торо_ОтчетыСервер.УстановитьПолеОбъектИерархии(ЗапросНаборДанныхКвалиф,
		"Вт_ДанныеИтоги.ОбъектРемонта", ТекущаяИерархия);
	торо_ОтчетыСервер.УстановитьТипГруппировкиОбъектаИерархии(КомпоновщикНастроек, ТекущаяИерархия);		
	
	ПараметрыДанныхКомпоновки = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
	ПараметрПериодВыполнения = ПараметрыДанныхКомпоновки.НайтиЗначениеПараметра(
									Новый ПараметрКомпоновкиДанных("ПериодВыполнения"));
	
	ИспользоватьОтборПоПериоду = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
		ПараметрПериодВыполнения.ИдентификаторПользовательскойНастройки).Использование;		
		
	Если ИспользоватьОтборПоПериоду Тогда
		ПареметрДатаНачала = ПараметрыДанныхКомпоновки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
		ПареметрДатаНачала.Использование = Истина;
		ПараметрДатаОкончания = ПараметрыДанныхКомпоновки.НайтиЗначениеПараметра(
									Новый ПараметрКомпоновкиДанных(СтрДатаОкончания));
		ПараметрДатаОкончания.Использование = Истина;
	Иначе
		ПареметрДатаНачала = ПараметрыДанныхКомпоновки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
		ПареметрДатаНачала.Использование = Ложь;
		ПараметрДатаОкончания = ПараметрыДанныхКомпоновки.НайтиЗначениеПараметра(
									Новый ПараметрКомпоновкиДанных(СтрДатаОкончания));
		ПараметрДатаОкончания.Использование = Ложь;
	КонецЕсли;
	
	// Настроим вывод колонок с видом документа.
	НастройкиКД = КомпоновщикНастроек.Настройки;
	ПользовательскиеНастройкиКД = КомпоновщикНастроек.ПользовательскиеНастройки;
	
	УстановитьИспользованиеВидаДокумента(НастройкиКД, ПользовательскиеНастройкиКД);
				
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьИспользованиеВидаДокумента(НастройкиКД, ПользовательскиеНастройкиКД)

	ИдентификаторПараметраВидДокумента = НастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("ВидДокумента")).ИдентификаторПользовательскойНастройки;
	ПараметрВидДокумента = ПользовательскиеНастройкиКД.Элементы.Найти(ИдентификаторПараметраВидДокумента);
	
	Если ПараметрВидДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;	
		
	ВидДокумента = ?(ПараметрВидДокумента.Использование, ПараметрВидДокумента.Значение, Ложь);
	
	Для Каждого Настройка Из НастройкиКД.Структура Цикл
		Если ТипЗнч(Настройка) <> Тип("ТаблицаКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Колонка Из Настройка.Колонки Цикл
			Если Колонка.Имя = "ВидДокумента" Тогда
				Колонка.Использование = ВидДокумента;
			КонецЕсли;
		КонецЦикла;			
	КонецЦикла;	
	
КонецПроцедуры	

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ФункцииОтчетовКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
	Настройки.События.ПослеЗаполненияПанелиБыстрыхНастроек = Истина;
	
	Настройки.ЗагрузитьНастройкиПриИзмененииПараметров = ЗагрузитьНастройкиПриИзмененииПараметров();
	
КонецПроцедуры

Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт

	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
КонецПроцедуры

Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
КонецПроцедуры

Процедура ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы)
	
	Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
		ПрименитьФОКНастройке(Элемент);		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПрименитьФОКНастройке(Элемент)
	
	Если ТипЗнч(Элемент) <> Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
		Возврат;
	КонецЕсли;	
					
	Если (Строка(Элемент.Параметр) = "УчитыватьПланГрафикиППР"
	И Не ПолучитьЗначениеФО("торо_ИспользоватьППР"))Тогда
		Элемент.Значение      = Ложь;
		Элемент.Использование = Ложь;
		Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Возврат;
	КонецЕсли;	
	
	Если (Строка(Элемент.Параметр) = "УчитыватьРегламентныеМероприятия"
		И Не ПолучитьЗначениеФО("торо_ИспользоватьРегламентныеМероприятия")) Тогда 
		Элемент.Значение      = Ложь;
		Элемент.Использование = Ложь;
		Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Возврат;
	КонецЕсли;

	Если (Строка(Элемент.Параметр) = "УчитыватьСметыПоДефектам"
	И (Не ПолучитьЗначениеФО("торо_УчетВыявленныхДефектовОборудования")
		ИЛИ Не ПолучитьЗначениеФО("торо_ИспользоватьСметыРемонта")) ) Тогда 
		Элемент.Значение      = Ложь;
		Элемент.Использование = Ложь;
		Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Возврат;
	КонецЕсли;

	Если (Строка(Элемент.Параметр) = "УчитыватьСметыПоВнешнимОснованиям"
	И (Не ПолучитьЗначениеФО("торо_ИспользоватьВнешниеОснованияДляРабот")
		ИЛИ Не ПолучитьЗначениеФО("торо_ИспользоватьСметыРемонта")) ) Тогда 
		Элемент.Значение      = Ложь;
		Элемент.Использование = Ложь; 
		Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПослеЗаполненияПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
	Если СтрНайти(Форма.ИмяФормы, "НастройкиОтчета") > 0  Тогда
		
		ЭлементыФормы = Форма.Элементы;
		ЭлементГруппаГлавное = ЭлементыФормы.Найти("ОбычныеОтборы");
		Если Не ЭлементГруппаГлавное = Неопределено Тогда
			ЭлементГруппаГлавное.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		КонецЕсли; 
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьЗначениеФО(ТекущаяОпция) Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию(ТекущаяОпция);
	
КонецФункции
	
Функция ЗагрузитьНастройкиПриИзмененииПараметров()  
	
	Параметры = Новый Массив;
	Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ИерархияТип"));	
	Возврат Параметры;
	
КонецФункции
	
#КонецОбласти

//-- Проф-ИТ, #166, Башинская А., 25.08.2023	

#КонецЕсли