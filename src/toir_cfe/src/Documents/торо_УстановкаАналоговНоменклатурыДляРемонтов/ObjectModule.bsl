#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий   

&ИзменениеИКонтроль("ОбработкаЗаполнения")
Процедура проф_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный");
	Если НЕ ЗначениеЗаполнено(Ответственный) тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	   
	#Вставка 
	//++ Проф-ИТ, #4, Башинская А.Ю., 20.08.2023  
	Если Ссылка.Пустая() Тогда
		проф_Статус = Перечисления.проф_СтатусыРазрешенийНаЗаменуМатериалов.Создано;	
	КонецЕсли;
	#КонецВставки
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроведения")
Процедура проф_ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.торо_УстановкаАналоговНоменклатурыДляРемонтов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаАналоговВПроизводстве;
	
	#Удаление
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
	#КонецУдаления
	#Вставка
	//++ Проф-ИТ, #246, Башинская А.Ю., 10.09.2023
	Если Отказ ИЛИ Таблица.Количество() = 0  Или проф_Статус <> Перечисления.проф_СтатусыРазрешенийНаЗаменуМатериалов.Утверждено Тогда
	#КонецВставки  
		Возврат;
	КонецЕсли;

	Набор = Движения.торо_АналогиНоменклатурыДляРемонтов;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

&Вместо("ОбработкаПроверкиЗаполнения")
Процедура проф_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Дата окончания действия соглашения должна быть не меньше, чем дата начала действия.
	Если ЗначениеЗаполнено(ДатаНачалаДействия) И ЗначениеЗаполнено(ДатаОкончанияДействия) Тогда
		
		Если ДатаНачалаДействия > ДатаОкончанияДействия Тогда
			
			ТекстСообщения = НСтр("ru='Дата окончания действия разрешения должна быть не меньше даты начала'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДатаОкончанияДействия",, Отказ);
			
		Конецесли;
		
	КонецЕсли;
	
	//++ Проф-ИТ, #288, Соловьев А.А., 31.10.2023
	//ПроверитьДублиНабора("Материалы", НСтр("ru='Обнаружено дублирование строк в наборе заменяемых материалов.'"), Отказ);
	//-- Проф-ИТ, #288, Соловьев А.А., 31.10.2023
	
	ПроверитьДублиНабора("Аналоги", НСтр("ru='Обнаружено дублирование строк в наборе аналогов.'"), Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Материалы.КлючСвязиТехКарта");
	
	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ИмяТЧ = "Материалы";
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
	ПараметрыПроверки.ИмяТЧ = "Аналоги";
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
	
	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");	
	МассивНепроверяемыхРеквизитов.Добавить("Материалы.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("Аналоги.Характеристика");
	Если ФОИспользоватьХарактеристикиНоменклатуры = Истина Тогда
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "Материалы";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		ПараметрыПроверки.ИмяТЧ = "Аналоги";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура проф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//++ Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
		проф_ОбщегоНазначенияВызовСервера.ПроверитьПризнакПодразделенияОрганизации(ЭтотОбъект["Подразделение"], Отказ);
	КонецЕсли;
	//-- Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли