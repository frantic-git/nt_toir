
#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура проф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//++ Проф-ИТ, #180, Сергеев Д., 25.08.2023
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Если Не ЭтоНовый() И Ссылка.ПометкаУдаления <> ПометкаУдаления Тогда
	//	УстановитьАктивностьДвижений(НЕ ПометкаУдаления);
	//ИначеЕсли ПометкаУдаления Тогда
	//	УстановитьАктивностьДвижений(Ложь);
	//КонецЕсли;
	
	Если НЕ ЭтоНовый() И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") <> ПометкаУдаления Тогда
		// Изменился признак ПометкаУдаления у документа, надо синхронизировать свойство Активность у его движений.
		УстановитьАктивностьДвижений(НЕ ПометкаУдаления);
	ИначеЕсли ПометкаУдаления Тогда
		// У помеченного на удаление документа не должно быть движений со свойством Активность = Истина.
		УстановитьАктивностьДвижений(Ложь);
	КонецЕсли;

	
	//-- Проф-ИТ, #180, Сергеев Д., 25.08.2023
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Проф-ИТ, #180, Сергеев Д., 25.08.2023

// Процедура устанавливает признак активности для записей регистров.
//
Процедура УстановитьАктивностьДвижений(ФлагАктивности)
	
	//Для Каждого Движение Из Движения Цикл
	//	
	//	Движение.Прочитать();
	//	Движение.УстановитьАктивность(ФлагАктивности);
	//		
	//КонецЦикла;
	
	// При записи из формы документа его движения уже прочитаны.
	НеобходимоПрочитатьДвижения = НЕ ДополнительныеСвойства.Свойство("ЗаписьДокументаИзФормы");
	
	Для Каждого Движение Из Движения Цикл
		
		Если НеобходимоПрочитатьДвижения Тогда
			Движение.Прочитать();
		КонецЕсли;
		Движение.Записывать = Истина;
		Движение.УстановитьАктивность(ФлагАктивности);
		
	КонецЦикла;

	
КонецПроцедуры // УстановитьАктивностьДвижений()

//-- Проф-ИТ, #180, Сергеев Д., 25.08.2023

#КонецОбласти
