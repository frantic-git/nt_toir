	
#Область ОбработчикиСобытийФормы	
	
&НаСервере
Процедура проф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	//++ Проф-ИТ, #27, Соловьев А.А., 25.08.2023
	НовыйЭлемент = Элементы.Добавить("Назначение", Тип("ПолеФормы"), Элементы.ГруппаДополнительныеРеквизиты);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_Назначение";
	НовыйЭлемент.ТолькоПросмотр = Истина;
	//-- Проф-ИТ, #27, Соловьев А.А., 25.08.2023
	
	//++ Проф-ИТ, issue_26, Ровенский О.В., 24.07.2023
	НовыйЭлемент = Элементы.Добавить("НаправлениеДеятельности", Тип("ПолеФормы"), Элементы.ГруппаДополнительныеРеквизиты);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_НаправлениеДеятельности";	
	//-- Проф-ИТ, issue_26, Ровенский О.В., 24.07.2023
	
	//++ Проф-ИТ, #73, Соловьев А.А., 31.08.2023	
	Элементы.ДокументОснование.Вид = ВидПоляФормы.ПолеНадписи;
	Элементы.ДокументОснование.Гиперссылка = Истина;
	Элементы.ДокументОснование.УстановитьДействие("Нажатие", "проф_ДокументОснованиеНажатие");
	Элементы.Переместить(Элементы.ДокументОснование, Элементы.Шапка, Элементы.ГруппаДатаВремяСтатус);
	
	НовыйЭлемент = Элементы.Добавить("ХозяйственнаяОперация", Тип("ПолеФормы"), Элементы.ШапкаЛево);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ХозяйственнаяОперация";
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "проф_ХозяйственнаяОперацияПриИзменении");
	
	ТоварыКатегорииЭксплуатации = Элементы.Добавить("ТоварыКатегорииЭксплуатации", Тип("ПолеФормы"), Элементы.Товары);
	ТоварыКатегорииЭксплуатации.Вид = ВидПоляФормы.ПолеВвода;      
	ТоварыКатегорииЭксплуатации.ПутьКДанным = "Объект.Товары.проф_КатегорииЭксплуатации";
	
	ТоварыФизическоеЛицо = Элементы.Добавить("ТоварыФизическоеЛицо", Тип("ПолеФормы"), Элементы.Товары);
	ТоварыФизическоеЛицо.Вид = ВидПоляФормы.ПолеВвода;      
	ТоварыФизическоеЛицо.ПутьКДанным = "Объект.Товары.проф_ФизическоеЛицо";
	
	Если Не ЗначениеЗаполнено(Объект.проф_ХозяйственнаяОперация) 
		Или Объект.проф_ХозяйственнаяОперация = Перечисления.проф_ХозяйственнаяОперация.СписаниеТоваровПоТребованию Тогда 
		ТоварыКатегорииЭксплуатации.Видимость = Ложь;
		ТоварыФизическоеЛицо.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.торо_СтатусУтверждения.Видимость = Истина;
	//++ Проф-ИТ, #379, Корнилов М.С., 07.12.2023
	Если проф_ОбщегоНазначенияВызовСервера.ЕстьРоль("проф_ИзменениеCтатусовCогласованияУЗВП") Тогда
		Элементы.ДокументОснование.Доступность = Истина;
		Элементы.ДатаИНомер.Доступность        = Истина;
		Элементы.Организация.Доступность       = Истина;
		Элементы.Подразделение.Доступность     = Истина;
		Элементы.Товары.Доступность            = Истина;
		Элементы.Ответственный.Доступность     = Истина;
	ИначеЕсли Объект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.проф_Новый Тогда
		Элементы.ДокументОснование.Доступность = Истина;
		Элементы.ДатаИНомер.Доступность        = Истина;
		Элементы.Организация.Доступность       = Истина;
		Элементы.Подразделение.Доступность     = Истина;
		Элементы.Товары.Доступность            = Истина;
		Элементы.Ответственный.Доступность     = Истина;
		Элементы.торо_СтатусУтверждения.ТолькоПросмотр = Истина;
	Иначе
		ТолькоПросмотр = (Объект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.НаУтверждении) 
			Или (Объект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.Утвержден);
	КонецЕсли;
	//-- Проф-ИТ, #379, Корнилов М.С., 07.12.2023
	
	Если Объект.Ссылка.Пустая() И Этотобъект.Параметры.ЗначенияЗаполнения.Свойство("проф_ЗаказДляЗакупки") Тогда
		Объект.проф_ЗаказДляЗакупки = Этотобъект.Параметры.ЗначенияЗаполнения.проф_ЗаказДляЗакупки;
	КонецЕсли;
	//-- Проф-ИТ, #73, Соловьев А.А., 31.08.2023
	
	//++ Проф-ИТ, #205, Карпов Д. Ю., 20.09.2023
	НовыйЭлемент = Элементы.Добавить("ТоварыПризнакЗапчасти",тип("ПолеФормы"),Элементы.Товары);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.Заголовок = "Признак запчасти (Проф-ИТ)"; 
	НовыйЭлемент.ПутьКДанным = "Объект.Товары.проф_ПризнакЗапчасти";
	
	Если Параметры.Свойство("ЗначенияЗаполнения")
		и Параметры.ЗначенияЗаполнения.Свойство("проф_СписокID") Тогда
   		Для каждого Ремонт Из Параметры.ЗначенияЗаполнения.проф_СписокID Цикл
			СписокID.Добавить(Ремонт.Значение, Ремонт.Ключ);
		КонецЦикла; 
	КонецЕсли; 
	
	Элементы.Товары.УстановитьДействие("ПередНачаломДобавления","проф_ТоварыПередНачаломДобавления");
	//-- Проф-ИТ, #205, Карпов Д. Ю., 20.09.2023
	
	//++ Проф-ИТ, #317, Соловьев А.А., 27.10.2023
	НовыйЭлемент = Элементы.Добавить("Товарыпроф_КЗаказу", Тип("ПолеФормы"), Элементы.Товары);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.Заголовок = "К заказу"; 
	НовыйЭлемент.ПутьКДанным = "Объект.Товары.проф_КЗаказу";
	НовыйЭлемент.ТолькоПросмотр = Истина;
	//-- Проф-ИТ, #317, Соловьев А.А., 27.10.2023
	
	//++ Проф-ИТ, #338, Корнилов М.С., 04.11.2023
	Элементы.ПодменюСоздатьНаОсновании.Отображение = ОтображениеКнопки.Текст; 
	//-- Проф-ИТ, #338, Корнилов М.С., 04.11.2023
	
	//++ Проф-ИТ, #350, Соловьев А.А., 16.11.2023
	НовыйЭлемент = Элементы.Добавить("Товарыпроф_ПричинаОтмены", Тип("ПолеФормы"), Элементы.Товары);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.Заголовок = НСтр("ru = 'Причина отмены'"); 
	НовыйЭлемент.ПутьКДанным = "Объект.Товары.проф_ПричинаОтмены";
	НовыйЭлемент.ТолькоПросмотр = Истина;
	
	Элементы.Переместить(НовыйЭлемент, Элементы.Товары, Элементы.Товарыторо_СтатусУтверждения);
	//-- Проф-ИТ, #350, Соловьев А.А., 16.11.2023
	
	//++ Проф-ИТ, #400, Корнилов М.С., 18.12.2023
	НовыйЭлемент = Элементы.Добавить("ДатаУтверждения", Тип("ПолеФормы"), Элементы.ГруппаДатаВремяСтатус);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ДатаУтверждения";
	
	НовыйЭлемент = Элементы.Добавить("КЗВП", Тип("ПолеФормы"), Элементы.ГруппаДополнительныеРеквизиты);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_КЗВП";
	
	Если проф_ОбщегоНазначенияВызовСервера.ЕстьРоль("проф_СостоянияДОЗВП") Тогда 
		Элементы.ДатаУтверждения.ТолькоПросмотр = Ложь;
		Элементы.КЗВП.ТолькоПросмотр = Ложь;
	КонецЕсли;
	//-- Проф-ИТ, #400, Корнилов М.С., 18.12.2023
	
	//++ Проф-ИТ, #418, Корнилов М.С., 12.01.2024
	НовыйЭлемент = Элементы.Добавить("ТипЗаказа", Тип("ПолеФормы"), Элементы.ГруппаДатаВремяСтатус);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ТипЗаказа";
	//-- Проф-ИТ, #418, Корнилов М.С., 12.01.2024
	
	//++ Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	проф_ОбщегоНазначенияВызовСервера.УстановитьПараметрВыбораПодразделения(Элементы);
	//-- Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	
	//++ Проф-ИТ, #253, Сергеев Д.С., 06.12.2023
	ПроверитьВидНоменклатурыВНастрокахСистемы();  
	//-- Проф-ИТ, #253, Сергеев Д.С., 06.12.2023
	
	//++ Проф-ИТ, #424, Соловьев А.А., 16.01.2024
	СтатусДоступностиОтмены = (Объект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.проф_Новый)
			Или (Объект.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.Отклонен);
			
	Элементы.ТоварыОтменено.ТолькоПросмотр = Не СтатусДоступностиОтмены;
	Элементы["Товарыпроф_ПричинаОтмены"].ТолькоПросмотр = Не СтатусДоступностиОтмены;
	
	НовыйЭлемент = Элементы.Добавить("Товарыпроф_Отменил", Тип("ПолеФормы"), Элементы.Товары);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.Товары.проф_Отменил";
	НовыйЭлемент.ТолькоПросмотр = Истина;
	
	Элементы.Переместить(НовыйЭлемент, Элементы.Товары, Элементы.Товарыторо_СтатусУтверждения);
	//-- Проф-ИТ, #424, Соловьев А.А., 16.01.2024
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура проф_ДокументОснованиеНажатие(Элемент, СтандартнаяОбработка)

	//++ Проф-ИТ, #73, Соловьев А.А., 31.08.2023
	ПоказатьЗначение(, Объект.ДокументОснование);
	//-- Проф-ИТ, #73, Соловьев А.А., 31.08.2023
	
КонецПроцедуры

//++ Проф-ИТ, #73, Соловьев А.А., 31.08.2023

&НаКлиенте
Процедура проф_ХозяйственнаяОперацияПриИзменении(Элемент)
	
	ПередачаВЭксплуатацию = ПредопределенноеЗначение("Перечисление.проф_ХозяйственнаяОперация.ПередачаВЭксплуатацию");
	ЭтоПередачаВЭксплуатацию = (Объект.проф_ХозяйственнаяОперация = ПередачаВЭксплуатацию);
	Элементы["ТоварыКатегорииЭксплуатации"].Видимость = ЭтоПередачаВЭксплуатацию;	
	Элементы["ТоварыФизическоеЛицо"].Видимость = ЭтоПередачаВЭксплуатацию;
	
КонецПроцедуры	

//-- Проф-ИТ, #73, Соловьев А.А., 31.08.2023

&НаКлиенте
&После("ТоварыПередУдалением")
Процедура проф_ТоварыПередУдалением(Элемент, Отказ)
	//++ Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДостпноИзменениеТЧТовары(Отказ) Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиТовары = Объект.проф_ТоварыИсточника.НайтиСтроки(Новый Структура("КодСтроки",ТекущиеДанные.КодСтроки));
	сч = СтрокиТовары.Количество()-1;
	Пока Сч>=0 Цикл
		Объект.проф_ТоварыИсточника.Удалить(СтрокиТовары[сч]);
		сч = сч - 1;
	КонецЦикла;
	//-- Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
КонецПроцедуры  

&НаКлиенте 
&После("ТоварыНоменклатураПриИзменении")
Процедура проф_ТоварыНоменклатураПриИзменении(Элемент)
	//++ Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
	ОбновитьДанныеПоРемонтамПриИзмененииСтроки();
	//-- Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023 
	//++ Проф-ИТ, #253, Сергеев Д.С., 06.12.2023
	УстановитьДоступностьРеквизитовПриИзмененииНоменклатуры();
	//-- Проф-ИТ, #253, Сергеев Д.С., 06.12.2023
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПоРемонтамПриИзмененииСтроки() 
	//++ Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023 
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		
	Если ТекущиеДанные = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокументОснование) <> ТИП("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиТовары = Объект.проф_ТоварыИсточника.НайтиСтроки(Новый Структура("КодСтроки",ТекущиеДанные.КодСтроки)); 
	Если СтрокиТовары.Количество() = 0 Тогда
		Если Объект.проф_ТоварыИсточника.Количество()>1 Тогда 
			СтрокаИсточника = Объект.проф_ТоварыИсточника[0];
			ID = СтрокаИсточника.ID;
			РемонтыОборудования_ID = СтрокаИсточника.РемонтыОборудования_ID;
		Иначе  
			Структура = ПолучитьIDРемонтныхРаботПоОснованию(Объект.ДокументОснование,Объект.Ссылка);
			ID =  Структура.ID;
			РемонтыОборудования_ID = Структура.РемонтыОборудования_ID;
		КонецЕсли;
		
		строка = Объект.проф_ТоварыИсточника.Добавить();
		ЗаполнитьЗначенияСвойств(строка,ТекущиеДанные); 		
		строка.ID = ID;
		строка.РемонтыОборудования_ID  = РемонтыОборудования_ID;
		
	Иначе
		Для каждого строка из СтрокиТовары Цикл
			строка.Номенклатура = ТекущиеДанные.Номенклатура;
			строка.Характеристика = ТекущиеДанные.Характеристика;
	        строка.Серия = ТекущиеДанные.Серия;
		КонецЦикла; 
	КонецЕсли;
	//-- Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
КонецПроцедуры  

&НаКлиенте
&После("ТоварыХарактеристикаПриИзменении")
Процедура проф_ТоварыХарактеристикаПриИзменении(Элемент)
	
	//++ Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
	ОбновитьДанныеПоРемонтамПриИзмененииСтроки();
	//-- Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023

КонецПроцедуры 

&НаКлиенте 
&После("ТоварыСерияОбработкаВыбора")
Процедура проф_ТоварыСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//++ Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
	ОбновитьДанныеПоРемонтамПриИзмененииСтроки();
	//-- Проф-ИТ, #205, Карпов Д. Ю., 22.09.2023
	
КонецПроцедуры

&НаКлиенте 
&ИзменениеИКонтроль("ТоварыПередНачаломИзменения")
Процедура проф_ТоварыПередНачаломИзменения(Элемент, Отказ)
	
	// ТОИР-->
	Отказ = Не ДоступностьРедактированияСтрокиТоваров();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	#Вставка
	//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	Если Не ДостпноИзменениеТЧТовары(Отказ) Тогда 
		Возврат;
	КонецЕсли;
    //++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	#КонецВставки
	
	ИмяПоля = Элемент.ТекущийЭлемент.Имя;
	
	Если ИмяПоля = "ТоварыЕстьАналоги" Тогда
		Отказ = Истина;
		ПодобратьАналогиНаКлиенте();
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	#Удаление
	Если ТекущиеДанные = Неопределено Или ТекущиеДанные.ЕстьАналоги = 2 Или ИмяПоля = "Товарыторо_СтатусУтверждения" Или ИмяПоля = "ТоварыОтменено"Тогда
	#КонецУдаления
	#Вставка
	//++ Проф-ИТ, #73, Карпов Д.Ю., 25.09.2023
	Если ТекущиеДанные = Неопределено Или ТекущиеДанные.ЕстьАналоги = 2 Или ИмяПоля = "Товарыторо_СтатусУтверждения" Или ИмяПоля = "ТоварыОтменено" 
	 	или ИмяПоля = "ТоварыКатегорииЭксплуатации" или ИмяПоля = "ТоварыФизическоеЛицо" или ИмяПоля = "ТоварыПризнакЗапчасти"
		//++ Проф-ИТ, #424, Соловьев А.А., 16.01.2024
		Или ИмяПоля = "Товарыпроф_ПричинаОтмены"
		//-- Проф-ИТ, #424, Соловьев А.А., 16.01.2024
		Тогда
	//++ Проф-ИТ, #73, Карпов Д.Ю., 25.09.2023
	#КонецВставки
		Возврат;
	КонецЕсли;
	
	//Если ТекущиеДанные.ЕстьАналоги = 0 И Не ИмяПоля = "Товарыторо_СтатусУтверждения" И Не ИмяПоля = "ТоварыОтменено" Тогда
	Если ТекущиеДанные.ЕстьАналоги = 0 Тогда
		Отказ = Истина;
		ПодобратьАналогиНаКлиенте();
	ИначеЕсли ТекущиеДанные.ЕстьАналоги = 1 Тогда
		СтруктураПоиска = Новый Структура("КодСтрокиНоменклатуры", ТекущиеДанные.КодСтроки);
		НайденныеСтроки = Объект.торо_ЗамененныеАналогамиМатериалы.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Отказ = Истина;
			ПодобратьАналогиНаКлиенте();
		КонецЕсли;
	КонецЕсли;
	// <--ТОИР
	
КонецПроцедуры 

&НаКлиенте
&ИзменениеИКонтроль("ТоварыПриНачалеРедактирования")
Процедура проф_ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	// ТОИР--> 	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока И торо_ИспользоватьУтверждениеЗаказовНаВнутреннееПотребление Тогда
	    ТекущиеДанные.торо_СтатусУтверждения = ПредопределенноеЗначение("Перечисление.торо_СтатусыУтвержденияСтрокЗаказовНаВП.НаУтверждении");
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		Объект.МаксимальныйКодСтроки = Объект.МаксимальныйКодСтроки + 1;
		ТекущиеДанные.КодСтроки = Объект.МаксимальныйКодСтроки;
		
		ТекущиеДанные.ЕстьАналоги = 2;
		
		#Вставка
		//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
		ОбновитьДанныеПоРемонтамПриИзмененииСтроки();
		//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
		#КонецВставки
		#Вставка
		//++ Проф-ИТ, #317, Соловьев А.А., 27.10.2023
		ТекущиеДанные.проф_КЗаказу = Объект.проф_ЗаказДляЗакупки;
		//-- Проф-ИТ, #317, Соловьев А.А., 27.10.2023
		#КонецВставки
	КонецЕсли;
	// <--ТОИР
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьIDРемонтныхРаботПоОснованию(ЗаявкаНаРемонт,ВнутреннееПотребление)
	//++ Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
	Возврат Документы.ЗаказНаВнутреннееПотребление.ПолучитьIDРемонтныхРаботПоОснованиюНаСервере(ЗаявкаНаРемонт, ВнутреннееПотребление);
	//-- Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
КонецФункции 

&НаСервере
&Вместо ("ОбработатьЗаменуНоменклатурыНаАналоги")
Процедура проф_ОбработатьЗаменуНоменклатурыНаАналоги(СтруктураПараметров, СтруктураТекущейСтроки)
	//++ Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023	
	Если ТипЗнч(Объект.ДокументОснование) <> Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		ПродолжитьВызов(СтруктураПараметров, СтруктураТекущейСтроки);
		Возврат;
	КонецЕсли;  
	//-- Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
	
	ТаблицаДанных = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресВХ_ТаблицаДанных);
	
	Если СтруктураТекущейСтроки.ЕстьАналоги = 1 Тогда
		Номенклатура = СтруктураТекущейСтроки.Номенклатура;
		Характеристика = СтруктураТекущейСтроки.Характеристика;
	Иначе
		СтруктураПоискаИсходнойНоменклатурыПоАналогу = Новый Структура("КодСтрокиАналога", СтруктураТекущейСтроки.КодСтроки);
		НайденныеСтрокиИсходнойНоменклатурыПоАналогу = Объект.торо_ЗамененныеАналогамиМатериалы.НайтиСтроки(СтруктураПоискаИсходнойНоменклатурыПоАналогу);
		
		Номенклатура = НайденныеСтрокиИсходнойНоменклатурыПоАналогу[0].Номенклатура;
		Характеристика = НайденныеСтрокиИсходнойНоменклатурыПоАналогу[0].ХарактеристикаНоменклатуры;
	КонецЕсли; 
	
	//++ Проф-ИТ, #228, Соловьев А.А., 17.10.2023
	Документы.ЗаказНаВнутреннееПотребление.ОбработатьЗаменуНоменклатурыНаАналоги(Истина, Объект, ТаблицаДанных, СтруктураТекущейСтроки, Номенклатура, Характеристика);
	
	Модифицированность = Истина;
	//-- Проф-ИТ, #228, Соловьев А.А., 17.10.2023
	
КонецПроцедуры

&НаКлиенте
&После ("ТоварыКоличествоУпаковокПриИзменении")
Процедура проф_ТоварыКоличествоУпаковокПриИзменении(Элемент)  
	//++ Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные; 
	Если ТекущиеДанные.Отменено Тогда
		Количество = 0;
	Иначе
		Количество = ТекущиеДанные.Количество;
	КонецЕсли;
	
	ПересчитатьКоличествоТоварыИсточника(ТекущиеДанные.КодСтроки, Количество)
	//-- Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоТовараИсточника(КодСтроки)
    //++ Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
	СтрокиТоварыИсточника = Объект.проф_ТоварыИсточника.НайтиСтроки(новый Структура("КодСтроки",КодСтроки));
	ТЧ =  Объект.проф_ТоварыИсточника.Выгрузить(СтрокиТоварыИсточника,"КоличествоУпаковок");
	
	Возврат ТЧ.Итог("КоличествоУпаковок");
	//-- Проф-ИТ, #205, Карпов Д. Ю., 03.10.2023
КонецФункции

&НаКлиенте
Процедура проф_ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	Если Не ДостпноИзменениеТЧТовары(Отказ) Тогда 
		Возврат;
	КонецЕсли;    //++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ПодобратьТовары")
Процедура проф_ПодобратьТовары(Команда) 
	#Вставка
	//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	Если Не ДостпноИзменениеТЧТовары() Тогда 
		Возврат;
	КонецЕсли;
    //++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
    #КонецВставки
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Поле ""Склад"" не заполнено'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "Объект.Склад",, Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Склад",                                     Объект.Склад);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",         Истина);
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",                  Истина);
	ПараметрыФормы.Вставить("СкрыватьКолонкуВидЦены",                    Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуЦеныНоменклатуры",           Истина);
	ПараметрыФормы.Вставить("Заголовок",                                 НСтр("ru = 'Подбор товаров'"));
	ПараметрыФормы.Вставить("ЗаголовокКнопкиЗапрашиватьКоличествоИЦену", НСтр("ru = 'Запрашивать количество'"));
	ПараметрыФормы.Вставить("Дата",                                      Объект.Дата);
	ПараметрыФормы.Вставить("Документ",                                  Объект.Ссылка);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования",				 "ПростойПодборНоменклатуры");
	ПараметрыФормы.Вставить("ВидимостьСерий",				 			 Истина);

	масПараметр = ПолучитьМассивТиповНоменклаутры();
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",	масПараметр);
	
	ОткрытьФорму("Обработка.торо_ПодборНоменклатуры.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры  

&НаКлиенте
Функция ДостпноИзменениеТЧТовары(Отказ = Ложь)
	//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Перед изменение состава табличной части ""Товары"" документ необходимо записать",,,,Отказ); 
		Возврат Ложь;
	КонецЕсли; 
	Возврат Истина;
    //++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	
КонецФункции

&НаКлиенте
&После("ТоварыОтмененоПриИзменении")
Процедура проф_ТоварыОтмененоПриИзменении(Элемент)
	//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	Если ТекущиеДанные.Отменено Тогда
		Количество = 0;
	Иначе
		Количество = ТекущиеДанные.Количество;
	КонецЕсли;
	ПересчитатьКоличествоТоварыИсточника(ТекущиеДанные.КодСтроки, Количество);
	//++ Проф-ИТ, #205, Карпов Д.Ю., 25.09.2023
	
	//++ Проф-ИТ, #424, Соловьев А.А., 16.01.2024
	ТекущиеДанные.проф_Отменил = ТекущиеДанныеОтменил(ТекущиеДанные.Отменено);
	//-- Проф-ИТ, #424, Соловьев А.А., 16.01.2024
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьКоличествоТоварыИсточника(КодСтроки, Количество)
	//++ Проф-ИТ, #336, Соловьев А.А., 07.11.2023
	Документы.ЗаказНаВнутреннееПотребление.ПересчитатьКоличествоТоварыИсточника(Объект, КодСтроки, Количество);
	//-- Проф-ИТ, #336, Соловьев А.А., 07.11.2023
КонецПроцедуры

#Область УтверждениеЗаказовНаВП

//++ Проф-ИТ, #379, Корнилов М.С., 07.12.2023
&НаСервере
&После("ЗаполнитьСписокВыбораСтатусовУтвержденияДокумента")
Процедура проф_ЗаполнитьСписокВыбораСтатусовУтвержденияДокумента(ДанныеВыбора)
	
	ДанныеВыбора.Добавить(Перечисления.торо_СтатусыУтвержденияЗаказовНаВП.проф_Новый);
	
КонецПроцедуры
//-- Проф-ИТ, #379, Корнилов М.С., 07.12.2023

//++ Проф-ИТ, #414, Сергеев Д.С., 06.12.2023

&НаСервере
&После("УстановитьУсловноеОформлениеПоСтатусуУтверждения")
Процедура проф_УстановитьУсловноеОформлениеПоСтатусуУтверждения()
	
	Если Не Объект.торо_СтатусУтверждения = ПредопределенноеЗначение("Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.Утвержден") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не проф_ОбщегоНазначенияВызовСервера.ЕстьРоль("проф_ИзменениеCтатусовCогласованияУЗВП") Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

//-- Проф-ИТ, #414, Сергеев Д.С., 06.12.2023

#КонецОбласти

#КонецОбласти 

#Область ПодборыИОбработкаПроверкиКоличества

//++ Проф-ИТ, #381, Корнилов М.С., 06.12.2023
&НаСервере
&ИзменениеИКонтроль("ДобавитьНоменклатуруИзПодбора")
Процедура проф_ДобавитьНоменклатуруИзПодбора(Адрес)

	Тз = ПолучитьИзВременногоХранилища(Адрес);
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий);
	Для каждого текСтрока из Тз Цикл

		НайС = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, Серия", 
		текСтрока.Номенклатура, текСтрока.Характеристика, текСтрока.Серия));
		Если НайС.Количество() = 0 Тогда
			нс = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(нс, текСтрока);

			// ТОИР-->
			Если торо_ИспользоватьУтверждениеЗаказовНаВнутреннееПотребление Тогда
				нс.торо_СтатусУтверждения = Перечисления.торо_СтатусыУтвержденияСтрокЗаказовНаВП.НаУтверждении;
			КонецЕсли;
			// <--ТОИР
		Иначе
			нс = НайС[0];
			нс.КоличествоУпаковок = нс.КоличествоУпаковок + текСтрока.КоличествоУпаковок;
		КонецЕсли;
        #Вставка
		нс.проф_КЗаказу = Истина; 
		#КонецВставки
		ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(нс, СтруктураДействий, Неопределено);		

	КонецЦикла;
    #Вставка
	//++ Проф-ИТ, #253, Сергеев Д.С., 06.12.2023
	ПроверитьВидНоменклатурыВНастрокахСистемы();	
	//-- Проф-ИТ, #253, Сергеев Д.С., 06.12.2023
	#КонецВставки

КонецПроцедуры
//-- Проф-ИТ, #381, Корнилов М.С., 06.12.2023

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

//++ Проф-ИТ, #253, Сергеев Д.С., 06.12.2023

&НаКлиенте
Процедура УстановитьДоступностьРеквизитовПриИзмененииНоменклатуры()

    ПроверитьВидНоменклатурыВНастрокахСистемы();

КонецПроцедуры // УстановитьДоступностьРеквизитовПриИзмененииНоменклатуры()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПроверитьВидНоменклатурыВНастрокахСистемы()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
		|	тНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ПОМЕСТИТЬ ВТ_ВидыНоменклатуры
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК тНоменклатура
		|		ПО ВТ_Товары.Номенклатура = тНоменклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тСписок.Значение КАК Значение
		|ПОМЕСТИТЬ ВТ_НастройкиСистемы
		|ИЗ
		|	Справочник.проф_НастройкиСистемы.Список КАК тСписок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_НастройкиСистемы КАК проф_НастройкиСистемы
		|		ПО тСписок.Ссылка = проф_НастройкиСистемы.Ссылка
		|ГДЕ
		|	проф_НастройкиСистемы.Наименование = ""ВидыНоменклатурыСпецодежды""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВидыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВТ_ВидыНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ВТ_ВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ВЫБОР
		|		КОГДА ВТ_НастройкиСистемы.Значение ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВидНомСпецодежда
		|ИЗ
		|	ВТ_ВидыНоменклатуры КАК ВТ_ВидыНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НастройкиСистемы КАК ВТ_НастройкиСистемы
		|		ПО ВТ_ВидыНоменклатуры.ВидНоменклатуры = ВТ_НастройкиСистемы.Значение";
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить(, "Номенклатура, НомерСтроки"));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НайденаПозиция = Ложь;
	Пока Выборка.Следующий() Цикл
		
		//ПараметрыОтбора = Новый Структура("НомерСтроки", Выборка.НомерСтроки); 
		//НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);

		Если Выборка.ВидНомСпецодежда Тогда
			НайденаПозиция = Истина; 
		//	Если НайденныеСтроки.Количество() > 0 Тогда
		//		НайденныеСтроки[0].проф_ВидНоменклатурыСпецодежда = Истина;			
		//	КонецЕсли;
		//	
		//Иначе
		//	Если НайденныеСтроки.Количество() > 0 Тогда
		//		НайденныеСтроки[0].проф_ВидНоменклатурыСпецодежда = Ложь;			
		//	КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НайденаПозиция Тогда
	
		Объект.проф_ХозяйственнаяОперация = Перечисления.проф_ХозяйственнаяОперация.СписаниеТоваровПоТребованию;
		Элементы.ХозяйственнаяОперация.Доступность = Ложь;
		Элементы.ТоварыФизическоеЛицо.Видимость = Истина;		
	
	КонецЕсли; 
	
КонецФункции // УстановитьДоступностьРеквизитовПриИзмененииНоменклатуры()

&НаСервере
Процедура УстановитьУсловноеОформлениеВидНоменклатурыПроверка()

	ОформлениеНеЗаполнен = УсловноеОформление.Элементы.Добавить();
	ОформлениеНеЗаполнен.Использование = Истина;
	ОформлениеНеЗаполнен.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	ГруппаОтбора1 = ОформлениеНеЗаполнен.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	УсловиеНеЗаполнен = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеЗаполнен.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.проф_ВидНоменклатурыПроверка");
	УсловиеНеЗаполнен.ПравоеЗначение = Истина; 
	УсловиеНеЗаполнен.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	УсловиеНеЗаполнен.Использование  = Истина;	
	
	УсловиеНеЗаполнен = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеЗаполнен.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.проф_ФизическоеЛицо");
	УсловиеНеЗаполнен.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	УсловиеНеЗаполнен.Использование  = Истина;   
	
	ПолеОформления = ОформлениеНеЗаполнен.Поля.Элементы.Добавить();       
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ТоварыФизическоеЛицо");
	ПолеОформления.Использование = Истина;  
	
	ОформлениеТекст = УсловноеОформление.Элементы.Добавить();
	ОформлениеТекст.Использование = Истина;
	ОформлениеТекст.Оформление.УстановитьЗначениеПараметра("Текст", "Физическое лицо не используется");
	ОформлениеТекст.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь); 
	ШрифтНакл = Новый Шрифт(,,, Истина);
	ОформлениеТекст.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтНакл);
	ОформлениеТекст.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.НейтральноСерый);
	
	ГруппаОтбора2 = ОформлениеТекст.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	УсловиеНеЗаполнен = ГруппаОтбора2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УсловиеНеЗаполнен.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Товары.проф_ВидНоменклатурыПроверка");
	УсловиеНеЗаполнен.ПравоеЗначение = Ложь; 
	УсловиеНеЗаполнен.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	УсловиеНеЗаполнен.Использование  = Истина;
	
	ПолеОформления = ОформлениеТекст.Поля.Элементы.Добавить();       
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ТоварыФизическоеЛицо");
	ПолеОформления.Использование = Истина; 

КонецПроцедуры // УстановитьУсловноеОформлениеВидНоменклатурыПроверка()

//-- Проф-ИТ, #253, Сергеев Д.С., 06.12.2023

//++ Проф-ИТ, #424, Соловьев А.А., 16.01.2024

&НаСервереБезКонтекста
Функция ТекущиеДанныеОтменил(Отменено)
	
	Возврат ?(Отменено, ПараметрыСеанса.ТекущийПользователь, Справочники.Пользователи.ПустаяСсылка());
	
КонецФункции

&НаКлиенте
Процедура проф_торо_СтатусУтвержденияПриИзмененииПосле(Элемент)
	
	СтатусДоступностиОтмены = (Объект.торо_СтатусУтверждения = ПредопределенноеЗначение("Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.проф_Новый"))
			Или (Объект.торо_СтатусУтверждения = ПредопределенноеЗначение("Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.Отклонен"));
	
	Элементы.ТоварыОтменено.ТолькоПросмотр = Не СтатусДоступностиОтмены;
	Элементы["Товарыпроф_ПричинаОтмены"].ТолькоПросмотр = Не СтатусДоступностиОтмены;
	
КонецПроцедуры

//-- Проф-ИТ, #424, Соловьев А.А., 16.01.2024

#КонецОбласти
