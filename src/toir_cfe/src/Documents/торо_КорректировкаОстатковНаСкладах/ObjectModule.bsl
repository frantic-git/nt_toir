
#Область ОбработчикиСобытий

&После("ОбработкаПроведения")
Процедура проф_ОбработкаПроведения(Отказ, Режим)
	
	//++ Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	Движения.проф_ТоварыНаСкладах.Записывать = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаОстатковНаСкладах.Дата КАК Период,
	|	КорректировкаОстатковНаСкладах.Склад КАК Склад,
	|	ТоварыСНазначением.Номенклатура КАК Номенклатура,
	|	ТоварыСНазначением.Характеристика КАК Характеристика,
	|	СУММА(ТоварыСНазначением.Количество) КАК ВНаличии,
	|	ТоварыСНазначением.Серия КАК Серия,
	|	ТоварыСНазначением.Назначение КАК Назначение
	|ИЗ
	|	Документ.торо_КорректировкаОстатковНаСкладах КАК КорректировкаОстатковНаСкладах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_КорректировкаОстатковНаСкладах.проф_ТоварыСНазначением КАК ТоварыСНазначением
	|		ПО КорректировкаОстатковНаСкладах.Ссылка = ТоварыСНазначением.Ссылка
	|ГДЕ
	|	КорректировкаОстатковНаСкладах.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыСНазначением.Номенклатура,
	|	ТоварыСНазначением.Характеристика,
	|	ТоварыСНазначением.Серия,
	|	ТоварыСНазначением.Назначение,
	|	КорректировкаОстатковНаСкладах.Дата,
	|	КорректировкаОстатковНаСкладах.Склад";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;	
	
	ДобавитьПриход = (ВидОперации = Перечисления.торо_ВидыОперацийКорректировкиОстатков.Оприходование);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		Если ДобавитьПриход Тогда
			Движение = Движения.проф_ТоварыНаСкладах.ДобавитьПриход();
		Иначе
			Движение = Движения.проф_ТоварыНаСкладах.ДобавитьРасход();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
	КонецЦикла;
	//-- Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроверкиЗаполнения")
Процедура проф_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив();

	МассивВсехРеквизитов = Новый Массив();
	МассивРеквизитовОперации = Новый Массив();

	ОбщегоНазначенияУТКлиентСервер.ЗаполнитьМассивНепроверяемыхРеквизитов(
	МассивВсехРеквизитов,
	МассивРеквизитовОперации,
	МассивНепроверяемыхРеквизитов);

	ФОИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
	#Вставка
	//++ Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	МассивНепроверяемыхРеквизитов.Добавить("проф_ТоварыСНазначением.Характеристика");
	//-- Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	#КонецВставки
	Если ФОИспользоватьХарактеристикиНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;

	ФОИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	#Вставка
	//++ Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	МассивНепроверяемыхРеквизитов.Добавить("проф_ТоварыСНазначением.Серия");
	//-- Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	#КонецВставки
	Если ФОИспользоватьСерииНоменклатуры = Истина тогда
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, Отказ, МассивНепроверяемыхРеквизитов);
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

	Если Не Отказ Тогда
		Отказ = ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты);
	КонецЕсли;
КонецПроцедуры

&После("ПередЗаписью")
Процедура проф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//++ Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
		проф_ОбщегоНазначенияВызовСервера.ПроверитьПризнакПодразделенияОрганизации(ЭтотОбъект["Подразделение"], Отказ);
	КонецЕсли;
	//-- Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	
КонецПроцедуры

#КонецОбласти