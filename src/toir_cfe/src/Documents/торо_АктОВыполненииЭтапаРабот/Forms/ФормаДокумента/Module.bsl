
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура проф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	//++ Проф-ИТ, #326, Соловьев А.А., 31.10.2023
	Элементы.Завершить.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НовыйЭлемент = Элементы.Добавить("проф_ЭксплуатацияВозможна", Тип("ПолеФормы"), Элементы.Завершить);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеПереключателя;
	НовыйЭлемент.ВидПереключателя = ВидПереключателя.Тумблер;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ЭксплуатацияВозможна";
	НовыйЭлемент.СписокВыбора.Добавить("Да", "Да");
	НовыйЭлемент.СписокВыбора.Добавить("Нет", "Нет");
	//-- Проф-ИТ, #326, Соловьев А.А., 31.10.2023
	
	//++ Проф-ИТ, #350, Соловьев А.А., 16.11.2023
	НовыйЭлемент = Элементы.Добавить("МатериальныеЗатратыОтменено", Тип("ПолеФормы"), Элементы.МатериальныеЗатраты);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.Заголовок = НСтр("ru = 'Отменено'");
	НовыйЭлемент.ПутьКДанным = "Объект.МатериальныеЗатраты.проф_Отменено";
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "проф_МатериальныеЗатратыОтмененоПриИзменении");
	//-- Проф-ИТ, #350, Соловьев А.А., 16.11.2023
	
	//++ Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	проф_ОбщегоНазначенияВызовСервера.УстановитьПараметрВыбораПодразделения(Элементы);
	//-- Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	
	//++ Проф-ИТ, #413, Соловьев А.А., 22.12.2023
	РеквизитДинамическийСписок = ЭтаФорма["ДокументыСостоянияПоказателиНаработки"];
	РеквизитДинамическийСписок.ТекстЗапроса = ТекстЗапросаДокументыСостоянияПоказателиНаработки();
	РеквизитДинамическийСписок.Параметры.УстановитьЗначениеПараметра("ЗавершитьРемонтныеРаботы", Объект.ЗавершитьРемонтныеРаботы);
	//-- Проф-ИТ, #413, Соловьев А.А., 22.12.2023
	
	//++ Проф-ИТ, #434, Сергеев Д.Н., 16.01.2024
	НоваяГруппа = Элементы.Добавить("проф_ГруппаДатаВхДокумента", Тип("ГруппаФормы"), Элементы.ГруппаКомиссия);
	НоваяГруппа.Вид                 = ВидГруппыФормы.ОбычнаяГруппа; 
	НоваяГруппа.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;  
	НоваяГруппа.Отображение         = ОтображениеОбычнойГруппы.Нет; 
	НоваяГруппа.ОтображатьЗаголовок = Ложь;
	
	НовыйЭлемент = Элементы.Добавить("проф_ДатаВходящегоДокумента", Тип("ПолеФормы"), НоваяГруппа);
	НовыйЭлемент.Заголовок = НСтр("ru = 'Дата входящего документа'");
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ДатаВходящегоДокумента"; 
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	
	НовыйЭлемент = Элементы.Добавить("проф_НаименованиеВходящегоДокумента", Тип("ПолеФормы"), НоваяГруппа);
	НовыйЭлемент.Заголовок = НСтр("ru = 'Наименование входящего документа'");
	НовыйЭлемент.ПутьКДанным = "Объект.проф_НаименованиеВходящегоДокумента";
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;

	НовыйЭлемент = Элементы.Добавить("проф_НомерВходящегоДокумента", Тип("ПолеФормы"), НоваяГруппа);
	НовыйЭлемент.Заголовок = НСтр("ru = 'Номер входящего документа'");
	НовыйЭлемент.ПутьКДанным = "Объект.проф_НомерВходящегоДокумента"; 
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	//-- Проф-ИТ, #434, Сергеев Д.Н., 16.01.2024	
	
	//++ Проф-ИТ, #190, Сергеев Д.Н., 22.12.2023
	УстановитьДоступностьЭлементовФормы();      
	//-- Проф-ИТ, #190, Сергеев Д.Н., 22.12.2023
	
КонецПроцедуры

&НаКлиенте
Процедура проф_ПослеЗаписиПосле(ПараметрыЗаписи)
	//++ Проф-ИТ, #413, Соловьев А.А., 22.12.2023
	РеквизитДинамическийСписок = ЭтаФорма["ДокументыСостоянияПоказателиНаработки"];
	РеквизитДинамическийСписок.Параметры.УстановитьЗначениеПараметра("ЗавершитьРемонтныеРаботы", Объект.ЗавершитьРемонтныеРаботы);
	Элементы.ДокументыСостоянияПоказателиНаработки.Обновить();
	//-- Проф-ИТ, #413, Соловьев А.А., 22.12.2023
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
&ИзменениеИКонтроль("ДеревоРемонтныхРаботВыполненоПриИзменении")
Процедура проф_ДеревоРемонтныхРаботВыполненоПриИзменении(Элемент)

	ТекСтрокаДерева = Элементы.ДеревоРемонтныхРабот.ТекущиеДанные;

	ТекСтрокаДерева.ПроцентВыполненияРабот = ?(ТекСтрокаДерева.Выполнено, 100, 0);
	СтруктураСтроки = Новый Структура("ID, РемонтыОборудования_ID, Родитель_ID", ТекСтрокаДерева.ID, ТекСтрокаДерева.РемонтыОборудования_ID, ТекСтрокаДерева.Родитель_ID);
	СтрокаРодДерева = ТекСтрокаДерева.ПолучитьРодителя();
	Если Не СтрокаРодДерева = Неопределено Тогда
		СтруктураРодСтроки = Новый Структура("ID, РемонтыОборудования_ID, Родитель_ID", ТекСтрокаДерева.ID, ТекСтрокаДерева.РемонтыОборудования_ID, ТекСтрокаДерева.Родитель_ID);
	Иначе
		СтруктураРодСтроки = Неопределено;
	КонецЕсли;

	Если НЕ ТекСтрокаДерева = Неопределено Тогда 
		МассивСтрок = Объект.РемонтныеРаботы.НайтиСтроки(СтруктураСтроки);
		Если МассивСтрок.Количество() Тогда
			МассивСтрок[0].Выполнено = ТекСтрокаДерева.Выполнено;
		КонецЕсли;
	КонецЕсли;

	ЗаполнитьПроцентВыполненияРемонтныхРаботВСтрокахДерева(СтруктураСтроки, СтруктураРодСтроки);

	ОбновитьПроцентВыполненияВСтрокахТЧ(ДеревоРемонтныхРабот.ПолучитьЭлементы()[0]);

#Удаление //++ Проф-ИТ, #290, Горетовская М.С., 04.10.2023
	Если Не ТекСтрокаДерева.Выполнено Тогда

		Объект.ЗавершитьРемонтныеРаботы = Ложь;
		Если НЕ Элементы.РемонтыОборудования.ТекущиеДанные = Неопределено Тогда
			МасСтр = Объект.РемонтыОборудования.НайтиСтроки(Новый Структура("ID", Элементы.РемонтыОборудования.ТекущиеДанные.ID));
			Если МасСтр.Количество() > 0 Тогда
				МасСтр[0].ЗавершитьРемонт = Ложь;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
#КонецУдаления //-- Проф-ИТ, #290, Горетовская М.С., 04.10.2023

	Для Каждого Строка Из ДеревоРемонтныхРабот.ПолучитьЭлементы() Цикл
		РазвернутьДеревоРемонтныхРабот(Строка);
	КонецЦикла;
	#Вставка
	//++ Проф-ИТ, #350, Соловьев А.А., 16.11.2023
	Если Не ТекСтрокаДерева.Выполнено Тогда 
		СтруктураСтроки = Новый Структура("ID, РемонтыОборудования_ID",
			ТекСтрокаДерева.ID, ТекСтрокаДерева.РемонтыОборудования_ID);
		СтрокиМатЗатрат = Объект.МатериальныеЗатраты.НайтиСтроки(СтруктураСтроки);
		Для Каждого СтрокаМатЗатрат Из СтрокиМатЗатрат Цикл
			СтрокаМатЗатрат.проф_Отменено = Истина;
		КонецЦикла;
	КонецЕсли;
	//-- Проф-ИТ, #350, Соловьев А.А., 16.11.2023
	#КонецВставки
КонецПроцедуры

&НаКлиенте
Процедура проф_ЗавершитьРемонтныеРаботыПриИзмененииПосле(Элемент)
	
	//++ Проф-ИТ, #326, Соловьев А.А., 02.11.2023
	Если Объект.ЗавершитьРемонтныеРаботы Тогда 
		Объект["проф_ЭксплуатацияВозможна"] = "";
	КонецЕсли;
	//-- Проф-ИТ, #326, Соловьев А.А., 02.11.2023
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоРемонтныхРабот

&НаКлиенте
Процедура проф_ДеревоРемонтныхРаботВыполненоПриИзмененииПосле(Элемент)
	//++ Проф-ИТ, #326, Соловьев А.А., 31.10.2023
	Элементы["проф_ЭксплуатацияВозможна"].ТолькоПросмотр = ЗапретРедактированияРеквизитаЭксплуатацияВозможна(
																	ДеревоРемонтныхРабот.ПолучитьЭлементы()[0]);
	//-- Проф-ИТ, #326, Соловьев А.А., 31.10.2023
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРемонтыОборудования

&НаКлиенте
Процедура проф_РемонтыОборудованияПриАктивизацииСтрокиПосле(Элемент)
	//++ Проф-ИТ, #326, Соловьев А.А., 31.10.2023
	СтрокиРемонтныхРабот = ДеревоРемонтныхРабот.ПолучитьЭлементы();
	Если СтрокиРемонтныхРабот.Количество() > 0 Тогда 
		Элементы["проф_ЭксплуатацияВозможна"].ТолькоПросмотр = ЗапретРедактированияРеквизитаЭксплуатацияВозможна(
																							СтрокиРемонтныхРабот[0]);
	КонецЕсли;
	//-- Проф-ИТ, #326, Соловьев А.А., 31.10.2023
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыМатериальныеЗатраты

//++ Проф-ИТ, #350, Соловьев А.А., 16.11.2023

&НаКлиенте
Процедура проф_МатериальныеЗатратыОтмененоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.МатериальныеЗатраты.ТекущиеДанные;
	
	Если ТекущиеДанные.проф_Отменено И Объект.РемонтныеРаботы.Количество() Тогда 
		СтруктураПоиска = Новый Структура("ID, РемонтыОборудования_ID",
							ТекущиеДанные.ID, ТекущиеДанные.РемонтыОборудования_ID);
		СтрокиДерева = ДеревоРемонтныхРабот.ПолучитьЭлементы();
		ОбновитьВыполненоВДереве(СтрокиДерева, СтруктураПоиска);
		ОбновитьПроцентВыполненияВСтрокахТЧ(СтрокиДерева[0]);
		
		Для Каждого Строка Из ДеревоРемонтныхРабот.ПолучитьЭлементы() Цикл
			РазвернутьДеревоРемонтныхРабот(Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
//-- Проф-ИТ, #350, Соловьев А.А., 16.11.2023

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыИсполнителиПоРемонтам

&НаКлиенте
Процедура проф_ИсполнителиПоРемонтамИсполнительПриИзмененииПосле(Элемент)
	
	УстановитьДоступностьЭлементовФормы();
	
КонецПроцедуры 

#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
&ИзменениеИКонтроль("ДобавитьВнутреннееПотреблениеПослеВопроса")
Процедура проф_ДобавитьВнутреннееПотреблениеПослеВопроса()
	
	ТекущийРемонт = Элементы.РемонтыОборудования.ТекущиеДанные;

	Если Не ТекущийРемонт = Неопределено Тогда

		МассивСтрокНоменклатуры = СформироватьМассивНоменклатурыКСписаниюНаСервере(ТекущийРемонт.ID);

		Если МассивСтрокНоменклатуры = Неопределено Тогда

			// Значение неопределено, когда вся имеющаяся в заявке номенклатура уже есть в документе заказ на вн потребл.			
			МассивСтрокНоменклатуры = Новый Массив;

		КонецЕсли;	

		ЗначенияЗаполнения = Новый Структура();
		ЗначенияЗаполнения.Вставить("МассивСтрокНоменклатуры",МассивСтрокНоменклатуры);
		ЗначенияЗаполнения.Вставить("Организация", Объект.Организация);
		ЗначенияЗаполнения.Вставить("Подразделение", Объект.Подразделение);
		ЗначенияЗаполнения.Вставить("Ответственный", Объект.Ответственный);

		#Вставка
		//++ Проф-ИТ, #27, Соловьев А.А., 26.09.2023
		ЗначенияЗаполнения.Вставить("проф_ДокументОснование", ТекущийРемонт.ДокументИсточник);
		//-- Проф-ИТ, #27, Соловьев А.А., 26.09.2023
		#КонецВставки
		ЗначенияЗаполнения.Вставить("Комментарий" , Строка(Объект.Ссылка) + " " + ТекущийРемонт.ОбъектРемонта + " " + 
		ТекущийРемонт.ВидРемонтныхРабот + " " + ТекущийРемонт.ДатаНачала + " - " + 
		ТекущийРемонт.ДатаОкончания);

		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);

		МассивID = Новый Массив;
		МассивID.Добавить(ТекущийРемонт.ID);
		СтруктураПараметров.Вставить("ID", МассивID);

		СтруктураПередаваемыхВОбработчикПараметров = Новый Структура;
		СтруктураПередаваемыхВОбработчикПараметров.Вставить("ТекущийРемонт_ID",ТекущийРемонт.ID);

		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьИзменитьЗаписиВРегистреТоро_ИнтеграцияДокументов", ЭтаФорма, СтруктураПередаваемыхВОбработчикПараметров);
		ОткрытьФорму("Документ.ВнутреннееПотреблениеТоваров.ФормаОбъекта", СтруктураПараметров, ЭтаФорма,,,,ОписаниеОповещения);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ЗапретРедактированияРеквизитаЭксплуатацияВозможна(СтрокаДерева)
	//++ Проф-ИТ, #326, Соловьев А.А., 31.10.2023
	ЗапретРедактирования = Истина;
	
	Для Каждого ТекСтрокаДерева Из СтрокаДерева.ПолучитьЭлементы() Цикл
		Если Не ТекСтрокаДерева.Выполнено Тогда 
			Возврат Ложь;
		КонецЕсли;
		ЗапретРедактирования = ЗапретРедактированияРеквизитаЭксплуатацияВозможна(ТекСтрокаДерева);
		Если ЗапретРедактирования = Ложь Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗапретРедактирования;
	//-- Проф-ИТ, #326, Соловьев А.А., 31.10.2023
КонецФункции

//++ Проф-ИТ, #329, Соловьев А.А., 14.11.2023

&НаСервере
&ИзменениеИКонтроль("ПометитьУдалениеНаСервере")
Функция проф_ПометитьУдалениеНаСервере(СтруктураПараметров)

	Попытка

		ОбъектНаУдаление = СтруктураПараметров.ДокументЕРПСсылка.ПолучитьОбъект();

		Если ОбъектНаУдаление.Проведен Тогда
			ОбъектНаУдаление.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;

		ОбъектНаУдаление.ПометкаУдаления = Истина;
		ОбъектНаУдаление.Записать();

		МенеджерЗаписи = РегистрыСведений.торо_ИнтеграцияДокументов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ID           = СтруктураПараметров.ID;
		МенеджерЗаписи.ДокументЕРП  = СтруктураПараметров.ДокументЕРПСсылка;
		МенеджерЗаписи.ДокументТОИР = Объект.Ссылка;
		МенеджерЗаписи.Прочитать();

		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли; 

		Если ТипЗнч(ОбъектНаУдаление.Ссылка) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда 
			ОбновитьДокументыВнутреннегоПотребленияСервер();
		ИначеЕсли ТипЗнч(ОбъектНаУдаление.Ссылка) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
			ОбновитьДокументыОприходованияИзлишковСервер();
		КонецЕсли;
		#Вставка
		Документы.торо_АктОВыполненииЭтапаРабот.проф_ДвиженияПоРегистру_проф_СоответствиеАктовИВнутреннегоПотребления(
																										Объект.Ссылка);
		#КонецВставки
	Исключение

		Возврат ОписаниеОшибки();

	КонецПопытки; 

	Возврат Истина;

КонецФункции

&НаСервере
&ИзменениеИКонтроль("ДобавитьИзменитьЗаписиВРегистреТоро_ИнтеграцияДокументовСервер")
Процедура проф_ДобавитьИзменитьЗаписиВРегистреТоро_ИнтеграцияДокументовСервер1(Результат, ДополнительныеПараметры)

	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	торо_ИнтеграцияДокументов.ДокументЕРП
		|ИЗ
		|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
		|ГДЕ
		|	торо_ИнтеграцияДокументов.ID = &ID
		|	И торо_ИнтеграцияДокументов.ДокументТОИР = &Ссылка
		|	И торо_ИнтеграцияДокументов.ДокументЕРП  = &СсылкаНаДокЕРП";

		Запрос.УстановитьПараметр("ID"             , ДополнительныеПараметры.ТекущийРемонт_ID);
		Запрос.УстановитьПараметр("Ссылка"         , Объект.Ссылка);
		Запрос.УстановитьПараметр("СсылкаНаДокЕРП" , ДополнительныеПараметры.Ссылка);

		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ДобавитьЗаписьВРегистрТоро_ИнтеграцияДокументовНаСервере(ДополнительныеПараметры.ТекущийРемонт_ID, Объект.Ссылка, ДополнительныеПараметры.Ссылка);
		КонецЕсли; 

		#Вставка
		Документы.торо_АктОВыполненииЭтапаРабот.проф_ДвиженияПоРегистру_проф_СоответствиеАктовИВнутреннегоПотребления(
																										Объект.Ссылка);
		#КонецВставки
	КонецЕсли; 	
КонецПроцедуры
//-- Проф-ИТ, #329, Соловьев А.А., 14.11.2023

//++ Проф-ИТ, #350, Соловьев А.А., 16.11.2023

&НаКлиенте
Процедура ОбновитьВыполненоВДереве(СтрокиДерева, СтруктураПоиска)
		
	Для Каждого ТекСтрокаДерева Из СтрокиДерева Цикл
		
		ПодчиненныеСтроки = ТекСтрокаДерева.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() Тогда 
			ОбновитьВыполненоВДереве(ПодчиненныеСтроки, СтруктураПоиска);
			Продолжить;
		КонецЕсли;	
		
		ОбновитьВыполненоВСтрокеДерева(ТекСтрокаДерева, СтруктураПоиска);
				
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполненоВСтрокеДерева(ТекСтрокаДерева, СтруктураПоиска)
	
	Если ТекСтрокаДерева.ID = СтруктураПоиска.ID 
	И ТекСтрокаДерева.РемонтыОборудования_ID = СтруктураПоиска.РемонтыОборудования_ID Тогда 
		
		ТекСтрокаДерева.Выполнено = Ложь;
		
		ТекСтрокаДерева.ПроцентВыполненияРабот = 0;
		
		СтрокаРодДерева = ТекСтрокаДерева.ПолучитьРодителя();
		Если Не СтрокаРодДерева = Неопределено Тогда
			СтруктураРодСтроки = Новый Структура("ID, РемонтыОборудования_ID, Родитель_ID",
				ТекСтрокаДерева.ID, ТекСтрокаДерева.РемонтыОборудования_ID, ТекСтрокаДерева.Родитель_ID);
		Иначе
			СтруктураРодСтроки = Неопределено;
		КонецЕсли;
		
		СтруктураСтроки = Новый Структура("ID, РемонтыОборудования_ID, Родитель_ID",
			ТекСтрокаДерева.ID, ТекСтрокаДерева.РемонтыОборудования_ID, ТекСтрокаДерева.Родитель_ID);
		Если НЕ ТекСтрокаДерева = Неопределено Тогда 
			МассивСтрок = Объект.РемонтныеРаботы.НайтиСтроки(СтруктураСтроки);
			Если МассивСтрок.Количество() Тогда
				МассивСтрок[0].Выполнено = ТекСтрокаДерева.Выполнено;
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьПроцентВыполненияРемонтныхРаботВСтрокахДерева(СтруктураСтроки, СтруктураРодСтроки);
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
&ИзменениеИКонтроль("СформироватьМассивНоменклатурыКСписаниюНаСервере")
Функция проф_СформироватьМассивНоменклатурыКСписаниюНаСервере(ID)

	УжеСписаннаяНоменклатура = ПолучитьТаблицуСписаннойНоменклатуры(ID, Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров"));

	Если ТипЗнч(ID) = Тип("Массив") Тогда
		#Удаление //++ Проф-ИТ, #350, Соловьев А.А., 21.11.2023
		НоменклатураКЗаказу = Объект.МатериальныеЗатраты.Выгрузить();
		#КонецУдаления
		#Вставка
		СтруктураОтбора = Новый Структура("проф_Отменено", Ложь);
		НоменклатураКЗаказу = Объект.МатериальныеЗатраты.Выгрузить(СтруктураОтбора);
		#КонецВставки //-- Проф-ИТ, #350, Соловьев А.А., 21.11.2023
		Запчасти = Объект.СерийныеЗапчасти.Выгрузить();
	Иначе
		#Удаление //++ Проф-ИТ, #350, Соловьев А.А., 21.11.2023
		НоменклатураКЗаказу = Объект.МатериальныеЗатраты.Выгрузить(Новый Структура("РемонтыОборудования_ID",ID));
		#КонецУдаления
		#Вставка
		СтруктураОтбора = Новый Структура("проф_Отменено, РемонтыОборудования_ID", Ложь, ID);
		НоменклатураКЗаказу = Объект.МатериальныеЗатраты.Выгрузить(СтруктураОтбора);
		#КонецВставки //-- Проф-ИТ, #350, Соловьев А.А., 21.11.2023
		Запчасти = Объект.СерийныеЗапчасти.Выгрузить(Новый Структура("РемонтыОборудования_ID",ID));	
	КонецЕсли;


	НоменклатураКЗаказу.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));

	Для каждого Строка Из Запчасти Цикл
		НС = НоменклатураКЗаказу.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Строка);
		НС.Номенклатура = Строка.НоменклатураНовая;
		НС.ХарактеристикаНоменклатуры = Строка.ХарактеристикаНоменклатурыНовая;
		НС.Количество = Строка.КоличествоНовое;
		НС.ЕдиницаИзмерения = Строка.ЕдиницаИзмеренияНовая;
		НС.КоличествоЕдиниц = Строка.КоличествоНовое;
		НС.Серия = Строка.СерияНоменклатурыНовая;
		НС.ХарактеристикиИспользуются = Строка.ХарактеристикиИспользуютсяДляНовой;
	КонецЦикла;

	Для каждого Стр ИЗ НоменклатураКЗаказу Цикл 
		Если НЕ ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) Тогда 
			Стр.КоличествоЕдиниц = Стр.Количество*1;
		КонецЕсли;
	КонецЦикла;

	НоменклатураКЗаказу.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, ХарактеристикиИспользуются, Серия", "КоличествоЕдиниц");

	Товары = Новый Массив;
	Услуга = Перечисления.ТипыНоменклатуры.Услуга;
	Работа = Перечисления.ТипыНоменклатуры.Работа;

	Для каждого Строка Из НоменклатураКЗаказу Цикл

		Если Строка.Номенклатура.ТипНоменклатуры = Услуга
			ИЛИ Строка.Номенклатура.ТипНоменклатуры = Работа Тогда
			Продолжить;
		КонецЕсли; 
		КоличествоУжеЗаказаннойНоменклатуры = 0;

		Если УжеСписаннаяНоменклатура.Количество() > 0 Тогда
			НайдСтроки = УжеСписаннаяНоменклатура.НайтиСтроки(Новый Структура("Номенклатура, Характеристика",Строка.Номенклатура,Строка.ХарактеристикаНоменклатуры));


			Если Не НайдСтроки = Неопределено Тогда
				Для каждого НайденнаяСтрока Из НайдСтроки Цикл
					КоличествоУжеЗаказаннойНоменклатуры = КоличествоУжеЗаказаннойНоменклатуры + НайденнаяСтрока.Количество;
				КонецЦикла; 
			КонецЕсли;
		КонецЕсли;

		Если УжеСписаннаяНоменклатура.Количество() = 0
			ИЛИ Строка.КоличествоЕдиниц > КоличествоУжеЗаказаннойНоменклатуры Тогда

			Структура = Новый Структура("Номенклатура, Характеристика, ХарактеристикиИспользуются, Количество, Серия",
			Строка.Номенклатура,
			Строка.ХарактеристикаНоменклатуры,
			Строка.ХарактеристикиИспользуются,
			(Строка.КоличествоЕдиниц - КоличествоУжеЗаказаннойНоменклатуры),
			Строка.Серия);
			Товары.Добавить(Структура);

		КонецЕсли;	

	КонецЦикла;

	Если Товары.Количество() > 0 Тогда
		Возврат Товары;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 

КонецФункции
//-- Проф-ИТ, #350, Соловьев А.А., 16.11.2023

//++ Проф-ИТ, #413, Соловьев А.А., 22.12.2023
Функция ТекстЗапросаДокументыСостоянияПоказателиНаработки()
	
	Возврат
	"ВЫБРАТЬ
	|	МАКСИМУМ(торо_НаработкаОбъектовРемонта.ДатаКон) КАК ДатаКон,
	|	торо_НаработкаОбъектовРемонта.ОбъектРемонта КАК ОбъектРемонта
	|ПОМЕСТИТЬ втДанныеРегистраНаработка
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта КАК торо_НаработкаОбъектовРемонта
	|ГДЕ
	|	торо_НаработкаОбъектовРемонта.Регистратор ССЫЛКА Документ.торо_УчетНаработкиОборудования
	|	И &ЗавершитьРемонтныеРаботы
	|	И торо_НаработкаОбъектовРемонта.ОбъектРемонта В
	|			(ВЫБРАТЬ
	|				торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта
	|			ИЗ
	|				Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|			ГДЕ
	|				торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &ДокументОснование
	|			СГРУППИРОВАТЬ ПО
	|				торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта)
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_НаработкаОбъектовРемонта.ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_УчетКонтролируемыхПоказателей.Ссылка КАК Ссылка,
	|	""Учет контролируемых показателей"" КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА торо_УчетКонтролируемыхПоказателей.Проведен
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексКартинки
	|ИЗ
	|	Документ.торо_УчетКонтролируемыхПоказателей КАК торо_УчетКонтролируемыхПоказателей
	|ГДЕ
	|	&УчетКонтролируемыхПоказателей
	|	И торо_УчетКонтролируемыхПоказателей.ДокументОснование = &ДокументОснование
	|	И НЕ торо_УчетКонтролируемыхПоказателей.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_УчетНаработкиОборудования.Ссылка,
	|	""Учет наработки оборудования"",
	|	ВЫБОР
	|		КОГДА торо_УчетНаработкиОборудования.Проведен
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.торо_УчетНаработкиОборудования КАК торо_УчетНаработкиОборудования
	|ГДЕ
	|	&УчетНаработки
	|	И торо_УчетНаработкиОборудования.ДокументОснование = &ДокументОснование
	|	И НЕ торо_УчетНаработкиОборудования.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_СостоянияОбъектовРемонта.Ссылка,
	|	""Состояния объектов ремонта"",
	|	ВЫБОР
	|		КОГДА торо_СостоянияОбъектовРемонта.Проведен
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.торо_СостоянияОбъектовРемонта КАК торо_СостоянияОбъектовРемонта
	|ГДЕ
	|	&УчетСостояний
	|	И торо_СостоянияОбъектовРемонта.ДокументОснование = &ДокументОснование
	|	И НЕ торо_СостоянияОбъектовРемонта.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_НаработкаОбъектовРемонта.Регистратор,
	|	""Учет наработки оборудования"",
	|	ВЫБОР
	|		КОГДА торо_УчетНаработкиОборудования.Проведен
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	втДанныеРегистраНаработка КАК втДанныеРегистраНаработка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_НаработкаОбъектовРемонта КАК торо_НаработкаОбъектовРемонта
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования КАК торо_УчетНаработкиОборудования
	|			ПО (торо_УчетНаработкиОборудования.Ссылка = торо_НаработкаОбъектовРемонта.Регистратор)
	|		ПО втДанныеРегистраНаработка.ОбъектРемонта = торо_НаработкаОбъектовРемонта.ОбъектРемонта
	|			И втДанныеРегистраНаработка.ДатаКон = торо_НаработкаОбъектовРемонта.ДатаКон
	|ГДЕ
	|	торо_НаработкаОбъектовРемонта.Регистратор ССЫЛКА Документ.торо_УчетНаработкиОборудования";

КонецФункции
//-- Проф-ИТ, #413, Соловьев А.А., 22.12.2023


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УстановитьДоступностьЭлементовФормы() //++ Проф-ИТ, #190, Сергеев Д.Н., 22.12.2023
	
	Если Объект.ИсполнителиПоРемонтам.Количество() > 0 
		И ТипЗнч(Объект.ИсполнителиПоРемонтам[0].Исполнитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Элементы["проф_ГруппаДатаВхДокумента"].Видимость = Истина;  
	Иначе
		Элементы["проф_ГруппаДатаВхДокумента"].Видимость = Ложь; 	
	КонецЕсли;
	
	Если НЕ Объект.проф_КорректироовкиЗапрещены Тогда
	    Возврат;	
	КонецЕсли; 
	
	ТолькоПросмотр = Истина;

КонецПроцедуры //-- Проф-ИТ, #190, Сергеев Д.Н., 22.12.2023

#КонецОбласти
