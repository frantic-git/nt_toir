
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

&После("ДобавитьКомандыПечати")
Процедура проф_ДобавитьКомандыПечати(КомандыПечати)
	
	//++ Проф-ИТ, #78, Лавриненко Т.В.,23.08.2023
	// Акт подготовки к зимней эксплуатации
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_АктПодготовкиКЗимнейЭксплуатации";
	КомандаПечати.Представление = НСтр("ru = 'Акт подготовки к зимней эксплуатации'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);  
	//-- Проф-ИТ, #78, Лавриненко Т.В.,23.08.2023
	
	//++ Проф-ИТ, #77, Лавриненко Т.В.,23.08.2023
	// Акт ввода в эксплуатацию
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_АктВводаВЭксплуатацию";
	КомандаПечати.Представление = НСтр("ru = 'Акт ввода в эксплуатацию'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
    //-- Проф-ИТ, #77, Лавриненко Т.В.,23.08.2023  
		
	//++ Проф-ИТ, #86, Антонов Б.Л.,05.09.2023
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_АктТехническогоСостоянияТС";
	КомандаПечати.Представление = НСтр("ru = 'Акт технического состояния ТС'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
	//-- Проф-ИТ, #86, Антонов Б.Л.,05.09.2023  
	
	//++ Проф-ИТ, #129, Антонов Б.Л.,15.09.2023
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_АктТехническогоСостоянияДСТ";
	КомандаПечати.Представление = НСтр("ru = 'Акт технического состояния ДСТ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
	//-- Проф-ИТ, #129, Антонов Б.Л.,15.09.2023  
	
	//++ Проф-ИТ, #76, Лавриненко Т.В.,11.09.2023
	// Карта ТО АТ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_КартаТОАТ";
	КомандаПечати.Представление = НСтр("ru = 'Карта ТО АТ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
    //-- Проф-ИТ, #76, Лавриненко Т.В.,11.09.2023  
	
	//++ Проф-ИТ, #130, Лавриненко Т.В.,12.09.2023
	// Карта ТО АТ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_КартаТОДСТ";
	КомандаПечати.Представление = НСтр("ru = 'Карта ТО ДСТ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
    //-- Проф-ИТ, #130, Лавриненко Т.В.,12.09.2023
	
	//++ Проф-ИТ, #85, Башинская А.Ю., 28.09.2023
	// Заказ-наряд
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_ЗаказНаряд";
	КомандаПечати.Представление = НСтр("ru = 'Заказ-наряд'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
    //-- Проф-ИТ, #85, Башинская А.Ю., 28.09.2023	

	//++ Проф-ИТ, #324, Соловьев А.А., 03.11.2023
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "проф_ЗаказНарядСводно";
	КомандаПечати.Представление = НСтр("ru = 'Заказ-наряд (сводно)'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
	//-- Проф-ИТ, #324, Соловьев А.А., 03.11.2023
	
КонецПроцедуры

&После("Печать")
Процедура проф_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	//++ Проф-ИТ, #78, Лавриненко Т.В.,23.08.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_АктПодготовкиКЗимнейЭксплуатации") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"проф_АктПодготовкиКЗимнейЭксплуатации", 
			"Акт подготовки к зимней эксплуатации", 
			проф_ПечатьАктПодготовкиКЗимнейЭксплуатации(МассивОбъектов, ПараметрыПечати),
			,
			"Документ.торо_АктОВыполненииЭтапаРабот.проф_АктПодготовкиКЗимнейЭксплуатации");		
	КонецЕсли;                                   
	//-- Проф-ИТ, #78, Лавриненко Т.В.,23.08.2023
		
	//++ Проф-ИТ, #77, Лавриненко Т.В.,23.08.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_АктВводаВЭксплуатацию") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"проф_АктВводаВЭксплуатацию", 
			"Акт ввода в эксплуатацию", 
			проф_ПечатьАктВводаВЭксплуатацию(МассивОбъектов, ПараметрыПечати),
			,
			"Документ.торо_АктОВыполненииЭтапаРабот.проф_АктВводаВЭксплуатацию");		
	КонецЕсли; 
    //-- Проф-ИТ, #77, Лавриненко Т.В.,23.08.2023
	
	//++ Проф-ИТ, #86, Антонов Б.Л.,05.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_АктТехническогоСостоянияТС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"проф_АктТехническогоСостоянияТС", 
			"Акт технического состояния ТС", 
			проф_ПечатьАктТехническогоСостоянияТС(МассивОбъектов, ПараметрыПечати, "проф_АктТехническогоСостоянияТС"),
			,
			"Документ.торо_АктОВыполненииЭтапаРабот.проф_АктТехническогоСостоянияТС");		
	КонецЕсли; 

	//-- Проф-ИТ, #86, Антонов Б.Л.,14.09.2023  
	
	//++ Проф-ИТ, #129, Антонов Б.Л.,15.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_АктТехническогоСостоянияДСТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"проф_АктТехническогоСостоянияДСТ", 
			"Акт технического состояния ДСТ", 
			проф_ПечатьАктТехническогоСостоянияТС(МассивОбъектов, ПараметрыПечати, "проф_АктТехническогоСостоянияДСТ"),
			,
			"Документ.торо_АктОВыполненииЭтапаРабот.проф_АктТехническогоСостоянияДСТ");		
	КонецЕсли; 

	//-- Проф-ИТ, #129, Антонов Б.Л.,15.09.2023 
	
	//++ Проф-ИТ, #76, Лавриненко Т.В.,11.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_КартаТОАТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"проф_КартаТОАТ", 
			"Карта ТО АТ", 
			проф_ПечатьКартаТОАТ(МассивОбъектов, ПараметрыПечати),
			,
			"Документ.торо_АктОВыполненииЭтапаРабот.проф_КартаТОАТ");		
	КонецЕсли; 
    //-- Проф-ИТ, #76, Лавриненко Т.В.,11.09.2023 
	
	//++ Проф-ИТ, #130, Лавриненко Т.В.,12.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_КартаТОДСТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"проф_КартаТОДСТ", 
			"Карта ТО ДСТ", 
			проф_ПечатьКартаТОДСТ(МассивОбъектов, ПараметрыПечати),
			,
			"Документ.торо_АктОВыполненииЭтапаРабот.проф_КартаТОДСТ");		
	КонецЕсли; 
    //-- Проф-ИТ, #130, Лавриненко Т.В.,12.09.2023

	//++ Проф-ИТ, #85, Башинская А.Ю., 28.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_ЗаказНаряд") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
															"проф_ЗаказНаряд", 
															"Заказ-наряд", 
															проф_ПечатьЗаказНаряд(МассивОбъектов, ПараметрыПечати),
															,
															"Документ.торо_АктОВыполненииЭтапаРабот.проф_ЗаказНаряд");
		
	КонецЕсли;
	//-- Проф-ИТ, #85, Башинская А.Ю., 28.09.2023
	
	//++ Проф-ИТ, #324, Соловьев А.А., 03.11.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_ЗаказНарядСводно") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
															"проф_ЗаказНарядСводно", 
															"Заказ-наряд (сводно)", 
															проф_ПечатьЗаказНарядСводно(МассивОбъектов, ПараметрыПечати),
															,
															"Документ.торо_АктОВыполненииЭтапаРабот.проф_ЗаказНаряд");
		
	КонецЕсли;
	//-- Проф-ИТ, #324, Соловьев А.А., 03.11.2023
	
КонецПроцедуры

//++ Проф-ИТ, #78, Лавриненко Т.В.,23.08.2023

Функция проф_ПечатьАктПодготовкиКЗимнейЭксплуатации(МассивОбъектов, ПараметрыПечати) 
	
	ОбработкаПечати = Обработки.проф_ПечатьАктПодготовкиКЗимнейЭксплуатации.Создать();
	Возврат ОбработкаПечати.ПечатьАктПодготовкиКЗимнейЭксплуатации(МассивОбъектов, ПараметрыПечати);
		
КонецФункции 

//-- Проф-ИТ, #78, Лавриненко Т.В.,23.08.2023

//++ Проф-ИТ, #77, Лавриненко Т.В.,23.08.2023
 Функция проф_ПечатьАктВводаВЭксплуатацию(МассивОбъектов, ПараметрыПечати) 
	
	ОбработкаПечати = Обработки.проф_ПечатьАктВводаВЭксплуатацию.Создать();
	Возврат ОбработкаПечати.ПечатьАктВводаВЭксплуатацию(МассивОбъектов, ПараметрыПечати);
		
КонецФункции
//-- Проф-ИТ, #77, Лавриненко Т.В.,23.08.2023

//++ Проф-ИТ, #86, #129, Антонов Б.Л.,05.09.2023
Функция проф_ПечатьАктТехническогоСостоянияТС(МассивОбъектов, ПараметрыПечати, ВидПечатнойФормы)
	
	ОбработкаПечати = Обработки.проф_ПечатьАктТехническогоСостоянияТС.Создать();
	Возврат ОбработкаПечати.ПечатьАктТехническогоСостоянияТС(МассивОбъектов, ПараметрыПечати, ВидПечатнойФормы);
	
КонецФункции
//-- Проф-ИТ, #86, #129, Антонов Б.Л.,12.09.2023

//++ Проф-ИТ, #76, Лавриненко Т.В.,11.09.2023
 Функция проф_ПечатьКартаТОАТ(МассивОбъектов, ПараметрыПечати) 
	
	ОбработкаПечати = Обработки.проф_ПечатьКартаТОАТ.Создать();
	Возврат ОбработкаПечати.ПечатьКартаТОАТ(МассивОбъектов, ПараметрыПечати);
		
КонецФункции
//-- Проф-ИТ, #76, Лавриненко Т.В.,11.09.2023  

//++ Проф-ИТ, #130, Лавриненко Т.В.,12.09.2023
 Функция проф_ПечатьКартаТОДСТ(МассивОбъектов, ПараметрыПечати) 
	
	ОбработкаПечати = Обработки.проф_ПечатьКартаТОДСТ.Создать();
	Возврат ОбработкаПечати.ПечатьКартаТОДСТ(МассивОбъектов, ПараметрыПечати);
		
КонецФункции
//-- Проф-ИТ, #130, Лавриненко Т.В.,12.09.2023

#Область ПечатьЗаказНаряд  

//++ Проф-ИТ, #324, Соловьев А.А., 03.11.2023

Функция проф_ПечатьЗаказНарядСводно(МассивОбъектов, ПараметрыПечати) 
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "проф_ЗаказНаряд";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_АктОВыполненииЭтапаРабот.проф_ЗаказНаряд");
	
	МассивПоказателей = Новый Массив;
	
	Моточасы = Справочники.проф_НастройкиСистемы.ПолучитьНастройкуСистемы("НастройкиОбменаТОИР", "Моточасы");
	Если Не ЗначениеЗаполнено(Моточасы) Тогда
		Моточасы = ПредопределенноеЗначение("Справочник.ПараметрыВыработкиОС.ПустаяСсылка");
	КонецЕсли;
	
	Пробег = Справочники.проф_НастройкиСистемы.ПолучитьНастройкуСистемы("НастройкиОбменаТОИР", "Пробег");
	Если Не ЗначениеЗаполнено(Пробег) Тогда
		Пробег = ПредопределенноеЗначение("Справочник.ПараметрыВыработкиОС.ПустаяСсылка");
	КонецЕсли;
	
	МассивПоказателей.Добавить(Пробег); 
	МассивПоказателей.Добавить(Моточасы); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПечатьЗаказНаряд(Истина);
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.УстановитьПараметр("Показатели", МассивПоказателей);
	Запрос.УстановитьПараметр("ТипЭП", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ТипТел", Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядИсполнители.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктМатериальныеЗатраты.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_СерийныеЗапчасти.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Отборы
	ОтборID_Наряд = Новый Структура("ID, Наряд");
	ОтборОР_Наряд = Новый Структура("ОбъектРемонта, Наряд");
	
	РемонтныеРаботы  = РезультатЗапроса[1].Выгрузить();
	ОписаниеДефектов = РезультатЗапроса[3].Выгрузить();
	Запчасти         = РезультатЗапроса[4].Выгрузить();
	
	ВыборкаНаработкаУчетНО = РезультатЗапроса[7].Выбрать();
	ВыборкаНаработкаВводНД = РезультатЗапроса[8].Выгрузить();
	
	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	ОписаниеДефектаШапка 	= Макет.ПолучитьОбласть("ОписаниеДефектаШапка");
	ОписаниеДефектаСтрока	= Макет.ПолучитьОбласть("ОписаниеДефектаСтрока");
	ЗапасныеЧастиШапка 		= Макет.ПолучитьОбласть("ЗапасныеЧастиШапка");
	ОбластьШапка 			= Макет.ПолучитьОбласть("ОбластьШапка");
	РаботыШапка 			= Макет.ПолучитьОбласть("РаботыШапка");
	ОбластьНаработка 		= Макет.ПолучитьОбласть("ОбластьНаработка");
	РаботыСтрока 			= Макет.ПолучитьОбласть("РаботыСтрока");
	ЗапасныеЧастиСтрока 	= Макет.ПолучитьОбласть("ЗапасныеЧастиСтрока");
	ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
	
	Пока ВыборкаДокументов.Следующий() Цикл  
		
		ТекНаряд = ВыборкаДокументов.Ссылка;
		
		ВыборкаОР_В_Документе = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОбъектРемонта");
		
		Пока ВыборкаОР_В_Документе.Следующий() Цикл
			
			ВидРемонтныхРабот = "";
			Выборка = ВыборкаОР_В_Документе.Выбрать();
			Пока Выборка.Следующий() Цикл
				ВидРемонтныхРабот = ВидРемонтныхРабот + Выборка.ВидРемонтныхРабот + ", ";
			КонецЦикла;
			ВидРемонтныхРабот = Лев(ВидРемонтныхРабот, СтрДлина(ВидРемонтныхРабот) - 2);
			Выборка.Сбросить();
			
			Склад = ВыборкаОР_В_Документе.Склад;
			
			ОбластьШапка.Параметры.НомерДокумента	= ВыборкаОР_В_Документе.Номер;
			ОбластьШапка.Параметры.ДатаВремя 		= Формат(ВыборкаОР_В_Документе.Дата, "ДФ=""дд.ММ.гггг'г.' ЧЧ:мм:сс""");
			ОбластьШапка.Параметры.Подразделение 	= ВыборкаОР_В_Документе.Подразделение;
			ОбластьШапка.Параметры.Ответственный 	= ВыборкаОР_В_Документе.Ответственный;  
			ОбластьШапка.Параметры.ВидРемонтныхРабот = ВидРемонтныхРабот;
			ОбластьШапка.Параметры.Модель 			= ВыборкаОР_В_Документе.проф_Модель; 
			ОбластьШапка.Параметры.VIN 				= ВыборкаОР_В_Документе.проф_VIN; 
			
			// Даты
			Если ОписаниеДефектов.Количество() Тогда
				ОбластьШапка.Параметры.ДатаПриемки      = ОписаниеДефектов[0].ДатаОбнаружения; 
			КонецЕсли;
			ОбластьШапка.Параметры.ДатаНачалаРемонта    = ВыборкаОР_В_Документе.ДатаНачала; 
			ОбластьШапка.Параметры.ДатаОкончанияРемонта = ВыборкаОР_В_Документе.ДатаОкончания; 
			ОбластьШапка.Параметры.ДатаИнфГотовности    = ВыборкаОР_В_Документе.ДатаОкончания;
			ОбластьШапка.Параметры.ДатаВыдачи           = ВыборкаОР_В_Документе.ДатаОкончания;
			
			// Контактная информация
			АдресЭП = ВыборкаОР_В_Документе.КонтактнаяИнформацияАдресЭП;
			Телефон = ВыборкаОР_В_Документе.КонтактнаяИнформацияТелефон;
			Разделитель = ?(ЗначениеЗаполнено(Телефон), ", ", "");
			ПредставлениеКИ = АдресЭП + ?(ЗначениеЗаполнено(АдресЭП), Разделитель, "") + Телефон;
			ОбластьШапка.Параметры.АдресТелефонОтветственного = ПредставлениеКИ;
			
			ТабДок.Вывести(ОбластьШапка);
			
			// Срезы по наработке
			ОбъектРемонтаТек = ВыборкаОР_В_Документе.ОбъектРемонта;
			СтруктураЗначенийНаработки = проф_ПолучитьНаработку(ОтборОР_Наряд,
				ОбъектРемонтаТек, ТекНаряд, ВыборкаНаработкаУчетНО, ВыборкаНаработкаВводНД, Пробег, Моточасы);
			ОбластьНаработка.Параметры.СрезПоНаработке = СтруктураЗначенийНаработки.ЗначениеМоточасы;
			ОбластьНаработка.Параметры.СрезПоПробегу = СтруктураЗначенийНаработки.ЗначениеПробег;
			
			ТабДок.Вывести(ОбластьНаработка);
			
			ВыводитьШапку = Истина;
			
			Пока Выборка.Следующий() Цикл
				
				ОтборID_Наряд.ID = Выборка.ID;
				ОтборID_Наряд.Наряд = ТекНаряд;
				
				СтрокиПоОР_Наряду = ОписаниеДефектов.НайтиСтроки(ОтборID_Наряд);
				Если СтрокиПоОР_Наряду.Количество() Тогда
					Если ВыводитьШапку Тогда
						ТабДок.Вывести(ОписаниеДефектаШапка);
						ВыводитьШапку = Ложь;
					КонецЕсли;
					
					ОписаниеДефекта = СтрокиПоОР_Наряду[0].ДефектОписание;
					ОписаниеДефектаСтрока.Параметры.ОписаниеДефекта = ОписаниеДефекта;
					ТабДок.Вывести(ОписаниеДефектаСтрока);
				КонецЕсли;
				
			КонецЦикла;
			
			Выборка.Сбросить();
			ВыводитьШапку = Истина;
			
			Запчасти.Свернуть("Номенклатура, ЕдиницаИзмерения, ЕдиницаИзмеренияНоменклатуры, Наряд, ОбъектРемонта", "Количество");
			Запчасти.Сортировать("Номенклатура");
				
			ОтборОР_Наряд.ОбъектРемонта = ВыборкаОР_В_Документе.ОбъектРемонта;
			ОтборОР_Наряд.Наряд = ТекНаряд;
			
			СтрокиПоОР_Наряду = Запчасти.НайтиСтроки(ОтборОР_Наряд);
			
			Если СтрокиПоОР_Наряду.Количество() Тогда
				
				Если ВыводитьШапку Тогда 
					ТабДок.Вывести(ЗапасныеЧастиШапка);
					ВыводитьШапку = Ложь;
				КонецЕсли;
				
				Для Каждого СтрокаПоНаряду Из СтрокиПоОР_Наряду Цикл
					ЗаполнитьЗначенияСвойств(ЗапасныеЧастиСтрока.Параметры, СтрокаПоНаряду);
					Если Не ЗначениеЗаполнено(СтрокаПоНаряду.ЕдиницаИзмерения) Тогда
						ЗапасныеЧастиСтрока.Параметры.ЕдиницаИзмерения = СтрокаПоНаряду.ЕдиницаИзмеренияНоменклатуры;
					КонецЕсли;
					ЗапасныеЧастиСтрока.Параметры.Склад = Склад;
					ТабДок.Вывести(ЗапасныеЧастиСтрока);
				КонецЦикла;
				
			КонецЕсли;
			
			Выборка.Сбросить();
			ВыводитьШапку = Истина;
			
			Пока Выборка.Следующий() Цикл
				
				ОтборID_Наряд.ID = Выборка.ID;
				ОтборID_Наряд.Наряд = ТекНаряд;
				
				СтрокиПоОР_Наряду = РемонтныеРаботы.НайтиСтроки(ОтборID_Наряд);
				
				Если СтрокиПоОР_Наряду.Количество() Тогда
					
					Если ВыводитьШапку Тогда 
						ТабДок.Вывести(РаботыШапка);
						ВыводитьШапку = Ложь;
					КонецЕсли;
					
					Для Каждого СтрокаПоНаряду Из СтрокиПоОР_Наряду Цикл
						ЗаполнитьЗначенияСвойств(РаботыСтрока.Параметры, СтрокаПоНаряду);
						НормаВремени = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(СтрокаПоНаряду.НормаВремени);  
						РаботыСтрока.Параметры.Трудоемкость = ?(НормаВремени = "Ввести продолжительность", "0 ч", НормаВремени);
						ТабДок.Вывести(РаботыСтрока);
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьПодвал);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();  
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДок.КлючПараметровПечати = "проф_ЗаказНарядСводно";
	
	Возврат ТабДок;
	
КонецФункции

//-- Проф-ИТ, #324, Соловьев А.А., 03.11.2023

//++ Проф-ИТ, #85, Башинская А.Ю., 28.09.2023

Функция проф_ПечатьЗаказНаряд(МассивОбъектов, ПараметрыПечати) 
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "проф_ЗаказНаряд";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_АктОВыполненииЭтапаРабот.проф_ЗаказНаряд");
	
	МассивПоказателей = Новый Массив;          
	
	Моточасы = Справочники.проф_НастройкиСистемы.ПолучитьНастройкуСистемы("НастройкиОбменаТОИР", "Моточасы");
	Если Не ЗначениеЗаполнено(Моточасы) Тогда
		Моточасы = ПредопределенноеЗначение("Справочник.ПараметрыВыработкиОС.ПустаяСсылка");
	КонецЕсли;
	
	Пробег = Справочники.проф_НастройкиСистемы.ПолучитьНастройкуСистемы("НастройкиОбменаТОИР", "Пробег");
	Если Не ЗначениеЗаполнено(Пробег) Тогда
		Пробег = ПредопределенноеЗначение("Справочник.ПараметрыВыработкиОС.ПустаяСсылка");
	КонецЕсли;	
		
	МассивПоказателей.Добавить(Пробег); 
	МассивПоказателей.Добавить(Моточасы); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПечатьЗаказНаряд();		
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);     
	Запрос.УстановитьПараметр("Показатели", МассивПоказателей);    
	Запрос.УстановитьПараметр("ТипЭП", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);   
	Запрос.УстановитьПараметр("ТипТел", Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядРемонтыОборудования.ID В(&ID)", "");     
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядРемонтныеРаботы.РемонтыОборудования_ID В(&ID)", "");     
	    Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_НарядИсполнители.РемонтыОборудования_ID В(&ID)", "");   
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_АктМатериальныеЗатраты.РемонтыОборудования_ID В(&ID)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И торо_СерийныеЗапчасти.РемонтыОборудования_ID В(&ID)", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Отборы
	ОтборОР_Наряд = Новый Структура("ID, Наряд");     
	ОтборОР_Наряд2 = Новый Структура("ОбъектРемонта, Наряд");
		
	РемонтныеРаботы  = РезультатЗапроса[1].Выгрузить();   
	ОписаниеДефектов = РезультатЗапроса[3].Выгрузить();
	Запчасти         = РезультатЗапроса[4].Выгрузить();
	
	ВыборкаНаработкаУчетНО = РезультатЗапроса[7].Выбрать();
	ВыборкаНаработкаВводНД = РезультатЗапроса[8].Выгрузить();

	ВыборкаДокументов = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	Пока ВыборкаДокументов.Следующий() Цикл  
		
		ТекНаряд = ВыборкаДокументов.Ссылка;
		
		ВыборкаОР_В_Документе = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ID");
		
		Пока ВыборкаОР_В_Документе.Следующий() Цикл  
						
			ОР = ВыборкаОР_В_Документе.ID; 
            ОбъектРемонтаТек = ВыборкаОР_В_Документе.ОбъектРемонта;    
            ОтборОР_Наряд.ID = ОР;
			ОтборОР_Наряд.Наряд = ТекНаряд;
			
			Склад = ВыборкаОР_В_Документе.Склад;
			
			обШапка = Макет.ПолучитьОбласть("ОбластьШапка");
			
			обШапка.Параметры.НомерДокумента 	= ВыборкаОР_В_Документе.Номер;
			обШапка.Параметры.ДатаВремя = Формат(ВыборкаОР_В_Документе.Дата, "ДФ=""дд.ММ.гггг'г.' ЧЧ:мм:сс""");			
			обШапка.Параметры.Подразделение 	= ВыборкаОР_В_Документе.Подразделение;
			обШапка.Параметры.Ответственный 	= ВыборкаОР_В_Документе.Ответственный;  
			обШапка.Параметры.ВидРемонтныхРабот = ВыборкаОР_В_Документе.ВидРемонтныхРабот; 
			обШапка.Параметры.Модель 			= ВыборкаОР_В_Документе.проф_Модель; 
			обШапка.Параметры.VIN 				= ВыборкаОР_В_Документе.проф_VIN; 
			
			// Даты
			Если ОписаниеДефектов.Количество() Тогда
				обШапка.Параметры.ДатаПриемки      = ОписаниеДефектов[0].ДатаОбнаружения; 
			КонецЕсли;
			обШапка.Параметры.ДатаНачалаРемонта    = ВыборкаОР_В_Документе.ДатаНачала; 
			обШапка.Параметры.ДатаОкончанияРемонта = ВыборкаОР_В_Документе.ДатаОкончания; 
			обШапка.Параметры.ДатаИнфГотовности	   = ВыборкаОР_В_Документе.ДатаОкончания;
			обШапка.Параметры.ДатаВыдачи           = ВыборкаОР_В_Документе.ДатаОкончания;
			
			
			// Контактная информация
			АдресЭП = ВыборкаОР_В_Документе.КонтактнаяИнформацияАдресЭП;  
			Телефон = ВыборкаОР_В_Документе.КонтактнаяИнформацияТелефон;			
			Разделитель = ?(ЗначениеЗаполнено(Телефон), ", ", "");
			ПредставлениеКИ = АдресЭП + ?(ЗначениеЗаполнено(АдресЭП), Разделитель, "") + Телефон;			
			обШапка.Параметры.АдресТелефонОтветственного = ПредставлениеКИ;      

			ТабДок.Вывести(обШапка);
			
			
			// Срезы по наработке
			ОбластьНаработка = Макет.ПолучитьОбласть("ОбластьНаработка");
            СтруктураЗначенийНаработки = проф_ПолучитьНаработку(ОтборОР_Наряд2,
				ОбъектРемонтаТек, ТекНаряд, ВыборкаНаработкаУчетНО, ВыборкаНаработкаВводНД, Пробег, Моточасы);		    			
			ОбластьНаработка.Параметры.СрезПоНаработке = СтруктураЗначенийНаработки.ЗначениеМоточасы;      
			ОбластьНаработка.Параметры.СрезПоПробегу = СтруктураЗначенийНаработки.ЗначениеПробег;      
			
			ТабДок.Вывести(ОбластьНаработка);			
			
			проф_ПолучитьЗаполнитьОписаниеДефекта(ОтборОР_Наряд, ОписаниеДефектов, Макет, ТабДок);
			проф_ПолучитьЗаполнитьЗапчасти(ОтборОР_Наряд, Запчасти, Макет, ТабДок, Склад);						
			проф_ПолучитьЗаполнитьРемонты(ОтборОР_Наряд, РемонтныеРаботы, Макет, ТабДок);			
						
			Подвал = Макет.ПолучитьОбласть("Подвал");
			ТабДок.Вывести(Подвал);							
		
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();  
		
		КонецЦикла;
	
	КонецЦикла;
	
	ТабДок.КлючПараметровПечати = "проф_ЗаказНаряд";

	Возврат ТабДок;
	
КонецФункции

Функция ТекстЗапросаПечатьЗаказНаряд(ЗаказНарядСводно = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_АктОВыполненииЭтапаРабот.Ссылка КАК Ссылка,
	|	торо_АктОВыполненииЭтапаРабот.Номер КАК Номер,
	|	торо_АктОВыполненииЭтапаРабот.Дата КАК Дата,
	|	торо_АктОВыполненииЭтапаРабот.Организация КАК Организация,
	|	торо_АктОВыполненииЭтапаРабот.Подразделение КАК Подразделение, 
	|	торо_АктОВыполненииЭтапаРабот.Подразделение.Склад Как Склад,
	|	торо_АктОВыполненииЭтапаРабот.Ответственный КАК Ответственный,   
	|	ЕСТЬNULL(ПользователиКонтактнаяИнформация1.Представление, """") КАК КонтактнаяИнформацияАдресЭП,
	|	ЕСТЬNULL(ПользователиКонтактнаяИнформация2.Представление, """") КАК КонтактнаяИнформацияТелефон,
	|	ЕСТЬNULL(торо_ОбъектыРемонта.проф_VIN, """") КАК проф_VIN,
	|	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Модель, НЕОПРЕДЕЛЕНО) КАК проф_Модель,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	ЕСТЬNULL(торо_ОбъектыРемонта.Ссылка, ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)) КАК ОбъектРемонта,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,   
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,   
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,   
	|	ЕСТЬNULL(торо_ОбъектыРемонта.Наименование, """") КАК Наименование
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот КАК торо_АктОВыполненииЭтапаРабот
	|		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = торо_АктОВыполненииЭтапаРабот.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	|		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка          
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация1
	|		ПО торо_АктОВыполненииЭтапаРабот.Ответственный = ПользователиКонтактнаяИнформация1.Ссылка
	|		И ПользователиКонтактнаяИнформация1.Тип = &ТипЭП  
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация2
	|		ПО торо_АктОВыполненииЭтапаРабот.Ответственный = ПользователиКонтактнаяИнформация2.Ссылка
	|		И ПользователиКонтактнаяИнформация2.Тип = &ТипТел
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&ID)";
	
	//++ Проф-ИТ, #324, Соловьев А.А., 03.11.2023
	ТекстЗапроса = ТекстЗапроса + Символы.ПС;
	
	Если ЗаказНарядСводно Тогда
		
		ТекстЗапроса = ТекстЗапроса + 
		"ИТОГИ
		|	МАКСИМУМ(Номер),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Подразделение),   
		|	МАКСИМУМ(Наименование),
		|	МАКСИМУМ(проф_VIN),
		|	МАКСИМУМ(проф_Модель),     
		|	МАКСИМУМ(КонтактнаяИнформацияАдресЭП),
		|	МАКСИМУМ(КонтактнаяИнформацияТелефон),
		|	МАКСИМУМ(ВидРемонтныхРабот), 
		|	МИНИМУМ(ДатаНачала),
		|	МАКСИМУМ(ДатаОкончания),
		|	МАКСИМУМ(ID)
		|ПО
		|	Ссылка,
		|	ОбъектРемонта";
		
	Иначе
		
		ТекстЗапроса = ТекстЗапроса + 
		"ИТОГИ
		|	МАКСИМУМ(Номер),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Подразделение),   
		|	МАКСИМУМ(Наименование),
		|	МАКСИМУМ(проф_VIN),
		|	МАКСИМУМ(проф_Модель),     
		|	МАКСИМУМ(КонтактнаяИнформацияАдресЭП),
		|	МАКСИМУМ(КонтактнаяИнформацияТелефон),
		|	МАКСИМУМ(ВидРемонтныхРабот), 
		|	МАКСИМУМ(ДатаНачала),
		|	МАКСИМУМ(ДатаОкончания),
		|	МАКСИМУМ(ОбъектРемонта)
		|ПО
		|	Ссылка,
		|	ID";
		
	КонецЕсли;
		
	ТекстЗапроса = ТекстЗапроса + ";" + Символы.ПС +
	//-- Проф-ИТ, #324, Соловьев А.А., 03.11.2023
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА торо_НарядРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(торо_НарядРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное = """"
	|						ТОГДА ВЫРАЗИТЬ(торо_НарядРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).Наименование
	|					ИНАЧЕ ВЫРАЗИТЬ(торо_НарядРемонтныеРаботы.РемонтнаяРабота КАК Справочник.торо_ТехнологическиеОперации).НаименованиеПолное
	|				КОНЕЦ
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(торо_НарядРемонтныеРаботы.РемонтнаяРабота)
	|	КОНЕЦ КАК НаименованиеТехОперации,
	|	торо_НарядРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	|	ЕСТЬNULL(торо_ТехнологическиеОперации.НормаВремени, 0) КАК НормаВремени,
	|	торо_НарядРемонтныеРаботы.Ссылка КАК Наряд,
	|	торо_НарядРемонтныеРаботы.РемонтыОборудования_ID КАК ID,
	|	ЕСТЬNULL(торо_НарядРемонтыОборудования.ОбъектРемонта, ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)) КАК ОбъектРемонта,
	|	торо_НарядРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
	|	ЕСТЬNULL(Сотрудники.Наименование, """") КАК Исполнитель
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК торо_НарядРемонтныеРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.ТрудовыеЗатраты КАК торо_НарядИсполнители
	|		ПО торо_НарядРемонтныеРаботы.РемонтыОборудования_ID = торо_НарядИсполнители.РемонтыОборудования_ID
	|			И торо_НарядРемонтныеРаботы.ID = торо_НарядИсполнители.ID
	|			И торо_НарядРемонтныеРаботы.Ссылка = торо_НарядИсполнители.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_НарядРемонтыОборудования
	|		ПО торо_НарядРемонтныеРаботы.РемонтыОборудования_ID = торо_НарядРемонтыОборудования.ID
	|			И торо_НарядРемонтныеРаботы.Ссылка = торо_НарядРемонтыОборудования.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперации
	|		ПО торо_НарядРемонтныеРаботы.РемонтнаяРабота = торо_ТехнологическиеОперации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО (торо_НарядИсполнители.Сотрудник = Сотрудники.Ссылка)
	|ГДЕ
	|	торо_НарядРемонтныеРаботы.Ссылка В(&Ссылка)
	|	И торо_НарядРемонтныеРаботы.РемонтыОборудования_ID В(&ID)
	|	И торо_НарядРемонтныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_АктОВыполненииЭтапаРаботДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	торо_АктОВыполненииЭтапаРаботДокументыОснования.Ссылка КАК Наряд,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ЗаявкаНаРемонтДокументыОснования.ДокументОснование КАК ВыявленныйДефект
	|ПОМЕСТИТЬ СметыИД_Ремонтов
	|ИЗ
	|	Документ.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.ДокументыОснования КАК торо_ЗаявкаНаРемонтДокументыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_НарядНаВыполнениеРемонтныхРабот.ДокументыОснования КАК торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования
	|				ПРАВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.ДокументыОснования КАК торо_АктОВыполненииЭтапаРаботДокументыОснования
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|					ПО торо_АктОВыполненииЭтапаРаботДокументыОснования.Ссылка = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
	|				ПО торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования.Ссылка = торо_АктОВыполненииЭтапаРаботДокументыОснования.ДокументОснование
	|			ПО торо_НарядНаВыполнениеРемонтныхРаботДокументыОснования.ДокументОснование = торо_ЗаявкаНаРемонтДокументыОснования.Ссылка
	|		ПО торо_ВыявленныеДефекты.Ссылка = торо_ЗаявкаНаРемонтДокументыОснования.ДокументОснование
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботДокументыОснования.Ссылка В(&Ссылка)
	|	И торо_АктОВыполненииЭтапаРаботДокументыОснования.ДокументОснование ССЫЛКА Документ.торо_НарядНаВыполнениеРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ВыявленныеДефектыСписокДефектов.ДефектОписание КАК ДефектОписание,    
	|	торо_ВыявленныеДефекты.ДатаОбнаружения КАК ДатаОбнаружения,
	|	СметыИД_Ремонтов.ОбъектРемонта КАК ОбъектРемонта,
	|	СметыИД_Ремонтов.ID КАК ID,
	|	СметыИД_Ремонтов.Наряд КАК Наряд
	|ИЗ
	|	СметыИД_Ремонтов КАК СметыИД_Ремонтов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
	|		ПО СметыИД_Ремонтов.ID = торо_ВыявленныеДефектыСписокДефектов.ID
	|			И СметыИД_Ремонтов.ВыявленныйДефект = торо_ВыявленныеДефектыСписокДефектов.Ссылка      
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
	|		ПО СметыИД_Ремонтов.ВыявленныйДефект = торо_ВыявленныеДефекты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_АктМатериальныеЗатраты.Количество КАК Количество,
	|	торо_АктМатериальныеЗатраты.Номенклатура КАК Номенклатура,
	|	торо_АктМатериальныеЗатраты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ЕдиницаИзмеренияНоменклатуры,
	|	торо_АктМатериальныеЗатраты.РемонтыОборудования_ID КАК ID,
	|	торо_АктМатериальныеЗатраты.Ссылка КАК Наряд,
	|	РемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.МатериальныеЗатраты КАК торо_АктМатериальныеЗатраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО торо_АктМатериальныеЗатраты.Номенклатура = СправочникНоменклатура.Ссылка	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК РемонтыОборудования
	|		ПО торо_АктМатериальныеЗатраты.Ссылка = РемонтыОборудования.Ссылка
	|			И торо_АктМатериальныеЗатраты.РемонтыОборудования_ID = РемонтыОборудования.ID
	|ГДЕ
	|	торо_АктМатериальныеЗатраты.Ссылка В(&Ссылка)
	|	И торо_АктМатериальныеЗатраты.РемонтыОборудования_ID В(&ID)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_СерийныеЗапчасти.Количество,
	|	торо_СерийныеЗапчасти.Номенклатура,
	|	торо_СерийныеЗапчасти.ЕдиницаИзмерения,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	торо_СерийныеЗапчасти.РемонтыОборудования_ID,
	|	торо_СерийныеЗапчасти.Ссылка,
	|	РемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.СерийныеЗапчасти КАК торо_СерийныеЗапчасти
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО торо_СерийныеЗапчасти.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК РемонтыОборудования
	|		ПО торо_СерийныеЗапчасти.Ссылка = РемонтыОборудования.Ссылка
	|			И торо_СерийныеЗапчасти.РемонтыОборудования_ID = РемонтыОборудования.ID
	|ГДЕ
	|	торо_СерийныеЗапчасти.Ссылка В(&Ссылка)
	|	И торо_СерийныеЗапчасти.РемонтыОборудования_ID В(&ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ Различные
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОРсДатой
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка В(&Ссылка)
	|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&ID)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОРсДатой.ОбъектРемонта КАК ОбъектРемонта,
	|	МАКСИМУМ(торо_УчетНаработкиОборудования.Дата) КАК Дата,
	|	торо_НаработкаОбъектов.Показатель КАК Показатель,
	|	ОРсДатой.Ссылка КАК Наряд       
	|ПОМЕСТИТЬ ОРсДатойДокументаНаработки
	|ИЗ
	|	ОРсДатой КАК ОРсДатой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования.НаработкаОбъектов КАК торо_НаработкаОбъектов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования КАК торо_УчетНаработкиОборудования
	|			ПО торо_НаработкаОбъектов.Ссылка = торо_УчетНаработкиОборудования.Ссылка
	|		ПО ОРсДатой.ОбъектРемонта = торо_НаработкаОбъектов.Объект
	|			И ОРсДатой.ДатаНачала > торо_НаработкаОбъектов.ДатаРаботыПо
	|ГДЕ
	|	торо_УчетНаработкиОборудования.ПометкаУдаления = ЛОЖЬ
	|	И торо_НаработкаОбъектов.Показатель В(&Показатели)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОРсДатой.ОбъектРемонта,
	|	торо_НаработкаОбъектов.Показатель,
	|	ОРсДатой.Ссылка
	|;
	|   
	|////////////////////////////////////////////////////////////////////////////////             
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОРсДатой.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НаработкаОбъектов.НовоеЗначение КАК НовоеЗначение,
	|	торо_НаработкаОбъектов.Показатель КАК Показатель,
	|	ОРсДатой.Наряд КАК Наряд
	|ИЗ
	|	ОРсДатойДокументаНаработки КАК ОРсДатой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования.НаработкаОбъектов КАК торо_НаработкаОбъектов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_УчетНаработкиОборудования КАК торо_УчетНаработкиОборудования
	|			ПО торо_НаработкаОбъектов.Ссылка = торо_УчетНаработкиОборудования.Ссылка
	|		ПО ОРсДатой.ОбъектРемонта = торо_НаработкаОбъектов.Объект
	|			И ОРсДатой.Показатель = торо_НаработкаОбъектов.Показатель
	|			И ОРсДатой.Дата = торо_НаработкаОбъектов.Ссылка.Дата
	|ГДЕ
	|	торо_УчетНаработкиОборудования.ПометкаУдаления = ЛОЖЬ;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОРсДатой.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ВводНачальныхДанныхНаработкаОбъектыРемонта.Показатель КАК Показатель,
	|	торо_ВводНачальныхДанныхНаработкаОбъектыРемонта.Значение КАК Значение
	|ИЗ
	|	ОРсДатой КАК ОРсДатой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВводНачальныхДанных.НаработкаОбъектыРемонта КАК торо_ВводНачальныхДанныхНаработкаОбъектыРемонта
	|		ПО ОРсДатой.ОбъектРемонта = торо_ВводНачальныхДанныхНаработкаОбъектыРемонта.ОбъектРемонта
	|ГДЕ
	|	торо_ВводНачальныхДанныхНаработкаОбъектыРемонта.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И торо_ВводНачальныхДанныхНаработкаОбъектыРемонта.Показатель В(&Показатели)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция проф_ПолучитьНаработку(ОтборОР_Наряд2,
							   ОбъектРемонтаТек,
							   ТекНаряд,
							   ВыборкаНаработкаУчетНО,
							   ВыборкаНаработкаВводНД,
							   Пробег,
							   Моточасы)
		
	ОтборОР_Показатель = Новый Структура("ОбъектРемонта, Показатель");

	СтруктураНаработки = Новый Структура("ЗначениеПробег, ЗначениеМоточасы", 0, 0 );
	ЗначениеПробег = 0;
	ЗначениеМоточасы = 0;			
	
	ОтборОР_Наряд2.ОбъектРемонта = ОбъектРемонтаТек;
	ОтборОР_Наряд2.Наряд = ТекНаряд;
	Пока ВыборкаНаработкаУчетНО.НайтиСледующий(ОтборОР_Наряд2) Цикл				
		Если ВыборкаНаработкаУчетНО.Показатель = Пробег Тогда
			ЗначениеПробег   = ВыборкаНаработкаУчетНО.НовоеЗначение;					
		Иначе // Моточасы   
			ЗначениеМоточасы = ВыборкаНаработкаУчетНО.НовоеЗначение;		
		КонецЕсли;					
	КонецЦикла;	  
	ВыборкаНаработкаУчетНО.Сбросить();
	
	Если Не ЗначениеЗаполнено(ЗначениеПробег) Тогда
		// Возьмем значение из ввода начальных данных   
		ОтборОР_Показатель.ОбъектРемонта = ОбъектРемонтаТек;         
		ОтборОР_Показатель.Показатель = Пробег;
		
		СтрокиПоОР = ВыборкаНаработкаВводНД.НайтиСтроки(ОтборОР_Показатель);   
		Если СтрокиПоОР.Количество() Тогда     
			ЗначениеПробег = СтрокиПоОР[0].Значение;
		КонецЕсли;	
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЗначениеМоточасы) Тогда
		// Возьмем значение из ввода начальных данных   
		ОтборОР_Показатель.ОбъектРемонта = ОбъектРемонтаТек;         
		ОтборОР_Показатель.Показатель = Моточасы;
		
		СтрокиПоОР = ВыборкаНаработкаВводНД.НайтиСтроки(ОтборОР_Показатель);   
		Если СтрокиПоОР.Количество() Тогда     
			ЗначениеМоточасы = СтрокиПоОР[0].Значение;
		КонецЕсли;	
	КонецЕсли;
	
	СтруктураНаработки.ЗначениеПробег   = ЗначениеПробег;
	СтруктураНаработки.ЗначениеМоточасы = ЗначениеМоточасы;
	
	Возврат СтруктураНаработки;   
	
КонецФункции

Процедура проф_ПолучитьЗаполнитьОписаниеДефекта(ОтборОР_Наряд, ОписаниеДефектов, Макет, ТабДок)         
	
	ПричинаОбращения = Макет.ПолучитьОбласть("ПричинаОбращения");	
			
	СтрокиПоОР_Наряду = ОписаниеДефектов.НайтиСтроки(ОтборОР_Наряд);    
	Если СтрокиПоОР_Наряду.Количество() Тогда
		ОписаниеДефекта = СтрокиПоОР_Наряду[0].ДефектОписание;  
		ПричинаОбращения.Параметры.ОписаниеДефекта = ОписаниеДефекта;										
	КонецЕсли;
	
	ТабДок.Вывести(ПричинаОбращения);

КонецПроцедуры         

Процедура проф_ПолучитьЗаполнитьЗапчасти(ОтборОР_Наряд, Запчасти, Макет, ТабДок, Склад) 
	
	СтрокиПоОР_Наряду = Запчасти.НайтиСтроки(ОтборОР_Наряд);    
	
	Если СтрокиПоОР_Наряду.Количество() Тогда
		ЗапасныеЧастиШапка = Макет.ПолучитьОбласть("ЗапасныеЧастиШапка");     
		ТабДок.Вывести(ЗапасныеЧастиШапка);
		
		ЗапасныеЧастиСтрока = Макет.ПолучитьОбласть("ЗапасныеЧастиСтрока"); 
		Для Каждого Стр Из СтрокиПоОР_Наряду Цикл
			ЗаполнитьЗначенияСвойств(ЗапасныеЧастиСтрока.Параметры, Стр);   
			Если Не ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) Тогда    
				ЗапасныеЧастиСтрока.Параметры.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр.Номенклатура,"ЕдиницаИзмерения");	
			КонецЕсли;
			ЗапасныеЧастиСтрока.Параметры.Склад = Склад;
			ТабДок.Вывести(ЗапасныеЧастиСтрока);
		КонецЦикла;                              
	КонецЕсли;
	
КонецПроцедуры

Процедура проф_ПолучитьЗаполнитьРемонты(ОтборОР_Наряд, РемонтныеРаботы, Макет, ТабДок)
	
	СтрокиПоОР_Наряду = РемонтныеРаботы.НайтиСтроки(ОтборОР_Наряд);    
	
	Если СтрокиПоОР_Наряду.Количество() Тогда
		РаботыШапка = Макет.ПолучитьОбласть("РаботыШапка");      
		ТабДок.Вывести(РаботыШапка);
		
		РаботыСтрока = Макет.ПолучитьОбласть("РаботыСтрока");     
		Для Каждого Стр Из СтрокиПоОР_Наряду Цикл
			ЗаполнитьЗначенияСвойств(РаботыСтрока.Параметры, Стр);
			НормаВремени = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(Стр.НормаВремени);  
			РаботыСтрока.Параметры.Трудоемкость = ?(НормаВремени = "Ввести продолжительность", "0 ч", НормаВремени);
			ТабДок.Вывести(РаботыСтрока);
		КонецЦикла;
		
	КонецЕсли;;
	
КонецПроцедуры	

//-- Проф-ИТ, #85, Башинская А.Ю., 28.09.2023

//++ Проф-ИТ, #329, Соловьев А.А., 14.11.2023
Процедура проф_ДвиженияПоРегистру_проф_СоответствиеАктовИВнутреннегоПотребления(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка КАК АктОВыполненииЭтапаРабот,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ЗавершитьРемонт КАК ЗавершитьРемонт,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID
	|ПОМЕСТИТЬ втРемонты
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ЗавершитьРемонт,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ИнтеграцияДокументов.ДокументЕРП КАК Заказ,
	|	торо_ИнтеграцияДокументов.ID КАК ID
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	|ГДЕ
	|	торо_ИнтеграцияДокументов.ID В
	|			(ВЫБРАТЬ
	|				втРемонты.ID
	|			ИЗ
	|				втРемонты КАК втРемонты)
	|	И торо_ИнтеграцияДокументов.ДокументЕРП ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ИнтеграцияДокументов.ДокументЕРП КАК ВнутреннееПотребление,
	|	торо_ИнтеграцияДокументов.ID КАК ID
	|ПОМЕСТИТЬ ВсеДокументы
	|ИЗ
	|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	|ГДЕ
	|	торо_ИнтеграцияДокументов.ID В
	|			(ВЫБРАТЬ
	|				втРемонты.ID
	|			ИЗ
	|				втРемонты КАК втРемонты)
	|	И ТИПЗНАЧЕНИЯ(торо_ИнтеграцияДокументов.ДокументЕРП) = ТИП(Документ.ВнутреннееПотреблениеТоваров)
	|	И НЕ торо_ИнтеграцияДокументов.ДокументЕРП.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВнутреннееПотреблениеТоваров.Ссылка,
	|	Заказы.ID
	|ИЗ
	|	Заказы КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваров
	|		ПО Заказы.Заказ = ВнутреннееПотреблениеТоваров.ЗаказНаВнутреннееПотребление
	|ГДЕ
	|	НЕ ВнутреннееПотреблениеТоваров.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеДокументы.ВнутреннееПотребление КАК ВнутреннееПотребление,
	|	ВсеДокументы.ID КАК ID
	|ПОМЕСТИТЬ втВнутренниеПотребления
	|ИЗ
	|	ВсеДокументы КАК ВсеДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеДокументы.ВнутреннееПотребление,
	|	ВсеДокументы.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРемонты.АктОВыполненииЭтапаРабот КАК АктОВыполненииЭтапаРабот,
	|	ЕСТЬNULL(втВнутренниеПотребления.ВнутреннееПотребление, ЗНАЧЕНИЕ(Документ.ВнутреннееПотреблениеТоваров.ПустаяСсылка)) КАК ВнутреннееПотреблениеТоваров,
	|	МАКСИМУМ(втРемонты.ЗавершитьРемонт) КАК ЗавершитьРемонтныеРаботы,
	|	МАКСИМУМ(втРемонты.ДатаОкончания) КАК ДатаЗавершенияРемонта,
	|	МАКСИМУМ(втРемонты.ОбъектРемонта) КАК ОбъектРемонта
	|ИЗ
	|	втРемонты КАК втРемонты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВнутренниеПотребления КАК втВнутренниеПотребления
	|		ПО втРемонты.ID = втВнутренниеПотребления.ID
	|
	|СГРУППИРОВАТЬ ПО
	|	втРемонты.АктОВыполненииЭтапаРабот,
	|	ЕСТЬNULL(втВнутренниеПотребления.ВнутреннееПотребление, ЗНАЧЕНИЕ(Документ.ВнутреннееПотреблениеТоваров.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Набор = РегистрыСведений.проф_СоответствиеАктовИВнутреннегоПотребления.СоздатьНаборЗаписей();
	Набор.Отбор.АктОВыполненииЭтапаРабот.Установить(Ссылка);
	
	Пока Выборка.Следующий() Цикл
		
		Запись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
	КонецЦикла;
	
	Набор.Записать(Истина);
	
КонецПроцедуры
//-- Проф-ИТ, #329, Соловьев А.А., 14.11.2023

#КонецОбласти

#КонецОбласти

#КонецЕсли                  

     