
#Область ОбработчикиСобытий
	
&После("ОбработкаПроведения")
Процедура проф_ОбработкаПроведения(Отказ, РежимПроведения)
	
	//++ Проф-ИТ, #27, Соловьев А.А., 25.08.2023
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ФОИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	ФОИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеНедостачТоваров.Дата КАК Период,
	|	СписаниеНедостачТоваров.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	СписаниеНедостачТоваровТовары.Номенклатура КАК Номенклатура,
	|	СписаниеНедостачТоваровТовары.проф_Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьХарактеристики
	|			ТОГДА СписаниеНедостачТоваровТовары.Характеристика 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьСерии
	|			ТОГДА СписаниеНедостачТоваровТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	СУММА(СписаниеНедостачТоваровТовары.Количество) КАК ВНаличии
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваровТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|				ПО СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|					И (ВидыНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)))
	|			ПО СписаниеНедостачТоваровТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ПО СписаниеНедостачТоваров.Ссылка = СписаниеНедостачТоваровТовары.Ссылка
	|ГДЕ
	|	СписаниеНедостачТоваров.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеНедостачТоваров.Дата,
	|	СписаниеНедостачТоваров.Склад,
	|	СписаниеНедостачТоваровТовары.Номенклатура,
	|	СписаниеНедостачТоваровТовары.проф_Назначение,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьХарактеристики
	|			ТОГДА СписаниеНедостачТоваровТовары.Характеристика 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьСерии
	|			ТОГДА СписаниеНедостачТоваровТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ФОИспользоватьХарактеристики", ФОИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ФОИспользоватьСерии", ФОИспользоватьСерии);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	Движения.проф_ТоварыНаСкладах.Записывать = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ДвижениеРасход = Движения.проф_ТоварыНаСкладах.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеРасход, Выборка);
		
	КонецЦикла;
	
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.проф_Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьХарактеристики
	|			ТОГДА ТабТовары.Характеристика 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьСерии
	|			ТОГДА ТабТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ТоварыНаСкладахОстатки.Серия КАК Серия,
	|	ТоварыНаСкладахОстатки.Назначение КАК Назначение,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ПОМЕСТИТЬ ТоварыНаСкладах
	|ИЗ
	|	РегистрНакопления.проф_ТоварыНаСкладах.Остатки(&Дата, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Характеристика КАК Характеристика,
	|	ТабТовары.Серия КАК Серия,
	|	ЕСТЬNULL(ТоварыНаСкладах.ВНаличииОстаток, 0) КАК ВНаличииОстаток,
	|	ВЫРАЗИТЬ(ТабТовары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладах КАК ТоварыНаСкладах
	|		ПО ТабТовары.Номенклатура = ТоварыНаСкладах.Номенклатура
	|			И ТабТовары.Характеристика = ТоварыНаСкладах.Характеристика 
	|			И ТабТовары.Серия = ТоварыНаСкладах.Серия
	|			И ТабТовары.Назначение = ТоварыНаСкладах.Назначение";
	
	Запрос.УстановитьПараметр("Ссылка",	Ссылка);
	Запрос.УстановитьПараметр("Склад",	Склад);
	Запрос.УстановитьПараметр("Дата", Дата + 1);
	Запрос.УстановитьПараметр("ФОИспользоватьХарактеристики", ФОИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ФОИспользоватьСерии", ФОИспользоватьСерии);  
	
	Выборка = Запрос.Выполнить().Выбрать();   		
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ВНаличииОстаток < 0 Тогда
			
			ШаблонСообщения = "Номенклатура %Номенклатура% / %Характеристика% / %Серия%.
				|Превышен свободный остаток товара на складе %Склад% на %Количество% %ЕдИзм%";
			
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Номенклатура%",     Выборка.Номенклатура);				
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Склад%", Склад);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Количество%",       - Число(Выборка.ВналичииОстаток));
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%ЕдИзм%",            Выборка.ЕдиницаИзмерения);
			
			Если ФОИспользоватьСерии Тогда
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Серия%", Выборка.Серия);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Серия%", "");
			КонецЕсли;
			
			Если ФОИспользоватьХарактеристики Тогда
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Характеристика%", Выборка.Характеристика);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Характеристика%", "");
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения, ЭтотОбъект, "Склад",, Отказ);
			
		КонецЕсли;
	КонецЦикла;	
	
	Если Не Константы.торо_ИспользоватьКонтрольОтрицательныхОстатков.Получить() Тогда
		Отказ = Ложь;
	КонецЕсли;
	//-- Проф-ИТ, #27, Соловьев А.А., 25.08.2023
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура проф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//++ Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
		проф_ОбщегоНазначенияВызовСервера.ПроверитьПризнакПодразделенияОрганизации(ЭтотОбъект["Подразделение"], Отказ);
	КонецЕсли;
	//-- Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	
КонецПроцедуры

#КонецОбласти