
#Область ОбработчикиСобытийФормы	

&НаСервере
Процедура проф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	МассивДобавляемыхРеквизитов = Новый Массив;
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("проф_ИнвентарныйУчет", Новый ОписаниеТипов("Булево"), 
		"Объект.Товары", "Инвентарный учет"));
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	//-- Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	
	//++ Проф-ИТ, issue_26, Ровенский О.В., 24.07.2023
	НовыйЭлемент = Элементы.Добавить("НаправлениеДеятельности", Тип("ПолеФормы"), Элементы.ШапкаПраво);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_НаправлениеДеятельности";	
	//-- Проф-ИТ, issue_26, Ровенский О.В., 24.07.2023
	
	//++ Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	НовыйЭлемент = Элементы.Добавить("проф_ДокументОснование", Тип("ПолеФормы"), ЭтотОбъект);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ДокументОснование";
	НовыйЭлемент.Гиперссылка = Истина;
	НовыйЭлемент.Видимость = ЗначениеЗаполнено(Объект.проф_ДокументОснование);
	НовыйЭлемент.УстановитьДействие("Нажатие", "проф_ДокументОснованиеНажатие");
	Элементы.Переместить(НовыйЭлемент, Элементы.Шапка, Элементы.ДатаНомер);
	
	НовыйЭлемент  = Элементы.Добавить("ТоварыНазначение", Тип("ПолеФормы"), Элементы.Товары);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;      
	НовыйЭлемент.ПутьКДанным = "Объект.Товары.проф_Назначение";
	НовыйЭлемент.ТолькоПросмотр = Истина;
	Элементы.Переместить(НовыйЭлемент, Элементы.Товары, Элементы.ТоварыУпаковкаЕдиницаИзмерения);
	//-- Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	
	//++ Проф-ИТ, #183, Соловьев А.А., 03.10.2023
	НовыйЭлемент = Элементы.Добавить("ХозяйственнаяОперация", Тип("ПолеФормы"), Элементы.ШапкаЛево);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.проф_ХозяйственнаяОперация";
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "проф_ХозяйственнаяОперацияПриИзменении");
	
	ТоварыКатегорииЭксплуатации = Элементы.Добавить("ТоварыКатегорииЭксплуатации", Тип("ПолеФормы"), Элементы.Товары);
	ТоварыКатегорииЭксплуатации.Вид = ВидПоляФормы.ПолеВвода;      
	ТоварыКатегорииЭксплуатации.ПутьКДанным = "Объект.Товары.проф_КатегорииЭксплуатации";
	ТоварыКатегорииЭксплуатации.УстановитьДействие("ПриИзменении", "проф_ТоварыКатегорииЭксплуатацииПриИзменении");
	
	//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023	
	ТоварыИнвентарныйНомер = Элементы.Добавить("ТоварыИнвентарныйНомер", Тип("ПолеФормы"), Элементы.Товары);
	ТоварыИнвентарныйНомер.Вид = ВидПоляФормы.ПолеФлажка;      
	ТоварыИнвентарныйНомер.ПутьКДанным = "Объект.Товары.проф_ИнвентарныйНомер";
	//-- Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	
	ТоварыФизическоеЛицо = Элементы.Добавить("ТоварыФизическоеЛицо", Тип("ПолеФормы"), Элементы.Товары);
	ТоварыФизическоеЛицо.Вид = ВидПоляФормы.ПолеВвода;      
	ТоварыФизическоеЛицо.ПутьКДанным = "Объект.Товары.проф_ФизическоеЛицо";
	
	Если Не ЗначениеЗаполнено(Объект.проф_ХозяйственнаяОперация) 
		Или Объект.проф_ХозяйственнаяОперация = Перечисления.проф_ХозяйственнаяОперация.СписаниеТоваровПоТребованию Тогда 
		ТоварыКатегорииЭксплуатации.Видимость = Ложь;
		ТоварыИнвентарныйНомер.Видимость      = Ложь;
		ТоварыФизическоеЛицо.Видимость        = Ложь;	
	КонецЕсли;
	//-- Проф-ИТ, #183, Соловьев А.А., 03.10.2023
	
	//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	проф_УстановитьУсловноеОформление();
	
	проф_ЗаполнитьТЧТоварыИнвентарныйУчет();
	//-- Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	
	//++ Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	проф_ОбщегоНазначенияВызовСервера.УстановитьПараметрВыбораПодразделения(Элементы);
	//-- Проф-ИТ, #401, Соловьев А.А., 11.12.2023
	
КонецПроцедуры

&НаКлиенте
Процедура проф_ПриОткрытииВместо(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	
	Если ЗначениеЗаполнено(ID) Тогда
		//++ Проф-ИТ, #183, Соловьев А.А., 15.09.2023
		//ПоказатьВопрос(Новый ОписаниеОповещения("ПривязатьСтрокиАктаКЗаказамВопрос", ЭтотОбъект), 
		//	НСтр("ru = 'Привязать строки к заказам на внутреннее потребление?'"), 
		//	РежимДиалогаВопрос.ДаНет);
		ПривязатьСтрокиАктаКЗаказамВопрос(КодВозвратаДиалога.Да, Неопределено);
		//-- Проф-ИТ, #183, Соловьев А.А., 15.09.2023	
	Иначе
			
		УстановитьДоступностьКнопокТоваров();
		СписокЗаказовСохраненный.ЗагрузитьЗначения(СписокЗаказов.ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура проф_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)

	//++ Проф-ИТ, #303, Корнилов М.С., 15.09.2023
	проф_ЗаполнитьТЧТоварыИнвентарныйУчет();
	//-- Проф-ИТ, #303, Корнилов М.С., 15.09.2023
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура проф_ДокументОснованиеНажатие(Элемент, СтандартнаяОбработка)

	//++ Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	ПоказатьЗначение(, Объект.проф_ДокументОснование);
	//-- Проф-ИТ, #27, Соловьев А.А., 24.08.2023
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ПодобратьЗаказы")
Процедура проф_ПодобратьЗаказы()
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	торо_ИнтеграцияДокументов.ДокументЕРП КАК Заказ
	|ПОМЕСТИТЬ Заказы
	|ИЗ
	|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	|ГДЕ
	|	торо_ИнтеграцияДокументов.ДокументЕРП ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
	|	И торо_ИнтеграцияДокументов.ID В (&ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	#Вставка
	//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
	|	ДокументЗаказНаВнутреннееПотребление.проф_НаправлениеДеятельности КАК проф_НаправлениеДеятельности,
	//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
	#КонецВставки
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Характеристика КАК Характеристика,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Склад КАК Склад,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Серия КАК Серия,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.КОформлениюОстаток КАК Количество,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	#Вставка
	//++ Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	|	ДокументЗаказНаВнутреннееПотребление.проф_Назначение КАК проф_Назначение,
	//-- Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	//++ Проф-ИТ, #316, Соловьев А.А., 31.10.2023
	|	ДокументЗаказНаВнутреннееПотребление.ДокументОснование КАК проф_ДокументОснование,
	//-- Проф-ИТ, #316, Соловьев А.А., 31.10.2023
	#КонецВставки
	|	ЗаказыНаВнутреннееПотреблениеОстатки.КодСтроки КАК КодСтроки
	|ИЗ
	|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	|			,
	|			ЗаказНаВнутреннееПотребление В
	|				(ВЫБРАТЬ
	|					Заказы.Заказ
	|				ИЗ
	|					Заказы)) КАК ЗаказыНаВнутреннееПотреблениеОстатки
	#Вставка
	//++ Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВнутреннееПотребление
	|		ПО ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление = ДокументЗаказНаВнутреннееПотребление.Ссылка
	//-- Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	#КонецВставки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление.ДатаОтгрузки";
	Запрос.УстановитьПараметр("ID", ID);
	РезЗапроса = Запрос.Выполнить();
	Если РезЗапроса.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'По выбранному ремонту/ремонтам не введены заказы на внутреннее потребление.'"));	
	Иначе
		Объект.ПотреблениеПоЗаказам = Истина;
		Заказы = РезЗапроса.Выгрузить();
		#Вставка
		//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
		Если Заказы.Количество() > 0 Тогда 
			ЗаполнитьЗначенияСвойств(Объект, Заказы[0]);
			//++ Проф-ИТ, #316, Соловьев А.А., 31.10.2023
			Если ЗначениеЗаполнено(Объект.проф_ДокументОснование) Тогда 
				Элементы["проф_ДокументОснование"].Видимость = Истина;
			КонецЕсли;
			//-- Проф-ИТ, #316, Соловьев А.А., 31.10.2023
			проф_Назначение = Заказы[0].проф_Назначение;
		Иначе
			проф_Назначение = Справочники.проф_Назначения.ПустаяСсылка();
		КонецЕсли;
		//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
		#КонецВставки
		Заказы.Индексы.Добавить("Номенклатура, Характеристика, Серия");
		КопияТЧТовары = Объект.Товары.Выгрузить();
		СтрокиДляУдаления = Новый Массив;
		ЕстьПривязанные = Ложь;
		Для Каждого СтрокаТЧ Из КопияТЧТовары Цикл
			НайденныеЗаказы = Заказы.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, Серия", 
			СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика, СтрокаТЧ.Серия));
			Если НайденныеЗаказы.Количество() = 1 Тогда
				ЕстьПривязанные = Истина;
				НайденнаяСтрока = НайденныеЗаказы[0];	
				СтрокаИсходнойТЧ = Объект.Товары[КопияТЧТовары.Индекс(СтрокаТЧ)];
				Если СтрокаИсходнойТЧ.Количество > НайденнаяСтрока.Количество Тогда  
					НоваяСтрокаТЧ = Объект.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаИсходнойТЧ);
					Количество = СтрокаИсходнойТЧ.Количество - НайденнаяСтрока.Количество; 
					НоваяСтрокаТЧ.Количество = Количество;
					НоваяСтрокаТЧ.КоличествоУпаковок = Количество;
					НоваяСтрокаТЧ.РасхождениеЗаказ = 1;	
					#Вставка
					//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
					НоваяСтрокаТЧ.проф_Назначение = НайденнаяСтрока.проф_Назначение;
					//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
					#КонецВставки
				КонецЕсли;
				СтрокаИсходнойТЧ.ЗаказНаВнутреннееПотребление = НайденнаяСтрока.ЗаказНаВнутреннееПотребление;
				СтрокаИсходнойТЧ.КодСтроки = НайденнаяСтрока.КодСтроки;
				СтрокаИсходнойТЧ.Количество = НайденнаяСтрока.Количество;
				СтрокаИсходнойТЧ.КоличествоУпаковок = НайденнаяСтрока.Количество;
				#Вставка
				//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
				СтрокаИсходнойТЧ.проф_Назначение = НайденнаяСтрока.проф_Назначение;
				//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
				#КонецВставки
			ИначеЕсли НайденныеЗаказы.Количество() > 0 Тогда 
				КоличествоВАкте = СтрокаТЧ.Количество;
				ЕстьПривязанные = Истина;
				Для Каждого Заказ Из НайденныеЗаказы Цикл 
					Если КоличествоВАкте <= 0 Тогда 
						Прервать;
					КонецЕсли;
					НоваяСтрокаТЧ = Объект.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЧ);
					НоваяСтрокаТЧ.ЗаказНаВнутреннееПотребление = Заказ.ЗаказНаВнутреннееПотребление;
					НоваяСтрокаТЧ.КодСтроки = Заказ.КодСтроки;
					Количество = Мин(КоличествоВАкте, Заказ.Количество);
					#Вставка
					//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
					НоваяСтрокаТЧ.проф_Назначение = Заказ.проф_Назначение;
					//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
					#КонецВставки
					НоваяСтрокаТЧ.Количество = Количество;
					НоваяСтрокаТЧ.КоличествоУпаковок = Количество; 
					КоличествоВАкте = КоличествоВАкте - Количество;
				КонецЦикла;
				Если КоличествоВАкте > 0 Тогда 
					ИсходнаяСтрокаТЧ = Объект.Товары[КопияТЧТовары.Индекс(СтрокаТЧ)]; 
					ИсходнаяСтрокаТЧ.Количество = КоличествоВАкте;
					ИсходнаяСтрокаТЧ.КоличествоУпаковок = КоличествоВАкте;
					ИсходнаяСтрокаТЧ.РасхождениеЗаказ = 1;
				Иначе
					СтрокиДляУдаления.Добавить(Объект.Товары[КопияТЧТовары.Индекс(СтрокаТЧ)]);
				КонецЕсли;
			Иначе
				Объект.Товары[КопияТЧТовары.Индекс(СтрокаТЧ)].РасхождениеЗаказ = 1;
				#Вставка
				//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
				Объект.Товары[КопияТЧТовары.Индекс(СтрокаТЧ)].проф_Назначение = проф_Назначение;
				//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
				#КонецВставки
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из СтрокиДляУдаления Цикл 
			Объект.Товары.Удалить(Строка);
		КонецЦикла;

		Если НЕ ЕстьПривязанные Тогда 
			Объект.ПотреблениеПоЗаказам = Ложь;
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось привязать строки к заказам на внутреннее потребление.'"));	
		КонецЕсли;

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура проф_ХозяйственнаяОперацияПриИзменении(Элемент)
	
	//++ Проф-ИТ, #183, Соловьев А.А., 21.09.2023
	ПередачаВЭксплуатацию = ПредопределенноеЗначение("Перечисление.проф_ХозяйственнаяОперация.ПередачаВЭксплуатацию");
	ЭтоПередачаВЭксплуатацию = (Объект.проф_ХозяйственнаяОперация = ПередачаВЭксплуатацию);
	//-- Проф-ИТ, #183, Соловьев А.А., 21.09.2023
	//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	Элементы["ТоварыКатегорииЭксплуатации"].Видимость = ЭтоПередачаВЭксплуатацию;
	Элементы["ТоварыИнвентарныйНомер"].Видимость      = ЭтоПередачаВЭксплуатацию;
	Элементы["ТоварыФизическоеЛицо"].Видимость        = ЭтоПередачаВЭксплуатацию;
	//-- Проф-ИТ, #303, Корнилов М.С., 13.10.2023
	
КонецПроцедуры

//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023
&НаКлиенте
Процедура проф_ТоварыКатегорииЭксплуатацииПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	ИнвентарныйУчет = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(
		ТекущаяСтрока.проф_КатегорииЭксплуатации, "ИнвентарныйУчет");
		
	ТекущаяСтрока.проф_ИнвентарныйУчет = ИнвентарныйУчет;
	
	Если ИнвентарныйУчет = Ложь Тогда 
		ТекущаяСтрока.проф_ИнвентарныйНомер = "";	
	КонецЕсли;
	
КонецПроцедуры
//-- Проф-ИТ, #303, Корнилов М.С., 13.10.2023

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023
&НаСервере
Процедура проф_УстановитьУсловноеОформление()
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыИнвентарныйНомер.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.проф_ИнвентарныйУчет");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<инвентарный номер не используются>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыИнвентарныйНомер.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.проф_ИнвентарныйУчет");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.проф_ИнвентарныйНомер");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "";

	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
		
КонецПроцедуры

&НаСервере
Процедура проф_ЗаполнитьТЧТоварыИнвентарныйУчет()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнутреннееПотреблениеТоваровТовары.НомерСтроки - 1 КАК ИндексСтроки
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_КатегорииЭксплуатации КАК Спр_КатегорииЭксплуатации
		|		ПО ВнутреннееПотреблениеТоваровТовары.проф_КатегорииЭксплуатации = Спр_КатегорииЭксплуатации.Ссылка
		|			И (Спр_КатегорииЭксплуатации.ИнвентарныйУчет = ИСТИНА)
		|ГДЕ
		|	ВнутреннееПотреблениеТоваровТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаТовары.Следующий() Цикл
		Объект.Товары[ВыборкаТовары.ИндексСтроки].проф_ИнвентарныйУчет = Истина;
	КонецЦикла;
	
КонецПроцедуры
//++ Проф-ИТ, #303, Корнилов М.С., 13.10.2023

#КонецОбласти 
