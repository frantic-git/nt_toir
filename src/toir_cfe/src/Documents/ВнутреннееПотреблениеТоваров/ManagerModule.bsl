
#Область ПрограммныйИнтерфейс

#Область Заполнение

&ИзменениеИКонтроль("ПолучитьРезультатЗапросаПоОстаткамЗаказов")
Функция проф_ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, Дата, МассивЗаказов)

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Регистратор",           ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",           ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Подразделение",         ДанныеОтбора.Подразделение);
	Запрос.УстановитьПараметр("Склад",                 ДанныеОтбора.Склад);
	Запрос.УстановитьПараметр("МассивЗаказов",         МассивЗаказов);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу",      МассивЗаказов <> Неопределено);

	Если Дата <> Неопределено И Дата <> '00010101' Тогда

		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ГраницаПериод", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));

	Иначе

		Запрос.УстановитьПараметр("Период", '00010101');
		Запрос.УстановитьПараметр("ГраницаПериод", Неопределено);

	КонецЕсли;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	торо_ИнтеграцияДокументов.ID КАК ID
	|ПОМЕСТИТЬ ВТ_РемонтыПоЗаявкам
	|ИЗ
	|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	|ГДЕ
	|	торо_ИнтеграцияДокументов.ДокументЕРП В(&МассивЗаказов)
	|	И торо_ИнтеграцияДокументов.ДокументЕРП.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(торо_ИнтеграцияДокументов.ДокументЕРП КАК Документ.ВнутреннееПотреблениеТоваров) КАК ДокументЕРП
	|ПОМЕСТИТЬ ВТ_СвязанныеПоРемонтуДокументы
	|ИЗ
	|	РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	|ГДЕ
	|	торо_ИнтеграцияДокументов.ID В
	|			(ВЫБРАТЬ
	|				ВТ_РемонтыПоЗаявкам.ID КАК ID
	|			ИЗ
	|				ВТ_РемонтыПоЗаявкам КАК ВТ_РемонтыПоЗаявкам)
	|	И торо_ИнтеграцияДокументов.ДокументЕРП ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|	И торо_ИнтеграцияДокументов.ДокументЕРП.Проведен = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаВнутреннееПотребление.Ссылка КАК Заказ
	|ПОМЕСТИТЬ ВТЗаказыОтбор
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтобратьПоЗаказу
	|				ТОГДА ЗаказНаВнутреннееПотребление.Ссылка В (&МассивЗаказов)
	|			ИНАЧЕ ЗаказНаВнутреннееПотребление.Подразделение = &Подразделение
	|					И ЗаказНаВнутреннееПотребление.Организация = &Организация
	|		КОНЕЦ
	|	И ЗаказНаВнутреннееПотребление.Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &Склад)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК ЗаказНаВнутреннееПотребление,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.КодСтроки КАК КодСтроки,
	|	МАКСИМУМ(Товары.Упаковка) КАК Упаковка,
	#Вставка
	//++ Проф-ИТ, #183, Соловьев А.А., 03.10.2023
	|	Товары.проф_КатегорииЭксплуатации КАК проф_КатегорииЭксплуатации,
	|	Товары.проф_ФизическоеЛицо КАК проф_ФизическоеЛицо,
	//-- Проф-ИТ, #183, Соловьев А.А., 03.10.2023
	#КонецВставки
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Заказ
	|			ИЗ
	|				ВТЗаказыОтбор КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.КодСтроки,
	#Вставка
	//++ Проф-ИТ, #183, Соловьев А.А., 03.10.2023
	|	Товары.проф_КатегорииЭксплуатации,
	|	Товары.проф_ФизическоеЛицо,
	//-- Проф-ИТ, #183, Соловьев А.А., 03.10.2023
	#КонецВставки
	|	Товары.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ЗаказНаВнутреннееПотребление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ТаблицаЗаказы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика КАК Характеристика,
	|	ТаблицаЗаказы.КодСтроки КАК КодСтроки,
	|	СУММА(ТаблицаЗаказы.КОформлению) КАК Количество,
	|	ТаблицаЗаказы.Серия КАК Серия
	|ПОМЕСТИТЬ ТаблицаОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика КАК Характеристика,
	|		ЗаказыОстатки.КодСтроки КАК КодСтроки,
	|		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению,
	|		ЗаказыОстатки.Серия КАК Серия
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	|				&ГраницаПериод,
	|				ЗаказНаВнутреннееПотребление В
	|					(ВЫБРАТЬ
	|						Т.Заказ
	|					ИЗ
	|						ВТЗаказыОтбор КАК Т)) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.ЗаказНаВнутреннееПотребление,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.КодСтроки,
	|		ВЫБОР
	|			КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЗаказыДвижения.КОформлению
	|			ИНАЧЕ ЗаказыДвижения.КОформлению
	|		КОНЕЦ,
	|		ЗаказыДвижения.Серия
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.ЗаказНаВнутреннееПотребление В
	|				(ВЫБРАТЬ
	|					Т.Заказ
	|				ИЗ
	|					ВТЗаказыОтбор КАК Т)
	|		И ЗаказыДвижения.Активность
	|		И ВЫБОР
	|				КОГДА &Период <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЗаказыДвижения.Период <= &Период
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ТаблицаЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказы.Номенклатура,
	|	ТаблицаЗаказы.Характеристика,
	|	ТаблицаЗаказы.КодСтроки,
	|	ТаблицаЗаказы.ЗаказНаВнутреннееПотребление,
	|	ТаблицаЗаказы.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаЗаказы.КОформлению) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ЗаказНаВнутреннееПотребление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ВнутреннееПотреблениеТоваровТовары.Характеристика КАК Характеристика,
	|	ВнутреннееПотреблениеТоваровТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВнутреннееПотреблениеТоваровТовары.Количество КАК Количество,
	|	ВнутреннееПотреблениеТоваровТовары.КодСтроки КАК КодСтроки,
	|	ВнутреннееПотреблениеТоваровТовары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_ЗаказанныеПоСвязанномуРемонту
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеПоРемонтуДокументы КАК ВТ_СвязанныеПоРемонтуДокументы
	|		ПО ВнутреннееПотреблениеТоваровТовары.Ссылка = ВТ_СвязанныеПоРемонтуДокументы.ДокументЕРП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ТаблицаОстатки.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика КАК Характеристика,
	|	ТаблицаОстатки.КодСтроки КАК КодСтроки,
	|	ТаблицаОстатки.Количество - ЕСТЬNULL(ВТ_ЗаказанныеПоСвязанномуРемонту.Количество, 0) КАК Количество,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Упаковка.Коэффициент КАК Коэффициент,
	#Вставка
	//++ Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	|	ТаблицаТовары.проф_КатегорииЭксплуатации КАК проф_КатегорииЭксплуатации,
	|	ТаблицаТовары.проф_ФизическоеЛицо КАК проф_ФизическоеЛицо,
	|	ДокументЗаказНаВнутреннееПотребление.проф_Назначение КАК проф_Назначение,
	//-- Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	#КонецВставки
	|	ТаблицаОстатки.Серия КАК Серия
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаОстатки.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки = ТаблицаТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказНаВнутреннееПотребление = ТаблицаТовары.ЗаказНаВнутреннееПотребление
	|			И ТаблицаОстатки.Серия = ТаблицаТовары.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказанныеПоСвязанномуРемонту КАК ВТ_ЗаказанныеПоСвязанномуРемонту
	|		ПО ТаблицаОстатки.Номенклатура = ВТ_ЗаказанныеПоСвязанномуРемонту.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ВТ_ЗаказанныеПоСвязанномуРемонту.Характеристика
	|			И ТаблицаОстатки.Серия = ВТ_ЗаказанныеПоСвязанномуРемонту.Серия
	#Вставка
	//++ Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВнутреннееПотребление
	|		ПО ТаблицаОстатки.ЗаказНаВнутреннееПотребление = ДокументЗаказНаВнутреннееПотребление.Ссылка
	//-- Проф-ИТ, #27, Соловьев А.А., 28.08.2023
	#КонецВставки
	|ГДЕ
	|	ТаблицаОстатки.Количество - ЕСТЬNULL(ВТ_ЗаказанныеПоСвязанномуРемонту.Количество, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказНаВнутреннееПотребление.Дата,
	|	ТаблицаОстатки.ЗаказНаВнутреннееПотребление,
	|	ТаблицаТовары.НомерСтроки";

	УстановитьПривилегированныйРежим(Истина);

	Возврат Запрос.Выполнить();

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

//++ Проф-ИТ, #132, Горетовская М.С., 21.09.2023 - ПФ и отчеты: Акт о списании расходных материалов, использованных для ТОиР
&После("ДобавитьКомандыПечати")
Процедура проф_ДобавитьКомандыПечати(КомандыПечати)
	
	//проф_АктОСписанииРасходныхМатериалов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "проф_АктОСписанииРасходныхМатериалов";
	КомандаПечати.Представление = НСтр("ru = 'Акт о списании расходных материалов, использованных для ТОиР'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	//++ Проф-ИТ, #366, Соловьев А.А., 22.11.2023
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//-- Проф-ИТ, #366, Соловьев А.А., 22.11.2023
	
КонецПроцедуры

&После("Печать")
Процедура проф_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_АктОСписанииРасходныхМатериалов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"проф_АктОСписанииРасходныхМатериалов",
			НСтр("ru = 'Акт о списании расходных материалов, использованных для ТОиР'"),
			проф_ПечатьАктОСписанииРасходныхМатериалов(МассивОбъектов, ПараметрыПечати));
	КонецЕсли;
	
	//++ Проф-ИТ, #366, Соловьев А.А., 22.11.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"М11",
			НСтр("ru = 'Требование-накладная (М-11)'"),
			проф_ПечатьМ11(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	//-- Проф-ИТ, #366, Соловьев А.А., 22.11.2023
	
КонецПроцедуры

Функция проф_ПечатьАктОСписанииРасходныхМатериалов(МассивОбъектов, ПараметрыПечати)

	ОбработкаПечати = Обработки.проф_АктОСписанииРасходныхМатериаловДляТОиР.Создать();
	Возврат ОбработкаПечати.ПечатьАктОСписании(МассивОбъектов, ПараметрыПечати);

КонецФункции
//-- Проф-ИТ, #132, Горетовская М.С., 21.09.2023 - ПФ и отчеты: Акт о списании расходных материалов, использованных для ТОиР

//++ Проф-ИТ, #366, Соловьев А.А., 22.11.2023
Функция проф_ПечатьМ11(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК Ссылка,
	|	ВнутреннееПотреблениеТоваров.Номер КАК НомерДокумента,
	|	ВнутреннееПотреблениеТоваров.Дата КАК ДатаДокумента,
	|	СправочникОрганизации.Представление КАК Организация,
	|	Склады.Представление КАК Склад,
	|	ВнутреннееПотреблениеТоваров.Подразделение КАК Подразделение,
	|	Склады.ТекущийОтветственный.Представление КАК Ответственный,
	|	Склады.ТекущаяДолжностьОтветственного.Представление КАК ДолжностьОтветственного,
	|	СправочникОрганизации.торо_НаименованиеСокращенное КАК Наименование,
	|	СправочникОрганизации.КодПоОКПО КАК КодОКПО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СправочникОрганизации.ИНН, """") = """"
	|			ТОГДА """"
	|		ИНАЧЕ "", ИНН "" + ЕСТЬNULL(СправочникОрганизации.ИНН, """")
	|	КОНЕЦ КАК ИНН,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(АдресОрганизации.Представление, """") = """"
	|			ТОГДА """"
	|		ИНАЧЕ "", "" + АдресОрганизации.Представление
	|	КОНЕЦ КАК ЮридическийАдрес
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ВнутреннееПотреблениеТоваров.Склад = Склады.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК СправочникОрганизации
	|		ПО ВнутреннееПотреблениеТоваров.Организация = СправочникОрганизации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК АдресОрганизации
	|		ПО ВнутреннееПотреблениеТоваров.Организация = АдресОрганизации.Ссылка
	|			И (АдресОрганизации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (АдресОрганизации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка КАК Ссылка,
	|	СправочникНоменклатура.НаименованиеПолное КАК Номенклатура,
	|	СправочникНоменклатура.Артикул КАК Артикул,
	|	СУММА(ВнутреннееПотреблениеТоваровТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ВнутреннееПотреблениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ЕдиницыИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА ВнутреннееПотреблениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ЕдиницыИзмерения.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВнутреннееПотреблениеТоваровТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|			ПО УпаковкиНоменклатуры.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
	|		ПО ВнутреннееПотреблениеТоваровТовары.Упаковка = УпаковкиНоменклатуры.Ссылка
	|ГДЕ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	СправочникНоменклатура.Артикул,
	|	ВЫБОР
	|		КОГДА ВнутреннееПотреблениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ЕдиницыИзмерения.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВнутреннееПотреблениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ЕдиницыИзмерения.Код
	|	КОНЕЦ,
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка,
	|	СправочникНоменклатура.НаименованиеПолное";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М11";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам = МассивРезультатов[0].Выбрать();
	ВыборкаТовары 		= МассивРезультатов[1].Выбрать();
	
	МакетПечати = ПолучитьМакет("ПФ_MXL_М11");
	
	ОбластьШапка 		= МакетПечати.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок	= МакетПечати.ПолучитьОбласть("Заголовок");
	ОбластьСтрока		= МакетПечати.ПолучитьОбласть("Строка");
	ОбластьПодвал		= МакетПечати.ПолучитьОбласть("Подвал");
	
	ПервыйДокумент = Истина;
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ПредставлениеОрганизации = ВыборкаПоДокументам.Организация + ВыборкаПоДокументам.ИНН + ВыборкаПоДокументам.ЮридическийАдрес;
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.НомерДокумента, Истина, Истина);
		ОбластьШапка.Параметры.ДатаСоставления = Формат(ВыборкаПоДокументам.ДатаДокумента, "ДЛФ=Д");
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ВысотаТаблицы = ТабличныйДокумент.ВысотаТаблицы + 2;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Пока ВыборкаТовары.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
			Если ТабличныйДокумент.ПроверитьВывод(ОбластьПодвал) Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			Иначе
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли;
			
		КонецЦикла;
		
		ВыборкаТовары.Сбросить();
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		
		Если ТабличныйДокумент.ПроверитьВывод(ОбластьПодвал) Тогда
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
//-- Проф-ИТ, #366, Соловьев А.А., 22.11.2023

#КонецОбласти

#КонецОбласти
