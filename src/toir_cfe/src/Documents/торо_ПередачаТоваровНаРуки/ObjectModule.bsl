
#Область ОбработчикиСобытий
	
&После("ОбработкаПроведения")
Процедура проф_ОбработкаПроведения(Отказ, РежимПроведения)
	
	//++ Проф-ИТ, #27, Соловьев А.А., 25.08.2023
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
	
	ФОИспользоватьСерии = Константы.ИспользоватьСерииНоменклатуры.Получить();
	ФОИспользоватьХарактеристики = Константы.торо_ИспользоватьХарактеристикиНоменклатуры.Получить();
	ИспользоватьКонтрольОстатков = Константы.торо_ИспользоватьКонтрольОтрицательныхОстатков.Получить();
	
	Блокировка = Новый БлокировкаДанных;

	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.проф_ТоварыНаСкладах");
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Серия", "Серия");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Назначение", "проф_Назначение");

	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ПередачаТоваровНаРуки.Дата КАК Период,
	|	торо_ПередачаТоваровНаРуки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьХарактеристики
	|			ТОГДА ТабличнаяЧасть.Характеристика 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ФОИспользоватьСерии
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТабличнаяЧасть.Склад КАК Склад,
	|	ТабличнаяЧасть.проф_Назначение КАК Назначение,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ 
	|	Документ.торо_ПередачаТоваровНаРуки КАК торо_ПередачаТоваровНаРуки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПередачаТоваровНаРуки.Товары КАК ТабличнаяЧасть 
	|		ПО торо_ПередачаТоваровНаРуки.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	торо_ПередачаТоваровНаРуки.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_ПередачаТоваровНаРуки.Дата,
	|	торо_ПередачаТоваровНаРуки.ЗаказНаВнутреннееПотребление,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Склад,
	|	ТабличнаяЧасть.проф_Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ТоварыНаСкладахОстатки.Склад КАК Склад,
	|	ТоварыНаСкладахОстатки.Серия КАК Серия,
	|	ТоварыНаСкладахОстатки.Назначение КАК Назначение,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ПОМЕСТИТЬ ТоварыНаСкладах
	|ИЗ
	|	РегистрНакопления.проф_ТоварыНаСкладах.Остатки(
	|			&Дата,
	|			(Номенклатура, Характеристика, Серия, Склад, Назначение) В
	|				(ВЫБРАТЬ
	|					Таблица.Номенклатура,
	|					Таблица.Характеристика,
	|					Таблица.Серия,
	|					Таблица.Склад,
	|					Таблица.Назначение
	|				ИЗ
	|					ТабТовары КАК Таблица)) КАК ТоварыНаСкладахОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Характеристика КАК Характеристика,
	|	ТабТовары.Склад КАК Склад,
	|	ТабТовары.Серия КАК Серия,
	|	ТабТовары.Назначение КАК Назначение,
	|	ТабТовары.Количество КАК Количество,
	|	ЕСТЬNULL(ТоварыНаСкладах.ВНаличииОстаток, 0) КАК СвобОстаток,
	|	ТабТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыНаСкладах КАК ТоварыНаСкладах
	|		ПО ТабТовары.Номенклатура = ТоварыНаСкладах.Номенклатура
	|			И ТабТовары.Характеристика = ТоварыНаСкладах.Характеристика
	|			И ТабТовары.Серия = ТоварыНаСкладах.Серия
	|			И ТабТовары.Склад = ТоварыНаСкладах.Склад
	|			И ТабТовары.Назначение = ТоварыНаСкладах.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабТовары.Номенклатура,
	|	ТабТовары.Характеристика,
	|	ТабТовары.Склад,
	|	ТабТовары.Серия,
	|	ТабТовары.Назначение,
	|	ТабТовары.ЗаказНаВнутреннееПотребление,
	|	ТоварыНаСкладах.ВНаличииОстаток,
	|	ТабТовары.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.Склад КАК Склад,
	|	Остатки.Характеристика КАК Характеристика,
	|	Остатки.Серия КАК Серия,
	|	Остатки.Назначение КАК Назначение,
	|	Остатки.СвобОстаток - Остатки.Количество КАК ОтрОстаток,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Остатки КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Остатки.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	Остатки.СвобОстаток - Остатки.Количество < 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ФОИспользоватьХарактеристики", ФОИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ФОИспользоватьСерии", ФОИспользоватьСерии);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	РезЗапроса = Запрос.Выполнить();
	
	Если Не РезЗапроса.Пустой() Тогда 
		
		ВыборкаОтрОстатков = РезЗапроса.Выбрать();
		
		Если ИспользоватьКонтрольОстатков Тогда
			ПолеДляВыводаОшибки = "Склад";
		Иначе
			ПолеДляВыводаОшибки = "";
		КонецЕсли; 
		
		Пока ВыборкаОтрОстатков.Следующий() Цикл
			
			ШаблонСообщения = "Номенклатура %Номенклатура% / %Характеристика% / %Серия% %Назначение%.
				|Превышен свободный остаток товара на складе %СкладОтправитель% на %Количество% %ЕдИзм%";
			
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", ВыборкаОтрОстатков.Номенклатура);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Назначение%", ВыборкаОтрОстатков.Назначение);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%СкладОтправитель%", ВыборкаОтрОстатков.Склад);
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Количество%", - Число(ВыборкаОтрОстатков.ОтрОстаток));
			ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%ЕдИзм%", ВыборкаОтрОстатков.ЕдиницаИзмерения);
			
			Если ФОИспользоватьСерии Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, "%Серия%", ВыборкаОтрОстатков.Серия);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Серия%", "");
			КонецЕсли;
			
			Если ФОИспользоватьХарактеристики Тогда 				
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения,"%Характеристика%", ВыборкаОтрОстатков.Характеристика);
			Иначе 
				ШаблонСообщения = СтрЗаменить(ШаблонСообщения, " / %Характеристика%", "");
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ШаблонСообщения, ЭтотОбъект, ПолеДляВыводаОшибки, , Отказ);
			
		КонецЦикла;
		
		Если Отказ И ИспользоватьКонтрольОстатков Тогда 
			Возврат;
		ИначеЕсли НЕ ИспользоватьКонтрольОстатков Тогда  
			Отказ = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабТовары.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Характеристика КАК Характеристика,
	|	ТабТовары.Количество КАК ВНаличии,
	|	ТабТовары.Серия КАК Серия,
	|	ТабТовары.Склад КАК Склад,
	|	ТабТовары.Назначение КАК Назначение
	|ИЗ
	|	ТабТовары КАК ТабТовары";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;	

	Движения.проф_ТоварыНаСкладах.Записывать = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДвижениеРасход = Движения.проф_ТоварыНаСкладах.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеРасход, Выборка);
	КонецЦикла;
	//-- Проф-ИТ, #27, Соловьев А.А., 25.08.2023
	
КонецПроцедуры

#КонецОбласти