#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции	

&После("ДобавитьКомандыПечати")
Процедура проф_ДобавитьКомандыПечати(КомандыПечати)
	
	//++ Проф-ИТ, #79, Карпов Д.Ю.,18.09.2023
	// Ведомость дефектов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты";
	КомандаПечати.Идентификатор = "проф_ВедомостьДефектов";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость дефектов'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
	//-- Проф-ИТ, #79, Карпов Д.Ю.,18.09.2023
	
	//++ Проф-ИТ, #133, Антонов Б.Л.,18.09.2023
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты";
	КомандаПечати.Идентификатор = "проф_АктСлужебногоРасследования";
	КомандаПечати.Представление = НСтр("ru = 'Акт служебного расследования по факту аварийного отказа АТ и ДСТ'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ПечатьДокументовБезПредварительногоПросмотра", Ложь);
	//-- Проф-ИТ, #133, Антонов Б.Л.,18.09.2023  
	
КонецПроцедуры

&После("Печать") 
Процедура проф_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) 
	
	//++ Проф-ИТ, #79, Карпов Д.Ю.,18.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_ВедомостьДефектов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
															"проф_ВедомостьДефектов", 
															"Ведомость дефектов", 
															ПРОФ_ПечатьВедомостьДефектов(МассивОбъектов, ПараметрыПечати),
															,
															"Документ.торо_ВыявленныеДефекты.проф_ВедомостьДефектов");
		
	КонецЕсли;
	//-- Проф-ИТ, #79, Карпов Д.Ю.,18.09.2023
	
	//++ Проф-ИТ, #133, Антонов Б.Л.,18.09.2023
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "проф_АктСлужебногоРасследования") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
															"проф_АктСлужебногоРасследования", 
															"Акт служебного расследования по факту аварийного отказа АТ и ДСТ", 
															проф_ПечатьАктаСлужебногоРасследования(МассивОбъектов, ПараметрыПечати),
															,
															"Документ.торо_ВыявленныеДефекты.проф_АктСлужебногоРасследования");
		
	КонецЕсли;
	//-- Проф-ИТ, #133, Антонов Б.Л.,18.09.2023  
КонецПроцедуры

//++ Проф-ИТ, #79, Карпов Д.Ю.,18.09.2023

Функция проф_ПечатьВедомостьДефектов(МассивОбъектов, ПараметрыПечати) 
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.Текст = ТекстЗапросаОбъектыРемонтаИСостоянияПечатьВедомостьДефектов();	
    Результат = Запрос.ВыполнитьПакет();
	Если Результат[3].Пустой() Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	ВыборкаОР = Результат[3].Выбрать();   
	ВыборкаСостоянияОР = Результат[2].Выбрать();
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.Текст = ТекстЗапросаПечатьВедомостьДефектов();
	Результат = Запрос.ВыполнитьПакет();	             
	
	ДанныеОРемонте 						= ?(НЕ Результат[1].Пустой(), Результат[1].Выбрать(), Неопределено); 
	ДанныеОДефекте 						= ?(НЕ Результат[2].Пустой(), Результат[2].Выбрать(), Неопределено);
	ВыборкаПлановыеМатериальныеЗатраты  = ?(НЕ Результат[3].Пустой(), Результат[3].Выбрать(), Неопределено); 
	ВыборкаРемонтныеРаботы              = ?(НЕ Результат[4].Пустой(), Результат[4].Выбрать(), Неопределено); 
	ВыборкаПлановыеЗатратыЗапчастей		= ?(НЕ Результат[5].Пустой(), Результат[5].Выбрать(), Неопределено);	
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПРОФ_ВедомостьДефектов"; 
	ПерваяСтраница = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.торо_ВыявленныеДефекты.проф_ВедомостьДефектов"); 

	Счетчик = 1;
	Пока ВыборкаОР.Следующий() Цикл
		
		Если Не ПерваяСтраница Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		
		ПерваяСтраница = Ложь;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ОбъектРемонта", ВыборкаОР.ОбъектРемонта);
		СтруктураПоиска.Вставить("ПодразделениеИсполнитель", ВыборкаОР.ПодразделениеИсполнитель);
        СтруктураПоиска.Вставить("ДокументДефект", ВыборкаОР.ДокументДефект);
		
		Область = Макет.ПолучитьОбласть("ОбластьШапка");  		
		 
		Если ДанныеОРемонте <> Неопределено Тогда
			ДанныеОРемонте.НайтиСледующий(СтруктураПоиска);
			Область.Параметры.ОписаниеТС = ДанныеОРемонте.НаименованиеОР + ", "
											+ ДанныеОРемонте.МаркаОР + ", "
											+ ДанныеОРемонте.МодельОР;
			Область.Параметры.ГосРегЗнак = ДанныеОРемонте.ГосномерОР; 
			Область.Параметры.ИДНомер 	 = ДанныеОРемонте.ЗаводскойНомерОР;
		 	Область.Параметры.ГодВыпуска = Формат(ДанныеОРемонте.ДатаВыпускаОР, "ДФ=yyyy");
			Область.Параметры.ПробегНаработка = ДанныеОРемонте.Пробег +" ; "+ ДанныеОРемонте.Наработка;
			ДанныеОРемонте.Сбросить();
		КонецЕсли;
		
		Если ДанныеОДефекте <> Неопределено Тогда
			
			ДанныеОДефекте.НайтиСледующий(СтруктураПоиска);
			Область.Параметры.ОписаниеДефекта = Строка(Формат(ДанныеОДефекте.ДатаОбнаружения,"ДФ=dd.MM.yyyy")) + ", выявлен в процессе: "
													+ ДанныеОДефекте.ДефектВыявленВПроцессе + ", "
													+ ДанныеОДефекте.ДефектПричина + ", "
													+ ДанныеОДефекте.ДефектОписание; 
			Область.Параметры.ПричинаДефекта =  ДанныеОДефекте.ДефектПричина;
			ДанныеОДефекте.Сбросить();
		КонецЕсли;
				
		Область.Параметры.НомерДокумента 	= ВыборкаОР.Номер;
		Область.Параметры.НомерСтрокиОР 	= Счетчик;
		Область.Параметры.ДатаДокумента 	= Формат(ВыборкаОР.Дата, "ДФ=dd.MM.yyyy");

		ТабличныйДокумент.Вывести(Область);
		Счетчик = Счетчик + 1;
		
		Область = Макет.ПолучитьОбласть("ОбластьСведенияУзловИАгрегатовНаДатуВыявления");
		Отбор = Новый Структура;
		Отбор.Вставить("ОбъектРемонта", ВыборкаОР.ОбъектРемонта);
		Отбор.Вставить("ДатаОбнаружения", ВыборкаОР.ДатаОбнаружения);
		ВыборкаСостоянияОР.НайтиСледующий(Отбор);
		Область.Параметры.ТекСостояниеОР = ВыборкаСостоянияОР.ВидЭксплуатации;
		ТабличныйДокумент.Вывести(Область);
        ВыборкаСостоянияОР.Сбросить();	
				
		Область = Макет.ПолучитьОбласть("ОбластьШапкаСведенияОТехСостоянииУзловИАгрегатов"); 
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("ОбластьТаблицаСведенияОТехСостоянии|ОбластьЛевая");
		ТабличныйДокумент.Вывести(Область);  
		
		ВывестиПлановыеМатериальныеЗатраты(ВыборкаПлановыеМатериальныеЗатраты, ТабличныйДокумент, СтруктураПоиска, Макет);
		 
		Область = Макет.ПолучитьОбласть("ОбластьПустаяСтрока|ОбластьПравая");
		ТабличныйДокумент.Присоединить(Область); 
		
		Область = Макет.ПолучитьОбласть("ОбластьТаблицаСведенияОТехСостоянии|ОбластьЛевая");
		ТабличныйДокумент.Вывести(Область); 
		
		ВывестиПлановыеЗатратыЗапчастейВедомостьДефектов(ВыборкаПлановыеЗатратыЗапчастей,
														 ТабличныйДокумент, СтруктураПоиска, Макет);
				
		Область = Макет.ПолучитьОбласть("ОбластьПустаяСтрока|ОбластьПравая");
		ТабличныйДокумент.Присоединить(Область);  
		
		Область = Макет.ПолучитьОбласть("ОбластьРаботыПоУстранениюНеисправностей|ОбластьЛевая");
		ТабличныйДокумент.Вывести(Область);   
		
		ВывестиРемонтныеРаботыВедомостьДефектов(ВыборкаРемонтныеРаботы, ТабличныйДокумент, СтруктураПоиска, Макет);
		
	    Область = Макет.ПолучитьОбласть("ОбластьПустаяСтрока|ОбластьПравая");
		ТабличныйДокумент.Присоединить(Область);
		
		Область = Макет.ПолучитьОбласть("ОбластьПодвал");    
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиПлановыеМатериальныеЗатраты(ВыборкаПлановыеМатериальныеЗатраты,
											 ТабличныйДокумент,
											 СтруктураПоиска,
											 Макет)

	Если ВыборкаПлановыеМатериальныеЗатраты <> Неопределено Тогда 
		Номер = 1;
		Пока ВыборкаПлановыеМатериальныеЗатраты.НайтиСледующий(СтруктураПоиска) Цикл 
			Область = Макет.ПолучитьОбласть("ОбластьТаблицаСведенияОТехСостоянии|ОбластьПравая");
			Область.Параметры.НомерСтроки = Номер;
			Область.Параметры.Наименование = ВыборкаПлановыеМатериальныеЗатраты.Номенклатура + ", "
												+ ВыборкаПлановыеМатериальныеЗатраты.ХарактеристикаНоменклатуры + ", "
												+ ВыборкаПлановыеМатериальныеЗатраты.Артикул + ", "
												+ Строка(ВыборкаПлановыеМатериальныеЗатраты.Количество)
												+ВыборкаПлановыеМатериальныеЗатраты.ЕдиницаИзмерения;
			Номер = Номер + 1; 
			ТабличныйДокумент.Присоединить(Область); 
			Область = Макет.ПолучитьОбласть("ОбластьПустаяСтрока|ОбластьЛевая");
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		ВыборкаПлановыеМатериальныеЗатраты.Сбросить();
	КонецЕсли; 	
	
КонецПроцедуры	

Процедура ВывестиПлановыеЗатратыЗапчастейВедомостьДефектов(ВыборкаПлановыеЗатратыЗапчастей,
														   ТабличныйДокумент,
														   СтруктураПоиска,
														   Макет)

	Если ВыборкаПлановыеЗатратыЗапчастей <> Неопределено Тогда
		Номер = 1;
		Пока ВыборкаПлановыеЗатратыЗапчастей.НайтиСледующий(СтруктураПоиска) Цикл
			Область = Макет.ПолучитьОбласть("ОбластьТаблицаСведенияОТехСостоянии|ОбластьПравая");
			Область.Параметры.НомерСтроки = Номер;
			Область.Параметры.Наименование = ВыборкаПлановыеЗатратыЗапчастей.Номенклатура + ", "
												+ ВыборкаПлановыеЗатратыЗапчастей.ХарактеристикаНоменклатуры + ", "
												+ ВыборкаПлановыеЗатратыЗапчастей.Артикул + ", "
												+ Строка(ВыборкаПлановыеЗатратыЗапчастей.Количество)
												+ ВыборкаПлановыеЗатратыЗапчастей.ЕдиницаИзмерения;
			Номер = Номер + 1;  
			ТабличныйДокумент.Присоединить(Область); 
			Область = Макет.ПолучитьОбласть("ОбластьПустаяСтрока|ОбластьЛевая");
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		ВыборкаПлановыеЗатратыЗапчастей.Сбросить();
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ВывестиРемонтныеРаботыВедомостьДефектов(ВыборкаРемонтныеРаботы, ТабличныйДокумент, СтруктураПоиска, Макет)
	
	Если ВыборкаРемонтныеРаботы <> Неопределено Тогда 
		Номер = 1;
		Пока ВыборкаРемонтныеРаботы.НайтиСледующий(СтруктураПоиска) Цикл
			Область = Макет.ПолучитьОбласть("ОбластьРаботыПоУстранениюНеисправностей|ОбластьПравая");
			Область.Параметры.НомерСтроки = Номер;
			Область.Параметры.Наименование = ВыборкаРемонтныеРаботы.РемонтнаяРабота;
			Номер = Номер + 1;  
			ТабличныйДокумент.Присоединить(Область); 
			Область = Макет.ПолучитьОбласть("ОбластьПустаяСтрока|ОбластьПравая");
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;	 
		ВыборкаРемонтныеРаботы.Сбросить();
	КонецЕсли;	
	
КонецПроцедуры

Функция ТекстЗапросаОбъектыРемонтаИСостоянияПечатьВедомостьДефектов()

	ТекстЗапроса = "ВЫБРАТЬ
		|	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ВыявленныеДефектыСписокДефектов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		|	торо_ВыявленныеДефекты.ДатаОбнаружения КАК ДатаОбнаружения,
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка КАК ДокументДефект,
		|	торо_ВыявленныеДефекты.Номер КАК Номер,
		|	торо_ВыявленныеДефекты.Дата КАК Дата,
		|	торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение КАК НаправлениеНаУстранение
		|ПОМЕСТИТЬ ВТ_ДанныеПоДокументу
		|ИЗ
		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
		|		ПО торо_ВыявленныеДефектыСписокДефектов.Ссылка = торо_ВыявленныеДефекты.Ссылка
		|ГДЕ
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка В(&Ссылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта,
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка,
		|	торо_ВыявленныеДефектыСписокДефектов.ПодразделениеИсполнитель,
		|	торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение,
		|	торо_ВыявленныеДефекты.ДатаОбнаружения,
		|	торо_ВыявленныеДефекты.Номер,
		|	торо_ВыявленныеДефекты.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоДокументу.ДатаОбнаружения КАК ДатаОбнаружения,
		|	ВТ_ДанныеПоДокументу.ОбъектРемонта КАК ОбъектРемонта,
		|	МАКСИМУМ(торо_ТекущееСостояниеОР.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследняяДатаСостояния
		|ИЗ
		|	ВТ_ДанныеПоДокументу КАК ВТ_ДанныеПоДокументу
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ТекущееСостояниеОР КАК торо_ТекущееСостояниеОР
		|		ПО ВТ_ДанныеПоДокументу.ОбъектРемонта = торо_ТекущееСостояниеОР.ОбъектРемонта
		|			И (торо_ТекущееСостояниеОР.Период < НАЧАЛОПЕРИОДА(ВТ_ДанныеПоДокументу.ДатаОбнаружения,ДЕНЬ))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеПоДокументу.ДатаОбнаружения,
		|	ВТ_ДанныеПоДокументу.ОбъектРемонта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоследняяДатаСостояния.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ПоследняяДатаСостояния.ДатаОбнаружения КАК ДатаОбнаружения,
		|	ЕСТЬNULL(торо_ТекущееСостояниеОР.ВидЭксплуатации, ЗНАЧЕНИЕ(Справочник.торо_ВидыЭксплуатации.ПустаяСсылка)) КАК ВидЭксплуатации
		|ИЗ
		|	ВТ_ПоследняяДатаСостояния КАК ВТ_ПоследняяДатаСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ТекущееСостояниеОР КАК торо_ТекущееСостояниеОР
		|		ПО ВТ_ПоследняяДатаСостояния.ОбъектРемонта = торо_ТекущееСостояниеОР.ОбъектРемонта
		|			И (торо_ТекущееСостояниеОР.Период = ВТ_ПоследняяДатаСостояния.Период)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеПоДокументу.ОбъектРемонта КАК ОбъектРемонта,
		|	ВТ_ДанныеПоДокументу.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		|	ВТ_ДанныеПоДокументу.ДатаОбнаружения КАК ДатаОбнаружения,
		|	ВТ_ДанныеПоДокументу.ДокументДефект КАК ДокументДефект,
		|	ВТ_ДанныеПоДокументу.Номер КАК Номер,
		|	ВТ_ДанныеПоДокументу.Дата КАК Дата,
		|	ВТ_ДанныеПоДокументу.НаправлениеНаУстранение КАК НаправлениеНаУстранение
		|ИЗ
		|	ВТ_ДанныеПоДокументу КАК ВТ_ДанныеПоДокументу";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаПечатьВедомостьДефектов()
	
	ТекстЗапроса =  "ВЫБРАТЬ
			|	торо_ВыявленныеДефекты.Ссылка КАК Документ,
			|	торо_ВыявленныеДефекты.ОбъектРемонта КАК ОбъектРемонта,
			|	торо_ВыявленныеДефекты.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
			|	торо_ВыявленныеДефекты.ID КАК ID,
			|	ЕСТЬNULL(торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка, ЗНАЧЕНИЕ(Документ.торо_ЗаявкаНаРемонт.ПустаяСсылка)) КАК ДокументЗаявка,
			|	ВыявленныеДефекты.проф_Пробег КАК Пробег,
			|	ВыявленныеДефекты.проф_Наработка КАК Наработка
			|ПОМЕСТИТЬ ВТ_ДанныеДефектов
			|ИЗ
			|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефекты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты КАК ВыявленныеДефекты
			|		ПО (ВыявленныеДефекты.Ссылка = торо_ВыявленныеДефекты.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
			|		ПО (торо_ВыявленныеДефекты.Ссылка = торо_ЗаявкаНаРемонтРемонтыОборудования.ДокументИсточник)
			|ГДЕ
			|	торо_ВыявленныеДефекты.Ссылка В(&Ссылка)

			|ИНДЕКСИРОВАТЬ ПО
			|	торо_ВыявленныеДефекты.Ссылка,
			|	ОбъектРемонта
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.Наименование КАК СТРОКА(150)) КАК НаименованиеОР,
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.проф_Марка КАК СТРОКА(100)) КАК МаркаОР,
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.проф_Модель КАК Справочник.проф_МоделиТСиОборудования) КАК МодельОР,
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.проф_Госномер КАК СТРОКА(12)) КАК ГосномерОР,
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.ЗаводскойНомер КАК СТРОКА(250)) КАК ЗаводскойНомерОР,
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.ДатаВыпуска КАК ДАТА) КАК ДатаВыпускаОР,
			|	ВТ_ДокументДефектов.ОбъектРемонта КАК ОбъектРемонта,
			|	ВТ_ДокументДефектов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
			|	ВТ_ДокументДефектов.Документ КАК ДокументДефект,
			|	Представление(ЕСТЬNULL(ДополнительныеРеквизитыНаработка.Значение, 0)) КАК Наработка,
			|	Представление(ЕСТЬNULL(ДополнительныеРеквизитыПробег.Значение, 0)) КАК Пробег
			|ИЗ
			|	ВТ_ДанныеДефектов КАК ВТ_ДокументДефектов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
			|		ПО (ВТ_ДокументДефектов.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты.ДополнительныеРеквизиты КАК ДополнительныеРеквизитыПробег
			|		ПО (ВТ_ДокументДефектов.Документ = ДополнительныеРеквизитыПробег.Ссылка
			|				И ДополнительныеРеквизитыПробег.Свойство.Имя = ""Пробег_093b5f73de3444c1af0679acf617f4e7"")
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты.ДополнительныеРеквизиты КАК ДополнительныеРеквизитыНаработка
			|		ПО (ВТ_ДокументДефектов.Документ = ДополнительныеРеквизитыНаработка.Ссылка
			|				И ДополнительныеРеквизитыНаработка.Свойство.Имя = ""Наработка_4a9effe80890404d9f0a8794aae1bc44"")

			|СГРУППИРОВАТЬ ПО
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.ЗаводскойНомер КАК СТРОКА(250)),
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.Наименование КАК СТРОКА(150)),
			|	ВТ_ДокументДефектов.ОбъектРемонта,
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.проф_Марка КАК СТРОКА(100)),
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.проф_Модель КАК Справочник.проф_МоделиТСиОборудования),
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.ДатаВыпуска КАК ДАТА),
			|	ВЫРАЗИТЬ(торо_ОбъектыРемонта.проф_Госномер КАК СТРОКА(12)),
			|	ВТ_ДокументДефектов.ПодразделениеИсполнитель,
			|	ВТ_ДокументДефектов.Документ,
			|	Представление(ЕСТЬNULL(ДополнительныеРеквизитыНаработка.Значение, 0)),
			|	Представление(ЕСТЬNULL(ДополнительныеРеквизитыПробег.Значение, 0))
			|;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	торо_ВыявленныеДефекты.ДатаОбнаружения КАК ДатаОбнаружения,
		 |	торо_ВыявленныеДефекты.ДефектВыявленВПроцессе КАК ДефектВыявленВПроцессе,
		 |	торо_ВыявленныеДефектыСписокДефектов.ДефектПричина КАК ДефектПричина,
		 |	торо_ВыявленныеДефектыСписокДефектов.ДефектОписание КАК ДефектОписание,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта КАК ОбъектРемонта,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		 |	ВТ_ДанныеДефектов.Документ КАК ДокументДефект
		 |ИЗ
		 |	ВТ_ДанныеДефектов КАК ВТ_ДанныеДефектов
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты КАК торо_ВыявленныеДефекты
		 |		ПО ВТ_ДанныеДефектов.Документ = торо_ВыявленныеДефекты.Ссылка
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		 |		ПО ВТ_ДанныеДефектов.Документ = торо_ВыявленныеДефектыСписокДефектов.Ссылка
		 |			И ВТ_ДанныеДефектов.ОбъектРемонта = торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта
		 |			И ВТ_ДанныеДефектов.ПодразделениеИсполнитель = торо_ВыявленныеДефектыСписокДефектов.ПодразделениеИсполнитель
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	торо_ВыявленныеДефектыСписокДефектов.ДефектОписание,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель,
		 |	торо_ВыявленныеДефекты.ДатаОбнаружения,
		 |	торо_ВыявленныеДефекты.ДефектВыявленВПроцессе,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта,
		 |	торо_ВыявленныеДефектыСписокДефектов.ДефектПричина,
		 |	ВТ_ДанныеДефектов.Документ
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ЕСТЬNULL(НоменклатураТаблица.Наименование, """") КАК Номенклатура,
		 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Наименование, """") КАК ХарактеристикаНоменклатуры,
		 |	ЕСТЬNULL(НоменклатураТаблица.Артикул, """") КАК Артикул,
		 |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Количество КАК Количество,
		 |	ВТ_ДанныеДефектов.Документ КАК ДокументДефект,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта КАК ОбъектРемонта,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		 | 	Представление(ЕСТЬNULL(НоменклатураТаблица.ЕдиницаИзмерения,Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка))) как ЕдиницаИзмерения
		 |ИЗ
		 |	ВТ_ДанныеДефектов КАК ВТ_ДанныеДефектов
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ПлановыеМатериальныеЗатратыРемонтныхРабот КАК торо_ПлановыеМатериальныеЗатратыРемонтныхРабот
		 |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураТаблица
		 |			ПО торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура = НоменклатураТаблица.Ссылка
		 |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		 |			ПО торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры = ХарактеристикиНоменклатуры.Ссылка
		 |		ПО ВТ_ДанныеДефектов.ID = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ВТ_ДанныеДефектов.ОбъектРемонта,
		 |	ВТ_ДанныеДефектов.Документ,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель,
		 |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Количество,
		 |	ЕСТЬNULL(НоменклатураТаблица.Наименование, """"),
		 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Наименование, """"),
		 |	ЕСТЬNULL(НоменклатураТаблица.Артикул, """"),
		 | 	Представление(ЕСТЬNULL(НоменклатураТаблица.ЕдиницаИзмерения,Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка)))
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ЕСТЬNULL(торо_ТехнологическиеОперации.Наименование, ЕСТЬNULL(торо_ИдентификаторыТехКарт.Наименование, """")) КАК РемонтнаяРабота,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта КАК ОбъектРемонта,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		 |	ВТ_ДанныеДефектов.Документ КАК ДокументДефект
		 |ИЗ
		 |	ВТ_ДанныеДефектов КАК ВТ_ДанныеДефектов
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
		 |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперации
		 |			ПО торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота = торо_ТехнологическиеОперации.Ссылка
		 |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ИдентификаторыТехКарт КАК торо_ИдентификаторыТехКарт
		 |			ПО торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота = торо_ИдентификаторыТехКарт.Ссылка
		 |		ПО ВТ_ДанныеДефектов.ДокументЗаявка = торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка
		 |			И ВТ_ДанныеДефектов.ID = торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID
		 |			И (торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка.Проведен)
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ВТ_ДанныеДефектов.Документ,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта,
		 |	ЕСТЬNULL(торо_ТехнологическиеОперации.Наименование, ЕСТЬNULL(торо_ИдентификаторыТехКарт.Наименование, """"))
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ЕСТЬNULL(НоменклатураТаблица_ВТ.Наименование, """") КАК Номенклатура,
		 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Наименование, """") КАК ХарактеристикаНоменклатуры,
		 |	ЕСТЬNULL(НоменклатураТаблица_ВТ.Артикул, """") КАК Артикул,
		 |	торо_ПлановыеЗатратыЗапчастей.Количество КАК Количество,
		 |	ВТ_ДанныеДефектов.Документ КАК ДокументДефект,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта КАК ОбъектРемонта,
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель КАК ПодразделениеИсполнитель,
		 | 	Представление(ЕСТЬNULL(НоменклатураТаблица_ВТ.ЕдиницаИзмерения,Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка))) как ЕдиницаИзмерения
		 |ИЗ
		 |	ВТ_ДанныеДефектов КАК ВТ_ДанныеДефектов
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ПлановыеЗатратыЗапчастей КАК торо_ПлановыеЗатратыЗапчастей
		 |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураТаблица_ВТ
		 |			ПО торо_ПлановыеЗатратыЗапчастей.Номенклатура = НоменклатураТаблица_ВТ.Ссылка
		 |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		 |			ПО торо_ПлановыеЗатратыЗапчастей.ХарактеристикаНоменклатуры = ХарактеристикиНоменклатуры.Ссылка
		 |		ПО ВТ_ДанныеДефектов.ID = торо_ПлановыеЗатратыЗапчастей.РемонтыОборудования_ID
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ВТ_ДанныеДефектов.ПодразделениеИсполнитель,
		 |	ВТ_ДанныеДефектов.ОбъектРемонта,
		 |	ВТ_ДанныеДефектов.Документ,
		 |	торо_ПлановыеЗатратыЗапчастей.Количество,
		 |	ЕСТЬNULL(НоменклатураТаблица_ВТ.Наименование, """"),
		 |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Наименование, """"),
		 |	ЕСТЬNULL(НоменклатураТаблица_ВТ.Артикул, """"),
		 | Представление(ЕСТЬNULL(НоменклатураТаблица_ВТ.ЕдиницаИзмерения,Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка)))";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- Проф-ИТ, #79, Карпов Д.Ю.,18.09.2023

//++ Проф-ИТ, #133, Антонов Б.Л.,18.09.2023
Функция проф_ПечатьАктаСлужебногоРасследования(МассивОбъектов, ПараметрыПечати)
	
	ОбработкаПечати = Обработки.проф_ПечатьАктаСлужебногоРасследования.Создать();
	Возврат ОбработкаПечати.ПечатьАктаСлужебногоРасследования(МассивОбъектов, ПараметрыПечати);
	
КонецФункции
//-- Проф-ИТ, #133, Антонов Б.Л.,18.09.2023 

#КонецОбласти

#КонецЕсли