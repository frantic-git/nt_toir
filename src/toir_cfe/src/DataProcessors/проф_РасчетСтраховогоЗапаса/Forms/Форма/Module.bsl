
//++ Проф-ИТ, #174, Соловьев А.А., 13.10.2023

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++ Проф-ИТ, #375, Соловьев А.А., 29.11.2023
	УстановитьЗначенияПоУмолчанию();
	//-- Проф-ИТ, #375, Соловьев А.А., 29.11.2023
	
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	проф_ОбщегоНазначенияВызовСервера.ВывестиТоварыВПути(ЭтотОбъект, Номенклатура, ПодразделенияСлужбыТОИР, ЭтотОбъект, Элементы.ГруппаПодвал);
	//-- Проф-ИТ, #437, Соловьев А.А., 18.09.2023
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.торо_ПодборНоменклатуры.Форма.Форма" Тогда
		ДобавитьНоменклатуруИзПодбора(ВыбранноеЗначение);
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
		И ВыбранноеЗначение.Свойство("ВыполняемаяОперация")
		И ВыбранноеЗначение.ВыполняемаяОперация = "ВыборАналогаНоменклатурыДляРемонта" Тогда
		
		ЗаменитьМатериалыНаАналоги(ВыбранноеЗначение.АдресВХранилище);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	
	ТекстСообщения = НСтр("ru = 'Заполните период'");
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НачалоПериода");
	ИначеЕсли Не ЗначениеЗаполнено(ОкончаниеПериода) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ОкончаниеПериода");
	ИначеЕсли ТаблицаДанных.Количество() > 0 Тогда 
		ТекстВопроса = НСтр("ru = 'Таблица будет перезаполнена. Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПерезаполнениеТаблицыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПерезаполнениеТаблицыЗавершение(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",			Истина);
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",						Истина);
	ПараметрыФормы.Вставить("СкрыватьКолонкуВидЦены",						Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуЦеныНоменклатуры",				Истина);
	ПараметрыФормы.Вставить("ЗапрашиватьКоличество",						Ложь);
	ПараметрыФормы.Вставить("Заголовок",									НСтр("ru = 'Подбор товаров'"));
	ПараметрыФормы.Вставить("ЗаголовокКнопкиЗапрашиватьКоличествоИЦену",	НСтр("ru = 'Запрашивать количество'"));
	ПараметрыФормы.Вставить("КлючНазначенияИспользования",					"ПростойПодборНоменклатуры");
	
	МассивТипов = ПолучитьМассивТиповНоменклаутры();
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры", МассивТипов);
	
	ОткрытьФорму("Обработка.торо_ПодборНоменклатуры.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоМаксимумуЗаМесяц(Команда)
	ПересчитатьСтрокиТаблицы("МАКСИМУМ");
КонецПроцедуры

&НаКлиенте
Процедура ПоМинимумуЗаМесяц(Команда)
	ПересчитатьСтрокиТаблицы("МИНИМУМ");
КонецПроцедуры

&НаКлиенте
Процедура ПоСреднемуЗаМесяц(Команда)
	ПересчитатьСтрокиТаблицы("СРЕДНЕЕ");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериод(Команда)
	
	ОбщегоНазначенияУТКлиент.РедактироватьПериод(ЭтотОбъект, 
		Новый Структура("ДатаНачала, ДатаОкончания", "НачалоПериода", "ОкончаниеПериода"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьФлажки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаДанных.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		ТаблицаДанных.Удалить(ТекущиеДанные);
	КонецЕсли;
	ПеренумероватьСтроки(ТаблицаДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	
	ОчиститьСообщения();
	РезультатОбработки = СоздатьЗаказНаВнутреннееПотребление();
	Если ТипЗнч(РезультатОбработки) = Тип("Строка") Тогда 
		ТекстСообщения = НСтр("ru = 'Не удалось создать документы по причине: %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, РезультатОбработки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'Создан документ %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, РезультатОбработки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, РезультатОбработки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьМинимальныеОстаткиПриИзменении(Элемент)
	
	Элементы.ТаблицаДанныхМинОстаток.Видимость = ИспользоватьМинимальныеОстатки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДанных

&НаКлиенте
Процедура ТаблицаДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаДанных.ТекущиеДанные;
	Если Поле = Элементы.ТаблицаДанныхНоменклатура И Не ТекущиеДанные.Выполнено Тогда
		ПоказатьЗначение(, ТекущиеДанные.Номенклатура);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТаблицаДанныхЕстьАналоги" И Не ТекущиеДанные.Выполнено Тогда
		ПодобратьАналогиНаКлиенте();
	ИначеЕсли ТекущиеДанные.Выполнено Тогда 
		ПоказатьЗначение(, ТекущиеДанные.ЗаказНаВнутреннееПотребление);
	КонецЕсли;
	
КонецПроцедуры

//++ Проф-ИТ, #375, Соловьев А.А., 29.11.2023

&НаКлиенте
Процедура ТаблицаДанныхПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаДанных.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		ОтборСтрок = Новый Структура("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Иначе
		ОтборСтрок = Новый Структура("Номенклатура, Характеристика", ТекущиеДанные.Номенклатура, ТекущиеДанные.Характеристика);
		
		//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
		ЭтотОбъект["СписокТоварыВПути"].Отбор.Элементы.Очистить();
		
		ЭлементОтбора = ЭтотОбъект["СписокТоварыВПути"].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекущиеДанные.Номенклатура;
		//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
		
	КонецЕсли;
	
	Элементы.ОстаткиПоСкладам.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаДанных.ТекущиеДанные;
	ТекущиеДанные.ПлановаяСтоимость = ТекущиеДанные.ПлановаяЦена * ТекущиеДанные.КЗакупке;
	
	РасчетСуммыКЗакупке();
	
КонецПроцедуры

//-- Проф-ИТ, #375, Соловьев А.А., 29.11.2023

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СтрЦветТекста = "ЦветТекста";
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанных.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.Выполнено", ВидСравненияКомпоновкиДанных.Равно, Истина, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхСреднийРасходЗаМесяц.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.СреднийРасходЗаМесяц", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхПлановыйРасходНаПериод.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.ПлановыйРасходНаПериод", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхДоступно.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.Доступно", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхНаПеремещении.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.НаПеремещении", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхЗВПНаЗакупку.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.ЗВПНаЗакупку", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхЗаказано.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.Заказано", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхВПути.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.ВПути", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
		
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхМинОстаток.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.МинОстаток", ВидСравненияКомпоновкиДанных.Меньше, 0, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	
	//
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхВключитьВЗакупку.Имя);
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхКЗакупке.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.Выполнено", ВидСравненияКомпоновкиДанных.Равно, Истина, , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//
	//++ Проф-ИТ, #375, Соловьев А.А., 29.11.2023
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаДанныхМинОстаток.Имя);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаДанных.МинОстаток", ВидСравненияКомпоновкиДанных.Меньше, "ТаблицаДанных.Доступно", , Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра(СтрЦветТекста, WebЦвета.Красный);
	//-- Проф-ИТ, #375, Соловьев А.А., 29.11.2023
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлажки(Значение)
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		СтрокаТаблицы.ВключитьВЗакупку = Значение;
	КонецЦикла;
	
	//++ Проф-ИТ, #375, Соловьев А.А., 29.11.2023
	РасчетСуммыКЗакупке();
	//-- Проф-ИТ, #375, Соловьев А.А., 29.11.2023
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивТиповНоменклаутры()
	
	МассивТипов = Новый Массив();
	Для Каждого ЗначениеПеречисления Из Перечисления.ТипыНоменклатуры Цикл
		Если ЗначениеПеречисления = Перечисления.ТипыНоменклатуры.Услуга
			Или ЗначениеПеречисления = Перечисления.ТипыНоменклатуры.Работа Тогда 
			Продолжить; 
		КонецЕсли;
		МассивТипов.Добавить(ЗначениеПеречисления);
	КонецЦикла;
	
	Возврат МассивТипов;
	
КонецФункции

&НаСервере 
Процедура ДобавитьНоменклатуруИзПодбора(Знач Адрес)
	
	ТаблицаПодбора = ПолучитьИзВременногоХранилища(Адрес);
	
	Если ТаблицаПодбора = Неопределено 
		Или ТаблицаПодбора.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуСАналогами(ТаблицаПодбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокиТаблицы(АгрегатнаяФункция)
	
	ОчиститьСообщения();
	Если ПроверитьЗаполнение() Тогда
		ПересчитатьСтрокиТаблицыНаСервере(АгрегатнаяФункция);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСтрокиТаблицыНаСервере(Знач АгрегатнаяФункция)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанных.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДанных.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ТаблицаДанных.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаДанных
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втТаблицаДанных.Номенклатура КАК Номенклатура,
	|	втТаблицаДанных.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаАналоговПредварительно
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	|		ПО втТаблицаДанных.Номенклатура = торо_АналогиНоменклатурыДляРемонтов.Материал
	|			И втТаблицаДанных.Характеристика = торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала
	|ГДЕ
	|	торо_АналогиНоменклатурыДляРемонтов.Период <= &ТекущаяДата
	|	И торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаДанных.Номенклатура,
	|	втТаблицаДанных.Характеристика
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	|		ПО втТаблицаДанных.Номенклатура = торо_АналогиНоменклатурыДляРемонтов.Материал
	|			И втТаблицаДанных.Характеристика = торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала
	|ГДЕ
	|	торо_АналогиНоменклатурыДляРемонтов.Период <= &ТекущаяДата
	|	И торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1) = ЛОЖЬ
	|	И торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения >= &ТекущаяДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаАналоговПредварительно.Номенклатура КАК Номенклатура,
	|	втТаблицаАналоговПредварительно.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаАналогов
	|ИЗ
	|	втТаблицаАналоговПредварительно КАК втТаблицаАналоговПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаАналоговПредварительно.Номенклатура,
	|	втТаблицаАналоговПредварительно.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаДанных.Номенклатура КАК Номенклатура,
	|	втТаблицаДанных.Характеристика КАК Характеристика,
	|	НАЧАЛОПЕРИОДА(Календарь.Дата, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ втМесяцы
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК Календарь
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Календарь.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаДанных.Номенклатура,
	|	втТаблицаДанных.Характеристика,
	|	НАЧАЛОПЕРИОДА(Календарь.Дата, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РегистрОбороты.Период, МЕСЯЦ) КАК Период,
	|	РегистрОбороты.Номенклатура КАК Номенклатура,
	|	РегистрОбороты.ХарактеристикаНоменклатуры КАК Характеристика,
	|	СУММА(РегистрОбороты.КоличествоОборот) КАК Количество
	|ПОМЕСТИТЬ втСреднийРасходДанныеРегистра
	|ИЗ
	|	РегистрНакопления.торо_ФактическиеМатериальныеЗатратыРемонтныхРабот.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Регистратор,
	|			(Номенклатура, ХарактеристикаНоменклатуры) В
	|				(ВЫБРАТЬ
	|					втТаблицаДанных.Номенклатура КАК Номенклатура,
	|					втТаблицаДанных.Характеристика КАК Характеристика
	|				ИЗ
	|					втТаблицаДанных КАК втТаблицаДанных)) КАК РегистрОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|		ПО РегистрОбороты.Регистратор = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
	|			И РегистрОбороты.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РегистрОбороты.Период, МЕСЯЦ),
	|	РегистрОбороты.Номенклатура,
	|	РегистрОбороты.ХарактеристикаНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РегистрОбороты.Период, МЕСЯЦ),
	|	РегистрОбороты.Номенклатура,
	|	РегистрОбороты.ХарактеристикаНоменклатуры,
	|	СУММА(РегистрОбороты.КоличествоОборот)
	|ИЗ
	|	РегистрНакопления.торо_ФактическиеЗатратыЗапчастей.Обороты(
	|			&НачалоПериода,
	|			&ОкончаниеПериода,
	|			Регистратор,
	|			(Номенклатура, ХарактеристикаНоменклатуры) В
	|				(ВЫБРАТЬ
	|					втТаблицаДанных.Номенклатура КАК Номенклатура,
	|					втТаблицаДанных.Характеристика КАК Характеристика
	|				ИЗ
	|					втТаблицаДанных КАК втТаблицаДанных)) КАК РегистрОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|		ПО РегистрОбороты.Регистратор = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
	|			И РегистрОбороты.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РегистрОбороты.Период, МЕСЯЦ),
	|	РегистрОбороты.Номенклатура,
	|	РегистрОбороты.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМесяцы.Месяц КАК Месяц,
	|	втМесяцы.Номенклатура КАК Номенклатура,
	|	втМесяцы.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(втСреднийРасходДанныеРегистра.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ втСреднийРасходПоМесяцам
	|ИЗ
	|	втМесяцы КАК втМесяцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСреднийРасходДанныеРегистра КАК втСреднийРасходДанныеРегистра
	|		ПО втМесяцы.Номенклатура = втСреднийРасходДанныеРегистра.Номенклатура
	|			И втМесяцы.Характеристика = втСреднийРасходДанныеРегистра.Характеристика
	|			И втМесяцы.Месяц = втСреднийРасходДанныеРегистра.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСреднийРасходПоМесяцам.Номенклатура КАК Номенклатура,
	|	втСреднийРасходПоМесяцам.Характеристика КАК Характеристика,
	|	МАКСИМУМ(втСреднийРасходПоМесяцам.Количество) КАК Количество
	|ПОМЕСТИТЬ втСреднийРасход
	|ИЗ
	|	втСреднийРасходПоМесяцам КАК втСреднийРасходПоМесяцам
	|ГДЕ
	|	&УсловиеНаКоличествоДляРасчетаПоСреднему
	|
	|СГРУППИРОВАТЬ ПО
	|	втСреднийРасходПоМесяцам.Номенклатура,
	|	втСреднийРасходПоМесяцам.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСреднийРасходДанныеРегистра.Номенклатура КАК Номенклатура,
	|	втСреднийРасходДанныеРегистра.Характеристика КАК Характеристика,
	|	СУММА(втСреднийРасходДанныеРегистра.Количество) КАК Количество
	|ПОМЕСТИТЬ втФактическийРасход
	|ИЗ
	|	втСреднийРасходДанныеРегистра КАК втСреднийРасходДанныеРегистра
	|
	|СГРУППИРОВАТЬ ПО
	|	втСреднийРасходДанныеРегистра.Номенклатура,
	|	втСреднийРасходДанныеРегистра.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_МинимальныеОстаткиНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	торо_МинимальныеОстаткиНоменклатурыСрезПоследних.ХарактеристикаНоменклатуры КАК Характеристика,
	|	МАКСИМУМ(торо_МинимальныеОстаткиНоменклатурыСрезПоследних.МинимальныйОстаток) КАК МинимальныйОстаток
	|ПОМЕСТИТЬ втМинимальныеОстаткиНоменклатуры
	|ИЗ
	|	РегистрСведений.торо_МинимальныеОстаткиНоменклатуры.СрезПоследних(
	|			&ТекущаяДата,
	|			&ИспользоватьМинимальныеОстатки
	|				И Склад В (&Склад)
	|				И Организация = &Организация
	|				И (Номенклатура, ХарактеристикаНоменклатуры) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК торо_МинимальныеОстаткиНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_МинимальныеОстаткиНоменклатурыСрезПоследних.Номенклатура,
	|	торо_МинимальныеОстаткиНоменклатурыСрезПоследних.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	проф_ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	проф_ТоварыНаСкладахОстатки.Назначение КАК Назначение,
	|	проф_ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ПОМЕСТИТЬ ВтТоварыНаСкладахОстатки
	|ИЗ
	|	РегистрНакопления.проф_ТоварыНаСкладах.Остатки(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК проф_ТоварыНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Доступно
	|ПОМЕСТИТЬ втТоварыНаСкладахПредв
	|ИЗ
	|	РегистрНакопления.проф_ТоварыНаСкладах.Остатки(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)
	|				И Назначение = ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка)) КАК ТоварыНаСкладахОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтТоварыНаСкладахОстатки.Номенклатура,
	|	ВтТоварыНаСкладахОстатки.Характеристика,
	|	ВтТоварыНаСкладахОстатки.ВНаличииОстаток
	|ИЗ
	|	ВтТоварыНаСкладахОстатки КАК ВтТоварыНаСкладахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО ВтТоварыНаСкладахОстатки.Назначение = проф_Назначения.Ссылка
	|			И (проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТоварыНаСкладахПредв.Номенклатура КАК Номенклатура,
	|	втТоварыНаСкладахПредв.Характеристика КАК Характеристика,
	|	СУММА(втТоварыНаСкладахПредв.Доступно) КАК Доступно
	|ПОМЕСТИТЬ втТоварыНаСкладах
	|ИЗ
	|	втТоварыНаСкладахПредв КАК втТоварыНаСкладахПредв
	|
	|СГРУППИРОВАТЬ ПО
	|	втТоварыНаСкладахПредв.Номенклатура,
	|	втТоварыНаСкладахПредв.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗаказыНаПеремещениеОстатки.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	проф_ЗаказыНаПеремещениеОстатки.Номенклатура КАК Номенклатура,
	|	проф_ЗаказыНаПеремещениеОстатки.Характеристика КАК Характеристика,
	|	проф_ЗаказыНаПеремещениеОстатки.КОформлениюОстаток КАК КОформлениюОстаток
	|ПОМЕСТИТЬ ВтЗаказыНаПеремещениеОстатки
	|ИЗ
	|	РегистрНакопления.проф_ЗаказыНаПеремещение.Остатки(
	|			&ТекущаяДата,
	|			(Номенклатура, Характеристика) В
	|				(ВЫБРАТЬ
	|					втТаблицаДанных.Номенклатура КАК Номенклатура,
	|					втТаблицаДанных.Характеристика КАК Характеристика
	|				ИЗ
	|					втТаблицаДанных КАК втТаблицаДанных)) КАК проф_ЗаказыНаПеремещениеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтЗаказыНаПеремещениеОстатки.Номенклатура КАК Номенклатура,
	|	ВтЗаказыНаПеремещениеОстатки.Характеристика КАК Характеристика,
	|	СУММА(ВтЗаказыНаПеремещениеОстатки.КОформлениюОстаток) КАК НаПеремещении
	|ПОМЕСТИТЬ втЗаказыНаПеремещение
	|ИЗ
	|	ВтЗаказыНаПеремещениеОстатки КАК ВтЗаказыНаПеремещениеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.проф_ЗаказНаПеремещение КАК проф_ЗаказНаПеремещение
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|			ПО проф_ЗаказНаПеремещение.Назначение = проф_Назначения.Ссылка
	|				И (проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|		ПО ВтЗаказыНаПеремещениеОстатки.ЗаказНаПеремещение = проф_ЗаказНаПеремещение.Ссылка
	|			И (проф_ЗаказНаПеремещение.СкладОтправитель <> &СкладБГЛЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтЗаказыНаПеремещениеОстатки.Характеристика,
	|	ВтЗаказыНаПеремещениеОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|	проф_ЗапасыИПотребностиОстатки.Характеристика КАК Характеристика,
	|	проф_ЗапасыИПотребностиОстатки.Назначение КАК Назначение,
	|	проф_ЗапасыИПотребностиОстатки.КОбеспечениюОстаток КАК КОбеспечениюОстаток
	|ПОМЕСТИТЬ втЗапасыИПотребностиОстатки
	|ИЗ
	|	РегистрНакопления.проф_ЗапасыИПотребности.Остатки(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК проф_ЗапасыИПотребностиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|	втЗапасыИПотребностиОстатки.Характеристика КАК Характеристика,
	|	СУММА(втЗапасыИПотребностиОстатки.КОбеспечениюОстаток) КАК ЗВПНаЗакупку
	|ПОМЕСТИТЬ втЗапасыИПотребности
	|ИЗ
	|	втЗапасыИПотребностиОстатки КАК втЗапасыИПотребностиОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО втЗапасыИПотребностиОстатки.Назначение = проф_Назначения.Ссылка
	|			И (проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗапасыИПотребностиОстатки.Характеристика,
	|	втЗапасыИПотребностиОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	|	проф_ЗаказыПоставщикуОстатки.Характеристика КАК Характеристика,
	|	проф_ЗаказыПоставщикуОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	проф_ЗаказыПоставщикуОстатки.Назначение КАК Назначение,
	|	проф_ЗаказыПоставщикуОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВтЗаказыПоставщикуОстатки
	|ИЗ
	|	РегистрНакопления.проф_ЗаказыПоставщику.Остатки(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК проф_ЗаказыПоставщикуОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	|	ВтЗаказыПоставщикуОстатки.Характеристика КАК Характеристика,
	|	СУММА(ВтЗаказыПоставщикуОстатки.КоличествоОстаток) КАК Заказано
	|ПОМЕСТИТЬ втЗаказыПоставщику
	|ИЗ
	|	ВтЗаказыПоставщикуОстатки КАК ВтЗаказыПоставщикуОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО ВтЗаказыПоставщикуОстатки.Назначение = проф_Назначения.Ссылка
	|			И (проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаказПоставщику КАК торо_ЗаказПоставщику
	|		ПО ВтЗаказыПоставщикуОстатки.ЗаказПоставщику = торо_ЗаказПоставщику.Ссылка
	|			И (торо_ЗаказПоставщику.проф_Статус В (ЗНАЧЕНИЕ(Перечисление.проф_ПеречислениеСтатусыЗаказовПоставщикам.Согласован), ЗНАЧЕНИЕ(Перечисление.проф_ПеречислениеСтатусыЗаказовПоставщикам.Подтвержден)))
	|			И (торо_ЗаказПоставщику.проф_СостоянияЗаказовПоставщикам <> ЗНАЧЕНИЕ(Перечисление.проф_СостоянияЗаказовПоставщикам.ГотовКЗакрытию))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтЗаказыПоставщикуОстатки.Характеристика,
	|	ВтЗаказыПоставщикуОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Характеристика КАК Характеристика,
	|	СУММА(ЗаказыНаВнутреннееПотреблениеОстатки.КОформлениюОстаток) КАК ЗВПТОиР
	|ПОМЕСТИТЬ втЗаказыНаВП
	|ИЗ
	|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК ЗаказыНаВнутреннееПотреблениеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВП
	|		ПО ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление = ДокументЗаказНаВП.Ссылка
	|			И (ДокументЗаказНаВП.проф_ЗаказДляЗакупки)
	|			И (ДокументЗаказНаВП.торо_СтатусУтверждения В (ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.проф_Новый), ЗНАЧЕНИЕ(Перечисление.торо_СтатусыУтвержденияЗаказовНаВП.НаУтверждении)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Номенклатура,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ втЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ТекущаяДата,
	|			(Номенклатура, ВидЦены, Характеристика) В
	|				(ВЫБРАТЬ
	|					втТаблицаДанных.Номенклатура КАК Номенклатура,
	|					&ТипЦены КАК ВидЦены,
	|					втТаблицаДанных.Характеристика КАК Характеристика
	|				ИЗ
	|					втТаблицаДанных КАК втТаблицаДанных)) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ВнутреннееТовародвижение.Номенклатура КАК Номенклатура,
	|	СУММА(проф_ВнутреннееТовародвижение.Количество) КАК Количество
	|ПОМЕСТИТЬ втТоварыВПутиПоНоменклатуре
	|ИЗ
	|	РегистрСведений.проф_ВнутреннееТовародвижение КАК проф_ВнутреннееТовародвижение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО проф_ВнутреннееТовародвижение.Назначение = проф_Назначения.Ссылка
	|			И (проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|ГДЕ
	|	проф_ВнутреннееТовародвижение.Номенклатура В
	|			(ВЫБРАТЬ
	|				втТаблицаДанных.Номенклатура
	|			ИЗ
	|				втТаблицаДанных КАК втТаблицаДанных)
	|
	|СГРУППИРОВАТЬ ПО
	|	проф_ВнутреннееТовародвижение.Номенклатура
	|;
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаДанных.НомерСтроки КАК НомерСтроки,
	|	втТаблицаДанных.Номенклатура КАК Номенклатура,
	|	втТаблицаДанных.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(втСреднийРасход.Количество, 0) КАК СреднийРасходЗаМесяц,
	|	ЕСТЬNULL(втСреднийРасход.Количество, 0) * &КоличествоМесяцевПланирования КАК ПлановыйРасходНаПериод,
	|	ЕСТЬNULL(втФактическийРасход.Количество, 0) КАК ФактическийРасход,
	|	ЕСТЬNULL(втСреднийРасход.Количество, 0) * &КоличествоМесяцевПланирования - ЕСТЬNULL(втТоварыНаСкладах.Доступно, 0) - ЕСТЬNULL(втЗаказыНаПеремещение.НаПеремещении, 0) - ЕСТЬNULL(втЗаказыНаВП.ЗВПТОиР, 0) - ЕСТЬNULL(втЗапасыИПотребности.ЗВПНаЗакупку, 0) - ЕСТЬNULL(втЗаказыПоставщику.Заказано, 0) + ЕСТЬNULL(втМинимальныеОстаткиНоменклатуры.МинимальныйОстаток, 0) КАК КЗакупке,
	|	ЕСТЬNULL(втТоварыНаСкладах.Доступно, 0) КАК Доступно,
	|	ЕСТЬNULL(втЗаказыНаПеремещение.НаПеремещении, 0) КАК НаПеремещении,
	|	ЕСТЬNULL(втЗапасыИПотребности.ЗВПНаЗакупку, 0) КАК ЗВПНаЗакупку,
	|	ЕСТЬNULL(втЗаказыПоставщику.Заказано, 0) КАК Заказано,
	|	ЕСТЬNULL(втМинимальныеОстаткиНоменклатуры.МинимальныйОстаток, 0) КАК МинОстаток,
	|	ЕСТЬNULL(втЗаказыНаВП.ЗВПТОиР, 0) КАК ЗВПТОиР,
	|	втТаблицаАналогов.Номенклатура ЕСТЬ НЕ NULL  КАК ЕстьАналоги,
	|	ЕСТЬNULL(втЦеныНоменклатуры.Цена, 0) КАК ПлановаяЦена,
	|	(ЕСТЬNULL(втСреднийРасход.Количество, 0) * &КоличествоМесяцевПланирования - ЕСТЬNULL(втТоварыНаСкладах.Доступно, 0) - ЕСТЬNULL(втЗаказыНаПеремещение.НаПеремещении, 0) - ЕСТЬNULL(втЗаказыНаВП.ЗВПТОиР, 0) - ЕСТЬNULL(втЗапасыИПотребности.ЗВПНаЗакупку, 0) - ЕСТЬNULL(втЗаказыПоставщику.Заказано, 0) + ЕСТЬNULL(втМинимальныеОстаткиНоменклатуры.МинимальныйОстаток, 0)) * ЕСТЬNULL(втЦеныНоменклатуры.Цена, 0) КАК ПлановаяСтоимость,
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втЗапасыИПотребности.ЗВПНаЗакупку, 0) > 0
	|			ТОГДА ЕСТЬNULL(втТоварыВПутиПоНоменклатуре.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТоварыВПути
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСреднийРасход КАК втСреднийРасход
	|		ПО втТаблицаДанных.Номенклатура = втСреднийРасход.Номенклатура
	|			И втТаблицаДанных.Характеристика = втСреднийРасход.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втФактическийРасход КАК втФактическийРасход
	|		ПО втТаблицаДанных.Номенклатура = втФактическийРасход.Номенклатура
	|			И втТаблицаДанных.Характеристика = втФактическийРасход.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМинимальныеОстаткиНоменклатуры КАК втМинимальныеОстаткиНоменклатуры
	|		ПО втТаблицаДанных.Номенклатура = втМинимальныеОстаткиНоменклатуры.Номенклатура
	|			И втТаблицаДанных.Характеристика = втМинимальныеОстаткиНоменклатуры.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТоварыНаСкладах КАК втТоварыНаСкладах
	|		ПО втТаблицаДанных.Номенклатура = втТоварыНаСкладах.Номенклатура
	|			И втТаблицаДанных.Характеристика = втТоварыНаСкладах.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыНаПеремещение КАК втЗаказыНаПеремещение
	|		ПО втТаблицаДанных.Номенклатура = втЗаказыНаПеремещение.Номенклатура
	|			И втТаблицаДанных.Характеристика = втЗаказыНаПеремещение.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗапасыИПотребности КАК втЗапасыИПотребности
	|		ПО втТаблицаДанных.Номенклатура = втЗапасыИПотребности.Номенклатура
	|			И втТаблицаДанных.Характеристика = втЗапасыИПотребности.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыПоставщику КАК втЗаказыПоставщику
	|		ПО втТаблицаДанных.Номенклатура = втЗаказыПоставщику.Номенклатура
	|			И втТаблицаДанных.Характеристика = втЗаказыПоставщику.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказыНаВП КАК втЗаказыНаВП
	|		ПО втТаблицаДанных.Номенклатура = втЗаказыНаВП.Номенклатура
	|			И втТаблицаДанных.Характеристика = втЗаказыНаВП.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаАналогов КАК втТаблицаАналогов
	|		ПО втТаблицаДанных.Номенклатура = втТаблицаАналогов.Номенклатура
	|			И втТаблицаДанных.Характеристика = втТаблицаАналогов.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныНоменклатуры КАК втЦеныНоменклатуры
	|		ПО втТаблицаДанных.Номенклатура = втЦеныНоменклатуры.Номенклатура
	|			И втТаблицаДанных.Характеристика = втЦеныНоменклатуры.Характеристика
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТоварыВПутиПоНоменклатуре КАК втТоварыВПутиПоНоменклатуре
	|		ПО втТаблицаДанных.Номенклатура = втТоварыВПутиПоНоменклатуре.Номенклатура
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных.Выгрузить(, "НомерСтроки, Номенклатура, Характеристика"));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("КоличествоМесяцевПланирования", КоличествоМесяцевПланирования);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПодразделенияСлужбыТОИР", ПодразделенияСлужбыТОИР);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("СкладБГЛЦ", СкладБГЛЦ);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", Ложь);
	Запрос.УстановитьПараметр("УсловиеНаКоличествоДляРасчетаПоСреднему", Истина);
	Запрос.УстановитьПараметр("ИспользоватьМинимальныеОстатки", ИспользоватьМинимальныеОстатки);
	Запрос.УстановитьПараметр("ТипЦены", ТипЦены);
	
	ТекстМасимум = "МАКСИМУМ(втСреднийРасходПоМесяцам.Количество)";
	Если АгрегатнаяФункция = "МИНИМУМ" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ТекстМасимум, "МИНИМУМ(втСреднийРасходПоМесяцам.Количество)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеНаКоличествоДляРасчетаПоСреднему",
			"втСреднийРасходПоМесяцам.Количество > 0");
	ИначеЕсли АгрегатнаяФункция = "СРЕДНЕЕ" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ТекстМасимум, "СРЕДНЕЕ(втСреднийРасходПоМесяцам.Количество)");
	КонецЕсли;
	
	ТаблицаДанных.Очистить();
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.КЗакупке = Окр(Выборка.КЗакупке + 0.5, 0, 0);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнениеТаблицыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ОчиститьСообщения();
		ТаблицаДанных.Очистить();
		ЗаполнитьТаблицуСАналогами();
		//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
		Элементы["СписокТоварыВПути"].Обновить();
		//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСАналогами(ТаблицаДанныхДляОбработки = Неопределено, ИмяКолонкиХарактеристика = "Характеристика")
	
	Запрос = Новый Запрос;
	Если ТаблицаДанныхДляОбработки = Неопределено Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрОбороты.Номенклатура КАК Номенклатура,
		|	РегистрОбороты.ХарактеристикаНоменклатуры КАК Характеристика
		|ПОМЕСТИТЬ втТаблицаДанных
		|ИЗ
		|	РегистрНакопления.торо_ФактическиеМатериальныеЗатратыРемонтныхРабот.Обороты(
		|			&НачалоПериода,
		|			&ОкончаниеПериода,
		|			Авто,
		|			&ОтборПоНоменклатуре
		|				И Номенклатура В (&Номенклатура)) КАК РегистрОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|		ПО РегистрОбороты.Регистратор = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
		|			И РегистрОбороты.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
		|			И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта В (&ОбъектРемонта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрОбороты.Номенклатура,
		|	РегистрОбороты.ХарактеристикаНоменклатуры
		|ИЗ
		|	РегистрНакопления.торо_ФактическиеМатериальныеЗатратыРемонтныхРабот.Обороты(&НачалоПериода, &ОкончаниеПериода, Авто, НЕ &ОтборПоНоменклатуре) КАК РегистрОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|		ПО РегистрОбороты.Регистратор = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
		|			И РегистрОбороты.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
		|			И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта В (&ОбъектРемонта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрОбороты.Номенклатура,
		|	РегистрОбороты.ХарактеристикаНоменклатуры
		|ИЗ
		|	РегистрНакопления.торо_ФактическиеЗатратыЗапчастей.Обороты(
		|			&НачалоПериода,
		|			&ОкончаниеПериода,
		|			Авто,
		|			&ОтборПоНоменклатуре
		|				И Номенклатура В (&Номенклатура)) КАК РегистрОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|		ПО РегистрОбороты.Регистратор = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
		|			И РегистрОбороты.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
		|			И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта В (&ОбъектРемонта)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрОбороты.Номенклатура,
		|	РегистрОбороты.ХарактеристикаНоменклатуры
		|ИЗ
		|	РегистрНакопления.торо_ФактическиеЗатратыЗапчастей.Обороты(&НачалоПериода, &ОкончаниеПериода, Авто, НЕ &ОтборПоНоменклатуре) КАК РегистрОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|		ПО РегистрОбороты.Регистратор = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
		|			И РегистрОбороты.РемонтыОборудования_ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
		|			И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта В (&ОбъектРемонта)";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	&ИмяКолонкиХарактеристика КАК Характеристика
		|ПОМЕСТИТЬ втТаблицаДанных
		|ИЗ
		|	&ТаблицаДанныхДляОбработки КАК Таблица";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяКолонкиХарактеристика", ИмяКолонкиХарактеристика);
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + ";";
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втТаблицаДанных.Номенклатура КАК Номенклатура,
	|	втТаблицаДанных.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаАналоговПредварительно
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	|		ПО втТаблицаДанных.Номенклатура = торо_АналогиНоменклатурыДляРемонтов.Материал
	|			И втТаблицаДанных.Характеристика = торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала
	|ГДЕ
	|	торо_АналогиНоменклатурыДляРемонтов.Период <= &ТекущаяДата
	|	И торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаДанных.Номенклатура,
	|	втТаблицаДанных.Характеристика
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	|		ПО втТаблицаДанных.Номенклатура = торо_АналогиНоменклатурыДляРемонтов.Материал
	|			И втТаблицаДанных.Характеристика = торо_АналогиНоменклатурыДляРемонтов.ХарактеристикаМатериала
	|ГДЕ
	|	торо_АналогиНоменклатурыДляРемонтов.Период <= &ТекущаяДата
	|	И торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1) = ЛОЖЬ
	|	И торо_АналогиНоменклатурыДляРемонтов.ПериодЗавершения >= &ТекущаяДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаАналоговПредварительно.Номенклатура КАК Номенклатура,
	|	втТаблицаАналоговПредварительно.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаАналогов
	|ИЗ
	|	втТаблицаАналоговПредварительно КАК втТаблицаАналоговПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаАналоговПредварительно.Номенклатура,
	|	втТаблицаАналоговПредварительно.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Регистр.Склад КАК Склад,
	|	Регистр.Номенклатура КАК Номенклатура,
	|	Регистр.МинимальныйОстаток КАК МинимальныйОстаток,
	|	Регистр.ХарактеристикаНоменклатуры КАК Характеристика
	|ПОМЕСТИТЬ МинимальныеОстатки
	|ИЗ
	|	РегистрСведений.торо_МинимальныеОстаткиНоменклатуры.СрезПоследних(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, ХарактеристикаНоменклатуры) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК ХарактеристикаНоменклатуры
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК Регистр
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|	проф_ЗапасыИПотребностиОстатки.Характеристика КАК Характеристика,
	|	проф_ЗапасыИПотребностиОстатки.Склад КАК Склад,
	|	проф_ЗапасыИПотребностиОстатки.Назначение КАК Назначение,
	|	проф_ЗапасыИПотребностиОстатки.ВНаличииОстаток - проф_ЗапасыИПотребностиОстатки.РезервироватьНаСкладеОстаток - проф_ЗапасыИПотребностиОстатки.РезервироватьПоМереПоступленияОстаток КАК ВНаличии
	|ПОМЕСТИТЬ втЗапасыИПотребностиВНаличии
	|ИЗ
	|	РегистрНакопления.проф_ЗапасыИПотребности.Остатки(
	|			&ТекущаяДата,
	|			Склад В (&Склад)
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ
	|						втТаблицаДанных.Номенклатура КАК Номенклатура,
	|						втТаблицаДанных.Характеристика КАК Характеристика
	|					ИЗ
	|						втТаблицаДанных КАК втТаблицаДанных)) КАК проф_ЗапасыИПотребностиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗапасыИПотребности.Номенклатура КАК Номенклатура,
	|	втЗапасыИПотребности.Характеристика КАК Характеристика,
	|	втЗапасыИПотребности.Назначение КАК Назначение,
	|	втЗапасыИПотребности.Склад КАК Склад,
	|	втЗапасыИПотребности.ВНаличии КАК Доступно,
	|	0 КАК РезервНеТОиР
	|ПОМЕСТИТЬ втДоступноРезервНеТОиР
	|ИЗ
	|	втЗапасыИПотребностиВНаличии КАК втЗапасыИПотребности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО втЗапасыИПотребности.Назначение = проф_Назначения.Ссылка
	|			И (проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втЗапасыИПотребности.Номенклатура,
	|	втЗапасыИПотребности.Характеристика,
	|	втЗапасыИПотребности.Назначение,
	|	втЗапасыИПотребности.Склад,
	|	втЗапасыИПотребности.ВНаличии,
	|	0
	|ИЗ
	|	втЗапасыИПотребностиВНаличии КАК втЗапасыИПотребности
	|ГДЕ
	|	втЗапасыИПотребности.Назначение = ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втЗапасыИПотребности.Номенклатура,
	|	втЗапасыИПотребности.Характеристика,
	|	втЗапасыИПотребности.Назначение,
	|	втЗапасыИПотребности.Склад,
	|	0,
	|	втЗапасыИПотребности.ВНаличии
	|ИЗ
	|	втЗапасыИПотребностиВНаличии КАК втЗапасыИПотребности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО втЗапасыИПотребности.Назначение = проф_Назначения.Ссылка
	|			И (НЕ проф_Назначения.Подразделение В (&ПодразделенияСлужбыТОИР))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыИПотребностиПредварительно.Номенклатура КАК Номенклатура,
	|	ЗапасыИПотребностиПредварительно.Характеристика КАК Характеристика,
	|	ЗапасыИПотребностиПредварительно.Склад КАК Склад,
	|	СУММА(ЗапасыИПотребностиПредварительно.КОбеспечениюОстаток) - СУММА(ЗапасыИПотребностиПредварительно.ВНаличииОстаток) КАК Заказано,
	|	СУММА(ЗапасыИПотребностиПредварительно.ПоступитОстаток) КАК Поступит,
	|	СУММА(ЗапасыИПотребностиПредварительно.Доступно) КАК Доступно,
	|	СУММА(ЗапасыИПотребностиПредварительно.РезервНеТОиР) КАК РезервНеТОиР,
	|	СУММА(ЗапасыИПотребностиПредварительно.НаПеремещении) КАК НаПеремещении
	|ПОМЕСТИТЬ втЗапасыИПотребности
	|ИЗ
	|	(ВЫБРАТЬ
	|		проф_ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|		проф_ЗапасыИПотребностиОстатки.Характеристика КАК Характеристика,
	|		проф_ЗапасыИПотребностиОстатки.Склад КАК Склад,
	|		проф_ЗапасыИПотребностиОстатки.Назначение КАК Назначение,
	|		проф_ЗапасыИПотребностиОстатки.КОбеспечениюОстаток КАК КОбеспечениюОстаток,
	|		проф_ЗапасыИПотребностиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|		0 КАК ПоступитОстаток,
	|		0 КАК Доступно,
	|		0 КАК РезервНеТОиР,
	|		0 КАК НаПеремещении
	|	ИЗ
	|		РегистрНакопления.проф_ЗапасыИПотребности.Остатки(&ТекущаяДата, Склад В (&Склад)) КАК проф_ЗапасыИПотребностиОстатки
	|	ГДЕ
	|		проф_ЗапасыИПотребностиОстатки.КОбеспечениюОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		проф_ЗапасыИПотребностиОстатки.Номенклатура,
	|		проф_ЗапасыИПотребностиОстатки.Характеристика,
	|		проф_ЗапасыИПотребностиОстатки.Склад,
	|		проф_ЗапасыИПотребностиОстатки.Назначение,
	|		0,
	|		0,
	|		проф_ЗапасыИПотребностиОстатки.ПоступитОстаток,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.проф_ЗапасыИПотребности.Остатки(&ТекущаяДата, Склад В (&Склад)) КАК проф_ЗапасыИПотребностиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втДоступноРезервНеТОиР.Номенклатура,
	|		втДоступноРезервНеТОиР.Характеристика,
	|		втДоступноРезервНеТОиР.Склад,
	|		втДоступноРезервНеТОиР.Назначение,
	|		0,
	|		0,
	|		0,
	|		втДоступноРезервНеТОиР.Доступно,
	|		втДоступноРезервНеТОиР.РезервНеТОиР,
	|		0
	|	ИЗ
	|		втДоступноРезервНеТОиР КАК втДоступноРезервНеТОиР
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		проф_ЗаказыНаПеремещениеОстатки.Номенклатура,
	|		проф_ЗаказыНаПеремещениеОстатки.Характеристика,
	|		проф_ЗаказНаПеремещение.СкладОтправитель,
	|		ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка),
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		проф_ЗаказыНаПеремещениеОстатки.КОформлениюОстаток
	|	ИЗ
	|		РегистрНакопления.проф_ЗаказыНаПеремещение.Остатки(&ТекущаяДата, ) КАК проф_ЗаказыНаПеремещениеОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.проф_ЗаказНаПеремещение КАК проф_ЗаказНаПеремещение
	|			ПО проф_ЗаказыНаПеремещениеОстатки.ЗаказНаПеремещение = проф_ЗаказНаПеремещение.Ссылка) КАК ЗапасыИПотребностиПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыИПотребностиПредварительно.Характеристика,
	|	ЗапасыИПотребностиПредварительно.Номенклатура,
	|	ЗапасыИПотребностиПредварительно.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	втЗапасыИПотребности.Номенклатура КАК Номенклатура,
	|	втЗапасыИПотребности.Характеристика КАК Характеристика,
	|	втЗапасыИПотребности.Склад КАК Склад,
	|	СУММА(втЗапасыИПотребности.Доступно) + СУММА(втЗапасыИПотребности.РезервНеТОиР) КАК ОстатокНаСкладе,
	|	СУММА(втЗапасыИПотребности.Доступно) КАК СвободныйОстаток,
	|	СУММА(втЗапасыИПотребности.РезервНеТОиР) КАК Резерв,
	|	СУММА(втЗапасыИПотребности.Заказано) КАК Заказано,
	|	СУММА(втЗапасыИПотребности.Поступит) КАК Поступит,
	|	СУММА(втЗапасыИПотребности.НаПеремещении) КАК НаПеремещении,
	|	МАКСИМУМ(ЕСТЬNULL(МинимальныеОстатки.МинимальныйОстаток, 0)) КАК МинОстаток
	|ИЗ
	|	втЗапасыИПотребности КАК втЗапасыИПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ МинимальныеОстатки КАК МинимальныеОстатки
	|		ПО втЗапасыИПотребности.Номенклатура = МинимальныеОстатки.Номенклатура
	|			И втЗапасыИПотребности.Характеристика = МинимальныеОстатки.Характеристика
	|			И втЗапасыИПотребности.Склад = МинимальныеОстатки.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗапасыИПотребности.Номенклатура,
	|	втЗапасыИПотребности.Характеристика,
	|	втЗапасыИПотребности.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаДанных.Номенклатура КАК Номенклатура,
	|	втТаблицаДанных.Характеристика КАК Характеристика,
	|	втТаблицаАналогов.Номенклатура ЕСТЬ НЕ NULL  КАК ЕстьАналоги
	|ИЗ
	|	втТаблицаДанных КАК втТаблицаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаАналогов КАК втТаблицаАналогов
	|		ПО втТаблицаДанных.Номенклатура = втТаблицаАналогов.Номенклатура
	|			И втТаблицаДанных.Характеристика = втТаблицаАналогов.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаДанных.Номенклатура,
	|	втТаблицаДанных.Характеристика,
	|	втТаблицаАналогов.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТаблицаДанныхДляОбработки",	ТаблицаДанныхДляОбработки);
	Запрос.УстановитьПараметр("НачалоПериода", 				НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",			ОкончаниеПериода);
	Запрос.УстановитьПараметр("ТекущаяДата", 				ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ОтборПоНоменклатуре",		(Номенклатура.Количество() > 0));
	Запрос.УстановитьПараметр("Номенклатура", 				Номенклатура);
	Запрос.УстановитьПараметр("ПодразделенияСлужбыТОИР",	ПодразделенияСлужбыТОИР);
	Запрос.УстановитьПараметр("Склад", 						Склад);
	//++ Проф-ИТ, #375, Соловьев А.А., 30.11.2023
	Если ОбъектРемонта.Количество() = 0 Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта В (&ОбъектРемонта)", "");
	Иначе
		Запрос.УстановитьПараметр("ОбъектРемонта", 			ОбъектРемонта);
	КонецЕсли;
	//-- Проф-ИТ, #375, Соловьев А.А., 30.11.2023
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Выполнено", 
			Выборка.Номенклатура, Выборка.Характеристика, Ложь);
		
		НайденныеСтроки = ТаблицаДанных.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаТаблицы = ТаблицаДанных.Добавить();
		Иначе
			СтрокаТаблицы = НайденныеСтроки[0];
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка, "Номенклатура, Характеристика, ЕстьАналоги");
		
	КонецЦикла;
	
	ПеренумероватьСтроки(ТаблицаДанных);
	
	ОстаткиПоСкладам.Загрузить(РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить());
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПеренумероватьСтроки(ТаблицаДанных)
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		СтрокаТаблицы.НомерСтроки = ТаблицаДанных.Индекс(СтрокаТаблицы) + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СоздатьЗаказНаВнутреннееПотребление()
	
	СтруктураПодбора = Новый Структура("ВключитьВЗакупку, Выполнено", Истина, Ложь);
	СтрокиДляОбработки = ТаблицаДанных.НайтиСтроки(СтруктураПодбора);
	
	Если СтрокиДляОбработки.Количество() = 0 Тогда 
		ВызватьИсключение НСтр("ru = 'Выберите строки для обработки'");
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	
	МассивСтрокНоменклатуры = Новый Массив;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ОсновноеПодразделение",
		Справочники.СтруктураПредприятия.ПустаяСсылка());
	
	ОсновнойСклад = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР", "ОсновнойСклад",
		Справочники.Склады.ПустаяСсылка());
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("МассивСтрокНоменклатуры",		МассивСтрокНоменклатуры);
	ЗначенияЗаполнения.Вставить("ДатаОтгрузки", 				ТекущаяДата);
	ЗначенияЗаполнения.Вставить("Дата",							ТекущаяДата);
	ЗначенияЗаполнения.Вставить("Организация",					Организация);
	ЗначенияЗаполнения.Вставить("Подразделение",				Подразделение);
	ЗначенияЗаполнения.Вставить("Склад",						ОсновнойСклад);
	ЗначенияЗаполнения.Вставить("Ответственный",				ПараметрыСеанса.ТекущийПользователь);
	ЗначенияЗаполнения.Вставить("торо_Автор",					ПараметрыСеанса.ТекущийПользователь);
	ЗначенияЗаполнения.Вставить("проф_ЗаказДляЗакупки", 		Истина);
	ЗначенияЗаполнения.Вставить("Комментарий",					НСтр("ru = 'Расчет ТМЦ к закупке (АРМ)'"));
	ЗначенияЗаполнения.Вставить("проф_ХозяйственнаяОперация",
		Перечисления.проф_ХозяйственнаяОперация.СписаниеТоваровПоТребованию);
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Попытка
		
		ДокОбъект = Документы.ЗаказНаВнутреннееПотребление.СоздатьДокумент();
		ДокОбъект.Заполнить(СтруктураПараметров.ЗначенияЗаполнения);
		ДокументСсылка = Документы.ЗаказНаВнутреннееПотребление.ПолучитьСсылку(Новый УникальныйИдентификатор);
		ДокОбъект.УстановитьСсылкуНового(ДокументСсылка);
		
		Для Каждого СтрокаДанных Из СтрокиДляОбработки Цикл
			
			Если СтрокаДанных.КЗакупке <> 0 Тогда 
				НоваяСтрока = ДокОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных, "Номенклатура, Характеристика");
				НоваяСтрока.Количество = СтрокаДанных.КЗакупке;
				НоваяСтрока.КоличествоУпаковок = СтрокаДанных.КЗакупке;
				НоваяСтрока.проф_КЗаказу = Истина;
				СтрокаДанных.ЗаказНаВнутреннееПотребление = ДокументСсылка;
				СтрокаДанных.Выполнено = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		Для Каждого СтрокаДанных Из СтрокиДляОбработки Цикл
			
			Если СтрокаДанных.КЗакупке <> 0 Тогда 
				СтрокаДанных.ЗаказНаВнутреннееПотребление = Документы.ЗаказНаВнутреннееПотребление.ПустаяСсылка();
				СтрокаДанных.Выполнено = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
		ШаблонСообщения = НСтр("ru = 'При создании документа ""Заказ на внутренне потребеление"" произошла ошибка: %1.'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОписаниеОшибки());
		Возврат ТекстСообщения;
		
	КонецПопытки;
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции

//++ Проф-ИТ, #375, Соловьев А.А., 29.11.2023
&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()
	
	ПодразделенияСлужбыТОИР = Справочники.проф_НастройкиСистемы.ПолучитьСпЗначНастройкиСистемы(
		"Подразделения", "ПодразделенияСлужбыТОИР");
	
	СкладБГЛЦ = Справочники.проф_НастройкиСистемы.ПолучитьНастройкуСистемы(
		"ОтчетОбеспечениеРемонта", "СкладБГЛЦ");
	
	ТипЦены = Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить();
	Валюта = Константы.ВалютаУправленческогоУчета.Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСуммыКЗакупке()

	СуммаКЗакупке = 0;
	
	СтрокиКЗакупке = ТаблицаДанных.НайтиСтроки(Новый Структура("ВключитьВЗакупку", Истина));
	Для Каждого СтрокаКЗакупке Из СтрокиКЗакупке Цикл
		СуммаКЗакупке = СуммаКЗакупке + СтрокаКЗакупке.ПлановаяСтоимость;
	КонецЦикла;
	
КонецПроцедуры
//-- Проф-ИТ, #375, Соловьев А.А., 29.11.2023

#Область Аналоги

&НаСервере
Процедура ЗаменитьМатериалыНаАналоги(АдресВХранилище, Отказ = Ложь)
	
	МассивУдаляемыхСтрок	= Новый Массив;
	ИзменяемыеСтроки		= Новый Соответствие;
	
	НаборыМатериалов		= ПолучитьИзВременногоХранилища(АдресВХранилище);
	
	Для Каждого СтрокаАналог Из НаборыМатериалов.Материалы Цикл
		
		Попытка
			НомерСтроки = Число(СтрокаАналог.ID);
		Исключение
			НомерСтроки = 0;
		КонецПопытки;
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("НомерСтроки", НомерСтроки);
		СтруктураОтбора.Вставить("Номенклатура", СтрокаАналог.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", СтрокаАналог.ХарактеристикаНоменклатуры);
		
		НайденныеСтроки = ТаблицаДанных.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			ШаблонСообщения = НСтр("ru = 'Не найдено строки с номенклатурой: %1, %2.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтруктураОтбора.Номенклатура, СтруктураОтбора.ХарактеристикаНоменклатуры);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
			Продолжить;
		КонецЕсли;
		
		СтрокаДанных = НайденныеСтроки[0];
		
		Если СтрокаДанных.КЗакупке = СтрокаАналог.Количество Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаДанных);
		Иначе
			СтруктураДляИзменения = Новый Структура;
			СтруктураДляИзменения.Вставить("КЗакупке", СтрокаДанных.КЗакупке - СтрокаАналог.Количество);
			ИзменяемыеСтроки.Вставить(СтрокаДанных, СтруктураДляИзменения);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаМатЗатрат Из МассивУдаляемыхСтрок Цикл
		ТаблицаДанных.Удалить(СтрокаМатЗатрат);
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из ИзменяемыеСтроки Цикл
		КлючИЗначение.Ключ.КЗакупке = КлючИЗначение.Значение.КЗакупке;
	КонецЦикла;
	
	Для Каждого СтрокаАналога Из НаборыМатериалов.Аналоги Цикл
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Выполнено", Ложь);
		СтруктураОтбора.Вставить("Номенклатура", СтрокаАналога.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", СтрокаАналога.ХарактеристикаНоменклатуры);
		
		МассивСтрок = ТаблицаДанных.НайтиСтроки(СтруктураОтбора);
		Если МассивСтрок.Количество() > 0 Тогда
			СтрокаНоменклатуры = МассивСтрок[0];
			СтрокаНоменклатуры.КЗакупке = СтрокаНоменклатуры.КЗакупке + СтрокаАналога.Количество;
		Иначе
			СтрокаНоменклатуры = ТаблицаДанных.Добавить();
			СтрокаНоменклатуры.КЗакупке = СтрокаАналога.Количество;
			СтрокаНоменклатуры.Номенклатура = СтрокаАналога.Номенклатура;
			СтрокаНоменклатуры.Характеристика = СтрокаАналога.ХарактеристикаНоменклатуры;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьТаблицуСАналогами(НаборыМатериалов.Аналоги, "ХарактеристикаНоменклатуры");
	
	ПеренумероватьСтроки(ТаблицаДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьАналогиНаКлиенте()
	
	СтрокаНоменклатуры = Элементы.ТаблицаДанных.ТекущиеДанные;
	Если СтрокаНоменклатуры <> Неопределено И СтрокаНоменклатуры.ЕстьАналоги Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ID", СтрокаНоменклатуры.НомерСтроки);
		СтруктураПараметров.Вставить("Номенклатура", СтрокаНоменклатуры.Номенклатура);
		СтруктураПараметров.Вставить("ХарактеристикаНоменклатуры", СтрокаНоменклатуры.Характеристика);
		СтруктураПараметров.Вставить("Количество", СтрокаНоменклатуры.КЗакупке);
		
		СтруктураПараметров.Вставить("РемонтыОборудования_ID", "");
		СтруктураПараметров.Вставить("ЕдиницаИзмерения", "");
		СтруктураПараметров.Вставить("КоличествоЕдиниц", СтрокаНоменклатуры.КЗакупке);
		СтруктураПараметров.Вставить("ОбъектРемонта", ПредопределенноеЗначение("Справочник.торо_ПричиныПростояОборудования.ПустаяСсылка"));
		СтруктураПараметров.Вставить("ВидРемонта", ПредопределенноеЗначение("Справочник.торо_ВидыРемонтов.ПустаяСсылка"));
		СтруктураПараметров.Вставить("ПодразделениеИсполнитель", ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка"));
		СтруктураПараметров.Вставить("ТехКарта", ПредопределенноеЗначение("Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка"));
		СтруктураПараметров.Вставить("ДатаРемонта", Неопределено);
		СтруктураПараметров.Вставить("СтраховойЗапас", Истина);
		СтруктураПараметров.Вставить("Склад", Склад);
		
		ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораАналогаНоменклатурыДляРемонта",
			СтруктураПараметров, ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//-- Проф-ИТ, #174, Соловьев А.А., 13.10.2023

