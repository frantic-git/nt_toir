
//++ Проф-ИТ, #167, Сергеев Д., 15.09.2023

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ИспользоватьАналоги = Истина;
	
	УстановитьВидимостьЭлементовИспользоватьАналоги();	
	Объект.Ответственный = Пользователи.АвторизованныйПользователь();
	Объект.Автор         = Объект.Ответственный;
	объект.ДатаПлана     = ТекущаяДата();
	
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	ТипЦены = Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить();
	Валюта = Константы.ВалютаУправленческогоУчета.Получить();
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	ПодразделенияСлужбыТОИР = Справочники.проф_НастройкиСистемы.ПолучитьСпЗначНастройкиСистемы(
		"Подразделения", "ПодразделенияСлужбыТОИР");
	проф_ОбщегоНазначенияВызовСервера.ВывестиТоварыВПути(ЭтотОбъект, Номенклатура, ПодразделенияСлужбыТОИР, ЭтотОбъект);
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьАналогиПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементовИспользоватьАналоги();  
	ЗаполнитьОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ЗаполнитьОбновитьНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьОбновить(Команда)
	ЗаполнитьОбновитьНаСервере();
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	Элементы["СписокТоварыВПути"].Обновить();
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПланЗакупок(Команда) 
	
	Форма = ПолучитьФорму("Документ.проф_ПланЗакупок.Форма.ФормаДокумента");
	ДанныеФормы = Форма.Объект; // Получаем объект формы в переменную
	ЗаполнитьДокументНаСервере(ДанныеФормы); // Заполняем документ на сервере
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект); // копируем наш объект в объект формы и далее открываем ее
	Форма.Открыть();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалыДерево

&НаКлиенте
Процедура МатериалыДеревоИспользоватьАналогПриИзменении(Элемент) 
	
	МатериалыДеревоИспользоватьАналогПриИзмененииНаСервере();
	
	текДанные = Элементы.МатериалыДерево.ТекущиеДанные;
	текАналог = текДанные.Номенклатура;
		
	ПараметрыОтбора = Новый Структура("Аналог", текАналог);
    НайденныеСтроки = Аналоги.НайтиСтроки(ПараметрыОтбора);  
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].ИспользоватьАналог = ПолучитьСуммуИспользоватьАналог(текАналог);
		Если НайденныеСтроки[0].ПрогнозныеОстаткиНаСкладах = 0 Тогда
			НайденныеСтроки[0].НераспределенныйОстаток = НайденныеСтроки[0].ОстаткиНаСкладахТОиРТекущие
				+ НайденныеСтроки[0].ОстаткиНаЦентральномСкладе
				- НайденныеСтроки[0].ИспользоватьАналог;
		Иначе
			НайденныеСтроки[0].НераспределенныйОстаток = НайденныеСтроки[0].ПрогнозныеОстаткиНаСкладах
				- НайденныеСтроки[0].ИспользоватьАналог;		 
		КонецЕсли;	
		
		// Пересчитать Запланировано для замены в качестве аналога 
		ЭлементыКорняДерева = МатериалыДерево.ПолучитьЭлементы();
		Для каждого СтрокаНоменклатура Из ЭлементыКорняДерева Цикл
			Если СтрокаНоменклатура.Номенклатура = текАналог Тогда
				
				СтрокаНоменклатура.ЗапланированоАналог = НайденныеСтроки[0].ИспользоватьАналог;
				
				Если Объект.ИспользоватьАналоги Тогда
					СтрокаНоменклатура.РекомендованоКЗакупке = СтрокаНоменклатура.ПлановыйРасходПоППР 
					- СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах 
					+ СтрокаНоменклатура.МинимальныйОстаток
					- СтрокаНоменклатура.ИспользоватьАналог
					+ СтрокаНоменклатура.ЗапланированоАналог;
				Иначе
					СтрокаНоменклатура.РекомендованоКЗакупке = СтрокаНоменклатура.ПлановыйРасходПоППР 
					- СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах 
					+ СтрокаНоменклатура.МинимальныйОстаток;		
				КонецЕсли;
				СтрокаНоменклатура.РекомендованоКЗакупке = ?(СтрокаНоменклатура.РекомендованоКЗакупке < 0, 0, СтрокаНоменклатура.РекомендованоКЗакупке);				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	ПересчитатьСуммуНоменклатуры(текДанные.НоменклатураРодитель); 
	
КонецПроцедуры  

&НаСервере
Процедура МатериалыДеревоИспользоватьАналогПриИзмененииНаСервере()

	

КонецПроцедуры // МатериалыДеревоИспользоватьАналогПриИзмененииНаСервере()

&НаКлиенте
Процедура МатериалыДеревоПриАктивизацииСтроки(Элемент)
	УстановитьОтборНаСвязанныеТаблицы();
КонецПроцедуры 

//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
&НаКлиенте
Процедура МатериалыДеревоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.МатериалыДерево.ТекущиеДанные;
	ТекущиеДанные.ПлановаяСтоимость = ТекущиеДанные.ПлановаяЦена * ТекущиеДанные.РекомендованоКЗакупке;
	
	СуммаКЗакупке = 0;
	
	СтрокиДерева = МатериалыДерево.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.ПометитьКФормированиюПланаЗакупок Тогда 
			СуммаКЗакупке = СуммаКЗакупке + СтрокаДерева.ПлановаяСтоимость;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборНаСвязанныеТаблицы()
	
	ТекущиеДанные = Элементы.МатериалыДерево.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		текНоменклатура = ?(ЗначениеЗаполнено(ТекущиеДанные.НоменклатураРодитель), ТекущиеДанные.НоменклатураРодитель, ТекущиеДанные.Номенклатура);
		ОтборСтрок = Новый Структура("Материал", текНоменклатура);
		Элементы.Аналоги.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
		
		ОтборСтрок = Новый Структура("Номенклатура", текНоменклатура);
		Элементы.ДокументыПланРасход.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
		Элементы.ДокументыПланРасходТекПериод.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
		
		//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
		ЭтотОбъект["СписокТоварыВПути"].Отбор.Элементы.Очистить();
		
		ЭлементОтбора = ЭтотОбъект["СписокТоварыВПути"].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекущиеДанные.Номенклатура;
		//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
		
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
		ОтборСтрокОстатки = Новый Структура("Номенклатура", ТекущиеДанные.Номенклатура);
	Иначе
		ОтборСтрокОстатки = Новый Структура("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	КонецЕсли;
	
	Элементы.ОстаткиПоСкладам.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрокОстатки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуНоменклатуры(НомРодитель)

	ИспользоватьАналогСумма = 0;
	ЭлементыКорняДерева = МатериалыДерево.ПолучитьЭлементы();
	
	Для каждого СтрокаНоменклатура Из ЭлементыКорняДерева Цикл
		Если СтрокаНоменклатура.Номенклатура = НомРодитель Тогда
			
			СтрокиАналоги = СтрокаНоменклатура.ПолучитьЭлементы();
			
			Для каждого СтрокаАналог Из СтрокиАналоги Цикл
				ИспользоватьАналогСумма = ИспользоватьАналогСумма + СтрокаАналог.ИспользоватьАналог;
			КонецЦикла;
			
			СтрокаНоменклатура.ИспользоватьАналог = ИспользоватьАналогСумма;
			Если Объект.ИспользоватьАналоги Тогда
				СтрокаНоменклатура.РекомендованоКЗакупке = СтрокаНоменклатура.ПлановыйРасходПоППР 
															- СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах 
															+ СтрокаНоменклатура.МинимальныйОстаток
															- СтрокаНоменклатура.ИспользоватьАналог
															+ СтрокаНоменклатура.ЗапланированоАналог;
			Иначе
				СтрокаНоменклатура.РекомендованоКЗакупке = СтрокаНоменклатура.ПлановыйРасходПоППР 
															- СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах 
															+ СтрокаНоменклатура.МинимальныйОстаток;
			КонецЕсли;
			СтрокаНоменклатура.РекомендованоКЗакупке = ?(СтрокаНоменклатура.РекомендованоКЗакупке < 0, 0, СтрокаНоменклатура.РекомендованоКЗакупке);
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбновитьНаСервере()
	
	МатериалыДерево.ПолучитьЭлементы().Очистить();
	Аналоги.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ПлановыеРемонтныеРаботы.ID КАК ID,
	|	торо_ПлановыеРемонтныеРаботы.Регистратор КАК Регистратор,
	|	торо_ПлановыеРемонтныеРаботы.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ID_Регистратор_Период
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы КАК торо_ПлановыеРемонтныеРаботы
	|ГДЕ
	|	торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот >= &ДатаНачала
	|	И торо_ПлановыеРемонтныеРаботы.ДатаОкончанияРемонтныхРабот <= &ДатаОкончания
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Отменен
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Замещен
	|	И торо_ПлановыеРемонтныеРаботы.Подразделение = &Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ID_Регистратор_Период.ID КАК ID,
	|	МАКСИМУМ(ВТ_ID_Регистратор_Период.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ID_МаксПериод
	|ИЗ
	|	ВТ_ID_Регистратор_Период КАК ВТ_ID_Регистратор_Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ID_Регистратор_Период.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ID_Регистратор_Период.ID КАК ID,
	|	ВТ_ID_Регистратор_Период.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ_ID_Регистратор
	|ИЗ
	|	ВТ_ID_Регистратор_Период КАК ВТ_ID_Регистратор_Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ID_МаксПериод КАК ВТ_ID_МаксПериод
	|		ПО ВТ_ID_Регистратор_Период.ID = ВТ_ID_МаксПериод.ID
	|			И ВТ_ID_Регистратор_Период.Период = ВТ_ID_МаксПериод.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ID.ID КАК ID
	|ПОМЕСТИТЬ ВТ_ID
	|ИЗ
	|	ВТ_ID_Регистратор_Период КАК ВТ_ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	торо_ПлановыеРемонтныеРаботы.ID КАК ID,
	|	торо_ПлановыеРемонтныеРаботы.Регистратор КАК Регистратор,
	|	торо_ПлановыеРемонтныеРаботы.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ID_ТекПериод_Регистратор_Период
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы КАК торо_ПлановыеРемонтныеРаботы
	|ГДЕ
	|	торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот >= &ДатаПлана
	|	И торо_ПлановыеРемонтныеРаботы.ДатаОкончанияРемонтныхРабот < &ДатаНачала
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Отменен
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Замещен
	|	И торо_ПлановыеРемонтныеРаботы.Подразделение = &Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ID_ТекПериод_Регистратор_Период.ID КАК ID,
	|	МАКСИМУМ(ВТ_ID_ТекПериод_Регистратор_Период.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ID_ТекПериод_МаксПериод
	|ИЗ
	|	ВТ_ID_ТекПериод_Регистратор_Период КАК ВТ_ID_ТекПериод_Регистратор_Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ID_ТекПериод_Регистратор_Период.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ID_ТекПериод_Регистратор.ID КАК ID
	|ПОМЕСТИТЬ ВТ_ID_ТекПериод
	|ИЗ
	|	ВТ_ID_ТекПериод_Регистратор_Период КАК ВТ_ID_ТекПериод_Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ID_ТекПериод_Регистратор_Период.Регистратор КАК Регистратор,
	|	ВТ_ID_ТекПериод_Регистратор_Период.ID КАК ID
	|ПОМЕСТИТЬ ВТ_ID_ТекПериод_Регистратор
	|ИЗ
	|	ВТ_ID_ТекПериод_МаксПериод КАК ВТ_ID_ТекПериод_МаксПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ID_ТекПериод_Регистратор_Период КАК ВТ_ID_ТекПериод_Регистратор_Период
	|		ПО ВТ_ID_ТекПериод_МаксПериод.ID = ВТ_ID_ТекПериод_Регистратор_Период.ID
	|			И ВТ_ID_ТекПериод_МаксПериод.Период = ВТ_ID_ТекПериод_Регистратор_Период.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.ID КАК ID
	|ПОМЕСТИТЬ ВТ_Запчасти_ID
	|ИЗ
	|	(ВЫБРАТЬ
	|		тЗапчасти.Номенклатура КАК Номенклатура,
	|		тЗапчасти.Количество КАК Количество,
	|		ВТ_ID.ID КАК ID
	|	ИЗ
	|		Документ.торо_ПроектныеЗатратыНаРемонты.Запчасти КАК тЗапчасти
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ID КАК ВТ_ID
	|				ПО (ВТ_ID.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта)
	|			ПО тЗапчасти.Ссылка = торо_ПроектныеЗатратыНаРемонты.Ссылка
	|			И торо_ПроектныеЗатратыНаРемонты.ОбъектРемонта В (&ОбъектРемонта)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		тМатериальныеЗатраты.Номенклатура,
	|		тМатериальныеЗатраты.Количество,
	|		ВТ_ID.ID
	|	ИЗ
	|		Документ.торо_ПроектныеЗатратыНаРемонты.МатериальныеЗатраты КАК тМатериальныеЗатраты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ID КАК ВТ_ID
	|				ПО (ВТ_ID.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта)
	|			ПО тМатериальныеЗатраты.Ссылка = торо_ПроектныеЗатратыНаРемонты.Ссылка
	|			И торо_ПроектныеЗатратыНаРемонты.ОбъектРемонта В (&ОбъектРемонта)) КАК ВложенныйЗапрос
	|ГДЕ
	|	&ОтборПоНоменклатуре
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Запчасти_ID.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_Запчасти_ID.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_Запчасти
	|ИЗ
	|	ВТ_Запчасти_ID КАК ВТ_Запчасти_ID
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Запчасти_ID.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.ID КАК ID
	|ПОМЕСТИТЬ ВТ_ЗапчастиТекПериод_ID
	|ИЗ
	|	(ВЫБРАТЬ
	|		тЗапчасти.Номенклатура КАК Номенклатура,
	|		тЗапчасти.Количество КАК Количество,
	|		ВТ_ID_ТекПериод.ID КАК ID
	|	ИЗ
	|		Документ.торо_ПроектныеЗатратыНаРемонты.Запчасти КАК тЗапчасти
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ID_ТекПериод КАК ВТ_ID_ТекПериод
	|				ПО (ВТ_ID_ТекПериод.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта)
	|			ПО тЗапчасти.Ссылка = торо_ПроектныеЗатратыНаРемонты.Ссылка
	|			И торо_ПроектныеЗатратыНаРемонты.ОбъектРемонта В (&ОбъектРемонта)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		тМатериальныеЗатраты.Номенклатура,
	|		тМатериальныеЗатраты.Количество,
	|		ВТ_ID_ТекПериод.ID
	|	ИЗ
	|		Документ.торо_ПроектныеЗатратыНаРемонты.МатериальныеЗатраты КАК тМатериальныеЗатраты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ПроектныеЗатратыНаРемонты КАК торо_ПроектныеЗатратыНаРемонты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ID_ТекПериод КАК ВТ_ID_ТекПериод
	|				ПО (ВТ_ID_ТекПериод.ID = торо_ПроектныеЗатратыНаРемонты.IDРемонта)
	|			ПО тМатериальныеЗатраты.Ссылка = торо_ПроектныеЗатратыНаРемонты.Ссылка
	|			И торо_ПроектныеЗатратыНаРемонты.ОбъектРемонта В (&ОбъектРемонта)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗапчастиТекПериод_ID.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ЗапчастиТекПериод_ID.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_ЗапчастиТекПериод
	|ИЗ
	|	ВТ_ЗапчастиТекПериод_ID КАК ВТ_ЗапчастиТекПериод_ID
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗапчастиТекПериод_ID.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_Назначения.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Назначение
	|ИЗ
	|	Справочник.проф_Назначения КАК проф_Назначения
	|ГДЕ
	|	проф_Назначения.Подразделение = &Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_НастройкиСистемы.Значение КАК Значение
	|ПОМЕСТИТЬ ВТ_ЦентрСклад
	|ИЗ
	|	Справочник.проф_НастройкиСистемы КАК проф_НастройкиСистемы
	|ГДЕ
	|	проф_НастройкиСистемы.Наименование = ""ЦентральныйСкладБилибино""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_НастройкиСистемы.Значение КАК Значение
	|ПОМЕСТИТЬ ВТ_ПодрТОИР
	|ИЗ
	|	Справочник.проф_НастройкиСистемы КАК проф_НастройкиСистемы
	|ГДЕ
	|	проф_НастройкиСистемы.Наименование = ""ПодразделенияСлужбыТОиР""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	тСписок.Значение
	|ИЗ
	|	Справочник.проф_НастройкиСистемы.Список КАК тСписок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_НастройкиСистемы КАК проф_НастройкиСистемы
	|		ПО тСписок.Ссылка = проф_НастройкиСистемы.Ссылка
	|ГДЕ
	|	проф_НастройкиСистемы.Наименование = ""ПодразделенияСлужбыТОиР""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_Назначения.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_НазначениеТОИР
	|ИЗ
	|	Справочник.проф_Назначения КАК проф_Назначения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПодрТОИР КАК ВТ_ПодрТОИР
	|		ПО проф_Назначения.Подразделение = ВТ_ПодрТОИР.Значение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(проф_ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК ВНаличииОстаток
	|ПОМЕСТИТЬ ВТ_ТоварыНаСкладахЦС
	|ИЗ
	|	РегистрНакопления.проф_ТоварыНаСкладах.Остатки(
	|			,
	|			(Назначение В
	|					(ВЫБРАТЬ
	|						ВТ_НазначениеТОИР.Ссылка КАК Ссылка
	|					ИЗ
	|						ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР)
	|				ИЛИ Назначение = ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка))
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВТ_ЦентрСклад.Значение КАК Значение
	|					ИЗ
	|						ВТ_ЦентрСклад КАК ВТ_ЦентрСклад)) КАК проф_ТоварыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	проф_ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(проф_ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК ВНаличииОстаток
	|ПОМЕСТИТЬ ВТ_ТоварыНаСкладахЦС2
	|ИЗ
	|	РегистрНакопления.проф_ТоварыНаСкладах.Остатки(
	|			,
	|			(Назначение В
	|					(ВЫБРАТЬ
	|						ВТ_НазначениеТОИР.Ссылка КАК Ссылка
	|					ИЗ
	|						ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР)
	|				ИЛИ Назначение = ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка))
	|				И Склад В
	|					(ВЫБРАТЬ
	|						ВТ_ЦентрСклад.Значение КАК Значение
	|					ИЗ
	|						ВТ_ЦентрСклад КАК ВТ_ЦентрСклад)) КАК проф_ТоварыНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	проф_ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ПОМЕСТИТЬ ВТ_ТоварыНаСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(, &ОтборПоСкладам) КАК ТоварыНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(проф_ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ЗаказыПоставщику
	|ИЗ
	|	РегистрНакопления.проф_ЗаказыПоставщику.Остатки(
	|			,
	|			Назначение В
	|					(ВЫБРАТЬ
	|						ВТ_НазначениеТОИР.Ссылка КАК Ссылка
	|					ИЗ
	|						ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР)
	|				И (ЗаказПоставщику.проф_Статус = ЗНАЧЕНИЕ(Перечисление.проф_ПеречислениеСтатусыЗаказовПоставщикам.Подтвержден)
	|					ИЛИ ЗаказПоставщику.проф_Статус = ЗНАЧЕНИЕ(Перечисление.проф_ПеречислениеСтатусыЗаказовПоставщикам.Согласован))) КАК проф_ЗаказыПоставщикуОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	проф_ЗаказыПоставщикуОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_АналогиНоменклатурыДляРемонтовСрезПоследних.Материал КАК Материал,
	|	торо_АналогиНоменклатурыДляРемонтовСрезПоследних.Аналог КАК Аналог,
	|	торо_АналогиНоменклатурыДляРемонтовСрезПоследних.Регистратор.Номер КАК РегистраторНомер,
	|	ВЫРАЗИТЬ(торо_АналогиНоменклатурыДляРемонтовСрезПоследних.Регистратор.УказаниеПоПрименению КАК СТРОКА(250)) КАК УказаниеПоПрименению,
	|	торо_АналогиНоменклатурыДляРемонтовСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТ_Аналоги
	|ИЗ
	|	РегистрСведений.торо_АналогиНоменклатурыДляРемонтов.СрезПоследних(
	|			,
	|			Материал В
	|				(ВЫБРАТЬ
	|					ВТ_Запчасти.Номенклатура КАК Номенклатура
	|				ИЗ
	|					ВТ_Запчасти КАК ВТ_Запчасти)) КАК торо_АналогиНоменклатурыДляРемонтовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинОстаткиНомСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(МинОстаткиНомСрезПоследних.МинимальныйОстаток) КАК МинимальныйОстаток
	|ПОМЕСТИТЬ ВТ_МинОстаткиНом
	|ИЗ
	|	РегистрСведений.торо_МинимальныеОстаткиНоменклатуры.СрезПоследних КАК МинОстаткиНомСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	МинОстаткиНомСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	проф_ЗаказыПоставщику.Номенклатура КАК Номенклатура,
	|	проф_ЗаказыПоставщику.ДатаПоставки КАК ДатаПоставки,
	|	проф_ЗаказыПоставщику.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ЗаказыПост
	|ИЗ
	|	РегистрНакопления.проф_ЗаказыПоставщику КАК проф_ЗаказыПоставщику
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Запчасти КАК ВТ_Запчасти
	|		ПО проф_ЗаказыПоставщику.Номенклатура = ВТ_Запчасти.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказыПост.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ВТ_ЗаказыПост.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ЗаказыПостМин
	|ИЗ
	|	ВТ_ЗаказыПост КАК ВТ_ЗаказыПост
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗаказыПост.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказыПост.Номенклатура КАК Номенклатура,
	|	ВТ_ЗаказыПост.ДатаПоставки КАК ДатаПоставки,
	|	ВТ_ЗаказыПост.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ЗаказыПостДаты
	|ИЗ
	|	ВТ_ЗаказыПост КАК ВТ_ЗаказыПост
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаказыПостМин КАК ВТ_ЗаказыПостМин
	|		ПО ВТ_ЗаказыПост.Номенклатура = ВТ_ЗаказыПостМин.Номенклатура
	|			И ВТ_ЗаказыПост.Период = ВТ_ЗаказыПостМин.Период
	|;
	|
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(проф_ЗапасыИПотребностиОстатки.КОбеспечениюОстаток) КАК КОбеспечению
	|ПОМЕСТИТЬ втЗапасыИПотребностиКОбеспечению
	|ИЗ
	|	РегистрНакопления.проф_ЗапасыИПотребности.Остатки(
	|			&ТекущаяДата,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ_Запчасти.Номенклатура КАК Номенклатура
	|				ИЗ
	|					ВТ_Запчасти КАК ВТ_Запчасти
	|					
	|					ОБЪЕДИНИТЬ ВСЕ 
	|					
	|					ВЫБРАТЬ
	|						ВТ_Аналоги.Аналог
	|					ИЗ
	|						ВТ_Аналоги КАК ВТ_Аналоги)
	|			И Назначение В
	|				(ВЫБРАТЬ
	|					ВТ_НазначениеТОИР.Ссылка КАК Ссылка
	|				ИЗ
	|					ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР)) КАК проф_ЗапасыИПотребностиОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	проф_ЗапасыИПотребностиОстатки.Номенклатура
	|;
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Запчасти.Номенклатура КАК Номенклатура,
	|	ВТ_Аналоги.Аналог КАК Аналог,
	|	ВТ_Запчасти.Количество КАК ПлановыйРасходПоППР,
	|	ЕСТЬNULL(ВТ_ТоварыНаСкладах.ВНаличииОстаток, 0) КАК ОстаткиНаСкладахТОиРТекущие,
	|	ЕСТЬNULL(ВТ_ТоварыНаСкладахЦС2.ВНаличииОстаток, 0) КАК ОстаткиНаЦентральномСкладе,
	|	ЕСТЬNULL(ВТ_ЗапчастиТекПериод.Количество, 0) КАК ПрогнозныйРасход,
	|	ЕСТЬNULL(втЗапасыИПотребности.КОбеспечению, 0) КАК ЗВП,
	|	ЕСТЬNULL(ВТ_ЗаказыПоставщику.КоличествоОстаток, 0) КАК Заказано,
	|	ЕСТЬNULL(ВТ_МинОстаткиНом.МинимальныйОстаток, 0) КАК МинимальныйОстаток,
	|	ЕСТЬNULL(ВТ_ЗаказыПостДаты.ДатаПоставки, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоставки
	|ПОМЕСТИТЬ ВТ_МатериалыАналоги
	|ИЗ
	|	ВТ_Запчасти КАК ВТ_Запчасти
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыНаСкладахЦС2 КАК ВТ_ТоварыНаСкладахЦС2
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_ТоварыНаСкладахЦС2.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыНаСкладах КАК ВТ_ТоварыНаСкладах
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_ТоварыНаСкладах.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗапчастиТекПериод КАК ВТ_ЗапчастиТекПериод
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_ЗапчастиТекПериод.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗапасыИПотребностиКОбеспечению КАК втЗапасыИПотребности
	|		ПО ВТ_Запчасти.Номенклатура = втЗапасыИПотребности.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыПоставщику КАК ВТ_ЗаказыПоставщику
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_ЗаказыПоставщику.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Аналоги КАК ВТ_Аналоги
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_Аналоги.Материал
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МинОстаткиНом КАК ВТ_МинОстаткиНом
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_МинОстаткиНом.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыПостДаты КАК ВТ_ЗаказыПостДаты
	|		ПО ВТ_Запчасти.Номенклатура = ВТ_ЗаказыПостДаты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Аналоги.Аналог КАК Аналог,
	|	ВТ_Аналоги.РегистраторНомер КАК РегистраторНомер,
	|	ВТ_Аналоги.Материал КАК Материал,
	|	ВТ_Аналоги.УказаниеПоПрименению КАК УказаниеПоПрименению,
	|	ВТ_Аналоги.Период КАК Период
	|ПОМЕСТИТЬ ВТ_АналогиФильтр
	|ИЗ
	|	ВТ_Аналоги КАК ВТ_Аналоги
	|;
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|ПОМЕСТИТЬ втЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ТекущаяДата,
	|			(Номенклатура, ВидЦены) В
	|				(ВЫБРАТЬ
	|					ВТ_Запчасти.Номенклатура КАК Номенклатура,
	|					&ТипЦены КАК ВидЦены
	|				ИЗ
	|					ВТ_Запчасти КАК ВТ_Запчасти)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Регистр.Склад КАК Склад,
	|	Регистр.Номенклатура КАК Номенклатура,
	|	Регистр.МинимальныйОстаток КАК МинимальныйОстаток
	|ПОМЕСТИТЬ МинимальныеОстатки
	|ИЗ
	|	РегистрСведений.торо_МинимальныеОстаткиНоменклатуры.СрезПоследних(
	|			&ТекущаяДата,
	|			&ОтборПоСкладам
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_Запчасти.Номенклатура КАК Номенклатура
	|					ИЗ
	|						ВТ_Запчасти КАК ВТ_Запчасти
	|					
	|					ОБЪЕДИНИТЬ ВСЕ 
	|					
	|					ВЫБРАТЬ
	|						ВТ_Аналоги.Аналог
	|					ИЗ
	|						ВТ_Аналоги КАК ВТ_Аналоги)) КАК Регистр
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|	проф_ЗапасыИПотребностиОстатки.Склад КАК Склад,
	|	проф_ЗапасыИПотребностиОстатки.Назначение КАК Назначение,
	|	проф_ЗапасыИПотребностиОстатки.ВНаличииОстаток - проф_ЗапасыИПотребностиОстатки.РезервироватьНаСкладеОстаток - проф_ЗапасыИПотребностиОстатки.РезервироватьПоМереПоступленияОстаток КАК ВНаличии
	|ПОМЕСТИТЬ втЗапасыИПотребностиВНаличии
	|ИЗ
	|	РегистрНакопления.проф_ЗапасыИПотребности.Остатки(
	|			&ТекущаяДата,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_Запчасти.Номенклатура КАК Номенклатура
	|					ИЗ
	|						ВТ_Запчасти КАК ВТ_Запчасти
	|					
	|					ОБЪЕДИНИТЬ ВСЕ 
	|					
	|					ВЫБРАТЬ
	|						ВТ_Аналоги.Аналог
	|					ИЗ
	|						ВТ_Аналоги КАК ВТ_Аналоги)) КАК проф_ЗапасыИПотребностиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗапасыИПотребности.Номенклатура КАК Номенклатура,
	|	втЗапасыИПотребности.Назначение КАК Назначение,
	|	втЗапасыИПотребности.Склад КАК Склад,
	|	втЗапасыИПотребности.ВНаличии КАК Доступно,
	|	0 КАК РезервНеТОиР
	|ПОМЕСТИТЬ втДоступноРезервНеТОиР
	|ИЗ
	|	втЗапасыИПотребностиВНаличии КАК втЗапасыИПотребности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО втЗапасыИПотребности.Назначение = проф_Назначения.Ссылка
	|			И (проф_Назначения.Подразделение В 
	|				(ВЫБРАТЬ 
	|					ВТ_НазначениеТОИР.Ссылка КАК Ссылка 
	|				ИЗ 
	|					ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втЗапасыИПотребности.Номенклатура,
	|	втЗапасыИПотребности.Назначение,
	|	втЗапасыИПотребности.Склад,
	|	втЗапасыИПотребности.ВНаличии,
	|	0
	|ИЗ
	|	втЗапасыИПотребностиВНаличии КАК втЗапасыИПотребности
	|ГДЕ
	|	втЗапасыИПотребности.Назначение = ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втЗапасыИПотребности.Номенклатура,
	|	втЗапасыИПотребности.Назначение,
	|	втЗапасыИПотребности.Склад,
	|	0,
	|	втЗапасыИПотребности.ВНаличии
	|ИЗ
	|	втЗапасыИПотребностиВНаличии КАК втЗапасыИПотребности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.проф_Назначения КАК проф_Назначения
	|		ПО втЗапасыИПотребности.Назначение = проф_Назначения.Ссылка
	|			И (НЕ проф_Назначения.Подразделение В 
	|				(ВЫБРАТЬ 
	|					ВТ_НазначениеТОИР.Ссылка КАК Ссылка 
	|				ИЗ 
	|					ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыИПотребностиПредварительно.Номенклатура КАК Номенклатура,
	|	ЗапасыИПотребностиПредварительно.Склад КАК Склад,
	|	СУММА(ЗапасыИПотребностиПредварительно.КОбеспечениюОстаток) - СУММА(ЗапасыИПотребностиПредварительно.ВНаличииОстаток) КАК Заказано,
	|	СУММА(ЗапасыИПотребностиПредварительно.ПоступитОстаток) КАК Поступит,
	|	СУММА(ЗапасыИПотребностиПредварительно.Доступно) КАК Доступно,
	|	СУММА(ЗапасыИПотребностиПредварительно.РезервНеТОиР) КАК РезервНеТОиР,
	|	СУММА(ЗапасыИПотребностиПредварительно.НаПеремещении) КАК НаПеремещении
	|ПОМЕСТИТЬ втЗапасыИПотребности
	|ИЗ
	|	(ВЫБРАТЬ
	|		проф_ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
	|		проф_ЗапасыИПотребностиОстатки.Склад КАК Склад,
	|		проф_ЗапасыИПотребностиОстатки.Назначение КАК Назначение,
	|		проф_ЗапасыИПотребностиОстатки.КОбеспечениюОстаток КАК КОбеспечениюОстаток,
	|		проф_ЗапасыИПотребностиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|		0 КАК ПоступитОстаток,
	|		0 КАК Доступно,
	|		0 КАК РезервНеТОиР,
	|		0 КАК НаПеремещении
	|	ИЗ
	|		РегистрНакопления.проф_ЗапасыИПотребности.Остатки(&ТекущаяДата, ) КАК проф_ЗапасыИПотребностиОстатки
	|	ГДЕ
	|		проф_ЗапасыИПотребностиОстатки.КОбеспечениюОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		проф_ЗапасыИПотребностиОстатки.Номенклатура,
	|		проф_ЗапасыИПотребностиОстатки.Склад,
	|		проф_ЗапасыИПотребностиОстатки.Назначение,
	|		0,
	|		0,
	|		проф_ЗапасыИПотребностиОстатки.ПоступитОстаток,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.проф_ЗапасыИПотребности.Остатки(&ТекущаяДата, ) КАК проф_ЗапасыИПотребностиОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втДоступноРезервНеТОиР.Номенклатура,
	|		втДоступноРезервНеТОиР.Склад,
	|		втДоступноРезервНеТОиР.Назначение,
	|		0,
	|		0,
	|		0,
	|		втДоступноРезервНеТОиР.Доступно,
	|		втДоступноРезервНеТОиР.РезервНеТОиР,
	|		0
	|	ИЗ
	|		втДоступноРезервНеТОиР КАК втДоступноРезервНеТОиР
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		проф_ЗаказыНаПеремещениеОстатки.Номенклатура,
	|		проф_ЗаказНаПеремещение.СкладОтправитель,
	|		ЗНАЧЕНИЕ(Справочник.проф_Назначения.ПустаяСсылка),
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		проф_ЗаказыНаПеремещениеОстатки.КОформлениюОстаток
	|	ИЗ
	|		РегистрНакопления.проф_ЗаказыНаПеремещение.Остатки(&ТекущаяДата, ) КАК проф_ЗаказыНаПеремещениеОстатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.проф_ЗаказНаПеремещение КАК проф_ЗаказНаПеремещение
	|			ПО проф_ЗаказыНаПеремещениеОстатки.ЗаказНаПеремещение = проф_ЗаказНаПеремещение.Ссылка) КАК ЗапасыИПотребностиПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыИПотребностиПредварительно.Номенклатура,
	|	ЗапасыИПотребностиПредварительно.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	втЗапасыИПотребности.Номенклатура КАК Номенклатура,
	|	втЗапасыИПотребности.Склад КАК Склад,
	|	СУММА(втЗапасыИПотребности.Доступно) + СУММА(втЗапасыИПотребности.РезервНеТОиР) КАК ОстатокНаСкладе,
	|	СУММА(втЗапасыИПотребности.Доступно) КАК СвободныйОстаток,
	|	СУММА(втЗапасыИПотребности.РезервНеТОиР) КАК Резерв,
	|	СУММА(втЗапасыИПотребности.Заказано) КАК Заказано,
	|	СУММА(втЗапасыИПотребности.Поступит) КАК Поступит,
	|	СУММА(втЗапасыИПотребности.НаПеремещении) КАК НаПеремещении,
	|	МАКСИМУМ(ЕСТЬNULL(МинимальныеОстатки.МинимальныйОстаток, 0)) КАК МинОстаток
	|ИЗ
	|	втЗапасыИПотребности КАК втЗапасыИПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ МинимальныеОстатки КАК МинимальныеОстатки
	|		ПО втЗапасыИПотребности.Номенклатура = МинимальныеОстатки.Номенклатура
	|			И втЗапасыИПотребности.Склад = МинимальныеОстатки.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	втЗапасыИПотребности.Номенклатура,
	|	втЗапасыИПотребности.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад
	|;
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	проф_ВнутреннееТовародвижение.Номенклатура КАК Номенклатура,
	|	СУММА(проф_ВнутреннееТовародвижение.Количество) КАК Количество
	|ПОМЕСТИТЬ втТоварыВПутиПоНоменклатуре
	|ИЗ
	|	РегистрСведений.проф_ВнутреннееТовародвижение КАК проф_ВнутреннееТовародвижение
	|ГДЕ
	|	проф_ВнутреннееТовародвижение.Номенклатура В
	|			(ВЫБРАТЬ
	|				ВТ_МатериалыАналоги.Номенклатура
	|			ИЗ
	|				ВТ_МатериалыАналоги КАК ВТ_МатериалыАналоги) И проф_ВнутреннееТовародвижение.Назначение В (ВЫБРАТЬ
	|					ВТ_НазначениеТОИР.Ссылка КАК Ссылка
	|				ИЗ
	|					ВТ_НазначениеТОИР КАК ВТ_НазначениеТОИР)
	|
	|СГРУППИРОВАТЬ ПО
	|	проф_ВнутреннееТовародвижение.Номенклатура
	|;
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_МатериалыАналоги.Номенклатура КАК Номенклатура,
	|	ВТ_МатериалыАналоги.Аналог КАК Аналог,
	|	ВТ_МатериалыАналоги.ПлановыйРасходПоППР КАК ПлановыйРасходПоППР,
	|	ВТ_МатериалыАналоги.ОстаткиНаСкладахТОиРТекущие КАК ОстаткиНаСкладахТОиРТекущие,
	|	ВТ_МатериалыАналоги.ОстаткиНаЦентральномСкладе КАК ОстаткиНаЦентральномСкладе,
	|	ВТ_МатериалыАналоги.ПрогнозныйРасход КАК ПрогнозныйРасход,
	|	ВТ_МатериалыАналоги.ЗВП КАК ЗВП,
	|	ВТ_МатериалыАналоги.Заказано КАК Заказано,
	|	ВТ_МатериалыАналоги.МинимальныйОстаток КАК МинимальныйОстаток,
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	|	ЕСТЬNULL(втЦеныНоменклатуры.Цена, 0) КАК ПлановаяЦена,
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|	ВЫБОР
	|		КОГДА ВТ_МатериалыАналоги.Заказано > 0
	|			ТОГДА ЕСТЬNULL(втТоварыВПутиПоНоменклатуре.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВПути,
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|	ВТ_МатериалыАналоги.ДатаПоставки КАК ПлановаяДатаПоставки
	|ИЗ
	|	ВТ_МатериалыАналоги КАК ВТ_МатериалыАналоги
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныНоменклатуры КАК втЦеныНоменклатуры
	|		ПО ВТ_МатериалыАналоги.Номенклатура = втЦеныНоменклатуры.Номенклатура
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТоварыВПутиПоНоменклатуре КАК втТоварыВПутиПоНоменклатуре
	|		ПО ВТ_МатериалыАналоги.Номенклатура = втТоварыВПутиПоНоменклатуре.Номенклатура
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|ИТОГИ
	|	МАКСИМУМ(ПлановыйРасходПоППР),
	|	МАКСИМУМ(ОстаткиНаСкладахТОиРТекущие),
	|	МАКСИМУМ(ОстаткиНаЦентральномСкладе),
	|	МАКСИМУМ(ПрогнозныйРасход),
	|	МАКСИМУМ(ЗВП),
	|	МАКСИМУМ(Заказано),
	|	МАКСИМУМ(МинимальныйОстаток),
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	|	МАКСИМУМ(ПлановаяЦена),
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	//++ Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|	МАКСИМУМ(ВПути),
	//-- Проф-ИТ, #437, Соловьев А.А., 19.01.2024
	|	МАКСИМУМ(ПлановаяДатаПоставки)
	|ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АналогиФильтр.Аналог КАК Аналог,
	|	ВТ_АналогиФильтр.Материал КАК Материал,
	|	ВТ_АналогиФильтр.РегистраторНомер КАК РегистраторНомер,
	|	ЕСТЬNULL(ВТ_Запчасти.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_ТоварыНаСкладах.ВНаличииОстаток, 0) КАК ОстаткиНаСкладахТОиРТекущие,
	|	ЕСТЬNULL(ВТ_ТоварыНаСкладахЦС.ВНаличииОстаток, 0) КАК ОстаткиНаЦентральномСкладе,
	|	ЕСТЬNULL(втЗапасыИПотребности.КОбеспечению, 0) КАК ЗВП,
	|	ЕСТЬNULL(ВТ_ЗапчастиТекПериод.Количество, 0) КАК ПрогнозныйРасход,
	|	ЕСТЬNULL(ВТ_МинОстаткиНом.МинимальныйОстаток, 0) КАК МинимальныйОстаток,
	|	ЕСТЬNULL(ВТ_ЗаказыПоставщику.КоличествоОстаток, 0) КАК Заказано,
	|	ЕСТЬNULL(ВТ_ЗаказыПостДаты.ДатаПоставки, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоставки,
	|	ВТ_АналогиФильтр.УказаниеПоПрименению КАК УказаниеПоПрименению,
	|	ВТ_АналогиФильтр.Период КАК Период
	|ИЗ
	|	ВТ_АналогиФильтр КАК ВТ_АналогиФильтр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыНаСкладахЦС КАК ВТ_ТоварыНаСкладахЦС
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_ТоварыНаСкладахЦС.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыНаСкладах КАК ВТ_ТоварыНаСкладах
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_ТоварыНаСкладах.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Запчасти КАК ВТ_Запчасти
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_Запчасти.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗапчастиТекПериод КАК ВТ_ЗапчастиТекПериод
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_ЗапчастиТекПериод.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗапасыИПотребностиКОбеспечению КАК втЗапасыИПотребности
	|		ПО ВТ_АналогиФильтр.Аналог = втЗапасыИПотребности.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МинОстаткиНом КАК ВТ_МинОстаткиНом
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_МинОстаткиНом.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыПоставщику КАК ВТ_ЗаказыПоставщику
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_ЗаказыПоставщику.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыПостДаты КАК ВТ_ЗаказыПостДаты
	|		ПО ВТ_АналогиФильтр.Аналог = ВТ_ЗаказыПостДаты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Запчасти_ID.Номенклатура КАК Номенклатура,
	|	ВТ_ID_Регистратор.Регистратор КАК Документ
	|ИЗ
	|	ВТ_ID_Регистратор КАК ВТ_ID_Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Запчасти_ID КАК ВТ_Запчасти_ID
	|		ПО ВТ_ID_Регистратор.ID = ВТ_Запчасти_ID.ID
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЗапчастиТекПериод_ID.Номенклатура КАК Номенклатура,
	|	ВТ_ID_ТекПериод_Регистратор.Регистратор КАК Документ
	|ИЗ
	|	ВТ_ID_ТекПериод_Регистратор КАК ВТ_ID_ТекПериод_Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗапчастиТекПериод_ID КАК ВТ_ЗапчастиТекПериод_ID
	|		ПО ВТ_ID_ТекПериод_Регистратор.ID = ВТ_ЗапчастиТекПериод_ID.ID";
	
	Запрос.УстановитьПараметр("Подразделение", Объект.ПодразделениеИсполнитель);
	Запрос.УстановитьПараметр("ДатаПлана", Объект.ДатаПлана);
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаОкончания)); 
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоНоменклатуре", "ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ (&Номенклатура)");
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Иначе
		Запрос.УстановитьПараметр("ОтборПоНоменклатуре", Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склады) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоСкладам", "Склад В ИЕРАРХИИ (&Склады)");
		Запрос.УстановитьПараметр("Склады", Склады);
	Иначе
		Запрос.УстановитьПараметр("ОтборПоСкладам", Истина);
	КонецЕсли;
	
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	Если ОбъектРемонта.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
			"И торо_ПроектныеЗатратыНаРемонты.ОбъектРемонта В (&ОбъектРемонта)", "");
	Иначе
		Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	КонецЕсли;
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТипЦены", ТипЦены);
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	
	мсвРезультатов = Запрос.ВыполнитьПакет();  
	КолРез = мсвРезультатов.ВГраница(); 
	ВыборкаНоменклатура = мсвРезультатов[КолРез - 3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаАналоги = мсвРезультатов[КолРез - 2].Выгрузить(); 
	
	//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	ОстаткиПоСкладам.Загрузить(мсвРезультатов[КолРез - 4].Выгрузить()); 
	//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
	
	ТаблицаПлановыйРасход          = мсвРезультатов[КолРез - 1].Выгрузить();
	ТаблицаПлановыйРасходТекПериод = мсвРезультатов[КолРез].Выгрузить();
	ДокументыПланРасход.Загрузить(ТаблицаПлановыйРасход);
	ДокументыПланРасходТекПериод.Загрузить(ТаблицаПлановыйРасходТекПериод);
	
	ЭлементыКорняДерева = МатериалыДерево.ПолучитьЭлементы();
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		СтрокаНоменклатура = ЭлементыКорняДерева.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ВыборкаНоменклатура);
		СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах = ВыборкаНоменклатура.ОстаткиНаСкладахТОиРТекущие
														+ ВыборкаНоменклатура.ОстаткиНаЦентральномСкладе
														- ВыборкаНоменклатура.ПрогнозныйРасход
														+ ВыборкаНоменклатура.Заказано;
		
		Если Объект.ИспользоватьАналоги Тогда
			СтрокаНоменклатура.РекомендованоКЗакупке = ВыборкаНоменклатура.ПлановыйРасходПоППР 
														- СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах 
														+ ВыборкаНоменклатура.МинимальныйОстаток
														- СтрокаНоменклатура.ИспользоватьАналог
														+ СтрокаНоменклатура.ЗапланированоАналог;
		Иначе
			СтрокаНоменклатура.РекомендованоКЗакупке = ВыборкаНоменклатура.ПлановыйРасходПоППР 
														- СтрокаНоменклатура.ПрогнозныеОстаткиНаСкладах 
														+ ВыборкаНоменклатура.МинимальныйОстаток;
		КонецЕсли;
		СтрокаНоменклатура.РекомендованоКЗакупке = ?(СтрокаНоменклатура.РекомендованоКЗакупке < 0, 0, СтрокаНоменклатура.РекомендованоКЗакупке);
		
		СтрокаНоменклатура.ПланЗакупок = СтрокаНоменклатура.РекомендованоКЗакупке; 
		
		//++ Проф-ИТ, #377, Соловьев А.А., 30.11.2023
		СтрокаНоменклатура.ПлановаяСтоимость = СтрокаНоменклатура.ПлановаяЦена * СтрокаНоменклатура.РекомендованоКЗакупке;
		//-- Проф-ИТ, #377, Соловьев А.А., 30.11.2023
		
		Если Объект.ИспользоватьАналоги Тогда
			
			СтрокиАналоги = СтрокаНоменклатура.ПолучитьЭлементы();
			
			СтруктураОтбора = Новый Структура("Материал", СтрокаНоменклатура.Номенклатура);
			НайденныеСтроки = ТаблицаАналоги.НайтиСтроки(СтруктураОтбора);
			Для каждого текСтрока Из НайденныеСтроки Цикл
				СтрокаАналог = СтрокиАналоги.Добавить(); 
				СтрокаАналог.Номенклатура         = текСтрока.Аналог;
				СтрокаАналог.НоменклатураРодитель = текСтрока.Материал;
				СтрокаНоменклатура.ЕстьАналоги = Истина;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	ВыборкаНоменклатура.Сбросить();
	
	ВыборкаАналоги = мсвРезультатов[КолРез - 2].Выбрать();
	Пока ВыборкаАналоги.Следующий() Цикл 
		новСтрока = Аналоги.Добавить();
		ЗаполнитьЗначенияСвойств(новСтрока, ВыборкаАналоги);
		
		Если ВыборкаАналоги.Номенклатура <> Неопределено Тогда
			СтруктураПоиска = Новый Структура("Номенклатура", ВыборкаАналоги.Номенклатура);
			
			ВыборкаНоменклатура.Сбросить();
			
			ПересчитатьНераспределённыйОстатокВСтроке(новСтрока);
			
		КонецЕсли;
		
		новСтрока.ПрогнозныеОстаткиНаСкладах = ВыборкаАналоги.ОстаткиНаСкладахТОиРТекущие
														+ ВыборкаАналоги.ОстаткиНаЦентральномСкладе
														- ВыборкаАналоги.ПрогнозныйРасход
														+ ВыборкаАналоги.Заказано;   
		
		новСтрока.НомерДатаРазрешения = ВыборкаАналоги.РегистраторНомер + ", " + ВыборкаАналоги.Период;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммуИспользоватьАналог(текАналог)
	
	ИспользоватьАналогСумма = 0;
	ЭлементыКорняДерева = МатериалыДерево.ПолучитьЭлементы();
	Для каждого СтрокаНоменклатура Из ЭлементыКорняДерева Цикл
		СтрокиАналоги = СтрокаНоменклатура.ПолучитьЭлементы();
		
		Для каждого СтрокаАналог Из СтрокиАналоги Цикл
			Если СтрокаАналог.Номенклатура = текАналог Тогда
			    ИспользоватьАналогСумма = ИспользоватьАналогСумма + СтрокаАналог.ИспользоватьАналог;
			КонецЕсли;
		КонецЦикла;			
		
	КонецЦикла; 
	
	Возврат ИспользоватьАналогСумма;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДокументНаСервере(ДанныеФормы)
	
	ЭлементыКорняДерева = МатериалыДерево.ПолучитьЭлементы();   
	
	ДокПланЗакупок = Документы.проф_ПланЗакупок.СоздатьДокумент();
	ДокПланЗакупок.Дата = Объект.ДатаПлана;
	ДокПланЗакупок.НачалоПериода = Объект.ДатаНачала;
	ДокПланЗакупок.ОкончаниеПериода = Объект.ДатаОкончания;	
	ДокПланЗакупок.Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР",
		"ОсновноеПодразделение",
		Справочники.СтруктураПредприятия.ПустаяСсылка());
		
	ДокПланЗакупок.Ответственный = Объект.Ответственный;   
	
	текСклад = Справочники.проф_НастройкиСистемы.ПолучитьНастройкуСистемы(
					"ФормированиеЗаказовНаВнутреннееПотребление", "СкладПоУмолчанию");
	ДокПланЗакупок.Склад = текСклад;
	
	Для каждого СтрокаНоменклатура Из ЭлементыКорняДерева Цикл
		
		Если СтрокаНоменклатура.ПометитьКФормированиюПланаЗакупок = Истина Тогда
		    новСтрока = ДокПланЗакупок.Товары.Добавить();
			новСтрока.Номенклатура = СтрокаНоменклатура.Номенклатура;
			новСтрока.Количество = СтрокаНоменклатура.РекомендованоКЗакупке; 
			СтрокаНоменклатура.СозданДокумент = Истина;
		КонецЕсли;
		
		СтрокиАналоги = СтрокаНоменклатура.ПолучитьЭлементы();
		Для каждого СтрокаАналог Из СтрокиАналоги Цикл
			Если СтрокаАналог.ПометитьКФормированиюПланаЗакупок = Истина Тогда
				новСтрока = ДокПланЗакупок.Товары.Добавить();
				новСтрока.Номенклатура = СтрокаАналог.Номенклатура; 
				
				новСтрока.Количество = СтрокаАналог.РекомендованоКЗакупке;
				СтрокаАналог.СозданДокумент = Истина;
			КонецЕсли; 
		КонецЦикла;	
		
	КонецЦикла; 
	
	ЗначениеВДанныеФормы(ДокПланЗакупок, ДанныеФормы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовИспользоватьАналоги()
	
	Элементы.МатериалыДеревоИспользоватьАналог.Видимость  = Объект.ИспользоватьАналоги;
	Элементы.МатериалыДеревоЗапланированоАналог.Видимость = Объект.ИспользоватьАналоги;	
	Элементы.Аналоги.Видимость = Объект.ИспользоватьАналоги;                           
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьНераспределённыйОстатокВСтроке(текСтрока)
	
	Если текСтрока.ПрогнозныеОстаткиНаСкладах = 0 Тогда
		текСтрока.НераспределенныйОстаток = текСтрока.ОстаткиНаСкладахТОиРТекущие
		+ текСтрока.ОстаткиНаЦентральномСкладе
		- текСтрока.ИспользоватьАналог;
	Иначе
		текСтрока.НераспределенныйОстаток = текСтрока.ОстаткиНаСкладахТОиРТекущие
		- текСтрока.ИспользоватьАналог;		 
	КонецЕсли;	
	
КонецПроцедуры // ПересчитатьНераспределённыйОстатокВСтроке()

#КонецОбласти

//-- Проф-ИТ, #167, Сергеев Д., 15.09.2023
