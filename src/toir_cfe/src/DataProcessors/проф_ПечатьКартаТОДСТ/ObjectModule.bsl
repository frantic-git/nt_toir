
//++ Проф-ИТ, #130, Башинская А., 13.10.2023

#Область ПрограммныйИнтерфейс

Функция ПечатьКартаТОДСТ(МассивОбъектов, ПараметрыПечати) Экспорт 
	
	ТабДок = Новый ТабличныйДокумент;
		
	Макет = ПолучитьМакет("проф_КартаТОДСТ");
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал"); 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("МассивID", ПараметрыПечати.МассивID);
	Запрос.Текст = ТекстЗапросаПечатьКартаТОДСТ(); 
	
	ОбщаяВыборка = Запрос.ВыполнитьПакет(); 
	ТЗОР = ОбщаяВыборка[0].Выбрать(); 
	ВыборкаРемонтныеРаботы = ОбщаяВыборка[1].Выбрать(); 
	ВыборкаЗапЧасти = ОбщаяВыборка[2].Выбрать();  
	
	Пока ТЗОР.Следующий() Цикл 
		Отбор = Новый Структура;
		
		ОбластьШапки   = Макет.ПолучитьОбласть("ОбластьШапка");
		ЗаполнитьЗначенияСвойств(ОбластьШапки.Параметры,ТЗОР);
		
		НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ТЗОР.Номер, Истина, Истина);
		ОбластьШапки.Параметры.Номер = НомерНаПечать;
		
		ТабДок.Вывести(ОбластьШапки);
		
		Отбор.Вставить("ID", ТЗОР.ID);
		
		ВывестиРемонтныеРаботы(ВыборкаРемонтныеРаботы, Отбор, ТабДок, Макет);
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		ВывестиСопутствующийРемонт(ТабДок, Макет);  
		
		ВывестиПереченьУстановленныхЗЧ(ВыборкаЗапЧасти, Отбор, ТабДок, Макет);
		
		ТабДок.Вывести(ОбластьПодвал); 
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПечатьКартаТОДСТ()
	
	ТекстЗапроса = "ВЫБРАТЬ
       |	ЕСТЬNULL(торо_АктОВыполненииЭтапаРабот.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
       |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Марка, """") КАК Марка,
       |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Гараж, """") КАК Гараж,
       |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Госномер, """") КАК Госномер,
       |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID КАК ID,
       |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка КАК Ссылка,
       |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.НомерСтроки КАК НомерСтроки,
       |	ЕСТЬNULL(торо_АктОВыполненииЭтапаРабот.Номер, """") КАК Номер,
       |	ЕСТЬNULL(торо_АктОВыполненииЭтапаРабот.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
       |ИЗ
       |	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
       |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот КАК торо_АктОВыполненииЭтапаРабот
       |		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = торо_АктОВыполненииЭтапаРабот.Ссылка
       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
       |		ПО торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
       |ГДЕ
       |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка В(&МассивОбъектов)
       |	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&МассивID)
       |
       |ОБЪЕДИНИТЬ ВСЕ
       |
       |ВЫБРАТЬ
       |	ЕСТЬNULL(торо_ЗаявкаНаРемонт.Дата, ДАТАВРЕМЯ(1, 1, 1)),
       |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Марка, """"),
       |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Гараж, """"),
       |	ЕСТЬNULL(торо_ОбъектыРемонта.проф_Госномер, """"),
       |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID,
       |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка,
       |	торо_ЗаявкаНаРемонтРемонтыОборудования.НомерСтроки,
       |	ЕСТЬNULL(торо_ЗаявкаНаРемонт.Номер, """"),
       |	ЕСТЬNULL(торо_ЗаявкаНаРемонт.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
       |ИЗ
       |	Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
       |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт КАК торо_ЗаявкаНаРемонт
       |		ПО торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка = торо_ЗаявкаНаРемонт.Ссылка
       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
       |		ПО торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
       |ГДЕ
       |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка В(&МассивОбъектов)
       |	И торо_ЗаявкаНаРемонтРемонтыОборудования.ID В(&МассивID)
       |
       |УПОРЯДОЧИТЬ ПО
       |	НомерСтроки
       |;
       |
       |////////////////////////////////////////////////////////////////////////////////
       |ВЫБРАТЬ
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.Ссылка КАК Ссылка,
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтыОборудования_ID КАК ID,
       |	ПРЕДСТАВЛЕНИЕ(торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтнаяРабота) КАК РемонтнаяРабота,
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.Выполнено КАК Выполнено,
       |	ЕСТЬNULL(торо_ТехнологическиеОперации.СодержаниеРабот, """") КАК СодержаниеРабот,
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.НомерСтроки КАК НомерСтроки
       |ИЗ
       |	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК торо_АктОВыполненииЭтапаРаботРемонтныеРаботы
       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперации
       |		ПО торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.РемонтнаяРабота = торо_ТехнологическиеОперации.Ссылка
       |ГДЕ
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.Ссылка В(&МассивОбъектов)
       |
       |ОБЪЕДИНИТЬ ВСЕ
       |
       |ВЫБРАТЬ
       |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка,
       |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID,
       |	ПРЕДСТАВЛЕНИЕ(торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота),
       |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID,
       |	ЛОЖЬ,
       |	ЕСТЬNULL(торо_ТехнологическиеОперации.СодержаниеРабот, """"),
       |	торо_ЗаявкаНаРемонтРемонтныеРаботы.НомерСтроки
       |ИЗ
       |	Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперации
       |		ПО торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота = торо_ТехнологическиеОперации.Ссылка
       |ГДЕ
       |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка В(&МассивОбъектов)
       |
       |УПОРЯДОЧИТЬ ПО
       |	торо_АктОВыполненииЭтапаРаботРемонтныеРаботы.НомерСтроки
       |;
       |
       |////////////////////////////////////////////////////////////////////////////////
       |ВЫБРАТЬ
       |	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Ссылка КАК Ссылка,
       |	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.РемонтыОборудования_ID КАК ID,
       |	ПРЕДСТАВЛЕНИЕ(торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Номенклатура) КАК Номенклатура,
       |	ПРЕДСТАВЛЕНИЕ(торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
       |	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.НомерСтроки КАК НомерСтроки
       |ИЗ
       |	Документ.торо_АктОВыполненииЭтапаРабот.СерийныеЗапчасти КАК торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти
       |ГДЕ
       |	торо_АктОВыполненииЭтапаРаботСерийныеЗапчасти.Ссылка В(&МассивОбъектов)
       |
       |ОБЪЕДИНИТЬ ВСЕ
       |
       |ВЫБРАТЬ
       |	торо_ЗаявкаНаРемонтЗапчастиРемонта.Ссылка,
       |	торо_ЗаявкаНаРемонтЗапчастиРемонта.РемонтыОборудования_ID,
       |	ПРЕДСТАВЛЕНИЕ(торо_ЗаявкаНаРемонтЗапчастиРемонта.Номенклатура),
       |	ПРЕДСТАВЛЕНИЕ(торо_ЗаявкаНаРемонтЗапчастиРемонта.ХарактеристикаНоменклатуры),
       |	торо_ЗаявкаНаРемонтЗапчастиРемонта.НомерСтроки
       |ИЗ
       |	Документ.торо_ЗаявкаНаРемонт.ЗапчастиРемонта КАК торо_ЗаявкаНаРемонтЗапчастиРемонта
       |ГДЕ
       |	торо_ЗаявкаНаРемонтЗапчастиРемонта.Ссылка В(&МассивОбъектов)
       |
       |УПОРЯДОЧИТЬ ПО
       |	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Процедура ВывестиРемонтныеРаботы(ВыборкаРемонтныеРаботы, Отбор, ТабДок, Макет)
	
	СтрМакет = "Макет";

	ОбластьШапкаРаботы  = Макет.ПолучитьОбласть("ОбластьШапкаРаботы");
	ТабДок.Вывести(ОбластьШапкаРаботы); 
	
	КолонкаСлеваВыведена = Ложь;
	ТабДокЛево = Новый ТабличныйДокумент;
	ТабДокПраво = Новый ТабличныйДокумент;
				
	сч = 0;
		
	Пока ВыборкаРемонтныеРаботы.НайтиСледующий(Отбор) Цикл 
		
		ОбластьСтрокаРодитель  = ?(КолонкаСлеваВыведена,
										Макет.ПолучитьОбласть("ОбластьСтрокаРаботыРодитель|ОбластьРаботыПраво"),
										Макет.ПолучитьОбласть("ОбластьСтрокаРаботыРодитель|ОбластьРаботыЛево"));
		ОбластьСтрокаРабота  = ?(КолонкаСлеваВыведена,
									Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыПраво"),
									Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыЛево")); 
		
		Если ЗначениеЗаполнено(ВыборкаРемонтныеРаботы.Родитель_ID) Тогда 
			ОбластьСтрокаРабота.Параметры.Работа = ВыборкаРемонтныеРаботы.РемонтнаяРабота;
			ОбластьСтрокаРабота.Параметры.Выполнено = ?(ВыборкаРемонтныеРаботы.Выполнено = Истина, "b", "");
			ОбластьСтрокаРабота.Параметры.НомерПП = сч;
			
			ПараметрыВывода = Новый Структура;
			ПараметрыВывода.Вставить(СтрМакет, Макет);
			ПараметрыВывода.Вставить("Родитель", Ложь);			
			ПроверитьВывестиСтрокуТабДок(ПараметрыВывода, ОбластьСтрокаРабота, ТабДок, ТабДокЛево,
											ТабДокПраво, КолонкаСлеваВыведена, ОбластьШапкаРаботы);
											
			ПараметрыВывода = Новый Структура;
			ПараметрыВывода.Вставить("СодержаниеРабот", ВыборкаРемонтныеРаботы.СодержаниеРабот);
			ПараметрыВывода.Вставить("НомерПП", сч);
			ПараметрыВывода.Вставить(СтрМакет, Макет);
			ВывестиСодержаниеРабот(ПараметрыВывода, ТабДок, ТабДокЛево, ТабДокПраво, КолонкаСлеваВыведена, ОбластьШапкаРаботы);
											
		Иначе
			сч = сч + 1;
			ОбластьСтрокаРодитель.Параметры.Родитель = ВыборкаРемонтныеРаботы.РемонтнаяРабота;
			ОбластьСтрокаРодитель.Параметры.Выполнено = ?(ВыборкаРемонтныеРаботы.Выполнено = Истина, "b", "");
			ОбластьСтрокаРодитель.Параметры.НомерПП = сч;
			ПараметрыВывода = Новый Структура;
			ПараметрыВывода.Вставить(СтрМакет, Макет);
			ПараметрыВывода.Вставить("Родитель", Истина);
			ПроверитьВывестиСтрокуТабДок(ПараметрыВывода, ОбластьСтрокаРодитель, ТабДок, ТабДокЛево,
											ТабДокПраво, КолонкаСлеваВыведена, ОбластьШапкаРаботы);
		КонецЕсли;	
	КонецЦикла;
	
	ПроверитьВывестиТабДокРР(ТабДокЛево, ТабДокПраво, ТабДок, Макет);
	ВыборкаРемонтныеРаботы.Сбросить();		
	
КонецПроцедуры

Процедура ВывестиСодержаниеРабот(ПараметрыВывода, ТабДок, ТабДокЛево,
									ТабДокПраво, КолонкаСлеваВыведена, ОбластьШапкаРаботы)
									
	СодержаниеРабот = ПараметрыВывода.СодержаниеРабот;
	НомерПП = ПараметрыВывода.НомерПП;
	Макет = ПараметрыВывода.Макет;
									
	Если ЗначениеЗаполнено(СодержаниеРабот) Тогда 
		ОбластьСтрокаТехОперация = ?(КолонкаСлеваВыведена,
										Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыПраво"),
										Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыЛево"));
		ОбластьСтрокаТехОперация.Параметры.Работа = СодержаниеРабот;
		ОбластьСтрокаТехОперация.Параметры.НомерПП = НомерПП; 

		ПараметрыВывода = Новый Структура;
		ПараметрыВывода.Вставить("Макет", Макет);
		ПараметрыВывода.Вставить("Родитель", Ложь);		
		ПроверитьВывестиСтрокуТабДок(ПараметрыВывода, ОбластьСтрокаТехОперация, ТабДок, ТабДокЛево,
										ТабДокПраво, КолонкаСлеваВыведена, ОбластьШапкаРаботы);
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПроверитьВывестиСтрокуТабДок(ПараметрыВывода, ОбластьСтрока, ТабДок, ТабДокЛево, ТабДокПраво,
																КолонкаСлеваВыведена, ОбластьШапкаРаботы)

	Макет = ПараметрыВывода.Макет;
	Родитель = ПараметрыВывода.Родитель;
											
	Табл = ?(КолонкаСлеваВыведена,ТабДокПраво,ТабДокЛево); 
	МассивДляПроверки = ПолучитьМассивДляПроверки(Табл,ОбластьСтрока);
	
	Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДок,МассивДляПроверки) Тогда
		Если КолонкаСлеваВыведена = Ложь Тогда
			КолонкаСлеваВыведена = Истина;
			ОбластьСтрокаПрав  = ?(Родитель,Макет.ПолучитьОбласть("ОбластьСтрокаРаботыРодитель|ОбластьРаботыПраво"),
			Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыПраво"));
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаПрав.Параметры,ОбластьСтрока.Параметры);									
			ТабДокПраво.Вывести(ОбластьСтрокаПрав);
		Иначе
			ПроверитьВывестиТабДокРР(ТабДокЛево,ТабДокПраво,ТабДок,Макет); 
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДок.Вывести(ОбластьШапкаРаботы);
			КолонкаСлеваВыведена = Ложь;
			ТабДокЛево = Новый ТабличныйДокумент;
			ТабДокПраво = Новый ТабличныйДокумент; 
		КонецЕсли;
	Иначе
		Табл.Вывести(ОбластьСтрока);
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьМассивДляПроверки(Табл,ОбластьСтрока)
   
   МассивДляПроверки = Новый Массив;
   МассивДляПроверки.Добавить(Табл);
   МассивДляПроверки.Добавить(ОбластьСтрока);
        
   Возврат МассивДляПроверки;
   
КонецФункции  

Процедура ВывестиСопутствующийРемонт(ТабДок, Макет)
	
	ОбластьШапкаСопутРемонт = Макет.ПолучитьОбласть("ОбластьШапкаСопутРемонт");
	ТабДок.Вывести(ОбластьШапкаСопутРемонт);
	
	Для сч = 1 по 11 Цикл 
		ОбластьСтрокаСопутРемонт = Макет.ПолучитьОбласть("ОбластьСтрокаСопутРемонт"); 
		ОбластьСтрокаСопутРемонт.Параметры.НомерПП = сч; 
		ТабДок.Вывести(ОбластьСтрокаСопутРемонт);
	КонецЦикла;	
		
КонецПроцедуры

Процедура ВывестиПереченьУстановленныхЗЧ(ВыборкаЗапЧасти, Отбор, ТабДок, Макет)
	
	ОбластьШапкаЗЧ = Макет.ПолучитьОбласть("ОбластьШапкаЗЧ");
	ТабДок.Вывести(ОбластьШапкаЗЧ);
	сч = 0;
	
	Пока ВыборкаЗапЧасти.НайтиСледующий(Отбор) Цикл 
		ОбластьСтрокаЗЧ  = Макет.ПолучитьОбласть("ОбластьСтрокаЗЧ"); 
		сч = сч + 1;
		ОбластьСтрокаЗЧ.Параметры.НомерПП = Сч;		
		ОбластьСтрокаЗЧ.Параметры.Наименование = СтрШаблон("%1 %2",
													ВыборкаЗапЧасти.Номенклатура,
													ВыборкаЗапЧасти.ХарактеристикаНоменклатуры); 
		ТабДок.Вывести(ОбластьСтрокаЗЧ);
	КонецЦикла;	
	ВыборкаЗапЧасти.Сбросить();		
	
КонецПроцедуры	

Процедура ПроверитьВывестиТабДокРР(ТабДокЛево, ТабДокПраво, ТабДок, Макет) 
	
	ПустаяСтрокаПраво = Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыПраво");
	ПустаяСтрокаЛево  = Макет.ПолучитьОбласть("ОбластьСтрокаРаботы|ОбластьРаботыЛево");
	ТабДокРР = Новый ТабличныйДокумент; 
	
	ОбъединитьПолеНомер(ТабДокЛево); 
	ОбъединитьПолеНомер(ТабДокПраво);
	
	МаксимумСтрок = ?(ТабДокЛево.ВысотаТаблицы > ТабДокПраво.ВысотаТаблицы,
						ТабДокЛево.ВысотаТаблицы,
						ТабДокПраво.ВысотаТаблицы);
	
	МассивДляПроверкиЛево = ПолучитьМассивДляПроверки(ТабДокЛево, ПустаяСтрокаЛево);
	
	Пока ТабДокЛево.ВысотаТаблицы < МаксимумСтрок Цикл
		ТабДокЛево.Вывести(ПустаяСтрокаЛево); 
	КонецЦикла;
	ТабДокРР.Присоединить(ТабДокЛево);
	
	МассивДляПроверкиПраво = ПолучитьМассивДляПроверки(ТабДокПраво, ПустаяСтрокаПраво);
	
	Пока ТабДокПраво.ВысотаТаблицы < МаксимумСтрок Цикл
		ТабДокПраво.Вывести(ПустаяСтрокаПраво); 
	КонецЦикла;
	ТабДокРР.Присоединить(ТабДокПраво);
	
	ТабДок.Вывести(ТабДокРР);
	
КонецПроцедуры 

Процедура ОбъединитьПолеНомер(ТабДок)
	
	ОбъединяемаяОбласть = "R1C1";
	
	Для Счетчик = 1 По ТабДок.ВысотаТаблицы Цикл
		
		ТекстОбластиА = ТабДок.ПолучитьОбласть(ОбъединяемаяОбласть).ТекущаяОбласть.Текст;
		ТекстОбластиБ = ТабДок.ПолучитьОбласть("R" + (Счетчик + 1) + "C1").ТекущаяОбласть.Текст;

		Если ТекстОбластиА = ТекстОбластиБ Тогда 
			ТабДок.Область(ОбъединяемаяОбласть + ":R" + (Счетчик + 1) + "C1").Объединить(); 
		Иначе	
			ОбъединяемаяОбласть = "R" + (Счетчик + 1) + "C1";
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры 

#КонецОбласти

//-- Проф-ИТ, #130, Башинская А., 13.10.2023