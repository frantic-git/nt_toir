
//++ Проф-ИТ, #49, Соловьёв А., 11.10.2023

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ДиалогВыбора           = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = "Выберите файл";
	ДиалогВыбора.Фильтр    = "Файл Excel(*.xls; *.xlsx)|*.xls; *.xlsx";	 
	ДиалогВыбора.ИндексФильтра = 0;
	Оповещение = Новый ОписаниеОповещения("завершениеОткрытияФайла", ЭтотОбъект);
	ДиалогВыбора.Показать(Оповещение);
		
КонецПроцедуры  

#КонецОбласти

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ЗавершениеОткрытияФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		Объект.ПутьКФайлу = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗаписатьЭлементыСправочника(Команда) 
	
	ОчиститьСообщения();
	
	Если Объект.ДанныеФайла.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните данные из файла'"));
		Возврат;
	КонецЕсли;  
	
	СоздатьЭлементыСправочника();
	
	Состояние(НСтр("ru = 'Завершено'"));
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции  

&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(Объект.ПутьКФайлу) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выберите файл'"), , , "Объект.ПутьКФайлу");
		Возврат; 	
	КонецЕсли;	
	
	ПрочитатьФайлНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлНаСервере()
	
	Объект.ДанныеФайла.Очистить();
	ТабДок = Новый ТабличныйДокумент; 
	Попытка
		Табдок.Прочитать(Объект.ПутьКФайлу, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось прочитать файл по причине: %1'"), ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	ПостроительЗапроса 						   = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных		   = Новый ОписаниеИсточникаДанных(ТабДок.Область());
	ПостроительЗапроса.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
	ПостроительЗапроса.ЗаполнитьНастройки();
	ПостроительЗапроса.Выполнить();
	
	Выборка = ПостроительЗапроса.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Код = СокрЛП(Выборка[0]);
		Наименование = СокрЛП(Выборка[3]);
		Опасная = СокрЛП(Выборка[5]);
		
		Если КлючиСтрокиДанныхНеЗаполнены(Наименование, Опасная) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДанных 										= Объект.ДанныеФайла.Добавить();  
		СтрокаДанных.Код 								    = Код; 
		СтрокаДанных.ГруппаВхожденияТехнологическойОперации = СокрЛП(Выборка[1]);
		СтрокаДанных.РодительГруппыТехнологическойОперации  = СокрЛП(Выборка[2]);
		СтрокаДанных.Наименование 							= Наименование;
		СтрокаДанных.НаименованиеПолное 					= СокрЛП(Выборка[4]);
		СтрокаДанных.Опасная 								= Опасная;
		СтрокаДанных.РаботаПовышеннойОпасности 				= СокрЛП(Выборка[6]);
		СтрокаДанных.Расценка 								= СокрЛП(Выборка[7]);
		СтрокаДанных.ИнструкцияПоВыполнению 				= СокрЛП(Выборка[8]); 
		СтрокаДанных.Комментарий 							= СокрЛП(Выборка[9]);
				
	КонецЦикла;
	
	//++ Проф-ИТ, #326, Соловьев А.А., 01.11.2023
	Если Объект.ДанныеФайла.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось прочитать файл, не заполнены обязательные поля'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	//-- Проф-ИТ, #326, Соловьев А.А., 01.11.2023
	
КонецПроцедуры

&НаСервере
Функция КлючиСтрокиДанныхНеЗаполнены(Наименование, Опасная)
	
	РазмерКода = 9;
	РазмерПоляОпасная = 3;
	
	Возврат ПустаяСтрока(Наименование) 
		Или СтрДлина(Опасная) > РазмерПоляОпасная;
	
КонецФункции

&НаСервере
Процедура СоздатьЭлементыСправочника()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	вт.РодительГруппыТехнологическойОперации КАК РодительГруппыТехнологическойОперации,
	|	вт.ГруппаВхожденияТехнологическойОперации КАК ГруппаВхожденияТехнологическойОперации,
	|	вт.Код КАК проф_КодТехнологическойОперации,
	|	вт.Наименование КАК Наименование,
	|	вт.НаименованиеПолное КАК НаименованиеПолное,
	|	вт.РаботаПовышеннойОпасности КАК РаботаПовышеннойОпасности,
	|	вт.Расценка КАК Расценка,
	|	вт.ИнструкцияПоВыполнению КАК ИнструкцияПоВыполнению,
	|	вт.Комментарий КАК Комментарий,
	|	вт.Опасная КАК Опасная
	|ПОМЕСТИТЬ втИзФайла
	|ИЗ
	|	&втИзФайла КАК вт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	вт.Код,
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(торо_ТехнологическиеОперацииРодительГруппы.Ссылка, втИзФайла.РодительГруппыТехнологическойОперации) КАК РодительГруппыТехнологическойОперации,
	|	ЕСТЬNULL(торо_ТехнологическиеОперацииГруппа.Ссылка, втИзФайла.ГруппаВхожденияТехнологическойОперации) КАК ГруппаВхожденияТехнологическойОперации,
	|	&Валюта КАК Валюта,
	|	втИзФайла.проф_КодТехнологическойОперации КАК проф_КодТехнологическойОперации,
	|	втИзФайла.Наименование КАК Наименование,
	|	втИзФайла.НаименованиеПолное КАК НаименованиеПолное,
	|	втИзФайла.РаботаПовышеннойОпасности = ""да"" КАК РаботаПовышеннойОпасности,
	|	втИзФайла.Опасная = ""да"" КАК Опасная,
	|	втИзФайла.Расценка КАК Расценка,
	|	втИзФайла.ИнструкцияПоВыполнению КАК ИнструкцияПоВыполнению,
	|	втИзФайла.Комментарий КАК Комментарий
	|ИЗ
	|	втИзФайла КАК втИзФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперации
	|		ПО втИзФайла.Наименование = торо_ТехнологическиеОперации.Наименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперацииГруппа
	|		ПО втИзФайла.ГруппаВхожденияТехнологическойОперации = торо_ТехнологическиеОперацииГруппа.Наименование
	|			И (торо_ТехнологическиеОперацииГруппа.ЭтоГруппа)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК торо_ТехнологическиеОперацииРодительГруппы
	|		ПО втИзФайла.РодительГруппыТехнологическойОперации = торо_ТехнологическиеОперацииРодительГруппы.Наименование
	|			И (торо_ТехнологическиеОперацииРодительГруппы.ЭтоГруппа)
	|ГДЕ
	|	торо_ТехнологическиеОперации.Ссылка ЕСТЬ NULL
	|ИТОГИ ПО
	|	РодительГруппыТехнологическойОперации,
	|	ГруппаВхожденияТехнологическойОперации";
	
	ВалютаРубль = Константы.ВалютаУправленческогоУчета.Получить();
	Запрос.УстановитьПараметр("втИзФайла", Объект.ДанныеФайла.Выгрузить());
	Запрос.УстановитьПараметр("Валюта", ВалютаРубль);
	РезультатЗапроса = Запрос.Выполнить();
	
	РодительГруппы = Неопределено;
	Родитель = Неопределено;
	
	ВыборкаРодительГруппыТехнологическойОперации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРодительГруппыТехнологическойОперации.Следующий() Цикл
		
		Если РодительГруппы = Неопределено
			И ТипЗнч(ВыборкаРодительГруппыТехнологическойОперации.РодительГруппыТехнологическойОперации) = Тип("Строка") Тогда
			
			РодительГруппы = СоздатьГруппыСправочника(
				ВыборкаРодительГруппыТехнологическойОперации.РодительГруппыТехнологическойОперации);
				
			Если РодительГруппы = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
		Иначе
			РодительГруппы = ВыборкаРодительГруппыТехнологическойОперации.РодительГруппыТехнологическойОперации;
		КонецЕсли;
	
		ВыборкаГруппаВхожденияТехнологическойОперации = ВыборкаРодительГруппыТехнологическойОперации.Выбрать(
			ОбходРезультатаЗапроса.ПоГруппировкам);
			
		ОбработатьВыборкуГруппаВхожденияТехнологическойОперации(
			ВыборкаГруппаВхожденияТехнологическойОперации, Родитель, РодительГруппы);
					
		РодительГруппы = Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборкуГруппаВхожденияТехнологическойОперации(
	ВыборкаГруппаВхожденияТехнологическойОперации, Родитель, РодительГруппы)

	Пока ВыборкаГруппаВхожденияТехнологическойОперации.Следующий() Цикл
		
		Если Родитель = Неопределено
		И ТипЗнч(ВыборкаГруппаВхожденияТехнологическойОперации.ГруппаВхожденияТехнологическойОперации) = Тип("Строка") Тогда 
			Родитель = СоздатьГруппыСправочника(
				ВыборкаГруппаВхожденияТехнологическойОперации.ГруппаВхожденияТехнологическойОперации, РодительГруппы);
			Если Родитель = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
		Иначе
			Родитель = ВыборкаГруппаВхожденияТехнологическойОперации.ГруппаВхожденияТехнологическойОперации;
		КонецЕсли;

		ВыборкаЭлементы = ВыборкаГруппаВхожденияТехнологическойОперации.Выбрать();

		Пока ВыборкаЭлементы.Следующий() Цикл
			СоздатьЭлементСправочника(ВыборкаЭлементы, Родитель);
		КонецЦикла;
		
		Родитель = Неопределено;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Функция СоздатьГруппыСправочника(Наименование, Родитель = Неопределено)
	
	//++ Проф-ИТ, #326, Соловьев А.А., 01.11.2023
	Если ПустаяСтрока(Наименование) Тогда
		Возврат Справочники.торо_ТехнологическиеОперации.ПустаяСсылка();
	КонецЕсли;
	//-- Проф-ИТ, #326, Соловьев А.А., 01.11.2023
	
	Попытка
		ГруппаОпераций  			 = Справочники.торо_ТехнологическиеОперации.СоздатьГруппу();
		ГруппаОпераций.Наименование  = Наименование;
		ГруппаОпераций.Родитель      = Родитель;
		ГруппаОпераций.УстановитьНовыйКод();
		ГруппаОпераций.Записать();
	Исключение
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось создать группу %1 по причине: %2'"), 
			Наименование, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат ГруппаОпераций.Ссылка;
	
КонецФункции

&НаСервере
Процедура СоздатьЭлементСправочника(Выборка, Родитель)
	
	ОбъектСправочника = Справочники.торо_ТехнологическиеОперации.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(ОбъектСправочника, Выборка);
	ОбъектСправочника.Родитель = Родитель;
	
	Попытка
		ОбъектСправочника.Записать();
	Исключение
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось создать элемент %1 с кодом %2 по причине: %3'"), 
			Выборка.Наименование, Выборка.Код, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

//-- Проф-ИТ, #49, Соловьёв А., 11.10.2023