
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++ Проф-ИТ, #228, Соловьев А.А., 13.10.2023
	Заказ 				= Параметры.Заказ;
	КодСтроки 			= Параметры.КодСтроки;
	//КоличествоКЗамене 	= Параметры.КоличествоКЗамене;
	КоличествоОсталось 	= Параметры.КоличествоКЗамене;
	Номенклатура 		= Параметры.Номенклатура;
	НоменклатураАналог 	= Параметры.НоменклатураАналог;
	Разрешение 			= Параметры.Разрешение;
	Заголовок			= НСтр("ru = 'Замена номенклатуры аналогом'");
	КоличествоАналогаДоступно = Параметры.Доступно;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА торо_АналогиНоменклатурыДляРемонтов.КоличествоМатериала = 0
	|			ТОГДА 0
	|		ИНАЧЕ торо_АналогиНоменклатурыДляРемонтов.КоличествоАналога / торо_АналогиНоменклатурыДляРемонтов.КоличествоМатериала
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	РегистрСведений.торо_АналогиНоменклатурыДляРемонтов КАК торо_АналогиНоменклатурыДляРемонтов
	|ГДЕ
	|	торо_АналогиНоменклатурыДляРемонтов.Регистратор = &Регистратор
	|	И торо_АналогиНоменклатурыДляРемонтов.Материал = &Материал
	|	И торо_АналогиНоменклатурыДляРемонтов.Аналог = &Аналог";
	
	Запрос.УстановитьПараметр("Аналог", НоменклатураАналог);
	Запрос.УстановитьПараметр("Материал", Номенклатура);
	Запрос.УстановитьПараметр("Регистратор", Разрешение);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда 
		КоэффициентЗамены = Выборка.Коэффициент;
		Если КоэффициентЗамены > 0 Тогда
			КоличествоАналога = КоэффициентЗамены * КоличествоОсталось;
		КонецЕсли;
	КонецЕсли;
	
	Если КоэффициентЗамены = 0 Тогда 
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не найден аналог в документе %1'"), Разрешение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
	КонецЕсли;
	
	Если КоличествоАналога > КоличествоАналогаДоступно Тогда 
		КоличествоКЗамене = КоличествоАналогаДоступно / КоэффициентЗамены;
		КоличествоАналога = КоличествоАналогаДоступно;
	Иначе
		КоличествоКЗамене = КоличествоАналога / КоэффициентЗамены;
	КонецЕсли;
	//-- Проф-ИТ, #228, Соловьев А.А., 13.10.2023
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
	
&НаКлиенте
Процедура Выбрать(Команда)
	
	//++ Проф-ИТ, #228, Соловьев А.А., 13.10.2023
	ОчиститьСообщения();
	СообщениеОбОшибке = ПроизвестиЗаменуНаСервере();
	Если ПустаяСтрока(СообщениеОбОшибке) Тогда 		
		Закрыть(КодВозвратаДиалога.Да);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;
	//-- Проф-ИТ, #228, Соловьев А.А., 13.10.2023
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
	
&НаКлиенте
Процедура КоличествоКЗаменеПриИзменении(Элемент)
	
	//++ Проф-ИТ, #228, Соловьев А.А., 16.10.2023
	КоличествоАналога = КоэффициентЗамены * КоличествоКЗамене;

	Если КоличествоАналога > КоличествоАналогаДоступно Тогда 
		КоличествоКЗамене = КоличествоАналогаДоступно / КоэффициентЗамены;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Количество аналога не может быть больше доступного количества: %1'"),
							КоличествоАналогаДоступно);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
		
	Если КоличествоКЗамене > КоличествоОсталось Тогда 
		КоличествоКЗамене = КоличествоОсталось;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Количество к замене не может быть больше, чем необходимо обеспечить: %1'"),
							КоличествоОсталось);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	//-- Проф-ИТ, #228, Соловьев А.А., 16.10.2023
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
&НаСервере
Функция ПроизвестиЗаменуНаСервере()
	
	//++ Проф-ИТ, #228, Соловьев А.А., 13.10.2023
	
	СтрНоменклатура = "Номенклатура";
	
	НачатьТранзакцию();
	
	Попытка
		ЗаказОбъект = Заказ.ПолучитьОбъект();
		СтрокаСНоменклатурой = ЗаказОбъект.Товары.Найти(КодСтроки, "КодСтроки");
		Если СтрокаСНоменклатурой = Неопределено Тогда 
			Возврат НСтр("ru = 'В документе не найдена строка для замены'");
		КонецЕсли;
		СтрокаСАналогом = ЗаказОбъект.Товары.Найти(НоменклатураАналог, СтрНоменклатура);
		
		СтруктураТекущейСтроки = Новый Структура("Номенклатура, Характеристика, КодСтроки, ЕстьАналоги");
		ЗаполнитьЗначенияСвойств(СтруктураТекущейСтроки, СтрокаСНоменклатурой);
		
		ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3));
		ТипБулево = Новый ОписаниеТипов("Булево");
		ТипНоменклатура = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
		
		ТаблицаДанных = Новый ТаблицаЗначений;
		ТаблицаДанных.Колонки.Добавить(СтрНоменклатура, ТипНоменклатура);
		ТаблицаДанных.Колонки.Добавить("Количество", ТипЧисло);
		ТаблицаДанных.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.УпаковкиНоменклатуры"));
		ТаблицаДанных.Колонки.Добавить("ХарактеристикаНоменклатуры",
			Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаДанных.Колонки.Добавить("КодСтрокиНоменклатуры", ТипЧисло);
		ТаблицаДанных.Колонки.Добавить("КодСтрокиАналога", ТипЧисло);
		ТаблицаДанных.Колонки.Добавить("ХарактеристикиИспользуются", ТипБулево);
		ТаблицаДанных.Колонки.Добавить("Исходная", ТипБулево);
		ТаблицаДанных.Колонки.Добавить("Изменен", ТипБулево);
		ТаблицаДанных.Колонки.Добавить("ЗамененноеКоличество", ТипЧисло);
		ТаблицаДанных.Колонки.Добавить("Удален", ТипБулево);
		ТаблицаДанных.Колонки.Добавить("НоменклатураИсходная", ТипНоменклатура);
		
		НоваяСтрокаИсходная = ТаблицаДанных.Добавить();
		НоваяСтрокаАналог = ТаблицаДанных.Добавить();
		
		НоваяСтрокаИсходная.Номенклатура = Номенклатура;
		НоваяСтрокаИсходная.Количество = СтрокаСНоменклатурой.Количество - КоличествоКЗамене;
		НоваяСтрокаИсходная.ЕдиницаИзмерения = СтрокаСНоменклатурой.Упаковка;
		НоваяСтрокаИсходная.ХарактеристикиИспользуются = Ложь;
		НоваяСтрокаИсходная.КодСтрокиНоменклатуры = СтрокаСНоменклатурой.КодСтроки;
		НоваяСтрокаИсходная.КодСтрокиАналога = ?(СтрокаСАналогом = Неопределено, 0, СтрокаСАналогом.КодСтроки);
		НоваяСтрокаИсходная.Исходная = Истина;
		НоваяСтрокаИсходная.Изменен = Истина;
		НоваяСтрокаИсходная.Удален = Ложь;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАналог, НоваяСтрокаИсходная);
		НоваяСтрокаАналог.Номенклатура = НоменклатураАналог;
		НоваяСтрокаАналог.Количество = КоличествоАналога + ?(СтрокаСАналогом = Неопределено, 0, СтрокаСАналогом.Количество);
		НоваяСтрокаАналог.Исходная = Ложь;
		НоваяСтрокаАналог.ЗамененноеКоличество = КоличествоКЗамене;
		НоваяСтрокаАналог.НоменклатураИсходная = СтрокаСНоменклатурой.Номенклатура;
		
		Документы.ЗаказНаВнутреннееПотребление.ОбработатьЗаменуНоменклатурыНаАналоги(Ложь,
			ЗаказОбъект, ТаблицаДанных, СтруктураТекущейСтроки, Номенклатура);
			
		ЗаказОбъект.БезусловнаяЗапись = Истина;
		ЗаказОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Заказ", 				ЗаказОбъект.Ссылка);
		СтруктураПараметров.Вставить("Дата", 				ЗаказОбъект.Дата);
		СтруктураПараметров.Вставить("Номенклатура", 		Номенклатура);
		СтруктураПараметров.Вставить("Разрешение", 			Разрешение);
		СтруктураПараметров.Вставить("НоменклатураАналог", 	НоменклатураАналог);
		СтруктураПараметров.Вставить("КоличествоКЗамене", 	КоличествоКЗамене);
		СтруктураПараметров.Вставить("КоличествоАналога", 	КоличествоАналога);
		
		Документы.ЗаказНаВнутреннееПотребление.ЗаписьВРегистрЗаменаНаАналоги(СтруктураПараметров);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		Возврат СтрШаблон(НСтр("ru = 'Не удалось заменить номенклатуру по причине: %1'"), ОписаниеОшибки());
	КонецПопытки;
	
	Возврат "";
	//-- Проф-ИТ, #228, Соловьев А.А., 13.10.2023
	
КонецФункции

#КонецОбласти
